/*
   · SA-MP Gamemode: LawLess Roleplay | Bulgaria
   · Copyright © 2021-2022, Daniel Miroslavov Andreev
   · Всички права са запазени.
*/
#include <a_samp>
#include <streamer>
#include <Dini>
#include <progress>
#include <playerzone>
#include <GetVehicleColor>
#include <eSelection>

#pragma tabsize 0
#if !defined IsValidVehicle
native IsValidVehicle(vehicleid);
#endif

#define PROPERTY_OFFSET(%0) \
        ((((%0) * ((%0) << 1)) << 2) + 65536)
        
#define Holding(%0) \
    ((newkeys & (%0)) == (%0))
	#define Pressed(%0) \
(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

#define MAX_INTERACT_ACTORS 2
#define MAX_INTERACT_PICKUPS 2
#define EXP_PLUS 8
#define CLOSED_DIALOG 3500
#define RESPAWN_VEHS_SECONDS 1500
#define FACTION_SPAWN 0
#define CIVIL_LS_SPAWN 1
#define HOUSE_SPAWN 2
#define BIZ_SPAWN 3
#define MAX_BIZ_ACTORS 14
#define MAX_TURFS 42
#define MAX_SPEEDAREAS 5
#define MAX_GRAFFITI 50000
#define MAX_BIZ 50000
#define MAX_HOUSES 50000
#define MAX_SELLCARS 50000
#define MAX_OFFICES 21
#define MAX_SELLBIKE 5
#define MAX_SELLCAR 12
#define MAX_SIRRENS 50000
#define MAX_WEATHERS 16
#define MAX_ADD_VEH_OBJECTS 50000
#define MAX_BARRICADES 50000
#define MAX_INVENTORY 35
#define MAX_BUYCLOTHES 35
#define MAX_BUYITEMS 35
#define MAX_BARITEMS 9
#define MAX_BUY_BIKES 35
#define MAX_BUY_VEHICLE_ATTACHMENTS 20
#define MAX_PLAYER_CLOTHES 11
#define MODEL_SELECTION_INVENTORY 0
#define MODEL_SELECTION_BUYCLOTHES 1
#define MODEL_SELECTION_BUYITEMS 2
#define MODEL_SELECTION_GETCLOTHES 3
#define MODEL_SELECTION_DROPCLOTHES 4
#define MODEL_SELECTION_BUYVEHICLEATTACHMENTS 5
#define MODEL_SELECTION_BARITEMS 6
#define MAX_RENTVEHS 18
#define MIN_BITCOIN_PRICE 6
#define MAX_BITCOIN_PRICE 900
#define MAX_PRIVATEVEHS 500
#define MAX_VOTERS 5000
#define MAX_FUEL_STATIONS 16
#define MAX_DROPPED_ITEMS 5000
#define MAX_DYN_OBJECTS 5000
#define MAX_TRASHCANS 3
#define ACHIEVEMENT_BUYLEVEL 0
#define ACHIEVEMENT_BUYHOUSE 1
#define ACHIEVEMENT_BUYBIZ 2
#define ACHIEVEMENT_FIRSTKILL 3
#define ACHIEVEMENT_BUYLEGALWEAPON 4
#define SIDEJOB_PIZZA 0
#define SIDEJOB_SWEEP 1
#define SIDEJOB_BUS 2
#define SIDEJOB_DELIVER 3
#define SIDEJOB_COALMINE 4
#define PizzaJob 1359.4478, 251.0649, 19.5669
#define TaxiJob 1796.5181, -1937.3527, 13.5469
#define TaxiJobBC - 285.3394, 1554.6484, 75.3594
#define SweepJob 216.4074, 14.7296, 2.5708
#define MechanicJob 1905.0569,-1790.2625,13.5469
#define Garage 1905.0569,-1790.2625,13.5469
#define GarageNeon 1905.0569,-1790.2625,13.5469
#define BusJob - 544.6848, 2598.0608, 53.5156
#define Kmetstvo 1481.0225, -1772.3137, 18.7958
#define Police 1542.4430, -1675.6853, 13.5545
#define TheNews 1654.2100, -1654.7755, 22.5156
#define Bank 1412.0486, -1699.9275, 13.5395
#define BankBC - 181.5715, 1057.0537, 19.7422
#define Hospital 1172.0785, -1323.4440, 15.4032
#define Army 834.7424, -2011.4890, 12.8672
#define KingRingJob - 144.0093, 1224.9098, 19.8992
#define Tip0Checkpoint - 184.9305, 1034.8531, 19.7422
#define RobPoint 2447.9617, -1963.0054, 13.5469
#define RobPointBC - 127.2078, 974.5254, 19.8516
#define DeliverJob 61.8512, -221.2861, 1.5724
#define CoalmineJob 833.0172, 863.2982, 12.6990
#define DMV_LOCATION 1111.5974, -1795.6440, 16.5938
#define FishingPlace 2142.8645, -90.2162, 2.8011
#define Crip 323.1867, -1190.0559, 76.3544
#define WestCoastWheelers 660.9318, -453.2014, 16.3359
#define Vagos 2170.0305, -1015.4562, 62.9689
#define Ballas 2179.7563, -1672.2792, 14.4752
#define Mafia 1303.0916, -2056.9265, 58.2359
#define Autosallon 2145.0571, -1121.9507, 25.4710
#define DrugPoint 1360.5676, -1488.5371, 13.5469
#define PaintBall 1310.3512, -1367.8215, 13.5413

#define DIALOG_REGISTER 0
#define DIALOG_LOGIN 1
#define DIALOG_GETDOCUMENTS 2
#define DIALOG_GENDER_AGE_READY 3
#define DIALOG_VEHMENU 4
#define DIALOG_REFUEL 5
#define DIALOG_RENTVEH 6
#define DIALOG_ATM 7
#define DIALOG_SELECT_ANIMATION 8
#define DIALOG_ACCEPT_SWEEP 9
#define DIALOG_GENERALSTORE 10
#define DIALOG_GPS 11
#define DIALOG_DRINKSSTORE 12
#define DIALOG_ACCEPT_BUS 13
#define DIALOG_BUYVEH 14
#define DIALOG_HELP_CMDS 15
#define DIALOG_AMMUSTORE 16
#define DIALOG_BUYFISH 17
#define DIALOG_BANK 18
#define DIALOG_DOCUMENTS_AGE 19
#define DIALOG_LOTTO 20
#define DIALOG_SELECT_LOTTO_NUM 21
#define DIALOG_CLOTHES_STORE 22
#define DIALOG_MY_ITEMS 23
#define DIALOG_CLOTHES_HATS 24
#define DIALOG_CLOTHES_WATCHES 25
#define DIALOG_CLOTHES_MASKS 26
#define DIALOG_CLOTHES_GLASSES 27
#define DIALOG_HOUSE_FURNITURES_SLOT 32
#define DIALOG_HOUSE_FURNITURES_REMOVE 33
#define DIALOG_HOUSE_FURNITURES_ADDOBJECT 34
#define DIALOG_HOUSE_FURNITURES_FINAL 35
#define DIALOG_BITCOIN_MENU 36
#define DIALOG_BITCOIN_BUY 37
#define DIALOG_BITCOIN_BUY_CONFIRM 38
#define DIALOG_BITCOIN_SELL 39
#define DIALOG_BITCOIN_SELL_MARKET 40
#define DIALOG_BITCOIN_SELL_MARKET_CONFIRM 41
#define DIALOG_BANK_TRANSFER 42
#define DIALOG_BANK_TRANSFER_2 43
#define DIALOG_BANK_MENU 44
#define DIALOG_ACCEPTSWEEP 45
#define DIALOG_ACCEPTPIZZA 46
#define DIALOG_ACCEPTBUS 47
#define DIALOG_ACCEPT_PIZZA 48
#define DIALOG_ACCEPT_ROBBERY 49
#define DIALOG_VIPCMDS 50
#define DIALOG_BUYVEHALONE 51
#define DIALOG_AHELP1 52
#define DIALOG_AHELP2 53
#define DIALOG_AHELP3 54
#define DIALOG_AHELP4 55
#define DIALOG_INV_SHOW_DOCS 56
#define DIALOG_TUNEMECHANIC 57
#define DIALOG_DRIVERCOURSE_CAR 58
#define DIALOG_BUYFOODORDRINK 59
#define DIALOG_BUYFOOD 60
#define DIALOG_BUYDRINK 61
#define DIALOG_HELPER 62
#define DIALOG_BUYFORHOMEORNOT 63
#define DIALOG_INVENTORY_MENU 64
#define DIALOG_DROP_INVENTORY 65
#define DIALOG_THROW_INVENTORY 66
#define DIALOG_PHONE 67
#define DIALOG_PHONE_CALL 68
#define DIALOG_REGISTER_RULES 69
#define DIALOG_BUYDRUG 70
#define DIALOG_BUYDRUG_COCA 71
#define DIALOG_BUYDRUG_MARI 72
#define DIALOG_BUYDRUG_HEROIN 73
#define DIALOG_SELECT_GOVERNMENT 74
#define DIALOG_PHONE_SERVICES 75
#define DIALOG_ACCEPT_SWEEP_BC 76
#define DIALOG_GUNMACHINE_POLICE 77
#define DIALOG_DRIVERCOURSE 78
#define DIALOG_DRIVERCOURSE_HELI 79
#define DIALOG_DRIVERCOURSE_MOTORBIKE 80
#define DIALOG_MYFISH 81
#define DIALOG_DROPFISH 82
#define DIALOG_SELL_FISHCRATE 83
#define DIALOG_SELL_FISH 84
#define DIALOG_BUYCLOTHES_MENU 85
#define DIALOG_WITHDRAW_MONEY 86
#define DIALOG_BUYITEMS_MENU 87
#define DIALOG_MY_CLOTHES 88
#define DIALOG_GET_CLOTH 89
#define DIALOG_BUYBIKE 90
#define DIALOG_BUYBIKE_2 91
#define DIALOG_BUYCAR 92
#define DIALOG_BUYCAR_2 93
#define DIALOG_BUYNEON 94
#define DIALOG_BUYSTICKER 95
#define DIALOG_GPS_2 96
#define DIALOG_GPS_3 97
#define DIALOG_GPS_4 98
#define DIALOG_GPS_5 99
#define DIALOG_GPS_6 100
#define DIALOG_HELP_OFFICE 101
#define DIALOG_BUYOFFICE 102
#define DIALOG_DELIVER_GPS 103
#define DIALOG_GUNMACHINE_ARMY 104
#define DIALOG_HELP 105
#define DIALOG_HELP_HOW_TO 106
#define DIALOG_VOTE_RESPAWN 107
#define DIALOG_BANK_DEPOSIT 108
#define DIALOG_VIPHELP_CMDS 109
#define DIALOG_REM_BARRICADE 110
#define DIALOG_GUNMACHINE_FBI 111
#define DIALOG_DOCUMENTS 112
#define DIALOG_VOUCHERS 113
#define DIALOG_VOUCHERS_SERVICE 114
#define DIALOG_VOUCHERS_BUY 115
#define DIALOG_BUYTELENOR 116
#define DIALOG_VOTE_NORMAL 117
#define DIALOG_MORE_STATS 118
#define DIALOG_VEHOBJECTS 119
#define DIALOG_BLACKMARKET 120
#define DIALOG_VEHOBJECTS_OBJECTID 121
#define DIALOG_AHELP5 122
#define DIALOG_BANK_FACTION_WITHDRAW 123
#define DIALOG_BANK_FACTION 124
#define DIALOG_FUELSTATIONS_GPS 125
#define DIALOG_FUELSTATIONS_REFILLPT 126
#define DIALOG_MY_MENU	127
#define DIALOG_SETTINGS_PROFILE 128
#define DIALOG_SETTINGS_CHANGE_PASS 129
#define DIALOG_SETTINGS_CHANGE_SPAWN 130
#define DIALOG_SELECT_JOB 131
#define DIALOG_SELECT_JOB_2 132

#define LOC_TRASHCAN_1 2036.4836, 1561.5519, 10.8203
#define LOC_TRASHCAN_2 2082.1946, 1255.0404, 10.8203
#define LOC_TRASHCAN_3 1564.7811, -1726.3247, 13.5469
#define LOC_FUELSTATION_1 1004.0327, -937.5370, 42.3281
#define LOC_FUELSTATION_2 1942.3719, -1772.8666, 13.6406
#define LOC_FUELSTATION_3 - 1606.7223, -2713.3562, 48.5335
#define LOC_FUELSTATION_4 - 2026.7813, 156.5509, 29.0391
#define LOC_FUELSTATION_5 - 2243.8149, -2559.8899, 31.9219
#define LOC_FUELSTATION_6 - 1676.2601, 413.5443, 7.1797
#define LOC_FUELSTATION_7 2201.8296, 2475.1350, 10.8203
#define LOC_FUELSTATION_8 615.3391, 1690.0454, 6.9922
#define LOC_FUELSTATION_9 - 1328.2731, 2677.5278, 50.0625
#define LOC_FUELSTATION_10 70.3842, 1219.0177, 18.8116
#define LOC_FUELSTATION_11 2113.3835, 919.5655, 10.8203
#define LOC_FUELSTATION_12 2641.0115, 1106.6252, 10.8203
#define LOC_FUELSTATION_13 2146.7964, 2747.8115, 10.8203
#define LOC_FUELSTATION_14 - 1471.1836, 1863.7598, 32.6328
#define LOC_FUELSTATION_15 655.7673, -565.0798, 16.3359
#define LOC_FUELSTATION_16 1381.8230, 459.1453, 20.3452
#define LV_LOCATION_SQUARE 696.0, 440.0, 3000.0, 3000.0
#define LV_LOCATION_SQUARE_MinX 696.0
#define LV_LOCATION_SQUARE_MinY 440.0
#define LV_LOCATION_SQUARE_MaxX 3000.0
#define LV_LOCATION_SQUARE_MaxY 3000.0
#define LOC_ATM_1 1458.6890, -1749.3188, 13.5469
#define LOC_ATM_2 1657.5769, -1722.8644, 13.5469
#define LOC_ATM_3 1811.3879, -1875.6643, 13.5842
#define LOC_ATM_4 1929.1722, -1782.7507, 13.5469
#define LOC_ATM_5 2232.6438, -1162.0020, 25.8906
#define LOC_ATM_6 2479.9419, -1757.4442, 13.5469
#define LOC_ATM_7 1944.4203, -2061.4573, 13.5469
#define LOC_ATM_8 1746.6118, -1460.3717, 13.5211
#define LOC_ATM_9 1742.0966, -1272.7473, 13.5467
#define LOC_ATM_10 1014.8442, -929.2678, 42.3281
#define LOC_ATM_11 788.2813, -1105.2966, 23.9199
#define COURSE_GVL1_CHECK_1 1110.1112, -1743.7499, 13.1255
#define COURSE_GVL1_CHECK_2 1172.1697, -1783.7643, 13.1255
#define COURSE_GVL1_CHECK_3 1260.2411, -1854.7102, 13.1099
#define COURSE_GVL1_CHECK_4 1481.2231, -1875.3506, 13.1099
#define COURSE_GVL1_CHECK_5 1691.4232, -1832.4885, 13.1099
#define COURSE_GVL1_CHECK_6 1804.0000, -1834.1632, 13.1138
#define COURSE_GVL1_CHECK_7 1825.2507, -1713.0829, 13.1099
#define COURSE_GVL1_CHECK_8 1852.3252, -1470.4163, 13.1235
#define COURSE_GVL1_CHECK_9 1815.8318, -1259.5883, 13.1957
#define COURSE_GVL1_CHECK_10 1638.7765, -1298.5117, 15.6533
#define COURSE_GVL1_CHECK_11 1462.6042, -1297.9218, 13.1092
#define COURSE_GVL1_CHECK_12 1372.3665, -1238.8098, 13.1099
#define COURSE_GVL1_CHECK_13 1304.6873, -1523.4542, 13.1099
#define COURSE_GVL1_CHECK_14 1147.7235, -1623.3424, 13.5083
#define COURSE_GVL1_CHECK_FINALL 1085.2047, -1708.4978, 13.1099
#define COURSE_MB_CHECK_1 1110.1112, -1743.7499, 13.1255
#define COURSE_MB_CHECK_2 1172.1697, -1783.7643, 13.1255
#define COURSE_MB_CHECK_3 1260.2411, -1854.7102, 13.1099
#define COURSE_MB_CHECK_4 1481.2231, -1875.3506, 13.1099
#define COURSE_MB_CHECK_5 1691.4232, -1832.4885, 13.1099
#define COURSE_MB_CHECK_6 1804.0000, -1834.1632, 13.1138
#define COURSE_MB_CHECK_7 1825.2507, -1713.0829, 13.1099
#define COURSE_MB_CHECK_8 1852.3252, -1470.4163, 13.1235
#define COURSE_MB_CHECK_9 1815.8318, -1259.5883, 13.1957
#define COURSE_MB_CHECK_10 1638.7765, -1298.5117, 15.6533
#define COURSE_MB_CHECK_11 1462.6042, -1297.9218, 13.1092
#define COURSE_MB_CHECK_12 1372.3665, -1238.8098, 13.1099
#define COURSE_MB_CHECK_13 1304.6873, -1523.4542, 13.1099
#define COURSE_MB_CHECK_14 1147.7235, -1623.3424, 13.5083
#define COURSE_MB_CHECK_FINALL 1085.2047, -1708.4978, 13.1099
#define COURSE_A1_CHECK_1 1373.9180, 1258.6000, 62.3940
#define COURSE_A1_CHECK_2 1375.6992, 1433.9758, 105.9605
#define COURSE_A1_CHECK_3 1377.3448, 1976.1284, 178.8719
#define COURSE_A1_CHECK_4 1622.3831, 2334.2629, 237.7711
#define COURSE_A1_CHECK_5 2057.6846, 2412.2803, 256.7039
#define COURSE_A1_CHECK_6 2252.6978, 2261.0203, 297.0179
#define COURSE_A1_CHECK_7 2296.2710, 1749.8071, 288.3642
#define COURSE_A1_CHECK_FINALL 1363.9668, 1281.9551, 10.9988
#define JOB_SWEEP_LOC1 230.3458, 4.8751, 2.4297
#define JOB_SWEEP_LOC2 163.2046, -69.7645, 1.4297
#define JOB_SWEEP_LOC3 130.9483, -172.6051, 1.4297
#define JOB_SWEEP_LOC4 179.9236, -237.0661, 1.4297
#define JOB_SWEEP_LOC5 215.4658, -284.0241, 1.4297
#define JOB_SWEEP_LOC6 285.2109, -191.7871, 1.4297
#define JOB_SWEEP_LOC7 256.0008, -69.4049, 1.4337
#define JOB_SWEEP_LOC8 234.8276, -12.3627, 1.4297
#define JOB_SWEEP_FINAL 262.1429, 12.1672, 2.4423
#define JOB_BUS_LOC1 - 492.0854, 2590.6606, 53.4092
#define JOB_BUS_LOC2 - 816.7968, 2735.0400, 45.5960
#define JOB_BUS_LOC3 - 246.7704, 2628.4109, 62.7063
#define JOB_BUS_LOC4 1037.6808, 2548.0510, 10.7990
#define JOB_BUS_LOC5 1727.3340, 1525.1199, 10.8486
#define JOB_BUS_LOC6 1954.5763, 1269.8358, 10.8023
#define JOB_BUS_LOC7 2329.0063, 707.7830, 10.8450
#define JOB_BUS_LOC8 2551.7371, 806.0624, 11.0539
#define JOB_BUS_LOC9 2570.6350, 1377.9829, 10.8390
#define JOB_BUS_LOC10 2156.7212, 1980.0901, 10.8423
#define JOB_BUS_LOC11 2090.7424, 2331.0515, 10.7376
#define JOB_BUS_FINAL - 514.2125, 2635.6538, 53.1411
#define JOB_PIZZA_LOC1 1347.3176, 261.5433, 19.0054
#define JOB_PIZZA_LOC2 1325.8622, 235.8132, 19.0011
#define JOB_PIZZA_LOC3 1250.5085, 269.2145, 19.0022
#define JOB_PIZZA_LOC4 1224.6180, 229.2364, 19.0038
#define JOB_PIZZA_LOC5 1246.1251, 189.0443, 19.0040
#define JOB_PIZZA_LOC6 1300.7002, -81.3719, 36.1007
#define JOB_PIZZA_LOC7 2153.9312, 39.2667, 25.9335
#define JOB_PIZZA_LOC8 2238.1694, 96.1132, 25.9275
#define JOB_PIZZA_LOC9 2262.7029, 96.1770, 25.9315
#define JOB_PIZZA_LOC10 2338.9824, 115.8092, 25.9338
#define JOB_PIZZA_LOC11 2338.6538, 191.3587, 26.0873
#define JOB_PIZZA_FINAL 1358.2748, 231.7729, 19.2940
#define JOB_DELIVER_LOC1 60.7311, -247.2814, 1.6431
#define JOB_DELIVER_LOC2 209.1989, -214.6360, 1.4961
#define JOB_DELIVER_LOC3 286.0172, -171.3172, 1.4969
#define JOB_DELIVER_LOC4 252.1217, -67.9598, 1.5319
#define JOB_DELIVER_LOC5 - 274.8907, -152.5432, 2.4861
#define JOB_DELIVER_LOC6 33.6504, -632.7850, 3.1989
#define JOB_DELIVER_LOC7 647.9800, -630.6303, 16.6544
#define JOB_DELIVER_LOC8 686.2236, -580.2846, 16.3260
#define JOB_DELIVER_LOC9 815.0588, -535.6743, 16.3248
#define JOB_DELIVER_LOC10 850.3950, -570.7001, 16.9646
#define JOB_DELIVER_LOC11 1256.1289, -346.3912, 5.1546
#define JOB_DELIVER_LOC12 519.7785, -137.4073, 37.9809
#define JOB_DELIVER_LOC13 288.1827, -164.0959, 1.5655
#define JOB_DELIVER_FINAL 120.2661, -285.0057, 1.6455
#define JOB_COALMINE_LOC1 809.2472, 842.9479, 9.8030
#define JOB_COALMINE_LOC2 764.9946, 889.3522, -1.2541
#define JOB_COALMINE_LOC3 683.7329, 971.1793, -12.7109
#define JOB_COALMINE_LOC4 724.9157, 884.9314, -26.4536
#define JOB_COALMINE_LOC5 616.0866, 906.8915, -44.5193
#define JOB_COALMINE_LOC6 497.2571, 891.3735, -32.0035
#define JOB_COALMINE_LOC7 535.6892, 790.3248, -20.1947
#define JOB_COALMINE_LOC8 688.4577, 748.3844, -5.5390
#define JOB_COALMINE_FINAL 849.5752, 856.4982, 13.3516
#define JOB_KINGRING_LOC1 372.3335, -75.6836, 1001.5078
#define JOB_KINGRING_LOC2 375.3414, -75.6842, 1001.5078
#define JOB_KINGRING_LOC3 378.0253, -75.6843, 1001.5078
#define JOB_KINGRING_LOC4 379.7613, -57.6348, 1001.5078
#define JOB_KINGRING_LOC5 366.0922, -70.9863, 1001.5078
#define JOB_KINGRING_FINAL - 156.7292, 1233.9183, 19.7422
#define COLOR_ACTOR 0xCFCFCFFF
#define COLOR_TYPICAL_BLUE 0x5F63F0FF
#define COLOR_AFK 0xD6F34AFF
#define COLOR_WEAPONSKILL 0xB37D57FF
#define COLOR_JOB 0xe7905eFF
#define COLOR_PHONE 0x8cccdeFF
#define COLOR_FISH 0x2C80C4FF
#define COLOR_WEAPONS 0xB37D57FF
#define COLOR_LIGHTYELLOW 0xffff66FF
#define COLOR_LIGHTYELLOW2 0xffee81FF
#define COLOR_LIGHTBLUE_GRAY 0x9CAAB5FF
#define COLOR_LIGHTBLUE_GRAY2 0xA9C4EEFF
#define COLOR_LIGHTPINK 0xF9B7FFFF
#define COLOR_YELLOW 0xFFFF00FF
#define COLOR_DARKRED 0xE11111FF
#define COLOR_DARKRED2 0xE60000FF
#define COLOR_PAINTBALL 0xEE4B2BFF
#define COLOR_HOUSE 0x17C100FF
#define COLOR_LIGHTGREEN 0x1FE731FF
#define COLOR_LIGHTGREEN2 0x88C864FF
#define COLOR_LIGHTGREEN3 0x7CFF7AFF
#define COLOR_LIGHTGREEN4 0x06D52EFF
#define COLOR_LIGHTGREEN5 0x38D900FF
#define COLOR_LIGHTGREEN6 0x5EF403FF 
#define COLOR_MAXLIGHTGREEN 0x00FF00FF
#define COLOR_WHITE 0xFFFFFFFF
#define COLOR_STRANGER 0xf0f0f0FF
#define COLOR_LIGHTBLUE 0x74DFFFFF
#define COLOR_LIGHTBLUE2 0xAAC4E5FF
#define COLOR_LIGHTBLUE3 0x33CCFFFF
#define COLOR_ADVERT 0xECF700FF
#define COLOR_REPORT 0x00A2B7FF
#define COLOR_GIFT 0x75DE53FF
#define COLOR_VIP 0x27cc63FF
#define COLOR_FACTION 0x4B55E7FF
#define COLOR_FACEBOOK 0x0074F7FF
#define COLOR_TWITTER 0x27F5F4FF
#define COLOR_DARKWEB 0xF70000FF
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0x7B7B7BFF
#define COLOR_SMOKEWHITE 0xebebebFF
#define COLOR_DARKPURPLE 0xBF62DAFF
#define COLOR_LIGHTPURPLE 0xD5AED2FF
#define COLOR_LIGHTPURPLE2 0xC2A2DAFF
#define COLOR_LIGHTPURPLE3 0xDDA2F0FF
#define COLOR_LIGHTPURPLE4 0xDD90FFFF //OLD: 0xB5A2C5FF
#define COLOR_LIGHTRED 0xFF4D4DFF
#define COLOR_LIGHTRED2 0xF73E3EFF
#define COLOR_GREY 0xAFAFAFFF
#define COLOR_CYAN 0x01FCFFFF
#define COLOR_GREEN 0x40BF00FF
#define COLOR_RADIO 0x6d610fFF
#define COLOR_LIGHTORANGE 0xEE975BFF
#define COLOR_ORANGE 0xF97804FF
#define COLOR_OOC 0xCBFF26FF
#define COLOR_MECHANICS 0xFF927BFF
#define COLOR_POLICE 0x6699ffFF
#define COLOR_POLICE_2 0x0040FFFF
#define COLOR_ARMY 0xC49A02FF
#define COLOR_NEWS 0x00cc00FF
#define COLOR_BUS 0x91C5E3FF
#define COLOR_ADMINDUTY 0x87fff7FF
#define COLOR_ANSWER 0xA1D286FF
#define COLOR_VIP_ORANGE 0xF97804FF
#define COLOR_VIP_RED 0x800000FF
#define COLOR_ADMIN 0x3861B4FF //OLD 0x5AA5E7FF
#define COLOR_ADMIN_DARKGREEN 0x408080FF
#define COLOR_ADMIN_RED 0xD7735CFF //0xE60000FF
#define COLOR_ADMIN_ORANGE 0xF97804FF
#define COLOR_ADMIN_GREEN 0x00E600FF
#define COLOR_FUELSTATION 0x8BB8F1FF
#define COLOR_NEWBIE 0xA1D286FF
#define COLOR_INVISIBLE 0xFFFFFF00
#define COLOR_ORGANISATOR 0xF78616FF
#define COLOR_AUTOSCHOOL 0x17DB00FF
#define COLOR_BIZ 0x0984E3FF
#define COLOR_AUTOMESSAGE 0x33A8FFFF
#define COLOR_GPS 0x6CD5F9FF
#define COLOR_RED 0xFF0000FF
#define COLOR_LOTTO 0xFF80C0FF
#define COLOR_LOTTO2 0xFF00FFFF
#define COLOR_MEDIC 0xF19195FF
#define COLOR_GOVERNMENT 0x006EDDFF
#define COLOR_FBI 0xAA8CFFFF
#define COLOR_BITCOIN 0xE5D407FF
#define COLOR_TURF 0xD571F0FF
#define COLOR_ROBBERY 0xE60600FF
#define COLOR_EVENT 0x00E62DFF
#define COLOR_GRAFFITS 0xF77F16FF
#define COLOR_ERROR 0xF27979FF
#define COLOR_PRIVATEVEH 0xBFFF80FF
#define COLOR_VEH 0x9ACD32FF
#define COLOR_DRUGS 0xff2d2dFF
#define COLOR_PLAYER_POLICE 0x0040FF33
#define COLOR_PLAYER_WHITE 0xffffff33
#define COLOR_PLAYER_MEDIC 0xF1919533
#define COLOR_PLAYER_GOVERNMENT 0x006EDD33
#define COLOR_PLAYER_FBI 0xAA8CFF33
#define COLOR_PLAYER_CRIP 0x00009933
#define COLOR_PLAYER_WCW 0x7f7f7f33
#define COLOR_PLAYER_VAGOS 0xFFFF0033
#define COLOR_PLAYER_BALLAS 0xC2A2DA33
#define COLOR_PLAYER_MAFIA 0x62697933
#define COLOR_PLAYER_ARMY 0xA47B2B33
#define COLOR_PLAYER_ITALIAN 0xA9F5E133
#define COLOR_PLAYER_AZTECAS 0x33CCFF33
#define COLOR_PLAYER_TRIADS 0xF9780433
#define COLOR_PLAYER_GROVE 0x40BF0033
#define COLOR_CIVIL_TURF 0x00000096
#define COLOR_CRIP_TURF 0x00009996
#define COLOR_WCW_TURF 0xB7030096
#define COLOR_VAGOS_TURF 0xFFFF0096
#define COLOR_BALLAS_TURF 0xC2A2DA96
#define COLOR_RUSSIAN_MAFIA_TURF 0xFFC30096
#define COLOR_ITALIAN_TURF 0xA9F5E196
#define COLOR_AZTECAS_TURF 0x33CCFF96
#define COLOR_TRIADS_TURF 0xF9780496
#define COLOR_GROVE_TURF 0x40BF0096
#define COLOR_CIVIL_GRAFFITI 0xFFFFFFFF
#define COLOR_CRIP_GRAFFITI 0xFF000099
#define COLOR_ITALIAN_GRAFFITI 0xFFA9F5E1
#define COLOR_AZTECAS_GRAFFITI 0xFF33CCFF
#define COLOR_WCW_GRAFFITI 0xFF7f7f7f
#define COLOR_VAGOS_GRAFFITI 0xFFFFFF00
#define COLOR_BALLAS_GRAFFITI 0xFFC2A2DA
#define COLOR_RUSSIAN_MAFIA_GRAFFITI 0xFF626979
#define COLOR_TRIADS_GRAFFITI 0xFFF97804
#define COLOR_GROVE_GRAFFITI 0xFF40BF00
#define JOB_NO 0
#define JOB_TAXI 1
#define JOB_MECHANIC 2
#define JOB_BANKER 3
#define JOB_FUELCOMPANY 4
#define MAX_JOBS 5
#define FACTION_CIVILIAN 0
#define FACTION_LSPD 1
#define FACTION_LS_ARMY 2
#define FACTION_FBI 3
#define FACTION_CRIP 4
#define FACTION_WCW 5
#define FACTION_VAGOS 6
#define FACTION_BALLAS 7
#define FACTION_RUSSIAN_MAFIA 8
#define FACTION_MEDIC 9
#define FACTION_GOVERNMENT 10
#define FACTION_NEWS 11
#define FACTION_LV_ARMY 12
#define FACTION_ITALIAN_MAFIA 13
#define FACTION_AZTECAS 14
#define FACTION_LVPD 15
#define FACTION_TRIADS 16
#define FACTION_GROVE 17
#define MAX_FACTIONS 18

forward IsPlayerInTurf(playerid, Float: min_x, Float: min_y, Float: max_x, Float: max_y);
forward CorDetector(Float: radi, playerid, targetid);
forward CorVehDetector(Float: radi, playerid, targetid);
forward GeneralTimer1s();
forward GeneralTimerms();
new VehicleNames[][] = { "Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel",
	"Dumper", "Firetruck", "Trashmaster", "Stretch", "Manana", "Infernus",
	"Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
	"Esperanto", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection",
	"Hunter", "Premier", "Enforcer", "Securicar", "Banshee", "Predator", "Bus",
	"Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach", "Cabbie",
	"Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral",
	"Squalo", "Seasparrow", "Pizzaboy", "Tram", "Trailer", "Turismo", "Speeder",
	"Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair", "Berkley's RC Van",
	"Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale",
	"Oceanic", "Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy",
	"Hermes", "Sabre", "Rustler", "ZR-350", "Walton", "Regina", "Comet", "BMX",
	"Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper",
	"Rancher", "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking",
	"Blista Compact", "Police Maverick", "Boxville", "Benson", "Mesa", "RC Goblin",
	"Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher", "Super GT",
	"Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stunt",
	"Tanker", "Roadtrain", "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra",
	"FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck", "Fortune",
	"Cadrona", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer",
	"Remington", "Slamvan", "Blade", "Freight", "Streak", "Vortex", "Vincent",
	"Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder", "Primo",
	"Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite",
	"Windsor", "Monster", "Monster", "Uranus", "Jester", "Sultan", "Stratium",
	"Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito",
	"Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper",
	"Broadway", "Tornado", "AT-400", "DFT-30", "Huntley", "Stafford", "BF-400",
	"News Van", "Tug", "Trailer", "Emperor", "Wayfarer", "Euros", "Hotdog", "Club",
	"Freight Box", "Trailer", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car",
	"Police Car", "Police Car", "Police Ranger", "Picador", "S.W.A.T", "Alpha",
	"Phoenix", "Glendale", "Sadler", "Luggage", "Luggage", "Stairs", "Boxville",
	"Tiller", "Utility Trailer" };

enum graffitiInfo
{
	GraffitiID,
	Float: gX,
	Float: gY,
	Float: gZ,
	Float: gXY,
	Float: gYY,
	Float: gZY,
	gObjectID,
	GraffitiOwner
}

new maxGraffiti;
new GraffitiInfo[MAX_GRAFFITI][graffitiInfo];
enum allowedSpeedInfo
{
	AreaID,
	Float: zMinX,
	Float: zMinY,
	Float: zMaxX,
	Float: zMaxY,
	MaxSpeed
}

new MaxSpeedAreaInfo[MAX_SPEEDAREAS][allowedSpeedInfo] = {
		{ 0, 1724.0, 867.0, 1874.0, 2377.0, 130 },
	{ 1, 1086.0, 1737.0, 1724.0, 2377.0, 90 },
	{ 2, 1087.0, 1097.0, 1725.0, 1737.0, 90 },
	{ 3, 1875.0, 866.0, 2513.0, 1506.0, 110 },
	{ 4, 1875.0, 1506.0, 2513.0, 2146.0, 100 }
};

enum turfinfo
{
	TurfID,
	Float: zMinX,
	Float: zMinY,
	Float: zMaxX,
	Float: zMaxY,
	TurfColor,
	TurfOwner,
	TurfWarGang
}

new TurfInfo[MAX_TURFS][turfinfo] = {
		{
		0, 1956.0, -1959.5, 2112.0, -1826.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		1, 1956.0, -1826.5, 2112.0, -1693.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		2, 1956.0, -1693.5, 2112.0, -1560.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		3, 1956.0, -1560.5, 2112.0, -1427.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		4, 1956.0, -1427.5, 2112.0, -1294.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		5, 1956.0, -1294.5, 2112.0, -1161.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		6, 2112.0, -1294.5, 2268.0, -1161.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		7, 2268.0, -1294.5, 2424.0, -1161.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		8, 2424.0, -1294.5, 2580.0, -1161.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		9, 2580.0, -1294.5, 2736.0, -1161.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		10, 2580.0, -1427.5, 2736.0, -1294.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		11, 2424.0, -1427.5, 2580.0, -1294.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		12, 2268.0, -1427.5, 2424.0, -1294.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		13, 2112.0, -1427.5, 2268.0, -1294.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		14, 2112.0, -1560.5, 2268.0, -1427.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		15, 2268.0, -1560.5, 2424.0, -1427.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		16, 2424.0, -1560.5, 2580.0, -1427.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		17, 2580.0, -1560.5, 2736.0, -1427.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		18, 1956.0, -2092.5, 2112.0, -1959.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		19, 2112.0, -2092.5, 2268.0, -1959.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		20, 2112.0, -1959.5, 2268.0, -1826.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		21, 2112.0, -1826.5, 2268.0, -1693.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		22, 2112.0, -1693.5, 2268.0, -1560.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		23, 2268.0, -1693.5, 2424.0, -1560.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		24, 2268.0, -1826.5, 2424.0, -1693.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		25, 2268.0, -1959.5, 2424.0, -1826.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		26, 2268.0, -2092.5, 2424.0, -1959.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		27, 2424.0, -1693.5, 2580.0, -1560.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		28, 2580.0, -1693.5, 2736.0, -1560.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		29, 2424.0, -1826.5, 2580.0, -1693.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		30, 2580.0, -1826.5, 2736.0, -1693.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		31, 2424.0, -1959.5, 2580.0, -1826.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		32, 2580.0, -1959.5, 2736.0, -1826.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		33, 2424.0, -2092.5, 2580.0, -1959.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		34, 2580.0, -2092.5, 2736.0, -1959.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		35, 1800.0, -1294.5, 1956.0, -1161.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		36, 1800.0, -1427.5, 1956.0, -1294.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		37, 1800.0, -1560.5, 1956.0, -1427.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		38, 1800.0, -1693.5, 1956.0, -1560.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		39, 1800.0, -1826.5, 1956.0, -1693.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		40, 1800.0, -1959.5, 1956.0, -1826.5, COLOR_CIVIL_TURF, 0, 0
	},
	{
		41, 1800.0, -2092.5, 1956.0, -1959.5, COLOR_CIVIL_TURF, 0, 0
	}
};

enum jInfo
{
	jName[256]
}

new JobInfo[MAX_JOBS][jInfo] = { "No Job",
	"Taxi Job",
	"Mechanic Job",
	"Banker Job",
	"Fuel Company Job" };

enum fInfo
{
	fName[256],
		fRankName1[32],
		fRankName2[32],
		fRankName3[32],
		fRankName4[32],
		fRankName5[32],
		fRankName6[32],
		fColor,
		fGrColor,
		fTurfs,
		fBankAccount,
		fGraffits
}

new FactionInfo[MAX_FACTIONS][fInfo] = {
		{
		"Civilian", "N/A", "N/A", "N/A", "N/A", "N/A", "N/A", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, MAX_TURFS, 0
	},
	{
		"Los Santos Police Department", "Младши Полицай", "Полицай", "Старши полицай", "Главен инспектор", "Главен комисар", "Главен секретар", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
	},
	{
		"Los Santos Army", "Войник", "Сержант", "Майор", "Лейтенант", "Капитан", "Генерал", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
	},
	{
		"FBI", "Кадет", "Aгент", "Началник на дивизия", "Асистент-директор", "Заместник-директор", "Директор", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
	},
	{
		"Vinewood Cripz", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_CRIP_TURF, COLOR_CRIP_GRAFFITI, 0, 0
	},
	{
		"West Coast Wheelers", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_WCW_TURF, COLOR_WCW_GRAFFITI, 0, 0
	},
	{
		"Los Santos Vagos", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_VAGOS_TURF, COLOR_VAGOS_GRAFFITI, 0, 0
	},
	{
		"Rolling Heights Ballas", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_BALLAS_TURF, COLOR_BALLAS_GRAFFITI, 0, 0
	},
	{
		"Russian Mafia", "Член", "Лоялен член", "Съветник", "Лоялен съветник", "Заместник-шеф", "Шеф", COLOR_RUSSIAN_MAFIA_TURF, COLOR_RUSSIAN_MAFIA_GRAFFITI, 0, 0
	},
	{
		"Medical Department", "Асистент", "Стажант", "Кадет", "Доктор", "Главен лекар", "Директор на болницата", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
	},
	{
		"Government", "Шофьор на кмета", "Бодигард на кмета", "Шеф на шофьорите", "Шеф на бодигардите", "Асистент на кмета", "Кмет", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
	},
	{
		"The News", "Стажант", "Репортер", "Главен журналист", "Секретар", "Мениджър", "Продуцент", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
	},
	{
		"Las Venturas Army", "Войник", "Сержант", "Майор", "Лейтенант", "Капитан", "Генерал", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
	},
	{
		"Italian Mafia", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_ITALIAN_TURF, COLOR_ITALIAN_GRAFFITI, 0, 0
	},
	{
		"Varrios Los Aztecas", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_AZTECAS_TURF, COLOR_AZTECAS_GRAFFITI, 0, 0
	},
	{
		"Las Venturas Police Department", "Младши Полицай", "Полицай", "Старши полицай", "Главен инспектор", "Главен комисар", "Главен секретар", COLOR_CIVIL_TURF, COLOR_CIVIL_GRAFFITI, 0, 0
	},
	{
		"Las Venturas Triads", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_TRIADS_TURF, COLOR_TRIADS_GRAFFITI, 0, 0
	},
	{
		"Grove Street Families", "Gangsta", "OG", "Double OG", "Лява ръка на шефа", "Дясна ръка на шефа", "Шеф", COLOR_GROVE_TURF, COLOR_GROVE_GRAFFITI, 0, 0
	}
};

enum vehForSaleInfo
{
	sbVehName[60],
		sbVehPrice,
		sbVehLevel,
		sbVehModel
}

new sellBikeFromStoreInfo[MAX_SELLBIKE][vehForSaleInfo] = {
		{
		"NRG-500", 53800, 26, 522
	},
	{
		"FCR-900", 32900, 25, 521
	},
	{
		"BMX", 21800, 8, 481
	},
	{
		"Bike", 21600, 7, 509
	},
	{
		"Mountain bike", 21700, 7, 510
	}
};

new sellCarFromStoreInfo[MAX_SELLCAR][vehForSaleInfo] = {
		{
		"Manana", 42800, 18, 410
	},
	{
		"Esperanto", 44800, 19, 419
	},
	{
		"Infernus", 845800, 45, 411
	},
	{
		"Sultan", 941800, 50, 560
	},
	{
		"NRG-500", 53800, 26, 522
	},
	{
		"FCR-900", 32900, 25, 521
	},
	{
		"Washington", 56800, 22, 421
	},
	{
		"Premier", 54800, 23, 426
	},
	{
		"Stallion", 55200, 24, 439
	},
	{
		"Romero", 64400, 25, 442
	},
	{
		"Solair", 68800, 26, 458
	},
	{
		"Hermes", 68900, 27, 474
	}
};

enum privateVehInfo
{
	vVeh,
	vVehID,
	vVehC1,
	vVehC2,
	vVehSpoiler,
	vVehPaintJob,
	vVehHood,
	vVehRoof,
	vVehVentsR,
	vVehVentsL,
	vVehExhaust,
	vVehWheels,
	vVehStereo,
	vVehHyd,
	vVehBumperF,
	vVehBumperR,
	vVehNitro,
	vVehSideskirt,
	vVehLights,
	vVehNeonColor,
	vVehNeon[2],
	vVehStickerName1[256],
	vVehStickerName2[256],
	Float: vVehStickerX[2],
	Float: vVehStickerY[2],
	Float: vVehStickerZ[2],
	Float: vVehStickerXY[2],
	Float: vVehStickerYY[2],
	Float: vVehStickerZY[2],
	vVehSticker[2],
	vVehObjID[20],
	vVehObject[20],
	Float: vVehObjectX[20],
	Float: vVehObjectY[20],
	Float: vVehObjectZ[20],
	Float: vVehObjectRX[20],
	Float: vVehObjectRZ[20],
	Float: vVehObjectRY[20],
	Float: vVehX,
	Float: vVehY,
	Float: vVehZ,
	Float: vVehA,
	vParked,
	vLocked,
	vPrice,
	vLevel,
	vOwner,
	vOwnerName[256]
}

new PrivateVehInfo[MAX_PRIVATEVEHS][privateVehInfo];
enum hInfo
{
	Float: hX,
	Float: hY,
	Float: hZ,
	hOwner,
	hLocked,
	hOwnerName[256],
	hPrice,
	hInterior,
	hLevel,
	hVeh,
	hVehID,
	hVehC1,
	hVehC2,
	Float: hVehX,
	Float: hVehY,
	Float: hVehZ,
	Float: hVehA,
	hHaveVeh,
	hTempFurObj,
	hFurSlot[10],
	hFurObject[10],
	hFurID[10],
	Float: hFurX[10],
	Float: hFurY[10],
	Float: hFurZ[10],
	Float: hFurRX[10],
	Float: hFurRY[10],
	Float: hFurRZ[10],
	hName[256]
}

new HouseInfo[MAX_HOUSES][hInfo];
enum bInfo
{
	Float: bX,
	Float: bY,
	Float: bZ,
	bOwner,
	bLocked,
	bOwnerName[256],
	bPayOut,
	bLevel,
	bEarnings,
	bStock,
	bItemsNumber,
	bName[256],
	bPrice,
	bType,
}

new BizInfo[MAX_BIZ][bInfo];
enum bitInfo
{
	bitPrice,
	bitBought
}

new BitcoinInfo[bitInfo];
enum scInfo
{
	scVeh,
	scVehPrice,
	scVehLevel,
	scVehID,
	Float: scX,
	Float: scY,
	Float: scZ,
	Float: scAngle,
	scVehC1,
	scVehC2
}

new SellCarInfo[MAX_SELLCARS][scInfo];
//offices - location - open
enum offInfo
{
	isOwned,
	OwnerName[50],
	NeededLevel,
	NeededCash,
	NeededEPS,
	NeededMS,
	BonusEP,
	BonusCash
}

new OfficeInfo[MAX_OFFICES][offInfo];
//offices - location - close
//Inventory - open
enum invInfo
{
	invExists,
	invID,
	invItem[32],
	invModel,
	invQuantity
};

new InventoryInfo[MAX_PLAYERS][MAX_INVENTORY][invInfo];
enum e_InventoryItems
{
	e_InventoryItem[32],
		e_InventoryModel
};

//Inventory - close
enum buycInfo
{
	buycExists,
	buycID,
	buycItem[32],
	buycModel,
	buycPrice
};

new BuyClothesInfo[MAX_PLAYERS][MAX_BUYCLOTHES][buycInfo];
//
//VehicleAttachments
enum vehAttachmentsInfo
{
	vaExists,
	vaID,
	vaItem[32],
	vaModel,
	vaPrice
};

new VehicleBuyAttachmentsInfo[MAX_BUY_VEHICLE_ATTACHMENTS][vehAttachmentsInfo];

enum bBikeInfo
{
	bBikeExists,
	bBikeID,
	bBikeItem[32],
	bBikeModel,
	bBikePrice
};

new BuyPrivateBikeInfo[MAX_BUY_BIKES][bBikeInfo];

//
enum buyiInfo
{
	buyiExists,
	buyiID,
	buyiItem[32],
	buyiModel,
	buyiPrice
};

new BuyItemsInfo[MAX_BUYITEMS][buyiInfo];
//b
enum barrInfo
{
	barrExists,
	barrID,
	barrItem[32],
	barrModel
};

new BarricadeItemsInfo[MAX_BARITEMS][barrInfo];
enum droppedItems
{
	droppedID,
	droppedItem[32],
	droppedPlayer[24],
	droppedModel,
	droppedQuantity,
	Float: droppedPos[3],
	droppedWeapon,
	droppedAmmo,
	droppedInt,
	droppedWorld,
	droppedObject,
	Text3D: droppedText3D
};

new DroppedItems[MAX_DROPPED_ITEMS][droppedItems];
new g_aInventoryItems[][e_InventoryItems] = {
		{
		"Марихуана семена", 1578
	},
	{
		"Кокаин семена", 1575
	},
	{
		"Хероин семена", 1577
	},
	{
		"Golf Club", 333
	},
	{
		"Knife", 335
	},
	{
		"Shovel", 337
	},
	{
		"Katana", 339
	},
	{
		"Colt 45", 346
	},
	{
		"Desert Eagle", 348
	},
	{
		"Micro SMG", 352
	},
	{
		"Tec-9", 372
	},
	{
		"MP5", 353
	},
	{
		"Shotgun", 349
	},
	{
		"AK-47", 355
	},
	{
		"Rifle", 357
	},
	{
		"Sniper", 358
	},
	{
		"Хляб", 19579
	},
	{
		"Сладкиш", 2663
	},
	{
		"Месо", 19847
	},
	{
		"Бургер", 11740
	},
	{
		"Спрей", 365
	},
	{
		"Вода", 2958
	},
	{
		"Fanta", 19835
	},
	{
		"Coca-Cola", 19835
	},
	{
		"GPS Устройство", 18875
	},
	{
		"Туба с бензин", 1650
	},
	{
		"Първа помощ", 1580
	},
	{
		"Телефон", 330
	},
	{
		"Документи", 1581
	},
	{
		"Ключове за кола", 11746
	},
	{
		"Инструменти за кола", 920
	}
};

enum pInfo
{
	pIP[35],
		pPassword[256],
		pAdmin,
		pTelenorMB,
		pVoucherBGN,
		pClothes[MAX_PLAYER_CLOTHES],
		pItems[MAX_BUYITEMS],
		pVotedGov,
		pPrivateVehs,
		pDocumentType[20],
		pFishSlot[11],
		pFishWeight[11],
		pPrivateVeh[3],
		pFood[4],
		pDrink[3],
		pPrivateVehFreeSlot,
		pInvCapacity,
		pTips,
		pStyleTexts,
		pFightStyle,
		pDrugsAddict,
		pSweeperPast,
		pSpawn,
		pMask,
		pCarGetPast,
		pWeaponSkill[11],
		pWeaponSkillPoints[11],
		pAchievement[11],
		pEvent,
		pCiggs,
		pMoneyBag,
		pInHospital,
		pWarns,
		pAdminWarns,
		pTracker,
		pVip,
		pMuted,
		pJailed,
		pGiftPaydays,
		pPlayerNum,
		pMission,
		pVudica,
		pHungry,
		pThirsty,
		pStruv,
		pAge,
		pEGN,
		pBitcoin,
		pHeroin,
		pMarijuana,
		pBankAccount,
		pBankPin,
		pBitcoinCourse,
		pCocaine,
		pHats,
		pWatches,
		pMasks,
		pGlasses,
		pPhoneNum,
		pPhoneStatusOFF,
		pPhoneHide,
		pGPS,
		pWepLic,
		pPhone,
		pWeapon[13],
		pWeaponAmmo[13],
		pJob,
		pPoliceDuty,
		pTaxiDuty,
		pFuelCoDuty,
		pArmyDuty,
		pFbiDuty,
		pHelmetObject,
		pMedicDuty,
		pDisableNews,
		pDisableCarRadio,
		pVehText,
		pLaser,
		pFlashLight,
		pHouseO,
		pBizO,
		pAdminDuty,
		pJobBoss,
		pPoliceJail,
		pWantedLevel,
		pFaction,
		pRank,
		pSkin,
		pNormalSkin,
		pGender,
		pPlayedSeconds,
		pFine,
		pIdentifyCard,
		Float: pHealth,
		Float: pArmour,
		Float: pX,
		Float: pY,
		Float: pZ,
		Float: pAngle,
		pVWorld,
		pInterior,
		pCash,
		pBank,
		pCarLicense,
		pPlaneLicense,
		pLevel,
		pExp,
		pAFK,
		pBankLoanTimer,
		pKingRingTimer,
		pSweeperTimer,
		pSweeperPassed,
		pSweeperLevel,
		pPizzaTimer,
		pPizzaLevel,
		pPizzaPassed,
		pCoalmineTimer,
		pCoalmineLevel,
		pCoalminePassed,
		pDeliverTimer,
		pDeliverLevel,
		pDeliverPassed,
		pBusTimer,
		pBusLevel,
		pBusPassed,
		pLastVRepair,
		pLastYear,
		pLastMonth,
		pLastDay,
		pLastMinute,
		pLastSecond,
		pLastHour
}

new PlayerInfo[MAX_PLAYERS][pInfo];

enum fsInfo
{
    fsLocation[64],
    fsFuel,
    Float: fsCoordsX,
    Float: fsCoordsY,
    Float: fsCoordsZ
};

new FuelStationInfo[MAX_FUEL_STATIONS][fsInfo] = {
    {
        "Temple", 5000, LOC_FUELSTATION_1
    },
    {
        "Idlewood", 5000, LOC_FUELSTATION_2
    },
    {
        "Whetstone", 5000, LOC_FUELSTATION_3
    },
    {
        "San Fierro 1", 5000, LOC_FUELSTATION_4
    },
    {
        "Angel Pine", 5000, LOC_FUELSTATION_5
    },
    {
        "San Fierro 2", 5000, LOC_FUELSTATION_6
    },
    {
        "The Emerland Isle", 5000, LOC_FUELSTATION_7
    },
    {
        "Bone County 1", 5000, LOC_FUELSTATION_8
    },
    {
        "Tierra Robeda 1", 5000, LOC_FUELSTATION_9
    },
    {
        "Bone County 2", 5000, LOC_FUELSTATION_10
    },
    {
        "Las Venturas 1", 5000, LOC_FUELSTATION_11
    },
    {
        "Las Venturas 2", 5000, LOC_FUELSTATION_12
    },
    {
        "Spinybed", 5000, LOC_FUELSTATION_13
    },
    {
        "Tierra Robeda 2", 5000, LOC_FUELSTATION_14
    },
    {
        "Dillimore", 5000, LOC_FUELSTATION_15
    },
    {
        "Montgomery", 5000, LOC_FUELSTATION_16
    }
};

enum ptInfo
{
	ptRevieveTimer,
	ptSetToSpawnVar,
	ptAFKBack,
	ptBan,
	ptKick,
	ptEndIntro,
	ptShowIntro,
	ptSpawn,
	ptFuel,
	ptTurnEngine,
	ptUnfreeze,
	ptApplyFallenAnim,
	ptFreeze,
	ptPoliceStunned,
	ptClearAnimation,
	ptLastOverSpeed,
	ptFishTimer,
	ptDriverSchoolTimer,
	ptDriverSchoolTaken,
	pResetPlayerLabel,
	ptPark,
	ptRinging,
	ptHideGiveCash,
	ptHungryTimer,
	ptThirstyTimer,
	ptWorkingVeh,
	ptFirstMission,
	ptHealingAfterDeath,
	ptHospitalCmd,
	ptClearChatAnimation,
	ptMedicHelpSpawn,
	ptVehicleTurnEngineOn,
	ptFinishDrugEffect,
	ptHideCommandInfo,
	ptHideMessageInfo,
	ptAlreadyFallen,
	ptJoinCameraMoving,
	ptInteractActor,
	ptHideInteractiveActor,
	ptLastPickup
}

new PlayerTimerInfo[MAX_PLAYERS][ptInfo];
enum vtInfo
{
	vtRespawn,
	vtRentTime,
	vtRadioChange,
	vtTaxiFareTimer
}

new VehicleTimerInfo[MAX_VEHICLES][vtInfo];
enum vInfo
{
	vRentedBy,
	vRentLock,
	vRentable,
	vRentPrice,
	vTaxiFare,
	vForSaleShop,
	vForSaleID,
	vIsPrivate,
	vPrivateID,
	vForHouse,
	vForHouseID,
	vTankFuel
}

new VehicleInfo[MAX_VEHICLES][vInfo];

enum pLastPos
{
	Float: Coords[3],
	Float: lpPx,
	Float: lpPy,
	Float: lpPz,
	lpInterior,
	lpVWorld,
	lpUsed
};

new LastPos[MAX_PLAYERS][pLastPos];

enum pSpec
{
	Float: Coords[3],
	Float: sPx,
	Float: sPy,
	Float: sPz,
	sPint,
	sLocal,
	Float: sAngle,
	sVw,
	sCam,
};

new Unspec[MAX_PLAYERS][pSpec];

enum voteInfo
{
	voterName[60]
};

new VoteInfo[MAX_VOTERS][voteInfo];
new voterCount = 0;

enum trashInfo
{
	trashID
};

new TrashCanInfo[MAX_TRASHCANS][trashInfo];

new inBiz[MAX_PLAYERS] = -1;
new inHouse[MAX_PLAYERS] = -1;
new lastEnterPickupBIZ[MAX_PLAYERS];
new lastEnterPickupHOUSE[MAX_PLAYERS];
new AFKDetect[MAX_PLAYERS];
new vehApplyObjectID[MAX_PLAYERS] = -1;
new vehOptionsSlotID[MAX_PLAYERS] = -1;
new seeingStats[MAX_PLAYERS] = -1;
new playerAfkSeconds[MAX_PLAYERS];
new playerAfkMinutes[MAX_PLAYERS];
new changeGunTimer[MAX_PLAYERS];
new trashCanTimer[MAX_TRASHCANS] = 0;
new playerCurrentGun[MAX_PLAYERS] = 0;
new respawnVehsVoteYES = 0;
new respawnVehsVoteNO = 0;
new respawnVehsVoteTimer = 0;
new normalVoteTimer = 0;
new normalVoteYES = 0;
new normalVoteNO = 0;
new normalVoteQuestion[256];
new respawnVehsTimer = 0;
new paintBallEndTimer;
new bool: paintBallOpen = false;
new vehLocker[MAX_PLAYERS] = -1;
new paintBallKills[MAX_PLAYERS] = 0;
new vehRented[MAX_PLAYERS];
new bool: rentorVeh[MAX_PLAYERS] = false;
new bool: parrot[MAX_PLAYERS] = false;
new buyItemWithBGNIndex[MAX_PLAYERS] = -1;
new bool: alreadyFallen[MAX_PLAYERS] = false;
new bool: inPaintBall[MAX_PLAYERS] = false;
new bool: maskOn[MAX_PLAYERS] = false;
new bool: PhoneShow[MAX_PLAYERS] = false;
new Float: beforePaintBallArmour[MAX_PLAYERS];
new Float: beforePaintBallHealth[MAX_PLAYERS];
new bool: didVote[MAX_PLAYERS] = false;
new policeSiren[MAX_PLAYERS] = -1;
new addVehObjectID[MAX_PLAYERS] = -1;
new addVehObjectIDType[MAX_PLAYERS] = -1;
new policeBarricade[MAX_PLAYERS][20];
new bool: serverLogoEnabled[MAX_PLAYERS] = true;
new bool: timeTextEnabled[MAX_PLAYERS] = true;
new bool: setToSpawn[MAX_PLAYERS] = false;
new bool: noHospital[MAX_PLAYERS] = false;
new bankTransferUser[60][MAX_PLAYERS];
new bool: isBizPickup[MAX_PICKUPS] = false;
new bool: isBizPickupExit[MAX_PICKUPS] = false;
new bool: isHousePickup[MAX_PICKUPS] = false;
new pizzaJobPickup;
new sweepJobPickup;
new mechanicJobPickup;
new busJobPickup;
new deliverJobPickup;
new coalmineJobPickup;
new housePickupIndex[MAX_PICKUPS] = -1;
new bizPickupIndex[MAX_PICKUPS] = -1;
new bizPickupExitIndex[MAX_PICKUPS] = -1;
new Float: currentPlayerSpeedLimit[MAX_PLAYERS];
new inBusTeleportVehIndex[MAX_PLAYERS];
new calledTaxiTimer[MAX_PLAYERS];
new calledMechanicTimer[MAX_PLAYERS];
new calledPoliceTimer[MAX_PLAYERS];
new buyTypeDrug[MAX_PLAYERS];
new fishToDrop[MAX_PLAYERS];
new buyFoodSelect[MAX_PLAYERS];
new buyDrinkSelect[MAX_PLAYERS];
new inventorySelect[MAX_PLAYERS];
new buyClothesSelect[MAX_PLAYERS];
new buyItemsSelect[MAX_PLAYERS];
new barrItemsSelect[MAX_PLAYERS];
new busTeleportTimer[MAX_PLAYERS];
new robberyTimerToStart;
new normalRobberyMoney;
new atmRobberyMoney;
new normalRobberyVirtualWorld;
new bool: normalRobberyStartedGettingCash = false;
new bool: startedAtmRob = false;
new atmRobberyWaitingTimer;
new normalRobberyWaitingTimer;
new atmRobberyPlaceIndex;
new robberyGettingMoneyTimer;
new robberyCollectTimeCheck;
new atmRobberyCollectTimeCheck;
new normalRobPlace;
new normalRobberyMembers;
new bool: inNormalRobbery[MAX_PLAYERS] = false;
new bool: startedNormalRobbery = false;
new bool: startedNormalRobGettingMoney = false;
new normalRobberyLeaderID = -1;
new atmRobberID = -1;
new bool: isNormalRobberyLeaderPlayer[MAX_PLAYERS] = false;
new bool: withBelt[MAX_PLAYERS] = false;
new bool: startedTurf = false;
new bool: governmentVoting = false;
new governmentCandidate1Name[60];
new governmentCandidate2Name[60];
new governmentCandidate1Result;
new governmentCandidate2Result;
new bool: recoveringFromDeath[MAX_PLAYERS];
new inBuyVehVW[MAX_PLAYERS] = -1;
new bool: isStudyingDrive[MAX_PLAYERS] = false;
new isStudyingDriveType[MAX_PLAYERS];
new bool: newProfile[MAX_PLAYERS] = false;
new bool: spawned[MAX_PLAYERS] = false;
new bool: spec[MAX_PLAYERS] = false;
new vehicleStickerPlayer[MAX_PLAYERS] = -1;
new bool: firstSpawn[MAX_PLAYERS] = true;
new bool: fuelTruckHasTrailer[MAX_VEHICLES] = false;
new bool: vehEngineStatusON[MAX_VEHICLES] = true;
new bool: vehLONStatusON[MAX_VEHICLES] = true;
new bool: vehBONTEStatusON[MAX_VEHICLES] = false;
new bool: vehAlarmStatusON[MAX_VEHICLES] = false;
new bool: vehBOOTStatusON[MAX_VEHICLES] = false;
new bool: eSpecVehsLSArmy = false;
new bool: eSpecVehsLVArmy = false;
new kingringCheckpoint[MAX_PLAYERS] = 1;
new hisLastVeh[MAX_PLAYERS] = -1;
new Float: findVehX[MAX_PLAYERS], Float: findVehY[MAX_PLAYERS], Float: findVehZ[MAX_PLAYERS];
new bool: adminVeh[MAX_VEHICLES] = false;
new turfAttacked = -1;
new turfGangAttacker;
new passwordChances[MAX_PLAYERS] = 3;
new driverStudyVeh[MAX_PLAYERS] = -1;
new closeddialog = 3500;
new Text3D: fuelStationText[17];
new vehFuel[MAX_VEHICLES] = 100;
new bool: turfAttacker[MAX_PLAYERS];
new turfStartTimer;
new graffitStartTimer;
new bool: startedGraffit;
new graffitAttacked = -1;
new graffitAttacker;
new graffitFinishTimer;
new Text3D: officeOwnerText[21];
new turfMembers;
new OfficePickup;
new documentsPickup;
new bankPickupDollar;
new buyBikePickup;
new buyTelenorPickup;
new buyCarPickup;
new RobPickup;
new bankPickup;
new cityHall;
new blackMarket;
new bikeShopPickup;
new dmvPickup;
new paintballPickup;
new taxiPickup;
new telenorPickup;
new lspdPickup;
new lvpdPickup;
new fbiPickup[2];
new newsPickup[2];
new hospitalPickup;
new hospital2Pickup;
new fineGunLicPickup;
new robberyStartPickup;
new robberyStartPickup2;
new driverLicPickup;
new ATMPickup[11];
new pressEnter[16];
new giftPickup;
new pizzaPickup;
new kingringPickup;
new busTeleportExitPickup;
new busPickup;
new BizActors[MAX_BIZ];
new InteractiveActor[MAX_INTERACT_ACTORS];
new Text3D: InteractText3D[MAX_PLAYERS][MAX_INTERACT_ACTORS];
new Text: TankFuel[MAX_PLAYERS];
new Text: MessageInfo[MAX_PLAYERS];
new Text: CommandInfo[MAX_PLAYERS];
new Text: RESTARTText;
new Text: Box[2];
new Text: Clock[MAX_PLAYERS];
new Text: PaintBallTimerText;
new PlayerText: PhoneGUI[MAX_PLAYERS][44];
new Text: ServerLogo[MAX_PLAYERS];
new Text: PlayerAreaText[MAX_PLAYERS];
new Text: GiveCashText[MAX_PLAYERS];
new Text: DeathTimerText[MAX_PLAYERS];

new Text: SpeedStatus[MAX_PLAYERS];
new Text: FuelStatus[MAX_PLAYERS];
new Text: VehicleNameSpeedo[MAX_PLAYERS];
new Text: VehicleSpeedo[4];

new Text: FareStatus[MAX_PLAYERS];
new Text: driverCourseText[MAX_PLAYERS];
new Text: levelExp[MAX_PLAYERS];
new workingOnVeh[MAX_PLAYERS];
new expPlus = 6;
new fbiArmour[2];
new lsArmyArmour;
new lvArmyArmour;
new lspdArmour;
new lvpdArmour;
new lspdVehs[38];
new lvpdVehs[38];
new fbiVehs[22];
new cripVehs[12];
new italianVehs[7];
new aztecasVehs[7];
new triadsVehs[7];
new groveVehs[20];
new wcwVehs[5];
new vagosVehs[7];
new ballasVehs[7];
new mafiaVehs[12];
new lsArmyVehs[75];
new lvArmyVehs[29];
new medicVehs[15];
new govVehs[5];
new newsVehs[4];
new taxiVehs[4];
new bankerVehs[3];
new pizzaRcVehs[6];
new sweepVehs[4];
new coalmineVehs[4];
new deliverVehs[2];
new mechanicVehs[2];
new fueltruck[3];
new fuelremarke[3];
new busVehs[5];
new deliverBcVehs[3];
new boatFish[2];
new bankVehs[2];
new busTeleportVehs[3];
new buyingVehStoreIndex[MAX_PLAYERS] = -1;
new playerVehToBuy[MAX_PLAYERS] = -1;

new bool: inTaxiVeh[MAX_PLAYERS] = false;
new bool: isTaxiVehWorking[MAX_VEHICLES] = false;
new bool: isWorkingSweep[MAX_PLAYERS] = false;
new bool: isWorkingBus[MAX_PLAYERS] = false;
new bool: isWorkingPizza[MAX_PLAYERS] = false;
new bool: isBusVehWorking[MAX_VEHICLES] = false;
new bool: isWorkingKingRing[MAX_PLAYERS] = false;
new bool: isWorkingDeliver[MAX_PLAYERS] = false;
new bool: isWorkingCoalmine[MAX_PLAYERS] = false;

new bool: isLvArmySpecialVeh[MAX_VEHICLES] = false;
new bool: isLsArmySpecialVeh[MAX_VEHICLES] = false;
new bool: isLspdDutyVeh[MAX_VEHICLES] = false;
new bool: isLspdVeh[MAX_VEHICLES] = false;
new bool: isLvpdDutyVeh[MAX_VEHICLES] = false;
new bool: isLvpdVeh[MAX_VEHICLES] = false;
new bool: isFbiVeh[MAX_VEHICLES] = false;
new bool: isCripVeh[MAX_VEHICLES] = false;
new bool: isItalianVeh[MAX_VEHICLES] = false;
new bool: isAztecasVeh[MAX_VEHICLES] = false;
new bool: isGroveVeh[MAX_VEHICLES] = false;
new bool: isTriadsVeh[MAX_VEHICLES] = false;
new bool: isWcwVeh[MAX_VEHICLES] = false;
new bool: isVagosVeh[MAX_VEHICLES] = false;
new bool: isBallasVeh[MAX_VEHICLES] = false;
new bool: isMafiaVeh[MAX_VEHICLES] = false;
new bool: isMedicVeh[MAX_VEHICLES] = false;
new bool: isGovVeh[MAX_VEHICLES] = false;
new bool: isLsArmyVeh[MAX_VEHICLES] = false;
new bool: isLvArmyVeh[MAX_VEHICLES] = false;
new bool: isNewsVeh[MAX_VEHICLES] = false;
new bool: isTaxiVeh[MAX_VEHICLES] = false;
new bool: isPizzaVeh[MAX_VEHICLES] = false;
new bool: isSweepVeh[MAX_VEHICLES] = false;
new bool: isDeliverVeh[MAX_VEHICLES] = false;
new bool: isCoalmineVeh[MAX_VEHICLES] = false;
new bool: isBankerVeh[MAX_VEHICLES] = false;
new bool: isMechanicVeh[MAX_VEHICLES] = false;
new bool: isFuelComapnyVeh[MAX_VEHICLES] = false;
new bool: isBusVeh[MAX_VEHICLES] = false;
new bool: isAutoSchoolVeh[MAX_VEHICLES] = false;
new bool: isRobberyVeh[MAX_VEHICLES] = false;
new bool: isDealerVeh[MAX_VEHICLES] = false;
new bool: isBankVeh[MAX_VEHICLES] = false;
new bool: isBusTeleportVeh[MAX_VEHICLES] = false;

new rentVehs[MAX_RENTVEHS];
new bool: isOnFoot[MAX_PLAYERS] = false;
new bool: isLogged[MAX_PLAYERS] = false;
new bool: deliverCarrying[MAX_PLAYERS] = false;
new maxbiz = 1;
new maxhouses = 1;
new maxcarsforbuy = 1;
//new maxPrivateVehID=1;
new housePickup[MAX_HOUSES];
new InteractPickups[MAX_INTERACT_PICKUPS];
new bizPickup[MAX_BIZ];
new Text3D: houseLabel[MAX_HOUSES];
new Text3D: bizLabel[MAX_BIZ];
new radioveh[MAX_VEHICLES] = 1;
//vehicle sell - open
new vehOffererOfferTo[MAX_PLAYERS] = -1;
new vehOfferPrivateVehIndex[MAX_PLAYERS] = -1;
new vehOfferPrivateVehPrice[MAX_PLAYERS];
new vehBuyerBuyFrom[MAX_PLAYERS] = -1;
new vehOfferPrivateVehSlot[MAX_PLAYERS] = -1;
//vehicle sell - close
//house sell - open
new houseOffererOfferTo[MAX_PLAYERS] = -1;
new houseOfferPrice[MAX_PLAYERS];
new houseBuyerBuyFrom[MAX_PLAYERS] = -1;
//house sell - close
//biz sell - open
new bizOffererOfferTo[MAX_PLAYERS] = -1;
new bizOfferPrice[MAX_PLAYERS];
new bizBuyerBuyFrom[MAX_PLAYERS] = -1;
//biz sell - close
new TeamInvite[MAX_PLAYERS] = -1;
new DocsOffer[MAX_PLAYERS] = -1;
new DrugsOffer[MAX_PLAYERS] = -1;
new DrugsBuying[MAX_PLAYERS] = -1;
new phoneConnected[MAX_PLAYERS] = -1;
new RepairInvite[MAX_PLAYERS] = -1;
new Float: tempHouseFurRX[MAX_PLAYERS];
new Float: tempHouseFurRY[MAX_PLAYERS];
new Float: tempHouseFurRZ[MAX_PLAYERS];
new Float: tempHouseFurX[MAX_PLAYERS];
new Float: tempHouseFurY[MAX_PLAYERS];
new Float: tempHouseFurZ[MAX_PLAYERS];
new bool: isTeachingDriving[MAX_PLAYERS] = false;
new JobInvite[MAX_PLAYERS] = -1;
new bool: cuffed[MAX_PLAYERS] = false;
new bool: scripterMode[MAX_PLAYERS] = false;
new bool: gpsOn[MAX_PLAYERS] = false;
new bool: firstTryGetDocuments[MAX_PLAYERS] = false;
new houseUsedFurSlot[MAX_PLAYERS];
new tempGender[MAX_PLAYERS];
new ringing[MAX_PLAYERS] = -1;
new serverrestarttimer = 0;
new serverGmxTimer = 0;
new objectID[MAX_PLAYERS] = -1;
new houseObjectPrice[MAX_PLAYERS];
new bool: isGraffitiObject[MAX_GRAFFITI];
new bool: isSirenObject[MAX_SIRRENS] = false;
new bool: isAddVehObject[MAX_ADD_VEH_OBJECTS] = false;
new bool: isBarricadeObject[MAX_BARRICADES] = false;
new graffitiSpecialIndex[MAX_GRAFFITI];
new lottoNumber[MAX_PLAYERS];
new phoneTaling[MAX_PLAYERS] = -1;
new lawCount;
new serverWeather = 8;
new Weathers[MAX_WEATHERS]={2,3,4,5,6,7,8,9,10,12,13,14,15,16,18,20};
new WeatherChance[MAX_WEATHERS]={12,12,6,10,8,11,1,1,12,8,12,12,11,1,12,2};
new turfFinishTimer;
new Text3D: DeathPlayerLabel[MAX_PLAYERS];
new Text3D: PlayerLabel[MAX_PLAYERS];
new bitcoinGetedPrice[MAX_PLAYERS];
new bool: gateopening[MAX_PLAYERS] = false;
new bitcoinGetedAmmount[MAX_PLAYERS];
new bitcoinSellMarketPrice[MAX_PLAYERS];
new bitcoinSellMarketAmmount[MAX_PLAYERS];
new buyVehFromStoreIndex[MAX_PLAYERS];
new bool: inEvent[MAX_PLAYERS];
new bool: OOCStatus = true;
new bool: SocStatus = true;
new lottoReward = 12000;
new joinAudioStream[][] = {
		{
		"https://od.lk/s/ODNfMjc3OTEzMjlf/Gotye%20-%20Somebody%20That%20I%20Used%20To%20Know%20-%20short%20version.mp3" },
	{
		"https://od.lk/s/ODNfMjc3OTEzMjZf/The%20Weeknd%20-%20Starboy%20%28Lyrics%29%20ft.%20Daft%20Punk.mp3" },
	{
		"https://od.lk/s/ODNfMjc3OTEzMzJf/Wiz%20Khalifa%20Black%20and%20Yellow%20%28short%20version%29.mp3" }
};

new radioAudioStream[][] = {
		{
		"www.google.com" },
	{
		"http://live.btvradio.bg/njoy.mp3.m3u" },
	{
		"http://193.108.24.21:8000/fresh.m3u" }
};

new radioAudioStreamNames[][] = {
		{
		"OFF" },
	{
		"NJOY" },
	{
		"FRESH" }
};

new Float:antiDmZone[29][3]=
{
	{2261.4915,375.8521,3001.7078},//мэрия
	{2056.3030,281.4446,1501.0859},//аш
	{2587.1738,-1236.9465,1212.7019},//gz
	{1994.0892,1018.3045,994.8906}, // казино
	{1969.7126,212.1564,1501.0859},//больницы
	{1479.1215,-1732.8431,13.3828},//площадь мэрии
	{1789.8708,-1897.3647,13.3965},//uniti
	{191.0939,-108.1999,1.5488},//derevna
	//{-894.7452,-1109.8170,99.3491},//строитель тунеля
	{1148.7523,-1755.5510,13.6270},//второй спавн
	{1595.0094,1825.6066,10.8203},
	{-72.6627,30.2661,3.1172},
	{1202.4354,-1330.0955,13.3984},
	{-1987.1405,137.7043,27.5391},
	{-2031.1965,-91.2403,35.3181},
	{-396.4293,2228.1255,1801.0859},
	{2345.2698,-672.9108,1055.4230},
	{-2123.6548,-854.3079,32.0939},
	{1169.0743,-613.4951,1105.0439},
	{289.2448,-39.2696,1001.5156},
	{-1877.8267,-860.8943,32.0234},
	{-1823.1771,1310.2319,19.2692},
	{2213.2300,1819.5566,10.8203},
	{886.4291,1354.4744,1501.1010}, // тюрьмы
	{607.9506,-1878.9177,4.1557}, // пляж лс
	{376.8715,-1826.6704,7.8359}, // стройка отеля
	{1154.1002, -1768.0070, 16.5938},
	{306.2861, -1849.8082, 3.3329},
	{1760.9598, -1901.4241, 13.5643},
	{1716.7551, -1895.5365, 13.5661}

};

new BIZPICKUP[26];
new FOODPICKUP[4];
new lspdGateDoor;
new lspdGateDoorTimer;
new lspdGate;
new lspdGateTimer;
new lspdPort;
new armyLsPort1;
new armyLsPort2;
new armyLvPort1;
new armyLvPort2;
new lvApartmentsElevator;
new lspdPortTimer;
new armyLsPort1Timer;
new armyLsPort2Timer;
new armyLvPort1Timer;
new armyLvPort2Timer;
new robberyTime;
new Text3D: Label_Elevator;
new bool: startedRobbery;
new robberyTimeToRob;
new robberyRobberID = -1;
new bool: isRobber[MAX_PLAYERS] = false;
new bool: isAtmRobber[MAX_PLAYERS] = false;
new atmRobberyGettingMoneyTimer;

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}

	result[index - offset] = EOS;
	return result;
}

IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i]<'0') return 0;
	}

	return 1;
}

ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
	new pos = 0;
	new count;
	while (text[pos] < 0x21)
	{
		if (text[pos] == 0) return INVALID_PLAYER_ID;
		pos++;
	}

	new userid = INVALID_PLAYER_ID;
	if (IsNumeric(text[pos]))
	{
		userid = strval(text[pos]);
		if (userid >= 0 && userid < MAX_PLAYERS)
		{
			if (!IsPlayerConnected(userid))
			{
				userid = INVALID_PLAYER_ID;
			}
			else
			{
				return userid;
			}
		}
	}

	new len = strlen(text[pos]);
	new name[MAX_PLAYER_NAME];
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			GetPlayerName(i, name, sizeof(name));
			if (strcmp(name, text[pos], true, len) == 0)
			{
				if (len == strlen(name))
				{
					return i;
				}
				else
				{
					count++;
					userid = i;
				}
			}
		}
	}

	if (count != 1)
	{
		if (playerid != INVALID_PLAYER_ID)
		{
			if (count)
			{
				SendClientMessage(playerid, 0xFF0000AA, "Multiple users found, please narrow search");
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "No matching user found");
			}
		}

		userid = INVALID_PLAYER_ID;
	}

	return userid;
}

main()
{
	printf("\n·  Сървърът беше пуснат успешно.");
	printf("·  Grand Thef Auto SA:MP - LawLess Roleplay | Bulgaria\n\n");
	printf("·  Copyright (C) 2021-2023, Daniel Miroslavov Andreev");
	printf("·  Всички права са запазени.\n\n");
}

GetPlayerPrivateVehFreeSlot(playerid)
{
	new freeSlot;
	for (new i = 2; i >= 0; i--)
	{
		if (PlayerInfo[playerid][pPrivateVeh][i] == -1)
		{
			freeSlot = i;
		}
	}

	return freeSlot;
}

GetPlayerPrivateVehID(playerid)
{
	new privateVehID = -1;
	for (new i = 0; i < 3; i++)
	{
		new hisVehID = PlayerInfo[playerid][pPrivateVeh][i];
		if (hisVehID != -1)
		{
			new vehicleid = PrivateVehInfo[hisVehID][vVeh];
			if (IsValidVehicle(vehicleid))
			{
				if (GetPlayerVehicleID(playerid) == vehicleid)
				{
					privateVehID = i;
				}
			}
		}
	}

	return privateVehID;
}

IsPlayerInHisPrivateVeh(playerid)
{
	new bool: inCar = false;
	for (new i; i < 3; i++)
	{
		new hisVehID = PlayerInfo[playerid][pPrivateVeh][i];
		if (hisVehID != -1)
		{
			new vehicleid = PrivateVehInfo[hisVehID][vVeh];
			if (IsValidVehicle(vehicleid))
			{
				if (GetPlayerVehicleID(playerid) == vehicleid)
				{
					inCar = true;
				}
			}
		}
	}

	if (inCar == true)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}

forward OpenBarricadeItems(playerid);
public OpenBarricadeItems(playerid)
{
	new items[MAX_BARITEMS];

	for (new i = 0; i < MAX_BARITEMS; i++)
	{
		if (BarricadeItemsInfo[i][barrExists])
		{
			items[i] = BarricadeItemsInfo[i][barrModel];
		}
		else
		{
			items[i] = -1;
		}
	}

	barrItemsSelect[playerid] = 0;
	return ShowModelSelectionMenu(playerid, "Barricades", MODEL_SELECTION_BARITEMS, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1);	//goto
}

forward OpenBuyItems(playerid);
public OpenBuyItems(playerid)
{
	new items[MAX_BUYITEMS], price[MAX_BUYITEMS];

	for (new i = 0; i < MAX_BUYITEMS; i++)
	{
		if (BuyItemsInfo[i][buyiExists])
		{
			items[i] = BuyItemsInfo[i][buyiModel];
			price[i] = BuyItemsInfo[i][buyiPrice];
		}
		else
		{
			items[i] = -1;
			price[i] = -1;
		}
	}

	buyItemsSelect[playerid] = 0;
	return ShowModelSelectionMenu(playerid, "Buy Items", MODEL_SELECTION_BUYITEMS, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1);	//goto
}

forward OpenDropClothes(playerid);
public OpenDropClothes(playerid)
{
	new items[MAX_PLAYER_CLOTHES];

	for (new i = 0; i < MAX_PLAYER_CLOTHES; i++)
	{
		if (PlayerInfo[playerid][pClothes][i] != 0)
		{
			items[i] = PlayerInfo[playerid][pClothes][i];
		}
		else
		{
			items[i] = -1;
		}
	}

	return ShowModelSelectionMenu(playerid, "Drop Clothes", MODEL_SELECTION_DROPCLOTHES, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1);	//goto
}

forward OpenGetClothes(playerid);
public OpenGetClothes(playerid)
{
	new items[MAX_PLAYER_CLOTHES];

	for (new i = 0; i < MAX_PLAYER_CLOTHES; i++)
	{
		if (PlayerInfo[playerid][pClothes][i] != 0)
		{
			items[i] = PlayerInfo[playerid][pClothes][i];
		}
		else
		{
			items[i] = -1;
		}
	}

	return ShowModelSelectionMenu(playerid, "Get Clothes", MODEL_SELECTION_GETCLOTHES, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1);	//goto
}

forward OpenBuyVehAttachments(playerid);
public OpenBuyVehAttachments(playerid)
{
	new items[MAX_BUY_VEHICLE_ATTACHMENTS];

	for (new i = 0; i < MAX_BUY_VEHICLE_ATTACHMENTS; i++)
	{
		if (VehicleBuyAttachmentsInfo[i][vaExists])
		{
			items[i] = VehicleBuyAttachmentsInfo[i][vaModel];
		}
		else
		{
			items[i] = -1;
		}
	}

	return ShowModelSelectionMenu(playerid, "Buy Attachments", MODEL_SELECTION_BUYVEHICLEATTACHMENTS, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1);	//goto
}

forward OpenBuyClothes(playerid);
public OpenBuyClothes(playerid)
{
	new items[MAX_BUYCLOTHES], price[MAX_BUYCLOTHES];

	for (new i = 0; i < MAX_BUYCLOTHES; i++)
	{
		if (BuyClothesInfo[playerid] [i][buycExists])
		{
			items[i] = BuyClothesInfo[playerid] [i][buycModel];
			price[i] = BuyClothesInfo[playerid] [i][buycPrice];
		}
		else
		{
			items[i] = -1;
			price[i] = -1;
		}
	}

	buyClothesSelect[playerid] = 0;
	return ShowModelSelectionMenu(playerid, "Buy Clothes", MODEL_SELECTION_BUYCLOTHES, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1);	//goto
}

forward OpenInventory(playerid);
public OpenInventory(playerid)
{
	new items[MAX_INVENTORY], amounts[MAX_INVENTORY];

	for (new i = 0; i < PlayerInfo[playerid][pInvCapacity]; i++)
	{
		if (InventoryInfo[playerid] [i][invExists])
		{
			items[i] = InventoryInfo[playerid] [i][invModel];
			amounts[i] = InventoryInfo[playerid] [i][invQuantity];
		}
		else
		{
			items[i] = -1;
			amounts[i] = -1;
		}
	}

	inventorySelect[playerid] = 0;
	return ShowModelSelectionMenu(playerid, "Inventory", MODEL_SELECTION_INVENTORY, items, sizeof(items), 0.0, 0.0, 0.0, 1.0, -1, true, amounts);
}

AntiDm(playerid,weaponid)
{
	if(weaponid!=43 && GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_DRINK_SPRUNK &&  GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_DRINK_WINE && GetPlayerSpecialAction(playerid)!= SPECIAL_ACTION_SMOKE_CIGGY && GetPlayerSpecialAction(playerid)!=SPECIAL_ACTION_DRINK_BEER)
	{
		if(!IsPlayerLaw(playerid))
		{
			for(new i; i<sizeof(antiDmZone); i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 55.0, antiDmZone[i][0],antiDmZone[i][1],antiDmZone[i][2]))
				{
					if (PlayerTimerInfo[playerid][ptRevieveTimer] == 0)
					{
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFFFF}Anti Deathmatch:", "{FFFFFF}Не е позволено да нападате без причина {ff0000}(Deathmatch) {ffffff}в сървъра!", "Затвори", "");
						ApplyAnimation(playerid,"FAT","IDLE_tired", 4.1, 0, 0, 0, 1, 2300);
						return 2;
					}
				}
			}
		}
	}
	return 1;
}

stock IsPlayerLaw(playerid)
{
	if(PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD)
	{
		return true;
	}
	if(PlayerInfo[playerid][pFaction] == FACTION_LV_ARMY || PlayerInfo[playerid][pFaction] == FACTION_LS_ARMY)
	{
		return true;
	}
	if(PlayerInfo[playerid][pFaction] == FACTION_FBI)
	{
		return true;
	}
	return false;
}

stock SetWeatherForPlayers()
{
	serverWeather=random(MAX_WEATHERS);
	SetWeather(Weathers[serverWeather]);
}

stock EncryptPassword(password[])
{
	new aux_password[500];
	new encrypted_password2[500];
	new final_encryption[500];
	for (new i = 0; i < (strlen(password) *2); i++)
	{
		aux_password[i] = password[i] + 7;
		encrypted_password2[2 *i + 1] = aux_password[i];
		encrypted_password2[2 *i] = i + 189;
		final_encryption[i] = encrypted_password2[i];
	}

	return final_encryption;
}

stock IsPlayerInVehicleWithoutBelt(playerid)
{
	if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 481 &&
		GetVehicleModel(GetPlayerVehicleID(playerid)) != 509 &&
		GetVehicleModel(GetPlayerVehicleID(playerid)) != 510 &&
		GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
	{
		return true;
	}

	return false;
}

stock PlayerHasWeapon(playerid, weaponid)
{
	new weapon, ammo;

	for (new i = 0; i < 13; i++)
	{
		if (PlayerData[playerid][pWeapon][i] == weaponid)
		{
			GetPlayerWeaponData(playerid, i, weapon, ammo);

			if (weapon == weaponid && ammo > 0) return 1;
		}
	}
	return 0;
}

stock BarricadeItems_GetFreeID()
{
	for (new i = 0; i < MAX_BARITEMS; i++)
	{
		if (!BarricadeItemsInfo[i][barrExists])
			return i;
	}

	return -1;
}

stock BuyItems_GetFreeID()
{
	for (new i = 0; i < MAX_BUYITEMS; i++)
	{
		if (!BuyItemsInfo[i][buyiExists])
			return i;
	}

	return -1;
}

stock BuyVehicleAttachment_GetFreeID()
{
	for (new i = 0; i < MAX_BUY_VEHICLE_ATTACHMENTS; i++)
	{
		if (!VehicleBuyAttachmentsInfo[i][vaExists])
			return i;
	}

	return -1;
}

stock BuyClothes_GetFreeID(playerid)
{
	for (new i = 0; i < MAX_BUYCLOTHES; i++)
	{
		if (!BuyClothesInfo[playerid] [i][buycExists])
			return i;
	}

	return -1;
}

stock Inventory_GetFreeID(playerid)
{
	for (new i = 0; i < MAX_INVENTORY; i++)
	{
		if (!InventoryInfo[playerid] [i][invExists])
			return i;
	}

	return -1;
}

stock InventoryItemsCount(playerid)
{
	new count;
	for (new i = 0; i != MAX_INVENTORY; i++)
	{
		if (InventoryInfo[playerid] [i][invExists])
		{
			count++;
		}
	}
	return count;
}

stock Inventory_GetItemID(playerid, item[])
{
	for (new i = 0; i < MAX_INVENTORY; i++)
	{
		if (!InventoryInfo[playerid] [i][invExists])
			continue;

		if (!strcmp(InventoryInfo[playerid] [i][invItem], item)) return i;
	}

	return -1;
}

IsWeaponModel(model)
{
	static
	const g_aWeaponModels[] = { 0, 331, 333, 334, 335, 336, 337, 338, 339, 341, 321, 322, 323, 324,
		325, 326, 342, 343, 344, 0, 0, 0, 346, 347, 348, 349, 350, 351, 352,
		353, 355, 356, 372, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366,
		367, 368, 368, 371
	};

	for (new i = 0; i < sizeof(g_aWeaponModels); i++)
	{
		if (g_aWeaponModels[i] == model)
		{
			return 1;
		}
	}
	return 0;
}

PickupItem(playerid, itemid)
{
	if (itemid != -1 && DroppedItems[itemid][droppedModel])
	{
		new id = Inventory_Add(playerid, DroppedItems[itemid][droppedItem], DroppedItems[itemid][droppedModel], DroppedItems[itemid][droppedQuantity]);
		if (id == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямате място в инвентара си");
		new itemName[70];
		format(itemName, 70, DroppedItems[itemid][droppedItem]);
		if (strcmp(itemName, "GPS Устройство", true) == 0)
		{
			if (PlayerInfo[playerid][pGPS] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате този предмет в инвентара си.");
			PlayerInfo[playerid][pGPS] = 1;
		}

		if (strcmp(itemName, "Телефон", true) == 0)
		{
			if (PlayerInfo[playerid][pPhone] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате този предмет в инвентара си.");
			PlayerInfo[playerid][pPhone] = 1;
			PlayerInfo[playerid][pPhoneStatusOFF] = 0;
		}

		Item_Delete(itemid);
		new string256[256];
		SendClientMessage(playerid, COLOR_LIGHTRED2, "[Инвентар] {ffffff}Вие взехте предмет от земята.");
	}

	return 1;
}

stock Inventory_Count(playerid, item[])
{
	new itemid = Inventory_GetItemID(playerid, item);

	if (itemid != -1)
		return InventoryInfo[playerid] [itemid][invQuantity];

	return 0;
}

Item_Delete(itemid)
{
	static
	query[64];

	if (itemid != -1 && DroppedItems[itemid][droppedModel])
	{
		DroppedItems[itemid][droppedModel] = 0;
		DroppedItems[itemid][droppedQuantity] = 0;
		DroppedItems[itemid][droppedPos][0] = 0.0;
		DroppedItems[itemid][droppedPos][1] = 0.0;
		DroppedItems[itemid][droppedPos][2] = 0.0;
		DroppedItems[itemid][droppedInt] = 0;
		DroppedItems[itemid][droppedWorld] = 0;

		DestroyDynamicObject(DroppedItems[itemid][droppedObject]);
		DestroyDynamic3DTextLabel(DroppedItems[itemid][droppedText3D]);
	}

	return 1;
}

DropItem(item[], player[], model, quantity, Float: x, Float: y, Float: z, interior, world, weaponid = 0, ammo = 0)
{
	for (new i = 0; i != MAX_DROPPED_ITEMS; i++)
	{
		if (!DroppedItems[i][droppedModel])
		{
			format(DroppedItems[i][droppedItem], 32, item);
			format(DroppedItems[i][droppedPlayer], 24, player);

			DroppedItems[i][droppedModel] = model;
			DroppedItems[i][droppedQuantity] = quantity;
			DroppedItems[i][droppedWeapon] = weaponid;
			DroppedItems[i][droppedAmmo] = ammo;
			DroppedItems[i][droppedPos][0] = x;
			DroppedItems[i][droppedPos][1] = y;
			DroppedItems[i][droppedPos][2] = z;

			DroppedItems[i][droppedInt] = interior;
			DroppedItems[i][droppedWorld] = world;

			if (IsWeaponModel(model))
			{
				DroppedItems[i][droppedObject] = CreateDynamicObject(model, x, y, z, 93.7, 120.0, 120.0, world, interior);
			}
			else
			{
				DroppedItems[i][droppedObject] = CreateDynamicObject(model, x, y, z, 0.0, 0.0, 0.0, world, interior);
			}

			new string3DText[256];
			format(string3DText, 256, "%s: %d бр.\nНатисни Y", item, quantity);
			DroppedItems[i][droppedText3D] = CreateDynamic3DTextLabel(string3DText, COLOR_CYAN, x, y, z, 3.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, world, interior);
			return i;
		}
	}
	return -1;
}

Item_Nearest(playerid)
{
	for (new i = 0; i != MAX_DROPPED_ITEMS; i++)
	{
		if (DroppedItems[i][droppedModel] && IsPlayerInRangeOfPoint(playerid, 1.5, DroppedItems[i][droppedPos][0], DroppedItems[i][droppedPos][1], DroppedItems[i][droppedPos][2]))
		{
			if (GetPlayerInterior(playerid) == DroppedItems[i][droppedInt] && GetPlayerVirtualWorld(playerid) == DroppedItems[i][droppedWorld])
				return i;
		}
	}
	return -1;
}

DropPlayerItem(playerid, itemid, quantity = 1)
{
	if (itemid == -1 || !InventoryInfo[playerid] [itemid][invExists])
		return 0;

	new
	Float: x,
		Float: y,
		Float: z,
		Float: angle,
		string[32];

	format(string, 32, "%s", InventoryInfo[playerid] [itemid][invItem]);

	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, angle);

	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);

	DropItem(string, accountNickname, InventoryInfo[playerid] [itemid][invModel], quantity, x, y, z - 0.9, GetPlayerInterior(playerid), GetPlayerVirtualWorld(playerid));
	format(string, 32, "%s", InventoryInfo[playerid] [itemid][invItem]);
	Inventory_Remove(playerid, string, quantity);

	ApplyAnimationWithCondition(playerid, "GRENADE", "WEAPON_throwu", 4.1, 0, 0, 0, 0, 0, 1);

	return 1;
}

stock Inventory_Remove(playerid, item[], quantity = 1)
{
	new itemid = Inventory_GetItemID(playerid, item), string[128];

	if (itemid != -1)
	{
		if (InventoryInfo[playerid] [itemid][invQuantity] > 0)
		{
			InventoryInfo[playerid] [itemid][invQuantity] -= quantity;
		}

		if (quantity == -1 || InventoryInfo[playerid] [itemid][invQuantity] < 1)
		{
			InventoryInfo[playerid] [itemid][invExists] = false;
			InventoryInfo[playerid] [itemid][invModel] = 0;
			InventoryInfo[playerid] [itemid][invQuantity] = 0;
		}

		return 1;
	}

	return 0;
}

stock BuyVehicleAttachment_Add(item[], model, price)
{
	new itemid = BuyVehicleAttachment_GetFreeID();
	VehicleBuyAttachmentsInfo[itemid][vaExists] = true;
	VehicleBuyAttachmentsInfo[itemid][vaModel] = model;
	VehicleBuyAttachmentsInfo[itemid][vaPrice] = price;
	format(VehicleBuyAttachmentsInfo[itemid][vaItem], 32, item);
}

stock LoadBuyVehicleAttachments()
{
	BuyVehicleAttachment_Add("Wheel", 1083, 530);
	BuyVehicleAttachment_Add("Wheel", 1084, 630);
	BuyVehicleAttachment_Add("Wheel", 1085, 730);
	BuyVehicleAttachment_Add("Little Lamp", 3785, 730);
}

stock BuyClothes_Add(playerid, item[], model, price)
{
	new itemid = BuyClothes_GetFreeID(playerid);
	BuyClothesInfo[playerid] [itemid][buycExists] = true;
	BuyClothesInfo[playerid] [itemid][buycModel] = model;
	BuyClothesInfo[playerid] [itemid][buycPrice] = price;
	format(BuyClothesInfo[playerid] [itemid][buycItem], 32, item);
}

stock RemovePlayerAllBuyClothes(playerid)
{
	new maxClothesId = BuyClothes_GetFreeID(playerid);
	for (new itemid = 0; itemid < maxClothesId; itemid++)
	{
		BuyClothesInfo[playerid] [itemid][buycExists] = false;
	}
}

stock LoadPlayerBuyClothes(playerid)
{
	RemovePlayerAllBuyClothes(playerid);
	if (PlayerInfo[playerid][pGender] == 0)
	{
		BuyClothes_Add(playerid, "Skin", 3, 1200);
		BuyClothes_Add(playerid, "Skin", 4, 3300);
		BuyClothes_Add(playerid, "Skin", 5, 3300);
		BuyClothes_Add(playerid, "Skin", 6, 4300);
		BuyClothes_Add(playerid, "Skin", 7, 5300);
		BuyClothes_Add(playerid, "Skin", 17, 5300);
		BuyClothes_Add(playerid, "Skin", 23, 5300);
		BuyClothes_Add(playerid, "Skin", 28, 5300);
		BuyClothes_Add(playerid, "Skin", 29, 6300);
		BuyClothes_Add(playerid, "Skin", 30, 6300);
		BuyClothes_Add(playerid, "Skin", 46, 6300);
		BuyClothes_Add(playerid, "Skin", 47, 6300);
		BuyClothes_Add(playerid, "Skin", 73, 7300);
		BuyClothes_Add(playerid, "Skin", 83, 7300);
		BuyClothes_Add(playerid, "Skin", 84, 7300);
		BuyClothes_Add(playerid, "Skin", 221, 8300);
		BuyClothes_Add(playerid, "Skin", 240, 8300);
	}

	if (PlayerInfo[playerid][pGender] == 1)
	{
		BuyClothes_Add(playerid, "Skin", 91, 1200);
		BuyClothes_Add(playerid, "Skin", 93, 3300);
		BuyClothes_Add(playerid, "Skin", 148, 4300);
		BuyClothes_Add(playerid, "Skin", 150, 5300);
		BuyClothes_Add(playerid, "Skin", 169, 6300);
	}
}

stock BarricadeItems_Add(item[], model)
{
	new itemid = BarricadeItems_GetFreeID();
	BarricadeItemsInfo[itemid][barrExists] = true;
	BarricadeItemsInfo[itemid][barrModel] = model;
	format(BarricadeItemsInfo[itemid][barrItem], 32, item);
}

stock BuyItems_Add(item[], model, price)
{
	new itemid = BuyItems_GetFreeID();
	BuyItemsInfo[itemid][buyiExists] = true;
	BuyItemsInfo[itemid][buyiModel] = model;
	BuyItemsInfo[itemid][buyiPrice] = price;
	format(BuyItemsInfo[itemid][buyiItem], 32, item);
}

stock LoadBarricadeItems()
{
	BarricadeItems_Add("Barrier", 1282);
	BarricadeItems_Add("Barrier", 1427);
	BarricadeItems_Add("Barrier", 1949);
	BarricadeItems_Add("Barrier", 1425);
	BarricadeItems_Add("Barrier", 1422);
	BarricadeItems_Add("Barrier", 3091);
	BarricadeItems_Add("Barrier", 1423);
	BarricadeItems_Add("Barrier", 1428);
	BarricadeItems_Add("Barrier", 1459);
}

stock LoadBuyItems()
{
	BuyItems_Add("Hoody Hat", 19067, 20);
	BuyItems_Add("Blue Hat", 18927, 20);
	BuyItems_Add("Black Hat", 18639, 20);
	BuyItems_Add("Police Cap", 19521, 20);
	BuyItems_Add("Police Cap", 18636, 20);
	BuyItems_Add("Police Hat", 19161, 20);	//goto
	BuyItems_Add("Golden Watch", 19042, 20);
	BuyItems_Add("Golden Watch", 19039, 20);
	BuyItems_Add("Silver Watch", 19043, 20);
	BuyItems_Add("Black Glasses", 19138, 20);
	BuyItems_Add("Purple Glasses", 19024, 20);
	BuyItems_Add("Blue Glasses", 19023, 20);
	BuyItems_Add("Police Glasses", 19140, 20);
	BuyItems_Add("White Scarf", 18919, 20);
	BuyItems_Add("Green Hockey Mask", 19038, 20);
	BuyItems_Add("Black Mask", 19163, 20);
}

stock Inventory_Add(playerid, item[], model, quantity = 1)
{
	new itemid = Inventory_GetFreeID(playerid);
	new getItemId = Inventory_GetItemID(playerid, item);
	if (getItemId == -1)
	{
		InventoryInfo[playerid] [itemid][invExists] = true;
		InventoryInfo[playerid] [itemid][invModel] = model;
		InventoryInfo[playerid] [itemid][invQuantity] = quantity;
		format(InventoryInfo[playerid] [itemid][invItem], 32, item);
	}
	else
	{
		InventoryInfo[playerid] [getItemId][invQuantity] += quantity;
	}

	return 1;
}

stock DidPlayerVote(playerid)
{
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	for (new i; i < voterCount; i++)
	{
		if (strcmp(VoteInfo[i][voterName], accountNickname, true) == 0)
		{
			return true;
		}
	}

	return false;
}

stock AddVoterInInfo(playerid)
{
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(VoteInfo[voterCount][voterName], 60, "%s", accountNickname);

	voterCount += 1;
}

stock ClearVotersInfo()
{
	for (new i; i < voterCount; i++)
	{
		format(VoteInfo[voterCount][voterName], 60, "");
	}

	voterCount = 0;
}

stock GetVehicleName(vehicleid)
{
	new String[256];
	format(String, sizeof(String), "%s", VehicleNames[GetVehicleModel(vehicleid) - 400]);
	return String;
}

stock QuitRobbery(playerid)
{
	RestartPlayerSkin(playerid);
	inNormalRobbery[playerid] = false;
	RemovePlayerAttachedObject(playerid, 2);
	normalRobberyMembers -= 1;
}

stock StopAtmRobbery()
{
	startedAtmRob = false;
	isAtmRobber[atmRobberID] = false;
	atmRobberyGettingMoneyTimer = 0;
	atmRobberyCollectTimeCheck = 0;
	RemovePlayerAttachedObject(atmRobberID, 2);
	atmRobberID = -1;
	atmRobberyWaitingTimer = 15 * 60;
}

stock StopRobbery()
{
	robberyTimerToStart = 0;
	robberyGettingMoneyTimer = 0;
	robberyCollectTimeCheck = 0;
	normalRobberyStartedGettingCash = false;
	robberyGettingMoneyTimer = 0;
	startedNormalRobbery = false;
	startedNormalRobGettingMoney = false;
	normalRobberyMembers = 0;
	normalRobberyWaitingTimer = 15 * 60;
	if (normalRobberyLeaderID != -1)
	{
		isNormalRobberyLeaderPlayer[normalRobberyLeaderID] = false;
		normalRobberyLeaderID = -1;
	}

	for (new i; i < MAX_PLAYERS; i++)
	{
		if (inNormalRobbery[i] == true)
		{
			QuitRobbery(i);
		}
	}
}

stock CollectAtmRobberyCash()
{
	atmRobberyMoney += 22;
	new stringrobbery[560];
	format(stringrobbery, 560, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~STOLEN CASH:~n~~g~$%d", atmRobberyMoney);
	GameTextForPlayer(atmRobberID, stringrobbery, 3000, 3);
}

stock CollectRobberyCash()
{
	normalRobberyMoney += 12;
	new stringrobbery[560];
	format(stringrobbery, 560, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~STOLEN CASH:~n~~g~$%d", normalRobberyMoney);
	for (new allRobbers; allRobbers < MAX_PLAYERS; allRobbers++)
	{
		if (inNormalRobbery[allRobbers] == true)
		{
			GameTextForPlayer(allRobbers, stringrobbery, 3000, 3);
		}
	}
}

stock IsPlayerInRangeOfGraffit(playerid, graffit)
{
	new Float: grafX = GraffitiInfo[graffit][gX];
	new Float: grafY = GraffitiInfo[graffit][gY];
	new Float: grafZ = GraffitiInfo[graffit][gZ];
	if (IsPlayerInRangeOfPoint(playerid, 10.0, grafX, grafY, grafZ))
	{
		return 1;
	}

	return 0;
}

/*
public IsPlayerInTurf(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
    new Float:X3,Float:Y3,Float:Z3;
    GetPlayerPos(playerid, X3, Y3, Z3);
    if((X3 <= max_x && X3 >= min_x) && (Y3 <= max_y && Y3 >= min_y)) return 1;
    return 0;
}

*/
stock IsInLasVenturasSquare(playerid)
{
	new Float: X3, Float: Y3, Float: Z3;
	GetPlayerPos(playerid, X3, Y3, Z3);
	if ((X3 <= LV_LOCATION_SQUARE_MaxX && X3 >= LV_LOCATION_SQUARE_MinX) && (Y3 <= LV_LOCATION_SQUARE_MaxY && Y3 >= LV_LOCATION_SQUARE_MinY))
	{
		return true;
	}

	return false;
}

stock MaxAllowedSpeedArea(playerid)
{
	new Float: X3, Float: Y3, Float: Z3;
	GetPlayerPos(playerid, X3, Y3, Z3);
	for (new i; i < MAX_SPEEDAREAS; i++)
	{
		if ((X3 <= MaxSpeedAreaInfo[i][zMaxX] && X3 >= MaxSpeedAreaInfo[i][zMinX]) && (Y3 <= MaxSpeedAreaInfo[i][zMaxY] && Y3 >= MaxSpeedAreaInfo[i][zMinY]))
		{
			return i;
		}
	}

	return -1;
}

stock FuelStationClose(playerid)
{
	if (IsPlayerInRangeOfPoint(playerid, 10, 1004.0327, -937.5370, 42.3281))
	{
		return 0;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 1942.3719, -1772.8666, 13.6406))
	{
		return 1;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, -1606.7223, -2713.3562, 48.5335))
	{
		return 2;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, -2026.7813, 156.5509, 29.0391))
	{
		return 3;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, -2243.8149, -2559.8899, 31.9219))
	{
		return 4;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, -1676.2601, 413.5443, 7.1797))
	{
		return 5;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 2201.8296, 2475.1350, 10.8203))
	{
		return 6;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 615.3391, 1690.0454, 6.9922))
	{
		return 7;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, -1328.2731, 2677.5278, 50.0625))
	{
		return 8;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 70.3842, 1219.0177, 18.8116))
	{
		return 9;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 2113.3835, 919.5655, 10.8203))
	{
		return 10;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 2641.0115, 1106.6252, 10.8203))
	{
		return 11;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 2146.7964, 2747.8115, 10.8203))
	{
		return 12;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 1595.7935, 2199.5996, 10.8203))
	{
		return 13;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, -1471.1836, 1863.7598, 32.6328))
	{
		return 14;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 655.7673, -565.0798, 16.3359))
	{
		return 15;
	}

	if (IsPlayerInRangeOfPoint(playerid, 10, 1381.8230, 459.1453, 20.3452))
	{
		return 16;
	}
}

MechanicCarmodDialog(playerid)
{
	ShowPlayerDialog(playerid, DIALOG_TUNEMECHANIC, DIALOG_STYLE_LIST, "Изберете какво ще тунинговате", "Nitro\nCar Color\nWheels\nStereo\nHydraulics\nCar Components", "Select", "Cancel");
	return 1;
}

RegularCarDialog(playerid)
{
	//workingOnVeh[playerid]
	new vehid = workingOnVeh[playerid];
	new vehmd = GetVehicleModel(vehid);
	new string[128];
	if (vehmd == 401 || vehmd == 496 || vehmd == 518 || vehmd == 540 || vehmd == 546 || vehmd == 589)
	{
		string = "Spoiler\nHood\nRoof\nVents\nSideskirt\nLights\n{FF0000}Back";
	}
	else if (vehmd == 549)
	{
		string = "Spoiler\nHood\nVents\nSideskirt\nLights\n{FF0000}Back";
	}
	else if (vehmd == 550)
	{
		string = "Spoiler\nHood\nRoof\nVents\nLights\n{FF0000}Back";
	}
	else if (vehmd == 585 || vehmd == 603)
	{
		string = "Spoiler\nRoof\nVents\nSideskirt\nLights\n{FF0000}Back";
	}
	else if (vehmd == 410 || vehmd == 436)
	{
		string = "Spoiler\nRoof\nSideskirt\nLights\n{FF0000}Back";
	}
	else if (vehmd == 439 || vehmd == 458)
	{
		string = "Spoiler\nVents\nSideskirt\nLights\n{FF0000}Back";
	}
	else if (vehmd == 551 || vehmd == 492 || vehmd == 529)
	{
		string = "Spoiler\nHood\nRoof\nSideskirt\n{FF0000}Back";
	}
	else if (vehmd == 489 || vehmd == 505)
	{
		string = "Spoiler\nHood\nRoof\nLights\n{FF0000}Back";
	}
	else if (vehmd == 516)
	{
		string = "Spoiler\nHood\nSideskirt\n{FF0000}Back";
	}
	else if (vehmd == 491 || vehmd == 517)
	{
		string = "Spoiler\nVents\nSideskirt\n{FF0000}Back";
	}
	else if (vehmd == 418 || vehmd == 527 || vehmd == 580)
	{
		string = "Spoiler\nRoof\nSideskirt\n{FF0000}Back";
	}
	else if (vehmd == 420 || vehmd == 587)
	{
		string = "Spoiler\nHood\n{FF0000}Back";
	}
	else if (vehmd == 547)
	{
		string = "Spoiler\nVents\n{FF0000}Back";
	}
	else if (vehmd == 415)
	{
		string = "Spoiler\nSideskirt\n{FF0000}Back";
	}

	ShowPlayerDialog(playerid, 1004, DIALOG_STYLE_LIST, "Choose one", string, "Select", "Cancel");
	return 1;
}

stock GMXStart1()
{
	SendClientMessageToAll(COLOR_LIGHTRED2, "[РЕСТАРТ INFO] Понеже сървърът се рестартира, всички играчи ще бъдат KICKED, за да се запаметят");
	SaveServer();
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		PlayerTimerInfo[i][ptKick] = 1;
	}

	serverGmxTimer = 2;
}

stock GMXStart2()
{
	SendRconCommand("gmx");
}

stock UpdateBitcoinPrice(plus)
{
	new string256[256];
	if (plus == 1)
	{
		if (BitcoinInfo[bitBought] % 100 == 0)
		{
			BitcoinInfo[bitPrice] += randomex(12, 23);
		}

		if (BitcoinInfo[bitPrice] >= MAX_BITCOIN_PRICE)
		{
			BitcoinInfo[bitPrice] = MAX_BITCOIN_PRICE;
		}
		else
		{
			format(string256, 256, "[Bitcoin] Цената на биткойн се качи, сега тя е $%d", BitcoinInfo[bitPrice]);
			SendBitcoinCourseMessage(COLOR_BITCOIN, string256);
		}
	}

	if (plus == 0)
	{
		if (BitcoinInfo[bitBought] % 100 == 0)
		{
			BitcoinInfo[bitPrice] -= randomex(12, 23);
		}

		if (BitcoinInfo[bitPrice] <= MIN_BITCOIN_PRICE)
		{
			BitcoinInfo[bitPrice] = MIN_BITCOIN_PRICE;
		}
		else
		{
			format(string256, 256, "[Bitcoin] Цената на биткойн спадна, сега тя е $%d", BitcoinInfo[bitPrice]);
			SendBitcoinCourseMessage(COLOR_BITCOIN, string256);
		}
	}
}

stock IsPlayerInRangeOfAnyVehicle(playerid, Float: Range)
{
	new vehicleID = -1;
	for (new i; i < MAX_VEHICLES; i++)
	{
		if (IsPlayerInRangeOfVehicle(playerid, i, Range))
		{
			vehicleID = i;
		}
	}

	return vehicleID;
}

stock IsPlayerInRangeOfVehicle(playerid, vehicleid, Float: Range)
{
	new Float: Pos[3];
	GetVehiclePos(vehicleid, Pos[0], Pos[1], Pos[2]);
	return IsPlayerInRangeOfPoint(playerid, Range, Pos[0], Pos[1], Pos[2]);
}

stock IsValidPrivateVehID(id)
{
	new privateveh[64];
	format(privateveh, 64, "/PrivateVehs/%d.ini", id);
	if (dini_Exists(privateveh)) return 1;
	return 0;
}

stock ReturnNextUnusedPrivateVehID()
{
	new privateveh[64];
	for (new pv = 1; pv < MAX_PRIVATEVEHS; pv++)
	{
		format(privateveh, 64, "/PrivateVehs/%d.ini", pv);
		if (!dini_Exists(privateveh)) return pv;
	}

	return 0;
}

stock ReturnNextUnusedBizID()
{
	new biz[64];
	for (new b; b < maxbiz + 2; b++)
	{
		format(biz, 64, "/Bizz/%d.ini", b);
		if (!dini_Exists(biz)) return b;
	}

	return true;
}

stock ReturnNextUnusedHouseID()
{
	new house[64];
	for (new h; h < maxhouses + 2; h++)
	{
		format(house, 64, "/Houses/%d.ini", h);
		if (!dini_Exists(house)) return h;
	}

	return true;
}

stock LoadBitcoins()
{
	new bitcoins[64];
	format(bitcoins, 64, "/Bitcoins/Bitcoins.ini");
	if (dini_Exists(bitcoins))
	{
		BitcoinInfo[bitPrice] = dini_Int(bitcoins, "bitPrice");
		BitcoinInfo[bitBought] = dini_Int(bitcoins, "bitBought");
	}

	if (!dini_Exists(bitcoins))
	{
		dini_IntSet(bitcoins, "bitBought", 0);
		dini_IntSet(bitcoins, "bitPrice", 6);
		BitcoinInfo[bitPrice] = 6;
		BitcoinInfo[bitBought] = 0;
	}

	printf("LawLess Roleplay SERVER - System: Bitcoins бяха заредени.");
}

stock LoadAllBiz()
{
	new string256[256];
	for (new alb = 0; alb < maxbiz + 2; alb++)
	{
		new biz[64];
		format(biz, 64, "/Bizz/%d.ini", alb);
		if (dini_Exists(biz))
		{
			maxbiz += 1;
			BizInfo[alb][bX] = dini_Float(biz, "bX");
			BizInfo[alb][bY] = dini_Float(biz, "bY");
			BizInfo[alb][bZ] = dini_Float(biz, "bZ");
			BizInfo[alb][bOwner] = dini_Int(biz, "bOwner");
			BizInfo[alb][bLocked] = dini_Int(biz, "bLocked");
			BizInfo[alb][bPrice] = dini_Int(biz, "bPrice");
			BizInfo[alb][bType] = dini_Int(biz, "bType");
			BizInfo[alb][bPayOut] = dini_Int(biz, "bPayOut");
			BizInfo[alb][bLevel] = dini_Int(biz, "bLevel");
			BizInfo[alb][bStock] = dini_Int(biz, "bStock");
			BizInfo[alb][bItemsNumber] = dini_Int(biz, "bItemsNumber");
			BizInfo[alb][bEarnings] = dini_Int(biz, "bEarnings");
			format(BizInfo[alb][bOwnerName], 256, "%s", dini_Get(biz, "bOwnerName"));
			format(BizInfo[alb][bName], 256, "%s", dini_Get(biz, "bName"));
			bizPickup[alb] = CreateDynamicPickup(1272, 1, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ], 0);
			AddBizLabel(alb);
			bizPickupIndex[bizPickup[alb]] = alb;
			isBizPickup[bizPickup[alb]] = true;
			AddBizIcon(alb);
			AddBizActor(alb);
		}
	}

	printf("LawLess Roleplay SERVER - System: Всички бизнеси бяха заредени.");
}

//UPDATE
stock UpdateBiz3DText(bizid)
{
	new string256[256];
	if (BizInfo[bizid][bOwner] == 0)
	{
		format(string256, 256, "{F2B63D}Бизнесът се продава\n\n{689DF9}%s\n{FFFFFF}Цена: {40BF00}$%d\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n{FFFFFF}Заплащане: {40BF00}$%d\n\n{ffffff}За да влезеш натисни {FF0000}ENTER", BizInfo[bizid][bName], BizInfo[bizid][bPrice], BizInfo[bizid][bLevel], BizInfo[bizid][bPayOut]);
	}
	else
	{
		format(string256, 256, "{689DF9}%s\n{FFFFFF}Притежател: {689DF9}%s\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n{FFFFFF}Заплащане: {40BF00}$%d\n\n{ffffff}За да влезеш натисни {FF0000}ENTER", BizInfo[bizid][bName], BizInfo[bizid][bOwnerName], BizInfo[bizid][bLevel], BizInfo[bizid][bPayOut]);
	}
	UpdateDynamic3DTextLabelText(bizLabel[bizid], COLOR_WHITE, string256);
}

stock UpdateHouse3DText(houseid)
{
	new string256[256];
	if(HouseInfo[houseid][hOwner] == 0)
	{
		format(string256, 256, "{F2B63D}Къщата се продава\n\n{42F23D}%s\n{FFFFFF}Цена: {40BF00}$%d\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n\n{ffffff}За да влезеш натисни {FF0000}ENTER", HouseInfo[houseid][hName], HouseInfo[houseid][hPrice], HouseInfo[houseid][hLevel]);
		UpdateDynamic3DTextLabelText(houseLabel[houseid], COLOR_WHITE, string256);
	}
	else
	{
		format(string256, 256, "{42F23D}%s\n{FFFFFF}Притежател: {689DF9}%s\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n\n{ffffff}За да влезеш натисни {FF0000}ENTER", HouseInfo[houseid][hName], HouseInfo[houseid][hOwnerName], HouseInfo[houseid][hLevel]);
		UpdateDynamic3DTextLabelText(houseLabel[houseid], COLOR_WHITE, string256);
	}
}
//UPDATE

stock AddHouseLabel(houseid)
{
	new string256[256];
	if(HouseInfo[houseid][hOwner] == 0)
	{
		format(string256, 256, "{F2B63D}Къщата се продава\n\n{42F23D}%s\n{FFFFFF}Цена: {40BF00}$%d\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n\n{ffffff}За да влезеш натисни {FF0000}ENTER", HouseInfo[houseid][hName], HouseInfo[houseid][hPrice], HouseInfo[houseid][hLevel]);
		houseLabel[houseid] = CreateDynamic3DTextLabel(string256, COLOR_WHITE, HouseInfo[houseid][hX], HouseInfo[houseid][hY], HouseInfo[houseid][hZ] + 0.3, 15);
	}
	else
	{
		format(string256, 256, "{42F23D}%s\n{FFFFFF}Притежател: {689DF9}%s\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n\n{ffffff}За да влезеш натисни {FF0000}ENTER", HouseInfo[houseid][hName], HouseInfo[houseid][hOwnerName], HouseInfo[houseid][hLevel]);
		houseLabel[houseid] = CreateDynamic3DTextLabel(string256, COLOR_WHITE, HouseInfo[houseid][hX], HouseInfo[houseid][hY], HouseInfo[houseid][hZ] + 0.3, 15);
	}
}

stock AddInteractivePickups()
{
	InteractPickups[0] = CreateDynamicPickup(18631, 1, 385.3795,-1823.1041,7.8359, 0, 0);
	InteractPickups[1] = CreateDynamicPickup(18631, 1, 1726.8059,-1882.9430,13.5637, 0, 0);
}

stock AddInteractiveActors()
{
	InteractiveActor[0] = CreateDynamicActor(295, 385.4027, -1824.1075, 7.8359, 3.4017);
	SetDynamicActorVirtualWorld(InteractiveActor[0], 0);
	ApplyDynamicActorAnimation(InteractiveActor[0], "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
	CreateDynamicMapIconEx(385.4027, -1824.1075, 7.8359, 37, 0, MAPICON_LOCAL, 60.0);
	
	
	InteractiveActor[1] = CreateDynamicActor(17, 1728.1165,-1882.9673,13.5634,88.9520);
	SetDynamicActorVirtualWorld(InteractiveActor[1], 0);
	ApplyDynamicActorAnimation(InteractiveActor[1], "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
	CreateDynamicMapIconEx(1728.1165,-1882.9673,13.5634, 37, 0, MAPICON_LOCAL, 60.0);
}

stock AddBizActor(bizID)
{
	new bizType = BizInfo[bizID][bType];
	new const bizVW = bizID + 500;
	if(bizType == 1)
	{
		BizActors[bizID] = CreateDynamicActor(12, -23.4347,-57.3233,1003.5469,358.2181);
	}
	else if(bizType == 2)
	{
		BizActors[bizID] = CreateDynamicActor(23, 497.6500,-77.4640,998.7651,4.6948);
	}
	else if(bizType == 3)
	{
		BizActors[bizID] = CreateDynamicActor(12, 291.2089,-104.4918,1001.5156,179.8127);
	}
	else if(bizType == 4)
	{
		BizActors[bizID] = CreateDynamicActor(17, -30.3216,-30.6680,1003.5573,4.0031);
	}
	else if(bizType == 5)
	{
		BizActors[bizID] = CreateDynamicActor(17, 206.8955,-127.8072,1003.5078,178.3303);
	}
	else if(bizType == 6)
	{
		BizActors[bizID] = CreateDynamicActor(23, 377.1566,-65.8495,1001.5078,181.8432);
	}
	else if(bizType == 7)
	{
		BizActors[bizID] = CreateDynamicActor(17, -22.5515,-140.3081,1003.5469,4.1816);
	}
	else if(bizType == 8)
	{
		BizActors[bizID] = CreateDynamicActor(11, 203.8476,-41.6685,1001.8047,184.3500);
	}
	else if(bizType == 9)
	{
		BizActors[bizID] = CreateDynamicActor(12, 296.2200,-82.5274,1001.5156,359.7949);
	}
	else if(bizType == 10)
	{
		BizActors[bizID] = CreateDynamicActor(23, 308.2392,-143.0904,999.6016,356.6616);
	}
	else if(bizType == 19)
	{
		BizActors[bizID] = CreateDynamicActor(11, -223.3082,1403.3278,27.7734,93.1691);
	}
	else if(bizType == 20)
	{
		BizActors[bizID] = CreateDynamicActor(17, 369.8087,-4.4917,1001.8589,178.0598);
	}
	else if(bizType == 21)
	{
		BizActors[bizID] = CreateDynamicActor(11, 451.0748,-82.2322,999.5547,177.4332);
	}
	else if(bizType == 22)
	{
		BizActors[bizID] = CreateDynamicActor(12, 1782.2920,1666.7401,-12.8921,180.3748);
	}
	SetDynamicActorVirtualWorld(BizActors[bizID], bizVW);
}

stock AddBizLabel(bizid)
{
	new string256[256];
	if (BizInfo[bizid][bOwner] == 0)
	{
		format(string256, 256, "{F2B63D}Бизнесът се продава\n\n{689DF9}%s\n{FFFFFF}Цена: {40BF00}$%d\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n{FFFFFF}Заплащане: {40BF00}$%d\n\n{ffffff}За да влезеш натисни {FF0000}ENTER", BizInfo[bizid][bName], BizInfo[bizid][bPrice], BizInfo[bizid][bLevel], BizInfo[bizid][bPayOut]);
		bizLabel[bizid] = CreateDynamic3DTextLabel(string256, COLOR_WHITE, BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ] + 0.3, 15);
	}
	else
	{
		format(string256, 256, "{689DF9}%s\n{FFFFFF}Притежател: {689DF9}%s\n{FFFFFF}Изисквано Ниво: {40BF00}%d\n{FFFFFF}Заплащане: {40BF00}$%d\n\n{ffffff}За да влезеш натисни {FF0000}ENTER", BizInfo[bizid][bName], BizInfo[bizid][bOwnerName], BizInfo[bizid][bLevel], BizInfo[bizid][bPayOut]);
		bizLabel[bizid] = CreateDynamic3DTextLabel(string256, COLOR_WHITE, BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ] + 0.3, 15);
	}
}

stock AddHouseIcon(houseid)
{
	if (HouseInfo[houseid][hOwner] == 0)
	{
		CreateDynamicMapIconEx(HouseInfo[houseid][hX], HouseInfo[houseid][hY], HouseInfo[houseid][hZ], 31, 0, MAPICON_LOCAL, 145.0);
	}
}

stock AddBizIcon(bizid)
{
	if (BizInfo[bizid][bType] == 1) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 32, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 2) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 17, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 3) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 6, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 4) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 32, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 5) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 45, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 6) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 29, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 7) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 32, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 8) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 45, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 9) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 6, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 10) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 6, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 11) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 48, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 12) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 32, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 13) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 54, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 14) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 54, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 15) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 12, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 16) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 12, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 17) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 12, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 18) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 12, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 19) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 17, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 20) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 29, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 21) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 17, 0, MAPICON_LOCAL, 125.0);
	if (BizInfo[bizid][bType] == 22) CreateDynamicMapIconEx(BizInfo[bizid][bX], BizInfo[bizid][bY], BizInfo[bizid][bZ], 9, 0, MAPICON_LOCAL, 125.0);
}

stock AutoMessage()
{
	SendClientMessageToAll(COLOR_TYPICAL_BLUE, "Намерете ни в дискрод, Link: Скоро");
	SendClientMessageToAll(COLOR_TYPICAL_BLUE, "За да се свържете със скриптъра на сървъра, потърсете Discord: didkoandreevofficial#5949");
}

stock SaveBitcoins()
{
	new string256[256];
	format(string256, 256, "/Bitcoins/Bitcoins.ini");
	if (dini_Exists(string256))
	{
		dini_IntSet(string256, "bitPrice", BitcoinInfo[bitPrice]);
		dini_IntSet(string256, "bitBought", BitcoinInfo[bitBought]);
	}
}

stock SavePrivateVehicle(vehID)
{
	new string256[256];
	format(string256, 256, "/PrivateVehs/%d.ini", vehID);
	if (!dini_Exists(string256))
	{
		dini_Create(string256);
	}

	dini_Set(string256, "vOwnerName", PrivateVehInfo[vehID][vOwnerName]);
	dini_IntSet(string256, "vOwner", PrivateVehInfo[vehID][vOwner]);
	dini_IntSet(string256, "vVehID", PrivateVehInfo[vehID][vVehID]);
	dini_IntSet(string256, "vVehNeonColor", PrivateVehInfo[vehID][vVehNeonColor]);
	dini_Set(string256, "vVehStickerName1", PrivateVehInfo[vehID][vVehStickerName1]);
	dini_Set(string256, "vVehStickerName2", PrivateVehInfo[vehID][vVehStickerName2]);
	for (new i; i < 2; i++)
	{
		new stickerString[256];
		format(stickerString, 256, "vVehStickerX[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehStickerX][i]);
		format(stickerString, 256, "vVehStickerY[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehStickerY][i]);
		format(stickerString, 256, "vVehStickerZ[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehStickerZ][i]);
	}

	for (new i; i < 20; i++)
	{
		new stickerString[256];
		format(stickerString, 256, "vVehObject[%d]", i);
		dini_IntSet(string256, stickerString, PrivateVehInfo[vehID][vVehObject][i]);
		format(stickerString, 256, "vVehObjectX[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehObjectX][i]);
		format(stickerString, 256, "vVehObjectY[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehObjectY][i]);
		format(stickerString, 256, "vVehObjectZ[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehObjectZ][i]);
		format(stickerString, 256, "vVehObjectRX[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehObjectRX][i]);
		format(stickerString, 256, "vVehObjectRY[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehObjectRY][i]);
		format(stickerString, 256, "vVehObjectRZ[%d]", i);
		dini_FloatSet(string256, stickerString, PrivateVehInfo[vehID][vVehObjectRZ][i]);
	}

	new vehColor1, vehColor2;
	new vehicleid = PrivateVehInfo[vehID][vVeh];
	GetVehicleColor(vehicleid, vehColor1, vehColor2);
	dini_IntSet(string256, "vVehSpoiler", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SPOILER));
	dini_IntSet(string256, "vVehHood", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HOOD));
	dini_IntSet(string256, "vVehRoof", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_ROOF));
	dini_IntSet(string256, "vVehNitro", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_NITRO));
	dini_IntSet(string256, "vVehSideskirt", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SIDESKIRT));
	dini_IntSet(string256, "vVehLights", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_LAMPS));
	dini_IntSet(string256, "vVehExhaust", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_EXHAUST));
	dini_IntSet(string256, "vVehStereo", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_STEREO));
	dini_IntSet(string256, "vVehWheels", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_WHEELS));
	dini_IntSet(string256, "vVehHyd", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HYDRAULICS));
	dini_IntSet(string256, "vVehBumperF", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_FRONT_BUMPER));
	dini_IntSet(string256, "vVehBumperR", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_REAR_BUMPER));
	dini_IntSet(string256, "vVehVentsR", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_RIGHT));
	dini_IntSet(string256, "vVehVentsL", GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_LEFT));
	dini_IntSet(string256, "vVehC1", vehColor1);
	dini_IntSet(string256, "vVehC2", vehColor2);
	dini_IntSet(string256, "vVehPaintJob", PrivateVehInfo[vehID][vVehPaintJob]);
	dini_IntSet(string256, "vParked", PrivateVehInfo[vehID][vParked]);
	dini_IntSet(string256, "vLocked", PrivateVehInfo[vehID][vLocked]);
	dini_FloatSet(string256, "vVehX", PrivateVehInfo[vehID][vVehX]);
	dini_FloatSet(string256, "vVehY", PrivateVehInfo[vehID][vVehY]);
	dini_FloatSet(string256, "vVehZ", PrivateVehInfo[vehID][vVehZ]);
	dini_FloatSet(string256, "vVehA", PrivateVehInfo[vehID][vVehA]);

}

stock SaveBiz(bizID)
{
	new string256[256];
	format(string256, 256, "/Bizz/%d.ini", bizID);
	if (dini_Exists(string256))
	{
		dini_FloatSet(string256, "bX", BizInfo[bizID][bX]);
		dini_FloatSet(string256, "bY", BizInfo[bizID][bY]);
		dini_FloatSet(string256, "bZ", BizInfo[bizID][bZ]);
		dini_IntSet(string256, "bOwner", BizInfo[bizID][bOwner]);
		dini_IntSet(string256, "bLocked", BizInfo[bizID][bLocked]);
		dini_IntSet(string256, "hPrice", BizInfo[bizID][bPrice]);
		dini_IntSet(string256, "bPayOut", BizInfo[bizID][bPayOut]);
		dini_IntSet(string256, "bLevel", BizInfo[bizID][bLevel]);
		dini_IntSet(string256, "bEarnings", BizInfo[bizID][bEarnings]);
		dini_IntSet(string256, "bStock", BizInfo[bizID][bStock]);
		dini_IntSet(string256, "bItemsNumber", BizInfo[bizID][bItemsNumber]);
		dini_IntSet(string256, "bType", BizInfo[bizID][bType]);
		dini_Set(string256, "bName", BizInfo[bizID][bName]);
		dini_Set(string256, "bOwnerName", BizInfo[bizID][bOwnerName]);
	}
}

stock SaveHouse(houseID)
{
	new string256[256];
	format(string256, 256, "/Houses/%d.ini", houseID);
	if (dini_Exists(string256))
	{
		dini_FloatSet(string256, "hX", HouseInfo[houseID][hX]);
		dini_FloatSet(string256, "hY", HouseInfo[houseID][hY]);
		dini_FloatSet(string256, "hZ", HouseInfo[houseID][hZ]);
		dini_IntSet(string256, "hOwner", HouseInfo[houseID][hOwner]);
		dini_IntSet(string256, "hLocked", HouseInfo[houseID][hLocked]);
		dini_IntSet(string256, "hLevel", HouseInfo[houseID][hLevel]);
		dini_IntSet(string256, "hPrice", HouseInfo[houseID][hPrice]);
		dini_IntSet(string256, "hInterior", HouseInfo[houseID][hInterior]);
		dini_Set(string256, "hOwnerName", HouseInfo[houseID][hOwnerName]);
		dini_IntSet(string256, "hVehID", HouseInfo[houseID][hVehID]);
		dini_IntSet(string256, "hVehC1", HouseInfo[houseID][hVehC1]);
		dini_IntSet(string256, "hVehC2", HouseInfo[houseID][hVehC2]);
		dini_FloatSet(string256, "hVehX", HouseInfo[houseID][hVehX]);
		dini_FloatSet(string256, "hVehY", HouseInfo[houseID][hVehY]);
		dini_FloatSet(string256, "hVehZ", HouseInfo[houseID][hVehZ]);
		dini_FloatSet(string256, "hVehA", HouseInfo[houseID][hVehA]);
		dini_Set(string256, "hName", HouseInfo[houseID][hName]);
		new stringSecond[256];
		for (new i; i < 10; i++)
		{
			format(stringSecond, 256, "hFurID[%d]", i);
			dini_IntSet(string256, stringSecond, HouseInfo[houseID][hFurID][i]);
			format(stringSecond, 256, "hFurSlot[%d]", i);
			dini_IntSet(string256, stringSecond, HouseInfo[houseID][hFurSlot][i]);
			format(stringSecond, 256, "hFurX[%d]", i);
			dini_FloatSet(string256, stringSecond, HouseInfo[houseID][hFurX][i]);
			format(stringSecond, 256, "hFurY[%d]", i);
			dini_FloatSet(string256, stringSecond, HouseInfo[houseID][hFurY][i]);
			format(stringSecond, 256, "hFurZ[%d]", i);
			dini_FloatSet(string256, stringSecond, HouseInfo[houseID][hFurZ][i]);
			format(stringSecond, 256, "hFurRX[%d]", i);
			dini_FloatSet(string256, stringSecond, HouseInfo[houseID][hFurRX][i]);
			format(stringSecond, 256, "hFurRY[%d]", i);
			dini_FloatSet(string256, stringSecond, HouseInfo[houseID][hFurRY][i]);
			format(stringSecond, 256, "hFurRZ[%d]", i);
			dini_FloatSet(string256, stringSecond, HouseInfo[houseID][hFurRZ][i]);
		}
	}
}

stock CheckForSpeed(playerid, speed, Float: x, Float: y, Float: z)
{
	if (IsPlayerInRangeOfPoint(playerid, 8.5, x, y, z) && GetVehicleKmh(GetPlayerVehicleID(playerid)) > speed)
	{
		if (PlayerTimerInfo[playerid][ptLastOverSpeed] == 0)
		{
			if (IsPlayerDriver(playerid))
			{
				if (PlayerInfo[playerid][pPoliceDuty] == 0)
				{
					PlayerInfo[playerid][pFine] += 50;
					new string256[256];
					if (PlayerInfo[playerid][pWantedLevel] == 0) GivePlayerWanted(playerid, 1);
					new playerFine = PlayerInfo[playerid][pFine] + (PlayerInfo[playerid][pWantedLevel] *2000);
					format(string256, 256, "[Speed Camera] {ebebeb}Вие превишихте скоростта! Лимитът тук е %d Km/h, а ви бяхте хванат с %d Km/h", speed, GetVehicleKmh(GetPlayerVehicleID(playerid)));
					SendClientMessage(playerid, 0x169CFFFF, string256);
					format(string256, 256, "Всичките ви глоби са $%d! Платете ги в полицията!", playerFine);
					SendClientMessage(playerid, 0xebebebFF, string256);
					format(string256, 256, "{ff0000}[SUSPECT] {0040FF}Вие бяхте заподозрян в престъпление: Превишена скорост! Ниво на издирване: %d", PlayerInfo[playerid][pWantedLevel]);
					SendClientMessage(playerid, COLOR_LIGHTRED, string256);
					format(string256, 256, "* Камерата за скорост премигна, когато %s премина през нея!", RealName(playerid));
					SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
					PlayerTimerInfo[playerid][ptLastOverSpeed] = 30;
				}
			}
		}
	}
}

stock UpdatePlayerWantedStars(playerid)
{
	SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
}

stock GetPlayerAllWanted(playerid)
{
	PlayerInfo[playerid][pWantedLevel] = 0;
	UpdatePlayerWantedStars(playerid);
}

stock GetPlayerRpName(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	for (new i = 0; i < MAX_PLAYER_NAME; i++)
	{
		if (name[i] == '_') name[i] = ' ';
	}

	return name;
}

stock GetAccountNickname(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	return name;
}

stock RealName(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	if (maskOn[playerid] == false)
	{
		GetPlayerName(playerid, name, sizeof(name));
		for (new i = 0; i < MAX_PLAYER_NAME; i++)
		{
			if (name[i] == '_') name[i] = ' ';
		}
	}
	else if (maskOn[playerid] == true)
	{
		format(name, sizeof(name), "Stranger");
	}

	return name;
}

stock GivePlayerWanted(playerid, level)
{
	PlayerInfo[playerid][pWantedLevel] += level;
	if (PlayerInfo[playerid][pWantedLevel] > 6) PlayerInfo[playerid][pWantedLevel] = 6;
	UpdatePlayerWantedStars(playerid);
}

stock GetVehicleKmh(vehicleid)
{
	new Float: x, Float: y, Float: z, vel;
	GetVehicleVelocity(vehicleid, x, y, z);
	vel = floatround(floatsqroot(x *x + y *y + z *z) *180);
	return vel;
}

stock SetPlayerDefaultColor(playerid)
{
	if (PlayerInfo[playerid][pFaction] == FACTION_FBI)
	{
		if (PlayerInfo[playerid][pFbiDuty] == 1)
		{
			SetPlayerColor(playerid, COLOR_PLAYER_FBI);
		}
		else
		{
			SetPlayerColor(playerid, COLOR_PLAYER_WHITE);
		}
	}

	if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD)
	{
		if (PlayerInfo[playerid][pPoliceDuty] == 1)
		{
			SetPlayerColor(playerid, COLOR_PLAYER_POLICE);
		}
		else
		{
			SetPlayerColor(playerid, COLOR_PLAYER_WHITE);
		}
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_CRIP)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_CRIP);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_ITALIAN_MAFIA)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_ITALIAN);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_AZTECAS)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_AZTECAS);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_TRIADS)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_TRIADS);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_GROVE)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_GROVE);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_WCW)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_WCW);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_BALLAS)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_BALLAS);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_RUSSIAN_MAFIA)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_MAFIA);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_VAGOS)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_VAGOS);
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_MEDIC)
	{
		if (PlayerInfo[playerid][pMedicDuty] == 1)
		{
			SetPlayerColor(playerid, COLOR_PLAYER_MEDIC);
		}
		else
		{
			SetPlayerColor(playerid, COLOR_PLAYER_WHITE);
		}
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_LS_ARMY || FACTION_LV_ARMY)
	{
		if (PlayerInfo[playerid][pArmyDuty] == 1)
		{
			SetPlayerColor(playerid, COLOR_PLAYER_ARMY);
		}
		else
		{
			SetPlayerColor(playerid, COLOR_PLAYER_WHITE);
		}
	}
	else if (PlayerInfo[playerid][pFaction] == FACTION_GOVERNMENT)
	{
		SetPlayerColor(playerid, COLOR_PLAYER_GOVERNMENT);
	}
	else
	{
		SetPlayerColor(playerid, COLOR_PLAYER_WHITE);
	}

	if (maskOn[playerid] == true)
	{
		SetPlayerColor(playerid, COLOR_INVISIBLE);
	}

	//Admin Duty
	if (PlayerInfo[playerid][pAdminDuty] == 1)
	{
		SetPlayerColor(playerid, COLOR_ADMINDUTY);
	}
}

stock SetAdminOffDuty(playerid)
{
	PlayerInfo[playerid][pAdminDuty] = 0;
	SetPlayerDefaultColor(playerid);
	RestartPlayerSkin(playerid);
}

stock SetAdminOnDuty(playerid)
{
	PlayerInfo[playerid][pAdminDuty] = 1;
	SetPlayerColor(playerid, COLOR_ADMINDUTY);
	RestartPlayerSkin(playerid);
}

stock SetMedicOffDuty(playerid)
{
	PlayerInfo[playerid][pMedicDuty] = 0;
	RestartPlayerSkin(playerid);
	SetPlayerDefaultColor(playerid);
}

stock SetMedicOnDuty(playerid)
{
	PlayerInfo[playerid][pMedicDuty] = 1;
	SetPlayerColor(playerid, COLOR_PLAYER_MEDIC);
	RestartPlayerSkin(playerid);
}

stock SetFbiOffDuty(playerid)
{
	PlayerInfo[playerid][pFbiDuty] = 0;
	RestartPlayerSkin(playerid);
	SetPlayerDefaultColor(playerid);
}

stock SetFbiOnDuty(playerid)
{
	PlayerInfo[playerid][pFbiDuty] = 1;
	SetPlayerColor(playerid, COLOR_PLAYER_FBI);
	RestartPlayerSkin(playerid);
}

stock SetPoliceOffDuty(playerid)
{
	PlayerInfo[playerid][pPoliceDuty] = 0;
	RestartPlayerSkin(playerid);
	SetPlayerDefaultColor(playerid);
}

stock SetPoliceOnDuty(playerid)
{
	PlayerInfo[playerid][pPoliceDuty] = 1;
	SetPlayerColor(playerid, COLOR_PLAYER_POLICE);
	RestartPlayerSkin(playerid);
}

stock SetFuelCoOffDuty(playerid)
{
	PlayerInfo[playerid][pFuelCoDuty] = 0;
}

stock SetFuelCoOnDuty(playerid)
{
	PlayerInfo[playerid][pFuelCoDuty] = 1;
}

stock SetTaxiOffDuty(playerid)
{
	PlayerInfo[playerid][pTaxiDuty] = 0;
	StopTaxiFare(playerid);
}

stock SetTaxiOnDuty(playerid)
{
	PlayerInfo[playerid][pTaxiDuty] = 1;
}

stock SetArmyOffDuty(playerid)
{
	PlayerInfo[playerid][pArmyDuty] = 0;
	RestartPlayerSkin(playerid);
	SetPlayerDefaultColor(playerid);
}

stock SetArmyOnDuty(playerid)
{
	PlayerInfo[playerid][pArmyDuty] = 1;
	SetPlayerColor(playerid, COLOR_PLAYER_ARMY);
	RestartPlayerSkin(playerid);
}

stock randomex(min, max)
{
	//Credits to y_less
	new rand = random(max - min) + min;
	return rand;
}

stock SetAllVehFuel()
{
	for (new i = 0; i < MAX_VEHICLES; i++)
	{
		new vehFuelRandom = randomex(96, 100);
		vehFuel[i] = vehFuelRandom;
	}
}

stock ToggleAllVehiclesEngineOFF()
{
	for (new i; i < MAX_VEHICLES; i++)
	{
		new vehModel = GetVehicleModel(i);
		if (IsNoFuelVehicle(vehModel) == 0)
		{
			ToggleEngine(i, VEHICLE_PARAMS_OFF);
			vehEngineStatusON[i] = false;
		}
	}
}

stock SendJobMessage(JOB, color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pJob] == JOB)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendNewsMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pDisableNews] == 0)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendPhoneMessage(playerid, color, string[])
{
	SendClientMessage(playerid, color, string);
	SendClientMessage(phoneConnected[playerid], color, string);
}

stock SendAdminOnDutyMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAdminDuty] == 1)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendBitcoinCourseMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pBitcoinCourse] == 1)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendAdminMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pAdmin] >= 1)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendTaxiPlayersMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pJob] == JOB_TAXI)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendMechanicPlayersMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pJob] == JOB_MECHANIC)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendPolicePlayersMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pFaction] == FACTION_LSPD || PlayerInfo[i][pFaction] == FACTION_LVPD)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock GiveAllRobbersMoney()
{
	new dividedMoney = normalRobberyMoney / normalRobberyMembers;
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (inNormalRobbery[i] == true)
		{
			GivePlayerCash(i, dividedMoney);
		}
	}
}

stock SendNormalRobberyMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (inNormalRobbery[i] == true)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendDMessage(color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		new hisFaction = PlayerInfo[i][pFaction];
		if (hisFaction == FACTION_LS_ARMY ||
			hisFaction == FACTION_LV_ARMY ||
			hisFaction == FACTION_FBI ||
			hisFaction == FACTION_LSPD ||
			hisFaction == FACTION_MEDIC ||
			hisFaction == FACTION_GOVERNMENT ||
			hisFaction == FACTION_LVPD)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendFactionMessage(TEAM, color, string[])
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pFaction] == TEAM)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SaveTurf(turfid)
{
	new stringTurf[180];
	format(stringTurf, 180, "/Turfs/%d.ini", turfid);
	if (!dini_Exists(stringTurf))
	{
		dini_Create(stringTurf);
	}

	dini_IntSet(stringTurf, "TurfOwner", TurfInfo[turfid][TurfOwner]);
}

stock SaveFaction(factionid)
{
	new stringFaction[180];
	format(stringFaction, 180, "/Factions/%d.ini", factionid);
	dini_Set(stringFaction, "fRankName1", FactionInfo[factionid][fRankName1]);
	dini_Set(stringFaction, "fRankName2", FactionInfo[factionid][fRankName2]);
	dini_Set(stringFaction, "fRankName3", FactionInfo[factionid][fRankName3]);
	dini_Set(stringFaction, "fRankName4", FactionInfo[factionid][fRankName4]);
	dini_Set(stringFaction, "fRankName5", FactionInfo[factionid][fRankName5]);
	dini_Set(stringFaction, "fRankName6", FactionInfo[factionid][fRankName6]);
	dini_IntSet(stringFaction, "fTurfs", FactionInfo[factionid][fTurfs]);
	dini_IntSet(stringFaction, "fBankAccount", FactionInfo[factionid][fBankAccount]);
}

stock LoadFaction(factionid)
{
	new stringFaction[180];
	if (!dini_Exists(stringFaction))
	{
		SaveFaction(factionid);
	}

	format(stringFaction, 180, "/Factions/%d.ini", factionid);
	format(FactionInfo[factionid][fRankName1], 32, "%s", dini_Get(stringFaction, "fRankName1"));
	format(FactionInfo[factionid][fRankName2], 32, "%s", dini_Get(stringFaction, "fRankName2"));
	format(FactionInfo[factionid][fRankName3], 32, "%s", dini_Get(stringFaction, "fRankName3"));
	format(FactionInfo[factionid][fRankName4], 32, "%s", dini_Get(stringFaction, "fRankName4"));
	format(FactionInfo[factionid][fRankName5], 32, "%s", dini_Get(stringFaction, "fRankName5"));
	format(FactionInfo[factionid][fRankName6], 32, "%s", dini_Get(stringFaction, "fRankName6"));
	FactionInfo[factionid][fTurfs] = dini_Int(stringFaction, "fTurfs");
	FactionInfo[factionid][fBankAccount] = dini_Int(stringFaction, "fBankAccount");
}

stock LoadPrivateVehs()
{
	for (new alv = 1; alv < MAX_PRIVATEVEHS; alv++)
	{
		new vehstring[64];
		format(vehstring, 64, "/PrivateVehs/%d.ini", alv);
		if (dini_Exists(vehstring))
		{
			PrivateVehInfo[alv][vVehID] = dini_Int(vehstring, "vVehID");
			PrivateVehInfo[alv][vVehC1] = dini_Int(vehstring, "vVehC1");
			PrivateVehInfo[alv][vVehC2] = dini_Int(vehstring, "vVehC2");
			PrivateVehInfo[alv][vParked] = dini_Int(vehstring, "vParked");
			PrivateVehInfo[alv][vLocked] = dini_Int(vehstring, "vLocked");
			PrivateVehInfo[alv][vVehX] = dini_Float(vehstring, "vVehX");
			PrivateVehInfo[alv][vVehY] = dini_Float(vehstring, "vVehY");
			PrivateVehInfo[alv][vVehZ] = dini_Float(vehstring, "vVehZ");
			PrivateVehInfo[alv][vVehA] = dini_Float(vehstring, "vVehA");
			PrivateVehInfo[alv][vOwner] = dini_Int(vehstring, "vOwner");
			PrivateVehInfo[alv][vLevel] = dini_Int(vehstring, "vLevel");
			PrivateVehInfo[alv][vPrice] = dini_Int(vehstring, "vPrice");
			PrivateVehInfo[alv][vVehSpoiler] = dini_Int(vehstring, "vVehSpoiler");
			PrivateVehInfo[alv][vVehPaintJob] = dini_Int(vehstring, "vVehPaintJob");
			PrivateVehInfo[alv][vVehHood] = dini_Int(vehstring, "vVehHood");
			PrivateVehInfo[alv][vVehRoof] = dini_Int(vehstring, "vVehRoof");
			PrivateVehInfo[alv][vVehNitro] = dini_Int(vehstring, "vVehNitro");
			PrivateVehInfo[alv][vVehSideskirt] = dini_Int(vehstring, "vVehSideskirt");
			PrivateVehInfo[alv][vVehLights] = dini_Int(vehstring, "vVehLights");
			PrivateVehInfo[alv][vVehNeonColor] = dini_Int(vehstring, "vVehNeonColor");
			format(PrivateVehInfo[alv][vVehStickerName1], 256, "%s", dini_Get(vehstring, "vVehStickerName1"));
			format(PrivateVehInfo[alv][vVehStickerName2], 256, "%s", dini_Get(vehstring, "vVehStickerName2"));
			PrivateVehInfo[alv][vVehExhaust] = dini_Int(vehstring, "vVehExhaust");
			PrivateVehInfo[alv][vVehStereo] = dini_Int(vehstring, "vVehStereo");
			PrivateVehInfo[alv][vVehWheels] = dini_Int(vehstring, "vVehWheels");
			PrivateVehInfo[alv][vVehHyd] = dini_Int(vehstring, "vVehHyd");
			PrivateVehInfo[alv][vVehBumperF] = dini_Int(vehstring, "vVehBumperF");
			PrivateVehInfo[alv][vVehBumperR] = dini_Int(vehstring, "vVehBumperR");
			PrivateVehInfo[alv][vVehVentsR] = dini_Int(vehstring, "vVehVentsR");
			PrivateVehInfo[alv][vVehVentsL] = dini_Int(vehstring, "vVehVentsL");
			for (new objSlot; objSlot < 20; objSlot++)
			{
				new stringObj[256];
				format(stringObj, 256, "vVehObject[%d]", objSlot);
				PrivateVehInfo[alv][vVehObject][objSlot] = dini_Int(vehstring, stringObj);
				format(stringObj, 256, "vVehObjectX[%d]", objSlot);
				PrivateVehInfo[alv][vVehObjectX][objSlot] = dini_Float(vehstring, stringObj);
				format(stringObj, 256, "vVehObjectY[%d]", objSlot);
				PrivateVehInfo[alv][vVehObjectY][objSlot] = dini_Float(vehstring, stringObj);
				format(stringObj, 256, "vVehObjectZ[%d]", objSlot);
				PrivateVehInfo[alv][vVehObjectZ][objSlot] = dini_Float(vehstring, stringObj);
				format(stringObj, 256, "vVehObjectRX[%d]", objSlot);
				PrivateVehInfo[alv][vVehObjectRX][objSlot] = dini_Float(vehstring, stringObj);
				format(stringObj, 256, "vVehObjectRY[%d]", objSlot);
				PrivateVehInfo[alv][vVehObjectRY][objSlot] = dini_Float(vehstring, stringObj);
				format(stringObj, 256, "vVehObjectRZ[%d]", objSlot);
				PrivateVehInfo[alv][vVehObjectRZ][objSlot] = dini_Float(vehstring, stringObj);
			}

			format(PrivateVehInfo[alv][vOwnerName], 256, "%s", dini_Get(vehstring, "vOwnerName"));
			PrivateVehInfo[alv][vVeh] = AddStaticVehicleEx(PrivateVehInfo[alv][vVehID], PrivateVehInfo[alv][vVehX], PrivateVehInfo[alv][vVehY],
				PrivateVehInfo[alv][vVehZ], PrivateVehInfo[alv][vVehA], PrivateVehInfo[alv][vVehC1], PrivateVehInfo[alv][vVehC2], RESPAWN_VEHS_SECONDS);
			//new unusedPrivateVehID=ReturnNextUnusedPrivateVehID();
			new vehicle = PrivateVehInfo[alv][vVeh];
			if (PrivateVehInfo[alv][vVehPaintJob] != -1)
			{
				ChangeVehiclePaintjob(vehicle, PrivateVehInfo[alv][vVehPaintJob]);
			}

			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehSpoiler]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehHood]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehRoof]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehNitro]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehSideskirt]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehLights]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehExhaust]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehWheels]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehHyd]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehBumperF]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehBumperR]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehVentsR]);
			AddVehicleComponent(vehicle, PrivateVehInfo[alv][vVehVentsL]);
			for (new i = 0; i < 2; i++)
			{
				if (strcmp(GetVehicleStickerName(alv, i), "", true) != 0)
				{
					if (IsValidDynamicObject(PrivateVehInfo[alv][vVehSticker][i]))
					{
						DestroyDynamicObject(PrivateVehInfo[alv][vVehSticker][i]);
					}

					new vehStickerText[256];
					format(vehStickerText, 256, "%s", GetVehicleStickerName(alv, i));
					new vehSticker = PrivateVehInfo[alv][vVehSticker][i];
					new Float: vehStickerX = PrivateVehInfo[alv][vVehStickerX][i];
					new Float: vehStickerY = PrivateVehInfo[alv][vVehStickerY][i];
					new Float: vehStickerZ = PrivateVehInfo[alv][vVehStickerZ][i];
					new Float: vehStickerXY = PrivateVehInfo[alv][vVehStickerXY][i];
					new Float: vehStickerYY = PrivateVehInfo[alv][vVehStickerYY][i];
					new Float: vehStickerZY = PrivateVehInfo[alv][vVehStickerZY][i];
					vehSticker = CreateDynamicObject(19482, vehStickerX, vehStickerY, vehStickerZ, vehStickerXY, vehStickerYY, vehStickerZY, -1, 0, -1, 200);
					SetDynamicObjectMaterialText(vehSticker, 0, vehStickerText, OBJECT_MATERIAL_SIZE_512x512, "Diploma", 100, 0, 0xFFFFFFFF, 0, 1);
					AttachDynamicObjectToVehicle(vehSticker, vehicle, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
				}
			}

			if (PrivateVehInfo[alv][vVehNeonColor] != 0)	//neon
			{
				new neonObjectID = PrivateVehInfo[alv][vVehNeonColor];
				PrivateVehInfo[alv][vVehNeon][0] = CreateDynamicObject(neonObjectID, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
				AttachDynamicObjectToVehicle(PrivateVehInfo[alv][vVehNeon][0], vehicle, -1.040, 0.000, -0.610, 0.000, 0.000, 0.000);
				PrivateVehInfo[alv][vVehNeon][1] = CreateDynamicObject(neonObjectID, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
				AttachDynamicObjectToVehicle(PrivateVehInfo[alv][vVehNeon][1], vehicle, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
			}

			//Veh Objects - open
			for (new i = 0; i < 20; i++)
			{
				if (PrivateVehInfo[alv][vVehObject][i] != 0)
				{
					if (IsValidDynamicObject(PrivateVehInfo[alv][vVehObjID][i]))
					{
						DestroyDynamicObject(PrivateVehInfo[alv][vVehObjID][i]);
					}

					//Apply Objects - open
					new vehObjID = PrivateVehInfo[alv][vVehObject][i];
					new Float: vehObjX = PrivateVehInfo[alv][vVehObjectX][i];
					new Float: vehObjY = PrivateVehInfo[alv][vVehObjectY][i];
					new Float: vehObjZ = PrivateVehInfo[alv][vVehObjectZ][i];
					new Float: vehObjRX = PrivateVehInfo[alv][vVehObjectRX][i];
					new Float: vehObjRY = PrivateVehInfo[alv][vVehObjectRY][i];
					new Float: vehObjRZ = PrivateVehInfo[alv][vVehObjectRZ][i];
					new Float: X, Float: Y, Float: Z;
					GetVehiclePos(vehicle, X, Y, Z);
					PrivateVehInfo[alv][vVehObjID][i] = CreateDynamicObject(vehObjID, X, Y, Z, 0, 0, 0);
					new vehObjectToApply = PrivateVehInfo[alv][vVehObjID][i];
					AttachDynamicObjectToVehicle(vehObjectToApply, vehicle, vehObjX, vehObjY, vehObjZ, vehObjRX, vehObjRY, vehObjRZ);
					//Apply Objects - close
				}
			}

			//Veh Objects - close
			if (PrivateVehInfo[alv][vParked] == 0)
			{
				SetVehicleVirtualWorld(vehicle, 1);
			}

			VehicleInfo[vehicle][vPrivateID] = alv;	//TO GO
			VehicleInfo[vehicle][vIsPrivate] = 1;
		}
	}

	printf("LawLess Roleplay SERVER - System: Бяха заредени личните коли");
}

stock LoadForSaleVehs()
{
	new firstID = maxcarsforbuy;
	new currentVeh;
	new randomC1, randomC2;
	//los santos - open
	randomC1 = randomex(128, 255);
	randomC2 = randomex(128, 255);
	SellCarInfo[maxcarsforbuy][scVehC1] = randomC1;
	SellCarInfo[maxcarsforbuy][scVehC2] = randomC2;
	SellCarInfo[maxcarsforbuy][scVeh] = AddStaticVehicleEx(randomex(602, 603), 2147.7273, -1138.5842, 25.2063, 271.7172, randomC1, randomC2, RESPAWN_VEHS_SECONDS);	// veh6
	SellCarInfo[maxcarsforbuy][scVehPrice] = randomex(40000, 53000);
	SellCarInfo[maxcarsforbuy][scVehLevel] = randomex(24, 26);
	currentVeh = SellCarInfo[maxcarsforbuy][scVeh];
	VehicleInfo[currentVeh][vForSaleID] = maxcarsforbuy;
	maxcarsforbuy++;

	randomC1 = randomex(128, 255);
	randomC2 = randomex(128, 255);
	SellCarInfo[maxcarsforbuy][scVehC1] = randomC1;
	SellCarInfo[maxcarsforbuy][scVehC2] = randomC2;
	SellCarInfo[maxcarsforbuy][scVeh] = AddStaticVehicleEx(randomex(410, 413), 2161.3896, -1147.9052, 24.1477, 91.4249, randomC1, randomC2, RESPAWN_VEHS_SECONDS);	// veh7
	SellCarInfo[maxcarsforbuy][scVehPrice] = randomex(43000, 55000);
	SellCarInfo[maxcarsforbuy][scVehLevel] = randomex(26, 29);
	currentVeh = SellCarInfo[maxcarsforbuy][scVeh];
	VehicleInfo[currentVeh][vForSaleID] = maxcarsforbuy;
	maxcarsforbuy++;

	randomC1 = randomex(128, 255);
	randomC2 = randomex(128, 255);
	SellCarInfo[maxcarsforbuy][scVehC1] = randomC1;
	SellCarInfo[maxcarsforbuy][scVehC2] = randomC2;
	SellCarInfo[maxcarsforbuy][scVeh] = AddStaticVehicleEx(randomex(400, 402), 2161.0999, -1153.4089, 23.6361, 90.4401, randomC1, randomC2, RESPAWN_VEHS_SECONDS);	// veh8
	SellCarInfo[maxcarsforbuy][scVehPrice] = randomex(45000, 57000);
	SellCarInfo[maxcarsforbuy][scVehLevel] = randomex(29, 35);
	currentVeh = SellCarInfo[maxcarsforbuy][scVeh];
	VehicleInfo[currentVeh][vForSaleID] = maxcarsforbuy;
	maxcarsforbuy++;

	randomC1 = randomex(128, 255);
	randomC2 = randomex(128, 255);
	SellCarInfo[maxcarsforbuy][scVehC1] = randomC1;
	SellCarInfo[maxcarsforbuy][scVehC2] = randomC2;
	SellCarInfo[maxcarsforbuy][scVeh] = AddStaticVehicleEx(randomex(400, 402), 2148.9880, -1166.5461, 23.5474, 268.5250, randomC1, randomC2, RESPAWN_VEHS_SECONDS);	// veh8
	SellCarInfo[maxcarsforbuy][scVehPrice] = randomex(45000, 57000);
	SellCarInfo[maxcarsforbuy][scVehLevel] = randomex(29, 35);
	currentVeh = SellCarInfo[maxcarsforbuy][scVeh];
	VehicleInfo[currentVeh][vForSaleID] = maxcarsforbuy;
	maxcarsforbuy++;
	//los santos - close

	//las venturas 1 - open
	randomC1 = randomex(128, 255);
	randomC2 = randomex(128, 255);
	SellCarInfo[maxcarsforbuy][scVehC1] = randomC1;
	SellCarInfo[maxcarsforbuy][scVehC2] = randomC2;
	SellCarInfo[maxcarsforbuy][scVeh] = AddStaticVehicleEx(randomex(560, 563), 1103.4924, 1055.9639, 9.9783, 38.2969, randomC1, randomC2, RESPAWN_VEHS_SECONDS);	// veh8
	SellCarInfo[maxcarsforbuy][scVehPrice] = randomex(45000, 57000);
	SellCarInfo[maxcarsforbuy][scVehLevel] = randomex(29, 35);
	currentVeh = SellCarInfo[maxcarsforbuy][scVeh];
	VehicleInfo[currentVeh][vForSaleID] = maxcarsforbuy;
	maxcarsforbuy++;

	randomC1 = randomex(128, 255);
	randomC2 = randomex(128, 255);
	SellCarInfo[maxcarsforbuy][scVehC1] = randomC1;
	SellCarInfo[maxcarsforbuy][scVehC2] = randomC2;
	SellCarInfo[maxcarsforbuy][scVeh] = AddStaticVehicleEx(randomex(560, 563), 1109.2637, 1048.6761, 9.9786, 37.3964, randomC1, randomC2, RESPAWN_VEHS_SECONDS);	// veh8
	SellCarInfo[maxcarsforbuy][scVehPrice] = randomex(45000, 57000);
	SellCarInfo[maxcarsforbuy][scVehLevel] = randomex(29, 35);
	currentVeh = SellCarInfo[maxcarsforbuy][scVeh];
	VehicleInfo[currentVeh][vForSaleID] = maxcarsforbuy;
	maxcarsforbuy++;

	randomC1 = randomex(128, 255);
	randomC2 = randomex(128, 255);
	SellCarInfo[maxcarsforbuy][scVehC1] = randomC1;
	SellCarInfo[maxcarsforbuy][scVehC2] = randomC2;
	SellCarInfo[maxcarsforbuy][scVeh] = AddStaticVehicleEx(randomex(565, 568), 1108.3171, 1090.5820, 9.9793, 131.1014, randomC1, randomC2, RESPAWN_VEHS_SECONDS);	// veh8
	SellCarInfo[maxcarsforbuy][scVehPrice] = randomex(45000, 57000);
	SellCarInfo[maxcarsforbuy][scVehLevel] = randomex(29, 35);
	currentVeh = SellCarInfo[maxcarsforbuy][scVeh];
	VehicleInfo[currentVeh][vForSaleID] = maxcarsforbuy;
	maxcarsforbuy++;

	randomC1 = randomex(128, 255);
	randomC2 = randomex(128, 255);
	SellCarInfo[maxcarsforbuy][scVehC1] = randomC1;
	SellCarInfo[maxcarsforbuy][scVehC2] = randomC2;
	SellCarInfo[maxcarsforbuy][scVeh] = AddStaticVehicleEx(randomex(565, 568), 1116.1403, 1097.7085, 9.9787, 130.3029, randomC1, randomC2, RESPAWN_VEHS_SECONDS);	// veh8
	SellCarInfo[maxcarsforbuy][scVehPrice] = randomex(45000, 57000);
	SellCarInfo[maxcarsforbuy][scVehLevel] = randomex(29, 35);
	currentVeh = SellCarInfo[maxcarsforbuy][scVeh];
	VehicleInfo[currentVeh][vForSaleID] = maxcarsforbuy;
	maxcarsforbuy++;

	randomC1 = randomex(128, 255);
	randomC2 = randomex(128, 255);
	SellCarInfo[maxcarsforbuy][scVehC1] = randomC1;
	SellCarInfo[maxcarsforbuy][scVehC2] = randomC2;
	SellCarInfo[maxcarsforbuy][scVeh] = AddStaticVehicleEx(randomex(585, 588), 1072.2793, 1094.7992, 9.9783, 217.8491, randomC1, randomC2, RESPAWN_VEHS_SECONDS);	// veh8
	SellCarInfo[maxcarsforbuy][scVehPrice] = randomex(45000, 57000);
	SellCarInfo[maxcarsforbuy][scVehLevel] = randomex(29, 35);
	currentVeh = SellCarInfo[maxcarsforbuy][scVeh];
	VehicleInfo[currentVeh][vForSaleID] = maxcarsforbuy;
	maxcarsforbuy++;

	randomC1 = randomex(128, 255);
	randomC2 = randomex(128, 255);
	SellCarInfo[maxcarsforbuy][scVehC1] = randomC1;
	SellCarInfo[maxcarsforbuy][scVehC2] = randomC2;
	SellCarInfo[maxcarsforbuy][scVeh] = AddStaticVehicleEx(randomex(602, 604), 1066.0726, 1102.7158, 9.9787, 216.8923, randomC1, randomC2, RESPAWN_VEHS_SECONDS);	// veh8
	SellCarInfo[maxcarsforbuy][scVehPrice] = randomex(45000, 57000);
	SellCarInfo[maxcarsforbuy][scVehLevel] = randomex(29, 35);
	currentVeh = SellCarInfo[maxcarsforbuy][scVeh];
	VehicleInfo[currentVeh][vForSaleID] = maxcarsforbuy;
	maxcarsforbuy++;

	//las venturas 1 - close

	new lastID = maxcarsforbuy;
	new string256[256];
	for (new i = firstID; i < lastID; i++)
	{
		VehicleInfo[SellCarInfo[i][scVeh]][vForSaleShop] = 1;
		format(string256, 256, "{ff0000}%s For Sale\n{ffffff}Цена: {40BF00}$%d\n{ffffff}Ниво: {FFFF00}%d", GetVehicleName(i), SellCarInfo[i][scVehPrice], SellCarInfo[i][scVehLevel]);
		CreateDynamic3DTextLabel(string256, 0xFFFFFFFF, 0.0, 0.0, 0.0, 12.0, INVALID_PLAYER_ID, SellCarInfo[i][scVeh], 0, 0, 0, -1, 12.0);
	}

	printf("LawLess Roleplay SERVER - System: Бяха заредени колите за продан");
}

stock ShowPlayerLevelExp(playerid)
{
	TextDrawShowForPlayer(playerid, levelExp[playerid]);
	UpdatePlayerLevelExp(playerid);
}

stock UpdatePlayerLevelExp(playerid)
{
	new string256[256];
	format(string256, 256, "~b~[Level: ~w~%d   ~r~Exp: ~w~%d~g~/%d]", PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pExp], PlayerInfo[playerid][pLevel] + expPlus);
	TextDrawSetString(levelExp[playerid], string256);
	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
}

stock LoadOfficeCenter()
{
	new stringoffices[21][70];
	new offices[64];
	for (new alo = 0; alo < MAX_OFFICES; alo++)
	{
		OfficeInfo[alo][NeededCash] = alo * 100000000;
		OfficeInfo[alo][NeededLevel] = alo * 50;
		OfficeInfo[alo][NeededEPS] = alo * 10;
		OfficeInfo[alo][NeededMS] = alo * 10;
		OfficeInfo[alo][BonusEP] = alo * 10;
		OfficeInfo[alo][BonusCash] = alo * 50000;

		format(offices, 64, "/Offices/%d.ini", alo);
		if (!dini_Exists(offices))
		{
			dini_Create(offices);
			dini_IntSet(offices, "isOwned", 0);
			OfficeInfo[alo][isOwned] = 0;
		}

		if (dini_Exists(offices))
		{
			if (dini_Int(offices, "isOwned") == 0)
			{
				format(stringoffices[alo], 70, "Етаж %d\nПритежател:{FF0000} Няма", alo);
			}

			if (dini_Int(offices, "isOwned") == 1)
			{
				format(stringoffices[alo], 70, "Етаж %d\nПритежател:{FF0000} %s", alo, dini_Get(offices, "OwnerName"));
				format(OfficeInfo[alo][OwnerName], 50, dini_Get(offices, "OwnerName"));
			}
		}
	}

	officeOwnerText[1] = Create3DTextLabel(stringoffices[1], 0x00FF00FF, 1786.4745, -1300.6366, 22.2109, 10, 0, 0);
	officeOwnerText[2] = Create3DTextLabel(stringoffices[2], 0x00FF00FF, 1786.4745, -1300.6366, 27.6719, 10, 0, 0);
	officeOwnerText[3] = Create3DTextLabel(stringoffices[3], 0x00FF00FF, 1786.4745, -1300.6366, 33.1250, 10, 0, 0);
	officeOwnerText[4] = Create3DTextLabel(stringoffices[4], 0x00FF00FF, 1786.4745, -1300.6366, 38.5781, 10, 0, 0);
	officeOwnerText[5] = Create3DTextLabel(stringoffices[5], 0x00FF00FF, 1786.4745, -1300.6366, 44.0391, 10, 0, 0);
	officeOwnerText[6] = Create3DTextLabel(stringoffices[6], 0x00FF00FF, 1786.4745, -1300.6366, 49.4453, 10, 0, 0);
	officeOwnerText[7] = Create3DTextLabel(stringoffices[7], 0x00FF00FF, 1786.4745, -1300.6366, 54.9063, 10, 0, 0);
	officeOwnerText[8] = Create3DTextLabel(stringoffices[8], 0x00FF00FF, 1786.4745, -1300.6366, 60.3594, 10, 0, 0);
	officeOwnerText[9] = Create3DTextLabel(stringoffices[9], 0x00FF00FF, 1786.4745, -1300.6366, 65.8125, 10, 0, 0);
	officeOwnerText[10] = Create3DTextLabel(stringoffices[10], 0x00FF00FF, 1786.4745, -1300.6366, 71.2734, 10, 0, 0);
	officeOwnerText[11] = Create3DTextLabel(stringoffices[11], 0x00FF00FF, 1786.4745, -1300.6366, 76.6719, 10, 0, 0);
	officeOwnerText[12] = Create3DTextLabel(stringoffices[12], 0x00FF00FF, 1786.4745, -1300.6366, 82.1328, 10, 0, 0);
	officeOwnerText[13] = Create3DTextLabel(stringoffices[13], 0x00FF00FF, 1786.4745, -1300.6366, 87.5859, 10, 0, 0);
	officeOwnerText[14] = Create3DTextLabel(stringoffices[14], 0x00FF00FF, 1786.4745, -1300.6366, 93.0391, 10, 0, 0);
	officeOwnerText[15] = Create3DTextLabel(stringoffices[16], 0x00FF00FF, 1786.4745, -1300.6366, 103.9188, 10, 0, 0);
	officeOwnerText[16] = Create3DTextLabel(stringoffices[15], 0x00FF00FF, 1786.4745, -1300.6366, 98.5145, 10, 0, 0);
	officeOwnerText[17] = Create3DTextLabel(stringoffices[17], 0x00FF00FF, 1786.4745, -1300.6366, 109.3594, 10, 0, 0);
	officeOwnerText[18] = Create3DTextLabel(stringoffices[18], 0x00FF00FF, 1786.4745, -1300.6366, 114.8227, 10, 0, 0);
	officeOwnerText[19] = Create3DTextLabel(stringoffices[19], 0x00FF00FF, 1786.4745, -1300.6366, 120.2656, 10, 0, 0);
	officeOwnerText[20] = Create3DTextLabel(stringoffices[20], 0x00FF00FF, 1786.4745, -1300.6366, 125.7335, 10, 0, 0);
	Create3DTextLabel("{FFFFFF}Los Santos {40BF00}Office {FF0000}Center", 0xFFFFFFFF, 1786.5000, -1301.0005, 16.2408, 25, 0);

}

stock LoadAllHouses()
{
	new string256[256];
	for (new alh = 0; alh < maxhouses + 2; alh++)
	{
		new house[64];
		format(house, 64, "/Houses/%d.ini", alh);
		if (dini_Exists(house))
		{
			maxhouses += 1;
			HouseInfo[alh][hX] = dini_Float(house, "hX");
			HouseInfo[alh][hY] = dini_Float(house, "hY");
			HouseInfo[alh][hZ] = dini_Float(house, "hZ");
			HouseInfo[alh][hOwner] = dini_Int(house, "hOwner");
			HouseInfo[alh][hLocked] = dini_Int(house, "hLocked");
			HouseInfo[alh][hLevel] = dini_Int(house, "hLevel");
			HouseInfo[alh][hPrice] = dini_Int(house, "hPrice");
			HouseInfo[alh][hInterior] = dini_Int(house, "hInterior");
			HouseInfo[alh][hVehID] = dini_Int(house, "hVehID");
			HouseInfo[alh][hVehC1] = dini_Int(house, "hVehC1");
			HouseInfo[alh][hVehC2] = dini_Int(house, "hVehC2");
			HouseInfo[alh][hVehX] = dini_Float(house, "hVehX");
			HouseInfo[alh][hVehY] = dini_Float(house, "hVehY");
			HouseInfo[alh][hVehZ] = dini_Float(house, "hVehZ");
			HouseInfo[alh][hVehA] = dini_Float(house, "hVehA");
			format(HouseInfo[alh][hName], 256, "%s", dini_Get(house, "hName"));
			new stringSecond[256];
			for (new i; i < 10; i++)
			{
				format(stringSecond, 256, "hFurSlot[%d]", i);
				HouseInfo[alh][hFurSlot][i] = dini_Int(house, stringSecond);
				format(stringSecond, 256, "hFurID[%d]", i);
				HouseInfo[alh][hFurID][i] = dini_Int(house, stringSecond);
				format(stringSecond, 256, "hFurX[%d]", i);
				HouseInfo[alh][hFurX][i] = dini_Float(house, stringSecond);
				format(stringSecond, 256, "hFurY[%d]", i);
				HouseInfo[alh][hFurY][i] = dini_Float(house, stringSecond);
				format(stringSecond, 256, "hFurZ[%d]", i);
				HouseInfo[alh][hFurZ][i] = dini_Float(house, stringSecond);
				format(stringSecond, 256, "hFurRX[%d]", i);
				HouseInfo[alh][hFurRX][i] = dini_Float(house, stringSecond);
				format(stringSecond, 256, "hFurRY[%d]", i);
				HouseInfo[alh][hFurRY][i] = dini_Float(house, stringSecond);
				format(stringSecond, 256, "hFurRZ[%d]", i);
				HouseInfo[alh][hFurRZ][i] = dini_Float(house, stringSecond);
			}

			new houseVW = alh;
			houseVW += 50;
			for (new i; i < 10; i++)
			{
				if (HouseInfo[alh][hFurSlot][i] == 1)
				{
					HouseInfo[alh][hFurObject][i] = CreateDynamicObject(HouseInfo[alh][hFurID][i], HouseInfo[alh][hFurX][i], HouseInfo[alh][hFurY][i], HouseInfo[alh][hFurZ][i],
						HouseInfo[alh][hFurRX][i], HouseInfo[alh][hFurRY][i], HouseInfo[alh][hFurRZ][i], houseVW, -1);
				}
			}

			format(HouseInfo[alh][hOwnerName], 256, "%s", dini_Get(house, "hOwnerName"));
			housePickup[alh] = CreateDynamicPickup(1273, 1, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ], 0);
			AddHouseIcon(alh);
			housePickupIndex[housePickup[alh]] = alh;
			isHousePickup[housePickup[alh]] = true;
			AddHouseLabel(alh);
		}
	}

	printf("LawLess Roleplay SERVER - System: Всички къщи бяха заредени.");
}

stock DefineRadioStations()
{
	for (new i = 0; i < MAX_VEHICLES; i++)
	{
		if (radioveh[i] < sizeof(radioAudioStreamNames))
		{
			new maxRadios = sizeof(radioAudioStreamNames) - 1;
			radioveh[i] = randomex(0, maxRadios);
		}
	}
}

stock ChangeHours()
{
	new hours, minutes, seconds;
	gettime(hours, minutes, seconds);
	SetWorldTime(hours);
}

stock AddBizPickups()
{
	BIZPICKUP[0] = CreatePickup(1239, 1, -22.9671, -55.6587, 1003.5469, -1);
	CreateDynamic3DTextLabel("Денонощен магазин\n\n{70EA16}Използвайте {FF0000}/buy {70EA16}за да направите поръчка от магазина", COLOR_WHITE, -22.9671, -55.6587, 1003.5469, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	//CreateDynamic3DTextLabel(string3DText, COLOR_CYAN, x, y, z, 3.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, world, interior);
	
	BIZPICKUP[1] = CreatePickup(1239, 1, 496.7184, -76.0349, 998.7578, -1);
	CreateDynamic3DTextLabel("Бар\n\n{70EA16}Използвайте {FF0000}/drink {70EA16}за да направите поръчка от бара", COLOR_WHITE, 496.7184, -76.0349, 998.7578, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[2] = CreatePickup(1239, 1, -224.7806, 1403.9601, 27.7734, -1);
	CreateDynamic3DTextLabel("Бар\n\n{70EA16}Използвайте {FF0000}/drink {70EA16}за да направите поръчка от бара", COLOR_WHITE, -224.7806, 1403.9601, 27.7734, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[3] = CreatePickup(1239, 1, -30.7964, -29.0106, 1003.5573, -1);
	CreateDynamic3DTextLabel("Денонощен магазин\n\n{70EA16}Използвайте {FF0000}/buy {70EA16}за да направите поръчка от магазина", COLOR_WHITE, -30.7964, -29.0106, 1003.5573, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[4] = CreatePickup(1239, 1, 291.3295, -106.2229, 1001.5156, -1);
	CreateDynamic3DTextLabel("Магазин за оръжия\n\n{70EA16}Използвайте {FF0000}/buygun {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 291.3295, -106.2229, 1001.5156, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[5] = CreatePickup(1239, 1, 296.3936, -80.8117, 1001.5156, -1);
	CreateDynamic3DTextLabel("Магазин за оръжия\n\n{70EA16}Използвайте {FF0000}/buygun {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 296.3936, -80.8117, 1001.5156, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[6] = CreatePickup(1239, 1, 308.2184, -141.4642, 999.6016, -1);
	CreateDynamic3DTextLabel("Магазин за оръжия\n\n{70EA16}Използвайте {FF0000}/buygun {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 308.2184, -141.4642, 999.6016, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[7] = CreatePickup(1239, 1, -22.0741, -138.6289, 1003.5469, -1);
	CreateDynamic3DTextLabel("Денонощен магазин\n\n{70EA16}Използвайте {FF0000}/buy {70EA16}за да направите поръчка от магазина", COLOR_WHITE, -22.0741, -138.6289, 1003.5469, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[8] = CreatePickup(1239, 1, 203.9277, -43.2615, 1001.8047, -1);
	CreateDynamic3DTextLabel("Магазин за облекла\n\n{70EA16}Използвайте {FF0000}/buyclothes {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 203.9277, -43.2615, 1001.8047, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[9] = CreatePickup(1239, 1, 207.1997, -129.1777, 1003.5078, -1);
	CreateDynamic3DTextLabel("Магазин за облекла\n\n{70EA16}Използвайте {FF0000}/buyclothes {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 207.1997, -129.1777, 1003.5078, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[10] = CreatePickup(1239, 1, 377.3176, -67.4344, 1001.5078, -1);
	CreateDynamic3DTextLabel("Хранителен магазин\n\n{70EA16}Използвайте {FF0000}/buyfood {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 377.3176, -67.4344, 1001.5078, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[11] = CreatePickup(1239, 1, 369.6004, -6.0170, 1001.8589, -1);
	CreateDynamic3DTextLabel("Хранителен магазин\n\n{70EA16}Използвайте {FF0000}/buyfood {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 369.6004, -6.0170, 1001.8589, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[12] = CreatePickup(1239, 1, 450.4710, -83.6515, 999.5547, -1);
	CreateDynamic3DTextLabel("Хранителен магазин\n\n{70EA16}Използвайте {FF0000}/buyfood {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 450.4710, -83.6515, 999.5547, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[13] = CreatePickup(1239, 1, 1782.3506, 1665.1987, -12.8913, -1);
	CreateDynamic3DTextLabel("Риболовен магазин\n\n{70EA16}Използвайте {FF0000}/buy {70EA16}за да направите поръчка от магазина", COLOR_WHITE, 1782.3506, 1665.1987, -12.8913, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[14] = CreatePickup(1239, 1, 773.6641, -72.9778, 1000.6484, -1);
	CreateDynamic3DTextLabel("Фитнес\n\n{70EA16}Използвайте {FF0000}/train {70EA16}за да научите нови бойни умения", COLOR_WHITE, 773.6641, -72.9778, 1000.6484, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
	
	BIZPICKUP[15] = CreatePickup(1239, 1, 773.0745, -39.3959, 1000.6865, -1);
	CreateDynamic3DTextLabel("Фитнес\n\n{70EA16}Използвайте {FF0000}/train {70EA16}за да научите нови бойни умения", COLOR_WHITE, 773.0745, -39.3959, 1000.6865, 11.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1);
}

stock AddFoodPickups()
{
	FOODPICKUP[0] = CreatePickup(19135, 1, 2434.4692, 1005.0504, 10.8203, -1);
	FOODPICKUP[1] = CreatePickup(19135, 1, 2153.7478, 981.3260, 10.8125, -1);
	FOODPICKUP[2] = CreatePickup(19135, 1, 2034.2792, 1526.3484, 10.8203, -1);
	//goto
}

stock AddAllActors()
{
	new dealerActor;
	dealerActor = CreateActor(29, 1360.5676, -1488.5371, 13.5469, 61.5207);	// dealer
	ApplyActorAnimation(dealerActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	Create3DTextLabel("{FF0000}[Дилър на дрога]\n{ffffff}Натисни {FFFF00}Y{FFFFFF}за да си купиш дрога", COLOR_WHITE, 1360.5676, -1488.5371, 13.9469, 14, 0, 0);
	new policeActor;
	policeActor = CreateActor(280, 1552.5909, -1678.1149, 16.1953, 91.6356);	// lspd
	ApplyActorAnimation(policeActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	policeActor = CreateActor(281, 1552.5822, -1672.9746, 16.1953, 95.0823);	// lspd
	ApplyActorAnimation(policeActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	policeActor = CreateActor(281, 1543.8276, -1631.8647, 13.4006, 91.1149);	// lspd
	ApplyActorAnimation(policeActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	new policeLvpdActor;
	policeLvpdActor = CreateActor(281, 2292.8647, 2431.5969, 10.8203, 181.8041);	// lvpd
	ApplyActorAnimation(policeLvpdActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	new armyActor;
	armyActor = CreateActor(287, 829.4398, -2025.7986, 12.8672, 2.4099);	// army
	ApplyActorAnimation(armyActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	armyActor = CreateActor(287, 826.1551, -2025.7532, 12.8672, 352.9865);	// army
	ApplyActorAnimation(armyActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	armyActor = CreateActor(287, 844.7677, -2025.6830, 12.8672, 349.5397);	// army
	ApplyActorAnimation(armyActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	new fbiActor;
	fbiActor = CreateActor(280, 329.6326, -1512.6997, 36.0391, 231.5602);	// fbi
	ApplyActorAnimation(fbiActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
	new hospitalActor;
	hospitalActor = CreateActor(280, 1173.2739, -1327.2816, 15.3940, 274.9885);	// hospital
	ApplyActorAnimation(hospitalActor, "DEALER", "DEALER_IDLE", 4.0, 1, 0, 0, 0, 0);
}

public OnGameModeInit()
{
	SetGameModeText("Build: LoS 1.0");
	SendRconCommand("hostname [LW:RP] LawLess Roleplay | Bulgaria");
	SendRconCommand("rcon_password BulgariaNRcon32");
	SetTimer("GeneralTimer1s", 1000, 1);
	SetTimer("GeneralTimerms", 500, 1);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	LoadTurfs();
	LoadGraffiti();
	AddAllActors();
	AddAllObjects();
	AddSnowIfWinter();
	AddBizPickups();
	AddFoodPickups();
	DefineScreenTexts();
	DefineFuelStations();
	DefineTrashCans();
	DefineRadioStations();
	//DefineBusStops();
	SetAllVehFuel();
	//LoadOfficeCenter();
	LoadAllHouses();
	LoadForSaleVehs();
	LoadAllBiz();
	LoadPrivateVehs();
	ChangeHours();
	SetWeatherForPlayers();
	LoadBitcoins();
	LoadBuyItems();
	LoadBarricadeItems();
	LoadBuyVehicleAttachments();
	AddInteractiveActors();
	AddInteractivePickups();
	LimitPlayerMarkerRadius(40.0);
	for (new i; i < MAX_FACTIONS; i++)
	{
		LoadFaction(i);
	}

	AddPlayerClass(240, 1172.0785, -1323.4440, 15.4032, 269.7609, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(47, 1172.0785, -1323.4440, 15.4032, 269.7609, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(55, 1172.0785, -1323.4440, 15.4032, 269.7609, 0, 0, 0, 0, 0, 0);
	AddPlayerClass(93, 1172.0785, -1323.4440, 15.4032, 269.7609, 0, 0, 0, 0, 0, 0);

	//OfficePickup = CreatePickup(1318, 1, 1794.0231,-1301.7737,13.5050,0);
	driverLicPickup = CreateDynamicPickup(1581, 1, -2033.4341, -117.4944, 1035.1719);
	documentsPickup = CreateDynamicPickup(1239, 1, 226.8525, 2348.2913, 1017.1298);
	giftPickup = CreateDynamicPickup(19056, 1, 1480.3031, -1702.7001, 14.5226);
	busTeleportExitPickup = CreateDynamicPickup(1318, 1, 2021.9185, 2235.1279, 2103.9536, -1, -1);
	bankPickupDollar = CreateDynamicPickup(1274, 1, 1385.2511, -1679.9011, 51.2901, 1, 0);	//BANK
	buyBikePickup = CreateDynamicPickup(1318, 1, 703.5286, -514.7781, -5.6289, 501, 1);	//BIKE SHOP
	buyTelenorPickup = CreateDynamicPickup(1318, 1, 1839.7419, -1842.2269, 34.9082, 1);	//TELENOR SHOP
	buyCarPickup = CreateDynamicPickup(1318, 1, 2131.8313, -1150.7656, 24.1215, 0, 0);	//CAR SHOP
	RobPickup = CreateDynamicPickup(1274, 1, 2144.2419, 1639.6534, 993.5761, -1);
	//jobs - open
	pizzaJobPickup = CreateDynamicPickup(1275, 1, 1359.4478, 251.0649, 19.5669);	//Pizza Job
	sweepJobPickup = CreateDynamicPickup(1275, 1, 216.4074, 14.7296, 2.5708);	//Sweep Job
	mechanicJobPickup = CreateDynamicPickup(1275, 1, 1905.0569,-1790.2625,13.5469);	//Mechanic Job
	busJobPickup = CreateDynamicPickup(1275, 1, -544.6848, 2598.0608, 53.5156);	//Bus Job
	deliverJobPickup = CreateDynamicPickup(1275, 1, 40.8841, -247.4925, 1.7635);	//Deliver Job
	coalmineJobPickup = CreateDynamicPickup(1275, 1, 833.0172, 863.2982, 12.6990);	//Coallmine Job
	//jobs - close

	//CreateDynamicPickup(1318, 1,255.3226,73.6972,1003.6406);//sapd Guns todo later
	//CreateDynamicPickup(1318, 1,2280.1428,2395.9788,10.8203);//LV BUS
	//CreateDynamicPickup(1318, 1,-287.8196,1519.5582,75.3594);//Bone County BUS
	//CreateDynamicPickup(1318, 1,-169.5904,1142.1956,19.7422);//Bone County BUS 2

	CreateDynamicPickup(11746, 1, 1795.6138, -1911.3533, 13.3968);	//MAIN GARAGE GETMYCAR
	CreateDynamicPickup(11746, 1, 1796.0702, -1922.7603, 13.3912);	//MAIN GARAGE destroymycar

	CreateDynamicPickup(1239, 1, 732.7747, -1476.2097, 5.4688);	//FISH
	CreateDynamicPickup(1239, 1, 2488.7002, -1956.9419, 13.5965);	//AUTOSCHOOL
	bankPickup = CreateDynamicPickup(1274, 1, 1412.0486, -1699.9275, 13.5395);	// BANK
	CreateDynamicPickup(19132, 1, 1499.2130, -1025.9926, 601.5460, 1);	// BANK
	CreateDynamicPickup(19132, 1, 231.5891, 2348.4021, 1017.1257);
	blackMarket = CreateDynamicPickup(1254, 1, 1857.1810, -1874.2731, 13.4829);
	cityHall = CreateDynamicPickup(19132, 1, 1481.0225, -1772.3137, 18.7958);
	bikeShopPickup = CreateDynamicPickup(19132, 1, 701.7157, -518.4803, 16.3245);
	CreateDynamicPickup(1239, 1, 3190.9307, -1757.5547, 3001.0859);	//THE NEWS /NEWS
	fineGunLicPickup = CreateDynamicPickup(1239, 1, 1560.4720, -1672.3912, 2113.0349);	//lspd FINE
	robberyStartPickup = CreateDynamicPickup(1314, 1, -127.4285, 974.5004, 19.8516);	//robbery start
	robberyStartPickup2 = CreateDynamicPickup(1314, 1, 2447.9617, -1963.0054, 13.5469);	//robbery start
	CreateDynamicPickup(1275, 1, 1572.3451, -1666.6284, 2113.0349, 2);	//lspd Duty
	CreateDynamicPickup(1275, 1, 1572.3451, -1666.6284, 2113.0349, 1);	//lspd Duty
	CreateDynamicPickup(1275, 1, 1588.2194, -1676.2596, 2982.2800, 1);	//lvpd Duty
	CreateDynamicPickup(1275, 1, 882.1519, -2255.8872, 12.8527);	//LS Army Duty
	CreateDynamicPickup(1275, 1, 283.4168, 1387.7717, 10.5859);	//Fuel Company Duty
	CreateDynamicPickup(1275, 1, 211.5823, 1812.2897, 21.8594);	//LV Army Duty
	CreateDynamicPickup(1275, 1, 1571.7607, -1689.3435, 62.1910);	//FBI Duty
	CreateDynamicPickup(1275, 1, 1402.7806, -39.0275, 1000.9107);	//Medic Duty
	CreateDynamicPickup(1318, 1, 1578.2095, -1636.5558, 13.5550);	//lspd Arrest point
	CreateDynamicPickup(1318, 1, 2337.2117, 2459.1912, 14.9742);	//lvpd Arrest point
	paintballPickup = CreateDynamicPickup(1318, 1, PaintBall, 0, 0);	//paintball
	telenorPickup = CreateDynamicPickup(19132, 1, 1154.7313, -1458.0173, 15.7969);	//telenor out
	taxiPickup = CreateDynamicPickup(19132, 1, 1796.5181, -1937.3527, 13.5469);	//taxi out

	CreateDynamicPickup(1247, 1, 1568.0807, -1672.6967, 2982.2800, 1, 6);	//lvpd
	CreateDynamicPickup(1247, 1, 1554.3608, -1674.6322, 2113.0349, 1, 6);	//lspd
	lspdPickup = CreateDynamicPickup(1247, 1, 1555.5004, -1675.5570, 16.1953, 0, 0);	//lspd
	lvpdPickup = CreateDynamicPickup(1247, 1, 2287.1235, 2432.0078, 10.8203, 0, 0);	//lvpd
	CreateDynamicPickup(1247, 1, 1554.3608, -1674.6322, 2113.0349, 2, 6);	//bcpd
	fbiPickup[0] = CreateDynamicPickup(1247, 1, 326.1825, -1513.9746, 36.0325);	//FBI
	fbiPickup[1] = CreateDynamicPickup(1247, 1, -329.7000, 1537.0417, 76.6117);	//FBI
	CreateDynamicPickup(1247, 1, 1565.4529, -1693.0446, 62.1910, 1, 5);	//FBI
	CreateDynamicPickup(1247, 1, 1565.4529, -1693.0446, 62.1910, 1, 6);	//FBI
	//rc - open
	hospitalPickup = CreateDynamicPickup(19133, 1, 1172.0785, -1323.4440, 15.4032, 0, 0);	//HOSPITAL
	CreateDynamicPickup(19133, 1, 1402.7703, -25.7659, 1000.8640, 1, 3);	//HOSPITAL
	//rc - close
	//hospital 2 - open
	hospital2Pickup = CreateDynamicPickup(19133, 1, 2034.1549, -1402.1107, 17.2946, 0, 0);	//HOSPITAL
	CreateDynamicPickup(19133, 1, -204.4778, -1735.6512, 675.7687, -1, 1);	//HOSPITAL
	//hospital 2 - close

	newsPickup[0] = CreateDynamicPickup(19132, 1, 1654.2100, -1654.7755, 22.5156, 0, 0);	//THE NEWS
	CreateDynamicPickup(19132, 1, 3190.9485, -1762.9432, 3001.0859, 0, 0);	//THE NEWS
	CreateDynamicPickup(1239, 1, 1923.3948, -1792.1030, 13.3828);
	dmvPickup = CreateDynamicPickup(19132, 1, 1111.5974, -1795.6440, 16.5938);	//autoschool out
	CreateDynamicPickup(19132, 1, -2026.8644, -103.6019, 1035.1835, 1, 3);	//autoschool in
	ATMPickup[0] = CreateDynamicPickup(1274, 1, LOC_ATM_1);	//atm
	ATMPickup[1] = CreateDynamicPickup(1274, 1, LOC_ATM_2);	//atm
	ATMPickup[2] = CreateDynamicPickup(1274, 1, LOC_ATM_3);	//atm
	ATMPickup[3] = CreateDynamicPickup(1274, 1, LOC_ATM_4);	//atm
	ATMPickup[4] = CreateDynamicPickup(1274, 1, LOC_ATM_5);	//atm
	ATMPickup[5] = CreateDynamicPickup(1274, 1, LOC_ATM_6);	//atm
	ATMPickup[6] = CreateDynamicPickup(1274, 1, LOC_ATM_7);	//atm
	ATMPickup[7] = CreateDynamicPickup(1274, 1, LOC_ATM_8);	//atm
	ATMPickup[8] = CreateDynamicPickup(1274, 1, LOC_ATM_9);	//atm
	ATMPickup[9] = CreateDynamicPickup(1274, 1, LOC_ATM_10);	//atm
	ATMPickup[10] = CreateDynamicPickup(1274, 1, LOC_ATM_11);	//atm
	//gangs - open
	pressEnter[0] = CreateDynamicPickup(19132, 1, 300.3634, -1154.5724, 81.3906);	//crip - out
	pressEnter[1] = CreateDynamicPickup(19132, 1, 140.1744, 1366.1003, 1083.8594, 2);	//crip - in
	pressEnter[2] = CreateDynamicPickup(19132, 1, 2166.0020, -1671.1249, 15.0732);	//ballas - out
	pressEnter[3] = CreateDynamicPickup(19132, 1, 318.5366, 1114.6714, 1083.8828);	//ballas - in
	pressEnter[4] = CreateDynamicPickup(19132, 1, 2186.4338, -997.3134, 66.4688);	//vagos - out
	pressEnter[5] = CreateDynamicPickup(19132, 1, 140.1744, 1366.1003, 1083.8594, 1);	//vagos - in
	pressEnter[6] = CreateDynamicPickup(19132, 1, 1122.7068, -2036.9517, 69.8942);	//ru-mafiaf - out
	pressEnter[7] = CreateDynamicPickup(19132, 1, 225.8751, 1021.7491, 1084.0168, 1);	//ru-mafia - in
	pressEnter[8] = CreateDynamicPickup(19132, 1, 1456.1323, 2773.3992, 10.8203);	//italian mafia - out
	pressEnter[9] = CreateDynamicPickup(19132, 1, 447.0938, 1397.3625, 1084.3047, 1);	//italian mafia - in
	pressEnter[10] = CreateDynamicPickup(19132, 1, 1870.7598, -2019.6267, 13.5469);	//aztecas - out
	pressEnter[11] = CreateDynamicPickup(19132, 1, 2237.5168, -1081.1450, 1049.0234, 1);	//aztecas - in
	pressEnter[12] = CreateDynamicPickup(19132, 1, 1924.3322, 959.7982, 10.8203);	//triads - out
	pressEnter[13] = CreateDynamicPickup(19132, 1, 2196.8513, -1204.4027, 1049.0234, 1);	//triads - in
	pressEnter[14] = CreateDynamicPickup(19132, 1, 2495.3496, -1690.8401, 14.7656);	//grove - out
	pressEnter[15] = CreateDynamicPickup(19132, 1, 2495.9983, -1692.9227, 1014.7422, 1);	//grove - in
	//gangs - close
	//Create3DTextLabel("{71B1F0}Полиция\nНатиснете {ff0000}SCROLL {71B1F0}за да вземете оръжия",0xFFFFFFFF,255.3226,73.6972,1003.6406,15,1,6); todo later
	//drug farm - open
	//drug farm - close
	//locations - open
	//Create3DTextLabel("{8fbadb}Dillimore Police",0xFFFFFFFF,626.9658,-571.7827,17.9207,15,0,0);
	//Create3DTextLabel("{8fbadb}Palomino Creek Bank",0xFFFFFFFF,1412.0486,-1699.9275,13.5395,15,0,0);
	//Create3DTextLabel("{8fbadb}Red County Hall",0xFFFFFFFF,1481.0225,-1772.3137,18.7958,15,0,0);
	//locations - close
	//main garage - open
	Create3DTextLabel("{BFFF80}[Главен гараж]\n{FFFFFF}Използвай {40BF00}/getmycar {ffffff}за да вземеш личния си превоз", 0xFFFFFFFF, 1795.6138, -1911.3533, 13.3968, 23, 0, 0);
	Create3DTextLabel("{BFFF80}[Главен гараж]\n{FFFFFF}Използвай {40BF00}/destroymycar {ffffff}за да премахнеш превоза си завинаги", 0xFFFFFFFF, 1796.0702, -1922.7603, 13.3912, 23, 0, 0);
	//main garage - close
	//jobs - open
	Create3DTextLabel("{e7905e}Pizza Job", 0xFFFFFFFF, 1359.4478, 251.0649, 19.5669, 15, 0, 0);
	Create3DTextLabel("{e7905e}Bus Job", 0xFFFFFFFF, -544.6848, 2598.0608, 53.5156, 15, 0, 0);
	Create3DTextLabel("{e7905e}Sweep Job", 0xFFFFFFFF, 216.4074, 14.7296, 2.5708, 15, 0, 0);
	Create3DTextLabel("{e7905e}Mechanic Job", 0xFFFFFFFF, 1905.0569,-1790.2625,13.5469, 15, 0, 0);
	Create3DTextLabel("{e7905e}Deliver Job", 0xFFFFFFFF, 40.8841, -247.4925, 1.7635, 15, 0, 0);
	//jobs - close
	//fuel co - open
    Create3DTextLabel("{ff0000}За да заредиш цистерната напиши\n{FFFF00}/refillpt", 0xFFFFFFFF, 264.3938,1457.5801,10.5859, 25, 0, 0);
    //fuel co - close
	
	//info + pickups spawn - open
	
	//--------------------Spawn 1----------------------------------------------------
	Create3DTextLabel("Можете да видите всички платени услуги, чрез\n{FF0000}/vouchers", 0xFFFFFFFF, 1144.9963,-1767.0234,16.5938, 21, 0, 0);
	CreateDynamicPickup(1239, 1, 1144.9963,-1767.0234,16.5938, 0, 0);
	
	Create3DTextLabel("Достигнете до всяка точка на сървъра, чрез\n{FF0000}/gps", 0xFFFFFFFF, 1143.0973,-1767.0219,16.5938, 21, 0, 0);
	CreateDynamicPickup(1239, 1, 1143.0973,-1767.0219,16.5938, 0, 0);
	
	Create3DTextLabel("Запознайте се с правилата, чрез командата\n{FF0000}/rules", 0xFFFFFFFF, 1160.4908,-1768.2306,16.5938, 21, 0, 0);
	CreateDynamicPickup(1239, 1, 1160.4908,-1768.2306,16.5938, 0, 0);
	
	Create3DTextLabel("Ако си търсите работа, като начинаещ, отидете в кметството\nи се запознайте с възможностите", 0xFFFFFFFF, 1160.8087,-1770.8740,16.5938, 21, 0, 0);
	CreateDynamicPickup(1239, 1, 1160.8087,-1770.8740,16.5938, 0, 0);
	
	//-------------------------------Spawn 2------------------------------------------
	
	Create3DTextLabel("Можете да видите всички платени услуги, чрез\n{FF0000}/vouchers", 0xFFFFFFFF, 1730.8646,-1907.7257,13.5627, 21, 0, 0);
	CreateDynamicPickup(1239, 1, 1730.8646,-1907.7257,13.5627, 0, 0);
	
	Create3DTextLabel("Достигнете до всяка точка на сървъра, чрез\n{FF0000}/gps", 0xFFFFFFFF, 1730.8547,-1911.8691,13.5627, 21, 0, 0);
	CreateDynamicPickup(1239, 1, 1730.8547,-1911.8691,13.5627, 0, 0);
	
	Create3DTextLabel("Запознайте се с правилата, чрез командата\n{FF0000}/rules", 0xFFFFFFFF, 1730.6019,-1915.8209,13.5639, 21, 0, 0);
	CreateDynamicPickup(1239, 1, 1730.6019,-1915.8209,13.5639, 0, 0);
	
	Create3DTextLabel("Ако си търсите работа, като начинаещ, отидете в кметството\nи се запознайте с възможностите", 0xFFFFFFFF, 1730.4510,-1920.7660,13.5663, 21, 0, 0);
	CreateDynamicPickup(1239, 1, 1730.4510,-1920.7660,13.5663, 0, 0);
	
	Create3DTextLabel("Можете да видите своето Job ниво, чрез\n{ff0000}/jobs", 0xFFFFFFFF, 1730.2710,-1924.2412,13.5679, 21, 0, 0);
	CreateDynamicPickup(1239, 1, 1730.2710,-1924.2412,13.5679, 0, 0);
	
	//info + pickups spawn - close
	
	//info - open
	Create3DTextLabel("{FF0000}PaintBall Arena", 0xFFFFFFFF, PaintBall, 17, 0, 0);
	//Create3DTextLabel("Защо да станете VIP?\n{00ff00}Ако сте VIP получавате бонуси от сървъра за по-лесно развитие.\n{ff0000}/viphelp за повече информация",COLOR_WHITE,2297.3643,2405.6240,10.8203,25,0,0);
	//Create3DTextLabel("Не знаете командите?\n{ffff00}Можете да видите всички неща в сървъра само с една команда\n{ff0000}/help - команден панел",COLOR_WHITE,1535.8749,-1684.2134,13.5469,25,0,0);
	Create3DTextLabel("{FCFF8F}Autoshop\n{FFFFFF}Влезте в кола, след което натиснете 'Купи', ако имате достатъчно пари и ниво.", 0xFFFFFFFF, 1085.3721, 1076.5508, 10.8359, 50, 0, 0);	//lv - 1
	Create3DTextLabel("{FCFF8F}Autoshop\n{FFFFFF}Влезте в кола, след което натиснете 'Купи', ако имате достатъчно пари и ниво.", 0xFFFFFFFF, 2155.8245, -1135.9541, 25.3614, 35, 0, 0);	//ls
	Create3DTextLabel("Напишете {5EF403}/neon {FFFFFF}за да си сложите какъвто цвят неон искате на вашата кола", COLOR_WHITE, 1880.8676, -1793.3455, 13.8777, 25, 0, 0);
	//Create3DTextLabel("Напишете /sticker за да си сложите какъвто стикер искате на вашата кола.",COLOR_LIGHTBLUE3,1929.0383,-1861.0433,15.4305,25,0,0);
	//Create3DTextLabel("{FCFF8F}Информация за сървъра\n{FFFFFF}Можете да посетите болницата и да се излекувате вътре!",0xFFFFFFFF,1179.3984,-1323.3912,14.1675,19,0,0);
	//info - close
	Create3DTextLabel("{00ff00}За да си вземете подарък оттук напишете {FF0000}/gift", 0xFFFFFFFF, 1480.3031, -1702.7001, 14.5226, 25, 0, 0);	//gift

	Create3DTextLabel("{ebebeb}Лотария\n{00ff00}За да пробвате късмета си, натиснете Y", 0xFFFFFFFF, 1535.3966, -1712.6166, 13.5469, 25, 0, 0);	//lottery

	Create3DTextLabel("{ebebeb}Риболов\n{2C80C4}За да метнете въдицата, трябва да сте тук или в лодка\nИзползвайте /fish за да хвърлите въдицата", 0xFFFFFFFF, 2102.1777, -104.5141, 2.2685, 25, 0, 0);	//FISH

	Create3DTextLabel("{ebebeb}Гараж на механиците\n{FF927B}Оттук механик може да прегледа вашето превозно средство", 0xFFFFFFFF, 1596.5637, 2237.7104, 10.9496, 45, 0, 0);
	Create3DTextLabel("{ebebeb}The News\n{00cc00}Оттук можете да предавате новините", 0xFFFFFFFF, 3190.9307, -1757.5547, 3001.0859, 6, 0, 0);	//THE NEWS
	Create3DTextLabel("{ebebeb}The News\n{00cc00}Оттук можете да предавате новините", 0xFFFFFFFF, 3190.9307, -1757.5547, 3001.0859, 6, 1, 0);	//THE NEWS
	Create3DTextLabel("{ebebeb}Точка за арест\n\n{FFFFFF}За да арестуваш играч, напиши {ff0000}/arrest", 0xFFFFFFFF, 1578.2095, -1636.5558, 13.5550, 12, 0, 0);	//lspd
	Create3DTextLabel("{ebebeb}Точка за арест\n\n{FFFFFF}За да арестуваш играч, напиши {ff0000}/arrest", 0xFFFFFFFF, 2337.2117, 2459.1912, 14.9742, 12, 0, 0);	//lvpd
	Create3DTextLabel("{ebebeb}Смяна\n\n{FFFFFF}Използвайте {40BF00}/policeduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 1588.2194, -1676.2596, 2982.2800, 5, 1, 6);	//lvpd
	Create3DTextLabel("{ebebeb}Смяна\n\n{FFFFFF}Използвайте {40BF00}/policeduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 1572.3451, -1666.6284, 2113.0349, 5, 1, 6);	//lspd
	Create3DTextLabel("{ebebeb}Смяна\n\n{FFFFFF}Използвайте {40BF00}/policeduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 1572.3451, -1666.6284, 2113.0349, 5, 2, 6);	//lspd
	Create3DTextLabel("{ebebeb}Смяна\n\n{FFFFFF}Използвайте {40BF00}/fbiduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 1571.7607, -1689.3435, 62.1910, 5, 1, 5);	//FBI
	Create3DTextLabel("{ebebeb}Смяна\n\n{FFFFFF}Използвайте {40BF00}/fbiduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 1571.7607, -1689.3435, 62.1910, 5, 1, 6);	//FBI
	Create3DTextLabel("{ebebeb}Смяна\n\n{FFFFFF}Използвайте {40BF00}/armyduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 882.1519, -2255.8872, 12.8527, 5, 0, 0);	//ls army
	Create3DTextLabel("{ebebeb}Смяна\n\n{FFFFFF}Използвайте {40BF00}/armyduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 211.5823, 1812.2897, 21.8594, 5, 0, 0);	//lv army
	Create3DTextLabel("{ebebeb}Смяна\n\n{FFFFFF}Използвайте {40BF00}/taxiduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 1843.5786, 664.0244, 29.3228, 5, 1, 1);	//taxi
	Create3DTextLabel("{ebebeb}Смяна\n\n{FFFFFF}Използвайте {40BF00}/fuelcoduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 283.4168, 1387.7717, 10.5859, 5, 0, 0);	//fuel co duty
	Create3DTextLabel("{ebebeb}Смяна\n\n{FFFFFF}Използвайте {40BF00}/medicduty {ffffff}за да влезете на смяна", 0xFFFFFFFF, 1402.7806, -39.0275, 1000.9107, 5, 1, 3);	//FBI
	Create3DTextLabel("{ebebeb}Информация:\n{FF4D4D}За да смените радиостанцията на колата си, натиснете Num8 или Num2 (стрелките в дясно)\nЗа да изключите съобщенията за радиото, използвайте /audiomsg", 0xFFFFFFFF, 1133.4510, -1702.3698, 13.7400, 25, 0, 0);	//RENT A CAR

	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 1851.9668, -1843.7668, 34.8882, 12, 1, 1);	//TELENOR IN
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 701.7798, -510.9636, -5.5826, 25, 501, 1);	//BIKE SHOP
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 1405.9008, -1680.4558, 51.2845, 25, 1, 0);	//BANK
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 1565.4529, -1693.0446, 62.1910, 25, 1, 5);	//FBI HQ
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 1565.4529, -1693.0446, 62.1910, 25, 1, 6);	//FBI HQ
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 1568.0807, -1672.6967, 2982.2800, 25, 1, 6);	//lvpd
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 1554.3608, -1674.6322, 2113.0349, 25, 1, 6);	//lspd
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 1554.3608, -1674.6322, 2113.0349, 25, 2, 6);	//lspd
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 231.5891, 2348.4021, 1017.1257, 3, 2);	//CITY HALL 2
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 231.5891, 2348.4021, 1017.1257, 3, 1);	//CITY HALL
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 3190.9485, -1762.9432, 3001.0859, 3, 0);	//THE NEWS
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 1839.1335, 653.5633, 29.2490, 5, 1, 1);	//TAXI INTERIOR

	//Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете",0xFFFFFFFF,1172.0785,-1323.4440,15.4032,0,0);	//HOSPITAL
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 1402.7703, -25.7659, 1000.8640, 3, 1);	//HOSPITAL
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, 1402.7703, -25.7659, 1000.8640, 3, 2);	//HOSPITAL
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, -204.4778, -1735.6512, 675.7687, -1, -1);	//LS HOSPITAL 2
	Create3DTextLabel("{FFFFFF}Натиснете {FF0000}ENTER {FFFFFF}за да излезете", 0xFFFFFFFF, -2026.8644, -103.6019, 1035.1835, 3, 1);	//AUTOSCHOOL
	//kmetstvo interior - open
	new cityhall = CreateObject(19353, 213.0528, 2346.1213, 1017.7799, 0.0000, 0.0000, -0.0392);
	SetObjectMaterialText(cityhall, "CITY HALL", 0, 140, "Arial", 80, 0, -16777216, 0, 1);

	new opcinatextina = CreateObject(19353, 213.0725, 2351.1589, 1017.7799, 0.0000, 0.0000, 0.0843);
	SetObjectMaterialText(opcinatextina, "San Andreas", 0, 140, "Arial", 80, 0, -16777216, 0, 1);

	new uniqueopcint1 = CreateObject(19377, 217.72150, 2354.42090, 1016.00830, 0.00000, 90.00000, 90.00000);
	new uniqueopcint2 = CreateObject(19377, 227.30769, 2354.42090, 1016.00830, 0.00000, 90.00000, 90.00000);
	new uniqueopcint3 = CreateObject(19377, 217.72261, 2344.01758, 1016.00830, 0.00000, 90.00000, 90.00000);
	new uniqueopcint4 = CreateObject(19377, 227.30769, 2343.99756, 1016.01630, 0.00000, 90.00000, 90.00000);
	new uniqueopcint5 = CreateObject(19377, 227.30769, 2338.25464, 1016.01727, 0.00000, 90.00000, 90.00000);
	new uniqueopcint6 = CreateObject(19377, 217.72260, 2338.25464, 1016.00928, 0.00000, 90.00000, 90.00000);
	SetObjectMaterial(uniqueopcint1, 0, 16150, "ufo_bar", "sa_wood08_128", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcint2, 0, 16150, "ufo_bar", "sa_wood08_128", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcint3, 0, 16150, "ufo_bar", "sa_wood08_128", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcint4, 0, 16150, "ufo_bar", "sa_wood08_128", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcint5, 0, 16150, "ufo_bar", "sa_wood08_128", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcint6, 0, 16150, "ufo_bar", "sa_wood08_128", 0xFFFFFFFF);
	new uniqueopcinazid1 = CreateObject(19447, 232.14383, 2343.55640, 1017.81036, 0.00000, 0.00000, 0.00000);
	new uniqueopcinazid2 = CreateObject(19447, 232.14380, 2353.10742, 1017.81042, 0.00000, 0.00000, 0.00000);
	new uniqueopcinazid3 = CreateObject(19447, 232.14380, 2362.72607, 1017.81042, 0.00000, 0.00000, 0.00000);
	new uniqueopcinazid4 = CreateObject(19447, 217.77470, 2364.33960, 1017.81042, 0.00000, 0.00000, 90.00000);
	new uniqueopcinazid5 = CreateObject(19447, 213.04924, 2354.89258, 1017.81042, 0.00000, 0.00000, 0.00000);
	new uniqueopcinazid6 = CreateObject(19447, 213.04919, 2345.36255, 1017.81042, 0.00000, 0.00000, 0.00000);
	new uniqueopcinazid7 = CreateObject(19447, 213.04919, 2335.76147, 1017.81042, 0.00000, 0.00000, 0.00000);
	new uniqueopcinazid8 = CreateObject(19447, 224.13368, 2333.85718, 1017.81042, 0.00000, 0.00000, -30.00000);
	new uniqueopcinazid9 = CreateObject(19447, 231.29480, 2337.99829, 1017.81042, 0.00000, 0.00000, 90.00000);
	new uniqueopcinazid10 = CreateObject(19447, 232.14380, 2334.05640, 1017.81042, 0.00000, 0.00000, 0.00000);
	new uniqueopcinazid11 = CreateObject(19447, 212.76630, 2337.99829, 1017.81042, 0.00000, 0.00000, 90.00000);
	new uniqueopcinazid12 = CreateObject(19447, 219.91988, 2333.83618, 1017.81042, 0.00000, 0.00000, 30.00000);
	new uniqueopcinazid13 = CreateObject(19447, 231.29480, 2359.49829, 1017.81042, 0.00000, 0.00000, 90.00000);
	new uniqueopcinazid14 = CreateObject(19447, 224.15384, 2363.64429, 1017.81042, 0.00000, 0.00000, 30.00000);
	new uniqueopcinazid15 = CreateObject(19447, 212.70030, 2359.49438, 1017.81042, 0.00000, 0.00000, 90.00000);
	new uniqueopcinazid16 = CreateObject(19447, 219.84868, 2363.67334, 1017.81042, 0.00000, 0.00000, -30.00000);
	SetObjectMaterial(uniqueopcinazid1, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid2, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid3, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid4, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid5, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid6, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid7, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid8, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid9, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid10, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid11, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid12, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid13, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid14, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid15, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinazid16, 0, 8954, "vgsespras", "sf_spray2", 0xFFFFFFFF);
	new uniqueopcinasre1 = CreateObject(19448, 227.23059, 2350.14844, 1016.03979, 0.00000, 90.00000, 90.00000);
	new uniqueopcinasre2 = CreateObject(19448, 227.25060, 2346.71289, 1016.03979, 0.00000, 90.00000, 90.00000);
	new uniqueopcinasre3 = CreateObject(19448, 222.28081, 2352.22534, 1016.04382, 0.00000, 90.00000, 90.00000);
	new uniqueopcinasre4 = CreateObject(19448, 222.28081, 2348.74658, 1016.04382, 0.00000, 90.00000, 90.00000);
	new uniqueopcinasre5 = CreateObject(19448, 222.28081, 2345.27612, 1016.04382, 0.00000, 90.00000, 90.00000);
	new uniqueopcinasre6 = CreateObject(19448, 212.85710, 2350.14844, 1016.03979, 0.00000, 90.00000, 90.00000);
	new uniqueopcinasre7 = CreateObject(19448, 212.85710, 2346.71362, 1016.03979, 0.00000, 90.00000, 90.00000);
	SetObjectMaterial(uniqueopcinasre1, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	SetObjectMaterial(uniqueopcinasre2, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	SetObjectMaterial(uniqueopcinasre3, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	SetObjectMaterial(uniqueopcinasre4, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	SetObjectMaterial(uniqueopcinasre5, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	SetObjectMaterial(uniqueopcinasre6, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	SetObjectMaterial(uniqueopcinasre7, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	new uniqueopcinalala1 = CreateObject(19449, 227.25630, 2338.47119, 1016.08533, 0.00000, 90.00000, 90.00000);
	new uniqueopcinalala2 = CreateObject(19449, 217.63640, 2338.47119, 1016.08533, 0.00000, 90.00000, 90.00000);
	new uniqueopcinalala3 = CreateObject(19449, 223.11404, 2334.95410, 1016.08533, 0.00000, 90.00000, 90.00000);
	new uniqueopcinalala4 = CreateObject(19449, 217.84125, 2358.66235, 1016.08533, 0.00000, 90.00000, 90.00000);
	new uniqueopcinalala5 = CreateObject(19449, 227.43130, 2358.66235, 1016.08533, 0.00000, 90.00000, 90.00000);
	new uniqueopcinalala6 = CreateObject(19449, 222.83783, 2362.16260, 1016.08533, 0.00000, 90.00000, 90.00000);
	SetObjectMaterial(uniqueopcinalala1, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	SetObjectMaterial(uniqueopcinalala2, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	SetObjectMaterial(uniqueopcinalala3, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	SetObjectMaterial(uniqueopcinalala4, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	SetObjectMaterial(uniqueopcinalala5, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	SetObjectMaterial(uniqueopcinalala6, 0, 10948, "skyscrapper_sfs", "ws_asphalt", 0xFF3F3F3F);
	new uniqueopcinauze1 = CreateObject(19087, 226.48024, 2338.54614, 1017.77142, 45.00000, 0.00000, 0.00000);
	new uniqueopcinauze2 = CreateObject(19087, 226.48019, 2338.07813, 1018.24127, 45.00000, 0.00000, 0.00000);
	new uniqueopcinauze3 = CreateObject(19087, 217.58920, 2338.07813, 1018.24127, 45.00000, 0.00000, 0.00000);
	new uniqueopcinauze4 = CreateObject(19087, 217.58920, 2338.54614, 1017.77142, 45.00000, 0.00000, 0.00000);
	new uniqueopcinauze5 = CreateObject(19087, 226.48950, 2359.43872, 1018.62750, -45.00000, 0.00000, 0.00000);
	new uniqueopcinauze6 = CreateObject(19087, 226.48950, 2358.70459, 1017.89362, -45.00000, 0.00000, 0.00000);
	new uniqueopcinauze7 = CreateObject(19087, 217.48950, 2358.70459, 1017.89362, -45.00000, 0.00000, 0.00000);
	new uniqueopcinauze8 = CreateObject(19087, 217.48950, 2359.43262, 1018.62750, -45.00000, 0.00000, 0.00000);
	new uniqueopcinauze9 = CreateObject(19087, 228.64964, 2355.55957, 1020.64532, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze10 = CreateObject(19087, 228.64964, 2355.55957, 1018.21149, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze11 = CreateObject(19087, 228.64960, 2354.57568, 1018.21149, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze12 = CreateObject(19087, 229.64160, 2354.57568, 1018.21149, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze13 = CreateObject(19087, 229.63960, 2355.56152, 1018.21149, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze14 = CreateObject(19087, 229.63960, 2355.56152, 1020.64532, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze15 = CreateObject(19087, 229.64160, 2354.57568, 1020.64532, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze16 = CreateObject(19087, 228.64960, 2354.57568, 1020.64532, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze17 = CreateObject(19087, 215.91090, 2343.98633, 1018.21149, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze18 = CreateObject(19087, 215.91090, 2342.99634, 1018.21149, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze19 = CreateObject(19087, 214.92090, 2342.99634, 1018.21149, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze20 = CreateObject(19087, 214.92090, 2343.98633, 1018.21149, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze21 = CreateObject(19087, 214.92090, 2343.98633, 1020.64532, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze22 = CreateObject(19087, 214.92090, 2342.99634, 1020.64532, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze23 = CreateObject(19087, 215.91090, 2343.98633, 1020.64532, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze24 = CreateObject(19087, 215.91090, 2342.99634, 1020.64532, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze25 = CreateObject(19087, 221.76109, 2349.01538, 1020.64532, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze26 = CreateObject(19087, 221.76109, 2347.62158, 1020.64532, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze27 = CreateObject(19087, 221.07851, 2348.31494, 1020.64532, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze28 = CreateObject(19087, 222.47050, 2348.31494, 1020.64532, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze29 = CreateObject(19087, 221.76109, 2349.01538, 1018.21149, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze30 = CreateObject(19087, 222.47050, 2348.31494, 1018.21149, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze31 = CreateObject(19087, 221.76109, 2347.62158, 1018.21149, 0.00000, 0.00000, 0.00000);
	new uniqueopcinauze32 = CreateObject(19087, 221.07851, 2348.31494, 1018.21149, 0.00000, 0.00000, 0.00000);
	SetObjectMaterial(uniqueopcinauze1, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFEF);
	SetObjectMaterial(uniqueopcinauze2, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze3, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze4, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze5, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze6, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze7, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze8, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze9, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze10, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze11, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze12, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze13, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze14, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze15, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze16, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze17, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze18, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze19, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze20, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze21, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze22, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze23, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze24, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze25, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze26, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze27, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze28, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze29, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze30, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze31, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinauze32, 0, 1676, "wshxrefpump", "black64", 0xFFFFFFFF);
	new uniqueopcinawowo1 = CreateObject(19446, 221.43149, 2335.65454, 1017.81042, 0.00000, 0.00000, 90.00000);
	new uniqueopcinawowo2 = CreateObject(19446, 222.73666, 2362.50317, 1017.81042, 0.00000, 0.00000, 90.00000);
	SetObjectMaterial(uniqueopcinawowo1, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinawowo2, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	new uniqueopcinakrovvvv = CreateObject(19538, 227.39206, 2344.12231, 1019.51874, 0.00000, 0.00000, 0.00000);
	SetObjectMaterial(uniqueopcinakrovvvv, 0, 1675, "wshxrefhse", "greygreensubuild_128", 0xFFFFFFFF);
	new uniqueopcinastol1 = CreateObject(19428, 225.70531, 2348.25562, 1016.97913, 0.00000, 90.00000, 90.00000);
	new uniqueopcinastol2 = CreateObject(19428, 225.69090, 2345.85205, 1015.64880, 0.00000, 40.00000, 90.00000);
	new uniqueopcinastol3 = CreateObject(19428, 225.69090, 2350.64795, 1015.64880, 0.00000, -40.00000, 90.00000);
	new uniqueopcinastol4 = CreateObject(19428, 226.27124, 2348.34741, 1015.20221, 0.00000, 0.00000, 0.00000);
	new uniqueopcinastol5 = CreateObject(19428, 225.10719, 2348.34741, 1015.20221, 0.00000, 0.00000, 0.00000);
	new uniqueopcinastol6 = CreateObject(19428, 222.16547, 2344.55396, 1016.97913, 0.00000, 90.00000, 0.00000);
	new uniqueopcinastol7 = CreateObject(19428, 219.86307, 2344.56445, 1015.64880, 0.00000, 40.00000, 0.00000);
	new uniqueopcinastol8 = CreateObject(19428, 224.58110, 2344.56445, 1015.64880, 0.00000, -40.00000, 0.00000);
	new uniqueopcinastol9 = CreateObject(19428, 222.29895, 2343.89502, 1015.20221, 0.00000, 0.00000, 90.00000);
	new uniqueopcinastol10 = CreateObject(19428, 222.29900, 2345.16406, 1015.20221, 0.00000, 0.00000, 90.00000);
	new uniqueopcinastol11 = CreateObject(19428, 222.16550, 2352.69458, 1016.97913, 0.00000, 90.00000, 0.00000);
	new uniqueopcinastol12 = CreateObject(19428, 224.34129, 2352.68384, 1015.64880, 0.00000, -40.00000, 0.00000);
	new uniqueopcinastol13 = CreateObject(19428, 219.81129, 2352.68384, 1015.64880, 0.00000, 40.00000, 0.00000);
	new uniqueopcinastol14 = CreateObject(19428, 222.29900, 2353.32324, 1015.20221, 0.00000, 0.00000, 90.00000);
	new uniqueopcinastol15 = CreateObject(19428, 222.29900, 2352.05908, 1015.20221, 0.00000, 0.00000, 90.00000);
	new uniqueopcinastol16 = CreateObject(19428, 218.52831, 2348.25562, 1016.97913, 0.00000, 90.00000, 90.00000);
	new uniqueopcinastol17 = CreateObject(19428, 218.55478, 2350.58154, 1015.64880, 0.00000, -40.00000, 90.00000);
	new uniqueopcinastol18 = CreateObject(19428, 218.55479, 2345.96143, 1015.64880, 0.00000, 40.00000, 90.00000);
	new uniqueopcinastol19 = CreateObject(19428, 219.15919, 2348.34741, 1015.20221, 0.00000, 0.00000, 0.00000);
	new uniqueopcinastol20 = CreateObject(19428, 217.88721, 2348.34741, 1015.20221, 0.00000, 0.00000, 0.00000);
	SetObjectMaterial(uniqueopcinastol1, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol2, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol3, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol4, 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol5, 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol6, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol7, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol8, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol9, 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol10, 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol11, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol12, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol13, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol14, 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol15, 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol16, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol17, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol18, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol19, 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinastol20, 0, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
	new uniqueopcinaintstup1 = CreateObject(18762, 221.77013, 2348.31909, 1018.47528, 0.00000, 0.00000, 45.00000);
	new uniqueopcinaintstup2 = CreateObject(18762, 215.41948, 2343.48950, 1018.47528, 0.00000, 0.00000, 0.00000);
	new uniqueopcinaintstup3 = CreateObject(18762, 229.14954, 2355.07324, 1018.47528, 0.00000, 0.00000, 0.00000);
	SetObjectMaterial(uniqueopcinaintstup1, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinaintstup2, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinaintstup3, 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
	new uniqueopcinavaza1 = CreateObject(2242, 226.13493, 2346.78931, 1017.18646, 0.00000, 0.00000, 0.00000);
	new uniqueopcinavaza2 = CreateObject(2242, 226.13493, 2346.78931, 1017.18646, 0.00000, 0.00000, 0.00000);
	new uniqueopcinavaza3 = CreateObject(2242, 223.66881, 2343.97095, 1017.18646, 0.00000, 0.00000, 0.00000);
	new uniqueopcinavaza4 = CreateObject(2242, 217.96176, 2346.72778, 1017.18646, 0.00000, 0.00000, 0.00000);
	new uniqueopcinavaza5 = CreateObject(2242, 223.51051, 2353.23047, 1017.18646, 0.00000, 0.00000, 0.00000);
	new uniqueopcinavaza6 = CreateObject(2242, 223.78389, 2360.29028, 1016.76508, 0.00000, 0.00000, 0.00000);
	new uniqueopcinavaza7 = CreateObject(2242, 220.85815, 2359.52344, 1016.76508, 0.00000, 0.00000, 0.00000);
	new uniqueopcinavaza8 = CreateObject(2242, 223.39911, 2337.67358, 1016.76508, 0.00000, 0.00000, 0.00000);
	new uniqueopcinavaza9 = CreateObject(2242, 220.23515, 2338.87915, 1016.76508, 0.00000, 0.00000, 0.00000);
	SetObjectMaterial(uniqueopcinavaza1, 0, 12853, "cunte_gas01", "sw_brick04", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinavaza2, 0, 12853, "cunte_gas01", "sw_brick04", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinavaza3, 0, 12853, "cunte_gas01", "sw_brick04", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinavaza4, 0, 12853, "cunte_gas01", "sw_brick04", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinavaza5, 0, 12853, "cunte_gas01", "sw_brick04", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinavaza6, 0, 12853, "cunte_gas01", "sw_brick04", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinavaza7, 0, 12853, "cunte_gas01", "sw_brick04", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinavaza8, 0, 12853, "cunte_gas01", "sw_brick04", 0xFFFFFFFF);
	SetObjectMaterial(uniqueopcinavaza9, 0, 12853, "cunte_gas01", "sw_brick04", 0xFFFFFFFF);
	new uniqeopcinalap1 = CreateObject(19893, 219.01657, 2348.41821, 1017.06726, 0.00000, 0.00000, 75.17999);
	new uniqeopcinalap2 = CreateObject(19893, 221.93842, 2352.22339, 1017.06726, 0.00000, 0.00000, 19.97997);
	new uniqeopcinalap3 = CreateObject(19893, 225.20779, 2348.63281, 1017.06726, 0.00000, 0.00000, -75.90005);
	new uniqeopcinalap4 = CreateObject(19893, 222.19397, 2344.99829, 1017.06726, 0.00000, 0.00000, -187.92003);
	SetObjectMaterial(uniqeopcinalap1, 1, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
	SetObjectMaterial(uniqeopcinalap2, 1, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
	SetObjectMaterial(uniqeopcinalap3, 1, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
	SetObjectMaterial(uniqeopcinalap4, 1, 16150, "ufo_bar", "GEwhite1_64", 0xFFFFFFFF);
	CreateObject(2894, 218.67793, 2347.61670, 1017.06787, 0.00000, 0.00000, 109.44003);
	CreateObject(2894, 221.43150, 2344.64722, 1017.06787, 0.00000, 0.00000, 140.03999);
	CreateObject(2894, 225.39616, 2347.92432, 1017.06787, 0.00000, 0.00000, 234.06003);
	CreateObject(2894, 222.52798, 2352.38232, 1017.06787, 0.00000, 0.00000, 328.98019);
	CreateObject(2614, 213.18527, 2348.43091, 1017.83246, 0.00000, 0.00000, 90.00000);
	CreateObject(1538, 232.01872, 2346.88306, 1016.09448, 0.00000, 0.00000, -90.00000);
	CreateObject(1538, 232.01871, 2348.36768, 1016.09448, 0.00000, 0.00000, -90.00000);
	CreateObject(1538, 232.01871, 2349.82813, 1016.09448, 0.00000, 0.00000, -90.00000);
	CreateObject(1538, 232.01871, 2351.26367, 1016.09448, 0.00000, 0.00000, -90.00000);
	CreateObject(1703, 224.67821, 2336.51367, 1016.16998, 0.00000, 0.00000, 180.00000);
	CreateObject(1703, 221.51680, 2336.51367, 1016.16998, 0.00000, 0.00000, 180.00000);
	CreateObject(1704, 225.73767, 2338.09668, 1016.17200, 0.00000, 0.00000, -118.49991);
	CreateObject(1704, 218.79163, 2337.38086, 1016.17200, 0.00000, 0.00000, -236.57970);
	CreateObject(1827, 223.70027, 2338.21631, 1016.17236, 0.00000, 0.00000, 0.00000);
	CreateObject(1827, 220.45270, 2338.21631, 1016.17242, 0.00000, 0.00000, 0.00000);
	CreateObject(1703, 222.41838, 2361.75977, 1016.16998, 0.00000, 0.00000, 0.00000);
	CreateObject(1703, 219.63870, 2361.75977, 1016.16998, 0.00000, 0.00000, 0.00000);
	CreateObject(1704, 218.41234, 2359.76685, 1016.17200, 0.00000, 0.00000, -302.69928);
	CreateObject(1704, 224.96390, 2360.80225, 1016.17200, 0.00000, 0.00000, -420.41919);
	CreateObject(1827, 220.66890, 2360.14185, 1016.17236, 0.00000, 0.00000, 0.00000);
	CreateObject(1827, 223.56911, 2359.78247, 1016.17236, 0.00000, 0.00000, 0.00000);
	CreateObject(19325, 226.48010, 2336.53857, 1015.09552, 45.00000, 0.00000, 0.00000);
	CreateObject(19325, 217.58270, 2336.53857, 1015.09552, 45.00000, 0.00000, 0.00000);
	CreateObject(19325, 217.50270, 2358.82813, 1015.09552, 45.00000, 0.00000, 0.00000);
	CreateObject(19325, 226.48650, 2358.82813, 1015.09552, 45.00000, 0.00000, 0.00000);
	CreateObject(1721, 216.67010, 2359.07959, 1016.17010, 0.00000, 0.00000, 180.00000);
	CreateObject(1721, 215.67010, 2359.07959, 1016.17010, 0.00000, 0.00000, 180.00000);
	CreateObject(1721, 214.67010, 2359.07959, 1016.17010, 0.00000, 0.00000, 180.00000);
	CreateObject(1721, 213.67010, 2359.07959, 1016.17010, 0.00000, 0.00000, 180.00000);
	CreateObject(1721, 227.17010, 2359.07959, 1016.17010, 0.00000, 0.00000, 180.00000);
	CreateObject(1721, 228.17010, 2359.07959, 1016.17010, 0.00000, 0.00000, 180.00000);
	CreateObject(1721, 229.17010, 2359.07959, 1016.17010, 0.00000, 0.00000, 180.00000);
	CreateObject(1721, 230.17010, 2359.07959, 1016.17010, 0.00000, 0.00000, 180.00000);
	CreateObject(1721, 231.17010, 2359.07959, 1016.17010, 0.00000, 0.00000, 180.00000);
	CreateObject(1721, 226.97380, 2338.42041, 1016.17010, 0.00000, 0.00000, 0.00000);
	CreateObject(1721, 227.97380, 2338.42041, 1016.17010, 0.00000, 0.00000, 0.00000);
	CreateObject(1721, 228.97380, 2338.42041, 1016.17010, 0.00000, 0.00000, 0.00000);
	CreateObject(1721, 229.97380, 2338.42041, 1016.17010, 0.00000, 0.00000, 0.00000);
	CreateObject(1721, 230.97380, 2338.42041, 1016.17010, 0.00000, 0.00000, 0.00000);
	CreateObject(1721, 216.97380, 2338.42041, 1016.17010, 0.00000, 0.00000, 0.00000);
	CreateObject(1721, 215.97380, 2338.42041, 1016.17010, 0.00000, 0.00000, 0.00000);
	CreateObject(1721, 214.97380, 2338.42041, 1016.17010, 0.00000, 0.00000, 0.00000);
	CreateObject(1721, 213.97380, 2338.42041, 1016.17010, 0.00000, 0.00000, 0.00000);
	CreateObject(19450, 228.08510, 2340.15454, 1014.42603, 0.00000, 0.00000, 90.00000);
	CreateObject(19450, 218.50220, 2340.15454, 1014.42603, 0.00000, 0.00000, 90.00000);
	CreateObject(19450, 208.90230, 2340.15454, 1014.42603, 0.00000, 0.00000, 90.00000);
	CreateObject(19450, 227.32870, 2356.95532, 1014.42603, 0.00000, 0.00000, 90.00000);
	CreateObject(19450, 217.72861, 2356.95532, 1014.42603, 0.00000, 0.00000, 90.00000);
	CreateObject(19450, 222.28891, 2354.00098, 1014.42603, 0.00000, 0.00000, 90.00000);
	CreateObject(19450, 222.31229, 2343.51880, 1014.42603, 0.00000, 0.00000, 90.00000);
	CreateObject(19450, 231.92152, 2344.94067, 1014.42603, 0.00000, 0.00000, 90.00000);
	CreateObject(19450, 231.89514, 2351.94263, 1014.42603, 0.00000, 0.00000, 90.00000);
	CreateObject(19450, 212.70033, 2351.94873, 1014.42603, 0.00000, 0.00000, 90.00000);
	CreateObject(19450, 212.66400, 2344.96729, 1014.42603, 0.00000, 0.00000, 90.00000);
	CreateObject(19431, 227.18640, 2344.23291, 1014.42798, 0.00000, 0.00000, 0.00000);
	CreateObject(19431, 227.16380, 2352.65747, 1014.42798, 0.00000, 0.00000, 0.00000);
	CreateObject(19431, 227.16380, 2353.28735, 1014.42999, 0.00000, 0.00000, 0.00000);
	CreateObject(19431, 217.52631, 2353.28711, 1014.42999, 0.00000, 0.00000, 0.00000);
	CreateObject(19431, 217.52631, 2352.66309, 1014.42798, 0.00000, 0.00000, 0.00000);
	CreateObject(19431, 217.45560, 2344.25317, 1014.42798, 0.00000, 0.00000, 0.00000);
	CreateObject(19431, 217.45560, 2344.23120, 1014.42999, 0.00000, 0.00000, 0.00000);
	CreateObject(19325, 221.83301, 2348.27344, 1018.63727, 0.00000, 90.00000, 0.00000);
	CreateObject(2195, 231.57448, 2356.04468, 1016.68689, 0.00000, 0.00000, 0.00000);
	CreateObject(2195, 231.57449, 2352.54468, 1016.68689, 0.00000, 0.00000, 0.00000);
	CreateObject(2195, 231.57449, 2344.04468, 1016.68689, 0.00000, 0.00000, 0.00000);
	CreateObject(2195, 231.57449, 2341.04468, 1016.68689, 0.00000, 0.00000, 0.00000);
	CreateObject(2195, 213.56311, 2356.37964, 1016.68689, 0.00000, 0.00000, 0.00000);
	CreateObject(2195, 213.56310, 2352.87964, 1016.68689, 0.00000, 0.00000, 0.00000);
	CreateObject(2195, 213.56310, 2343.87964, 1016.68689, 0.00000, 0.00000, 0.00000);
	CreateObject(2195, 213.56310, 2340.87964, 1016.68689, 0.00000, 0.00000, 0.00000);
	CreateObject(2249, 226.13316, 2346.75049, 1017.65936, 0.00000, 0.00000, 0.00000);
	CreateObject(2249, 223.65886, 2343.90210, 1017.65936, 0.00000, 0.00000, 0.00000);
	CreateObject(2249, 217.88405, 2346.75317, 1017.65936, 0.00000, 0.00000, -58.61999);
	CreateObject(2249, 223.73087, 2353.21606, 1017.65936, 0.00000, 0.00000, -196.25977);
	CreateObject(2250, 220.79900, 2359.50952, 1017.01343, 0.00000, 0.00000, 0.00000);
	CreateObject(2250, 223.77602, 2360.34619, 1017.01343, 0.00000, 0.00000, 0.00000);
	CreateObject(2250, 223.37335, 2337.69995, 1017.01343, 0.00000, 0.00000, 0.00000);
	CreateObject(2250, 220.17618, 2338.90137, 1017.01343, 0.00000, 0.00000, 0.00000);
	CreateObject(957, 223.72473, 2345.17700, 1018.61865, 0.00000, 0.00000, 0.00000);
	CreateObject(957, 223.72470, 2345.67700, 1018.61871, 0.00000, 0.00000, 0.00000);
	CreateObject(957, 223.72470, 2351.17700, 1018.61871, 0.00000, 0.00000, 0.00000);
	CreateObject(957, 223.72470, 2350.67700, 1018.61871, 0.00000, 0.00000, 0.00000);
	CreateObject(957, 223.72470, 2348.67700, 1018.61871, 0.00000, 0.00000, 0.00000);
	CreateObject(957, 223.72470, 2348.17700, 1018.61871, 0.00000, 0.00000, 0.00000);
	CreateObject(957, 220.22470, 2351.17700, 1018.61871, 0.00000, 0.00000, 0.00000);
	CreateObject(957, 220.72470, 2351.17700, 1018.61871, 0.00000, 0.00000, 0.00000);
	CreateObject(957, 220.22470, 2345.17700, 1018.61871, 0.00000, 0.00000, 0.00000);
	CreateObject(957, 220.22470, 2345.67700, 1018.61871, 0.00000, 0.00000, 0.00000);
	CreateObject(957, 220.22470, 2348.67700, 1018.61871, 0.00000, 0.00000, 0.00000);
	CreateObject(957, 220.22470, 2348.17700, 1018.61871, 0.00000, 0.00000, 0.00000);
	CreateObject(18075, 227.31679, 2348.22070, 1019.50018, 0.00000, 0.00000, 0.00000);
	CreateObject(18075, 216.30571, 2348.22729, 1019.50018, 0.00000, 0.00000, 0.00000);
	//kmetstvo interior - close
	//budki - open
	CreateDynamicObject(1342, 2434.298828, 1003.920288, 10.780442, 0.000000, 0.000000, 89.500000);
	CreateDynamicObject(1342, 2153.808593, 982.416320, 10.828252, 0.000000, 0.000000, -90.100059);
	CreateDynamicObject(1342, 2033.182006, 1526.586547, 10.828511, 0.000000, 0.000000, 0.000000);
	//budki - close
	mafiaVehs[0] = AddStaticVehicleEx(411, 1249.3418, -2009.3927, 59.4519, 179.1669, 15, 15, RESPAWN_VEHS_SECONDS);	// mafia
	mafiaVehs[1] = AddStaticVehicleEx(411, 1253.3348, -2009.4294, 59.3073, 179.8446, 15, 15, RESPAWN_VEHS_SECONDS);	// mafia
	mafiaVehs[2] = AddStaticVehicleEx(429, 1277.5502, -2016.0541, 58.6077, 89.5462, 15, 15, RESPAWN_VEHS_SECONDS);	// mafia
	mafiaVehs[3] = AddStaticVehicleEx(429, 1277.5942, -2018.6781, 58.6118, 90.7185, 15, 15, RESPAWN_VEHS_SECONDS);	// mafia
	mafiaVehs[4] = AddStaticVehicleEx(559, 1275.9777, -2044.1831, 58.7079, 357.1405, 15, 15, RESPAWN_VEHS_SECONDS);	// mafia
	mafiaVehs[5] = AddStaticVehicleEx(409, 1253.6398, -2041.6661, 59.3999, 358.8330, 15, 15, RESPAWN_VEHS_SECONDS);	// mafia
	mafiaVehs[6] = AddStaticVehicleEx(409, 1246.9795, -2042.2565, 59.5981, 359.9806, 15, 15, RESPAWN_VEHS_SECONDS);	// mafia
	mafiaVehs[7] = AddStaticVehicleEx(459, 1258.9512, -2010.0542, 59.4956, 179.6190, 15, 15, RESPAWN_VEHS_SECONDS);	// mafia
	mafiaVehs[8] = AddStaticVehicleEx(459, 1263.0553, -2010.1663, 59.3837, 179.5364, 15, 15, RESPAWN_VEHS_SECONDS);	// mafia
	mafiaVehs[9] = AddStaticVehicleEx(505, 1267.8104, -2010.1868, 59.3410, 179.3719, 15, 15, RESPAWN_VEHS_SECONDS);	// mafia
	mafiaVehs[10] = AddStaticVehicleEx(487, 1115.6809, -2056.7451, 74.6074, 271.8651, 15, 15, RESPAWN_VEHS_SECONDS);	// mafia
	mafiaVehs[11] = AddStaticVehicleEx(487, 1114.9294, -2017.6737, 74.5991, 267.6188, 15, 15, RESPAWN_VEHS_SECONDS);	// mafia

	for (new i; i < 12; i++)
	{
		isMafiaVeh[mafiaVehs[i]] = true;
	}

	ballasVehs[0] = AddStaticVehicleEx(461, 2161.5090, -1688.5516, 14.6684, 88.2265, 242, 242, RESPAWN_VEHS_SECONDS);	// ballas1
	ballasVehs[1] = AddStaticVehicleEx(461, 2161.9683, -1690.0608, 14.6573, 95.4515, 242, 242, RESPAWN_VEHS_SECONDS);	// ballas2
	ballasVehs[2] = AddStaticVehicleEx(466, 2160.7454, -1700.8169, 14.8280, 270.9119, 242, 242, RESPAWN_VEHS_SECONDS);	// ballas3
	ballasVehs[3] = AddStaticVehicleEx(466, 2183.3860, -1678.4244, 13.8503, 341.3098, 242, 242, RESPAWN_VEHS_SECONDS);	// ballas4
	ballasVehs[4] = AddStaticVehicleEx(475, 2176.5220, -1667.7753, 14.8049, 306.6684, 242, 242, RESPAWN_VEHS_SECONDS);	// ballas5
	ballasVehs[5] = AddStaticVehicleEx(479, 2185.4285, -1669.3271, 14.3304, 344.4699, 242, 242, RESPAWN_VEHS_SECONDS);	// ballas6
	ballasVehs[6] = AddStaticVehicleEx(475, 2151.1731, -1685.2980, 14.8845, 269.7380, 242, 242, RESPAWN_VEHS_SECONDS);	// ballas7

	for (new i; i < 7; i++)
	{
		isBallasVeh[ballasVehs[i]] = true;
	}

	medicVehs[0] = AddStaticVehicleEx(416, 1178.0609, -1308.3813, 14.0014, 269.1322, 1, 3, RESPAWN_VEHS_SECONDS);	// medic 1
	medicVehs[1] = AddStaticVehicleEx(416, 1178.7473, -1338.4030, 13.9988, 269.7943, 1, 3, RESPAWN_VEHS_SECONDS);	// medic 2
	medicVehs[2] = AddStaticVehicleEx(416, 1190.4098, -1342.8682, 13.6332, 359.2905, 1, 3, RESPAWN_VEHS_SECONDS);	// medic 3
	medicVehs[3] = AddStaticVehicleEx(416, 1190.1390, -1304.2906, 13.6107, 180.3114, 1, 3, RESPAWN_VEHS_SECONDS);	// medic 4
	medicVehs[4] = AddStaticVehicleEx(416, 2032.0844, -1447.8418, 17.3126, 91.7152, 1, 3, RESPAWN_VEHS_SECONDS);	// medic1
	medicVehs[5] = AddStaticVehicleEx(416, 2021.9708, -1448.1575, 16.2041, 91.0027, 1, 3, RESPAWN_VEHS_SECONDS);	// medic2
	medicVehs[6] = AddStaticVehicleEx(416, 2000.9003, -1397.8464, 18.5094, 359.7614, 1, 3, RESPAWN_VEHS_SECONDS);	// medic3
	medicVehs[7] = AddStaticVehicleEx(416, 2000.8666, -1406.8793, 17.3664, 358.8283, 1, 3, RESPAWN_VEHS_SECONDS);	// medic4
	medicVehs[8] = AddStaticVehicleEx(487, 1160.4380, -1378.2035, 26.7772, 269.8959, 3, 1, RESPAWN_VEHS_SECONDS);	// hospital 1
	medicVehs[9] = AddStaticVehicleEx(487, 1160.3245, -1350.4674, 26.8650, 273.2382, 3, 1, RESPAWN_VEHS_SECONDS);	// hospital 1
	medicVehs[10] = AddStaticVehicleEx(416, 1110.9027, -1329.4412, 13.3617, 0.2319, 1, 3, RESPAWN_VEHS_SECONDS);	// hospital 1
	medicVehs[11] = AddStaticVehicleEx(416, 1098.1387, -1329.8503, 13.3281, 1.1770, 1, 3, RESPAWN_VEHS_SECONDS);	// hospital 1
	medicVehs[12] = AddStaticVehicleEx(416,1608.6091,1839.4087,10.9694,180.2979,1,3, RESPAWN_VEHS_SECONDS); // medic 1
	medicVehs[13] = AddStaticVehicleEx(416,1599.6626,1850.9463,10.9696,0.8137,1,3, RESPAWN_VEHS_SECONDS); // medic 2
	medicVehs[14] = AddStaticVehicleEx(416,1589.6621,1850.4720,10.9695,0.4469,1,3, RESPAWN_VEHS_SECONDS); // medic 2

	for (new i; i < 15; i++)
	{
		isMedicVeh[medicVehs[i]] = true;
	}

	govVehs[0] = AddStaticVehicleEx(409, 1402.0038, -1776.3540, 13.3469, 90.4559, 0, 0, RESPAWN_VEHS_SECONDS);	// gov1
	govVehs[1] = AddStaticVehicleEx(409, 1401.9755, -1780.8372, 13.3469, 88.4176, 0, 0, RESPAWN_VEHS_SECONDS);	// gov2
	govVehs[2] = AddStaticVehicleEx(409, 1402.1064, -1785.4476, 13.3466, 89.0821, 0, 0, RESPAWN_VEHS_SECONDS);	// gov3
	govVehs[3] = AddStaticVehicleEx(560, 1402.1027, -1808.0101, 13.2509, 359.5330, 0, 0, RESPAWN_VEHS_SECONDS);	// gov-new
	govVehs[4] = AddStaticVehicleEx(560, 1413.0594, -1817.9069, 13.2527, 270.1055, 0, 0, RESPAWN_VEHS_SECONDS);	// gov-new
	for (new i; i < 5; i++)
	{
		isGovVeh[govVehs[i]] = true;
	}

	vagosVehs[0] = AddStaticVehicleEx(445, 2178.7910, -1001.7578, 62.7204, 262.3438, 6, 6, RESPAWN_VEHS_SECONDS);	// vagos1
	vagosVehs[1] = AddStaticVehicleEx(445, 2171.8855, -1000.7554, 62.7524, 260.0501, 6, 6, RESPAWN_VEHS_SECONDS);	// vagos2
	vagosVehs[2] = AddStaticVehicleEx(461, 2180.1223, -1013.1020, 62.4275, 49.1575, 6, 6, RESPAWN_VEHS_SECONDS);	// vagos3
	vagosVehs[3] = AddStaticVehicleEx(461, 2178.4216, -1012.9871, 62.4951, 46.8140, 6, 6, RESPAWN_VEHS_SECONDS);	// vagos4
	vagosVehs[4] = AddStaticVehicleEx(458, 2152.4163, -1007.8369, 62.5908, 253.4922, 6, 6, RESPAWN_VEHS_SECONDS);	// vagos5
	vagosVehs[5] = AddStaticVehicleEx(459, 2219.8611, -1009.5848, 60.8332, 153.2558, 6, 6, RESPAWN_VEHS_SECONDS);	// vagos6
	vagosVehs[6] = AddStaticVehicleEx(459, 2222.5444, -1011.2069, 60.5984, 152.6391, 6, 6, RESPAWN_VEHS_SECONDS);	// vagos7

	for (new i; i < 7; i++)
	{
		isVagosVeh[vagosVehs[i]] = true;
	}

	wcwVehs[0] = AddStaticVehicleEx(463, 668.9206, -468.6561, 15.8763, 94.5791, 0, 0, RESPAWN_VEHS_SECONDS);	// wcw
	wcwVehs[1] = AddStaticVehicleEx(463, 668.8983, -467.4272, 15.8756, 85.5821, 0, 0, RESPAWN_VEHS_SECONDS);	// wcw
	wcwVehs[2] = AddStaticVehicleEx(463, 668.5870, -457.5571, 15.8760, 90.2854, 0, 0, RESPAWN_VEHS_SECONDS);	// wcw
	wcwVehs[3] = AddStaticVehicleEx(554, 662.5587, -441.1763, 16.4194, 359.8766, 0, 0, RESPAWN_VEHS_SECONDS);	// wcw
	wcwVehs[4] = AddStaticVehicleEx(554, 667.4305, -441.0134, 16.4280, 359.8657, 0, 0, RESPAWN_VEHS_SECONDS);	// wcw

	for (new i; i < 5; i++)
	{
		isWcwVeh[wcwVehs[i]] = true;
	}

	cripVehs[0] = AddStaticVehicleEx(411, 282.6102, -1160.0824, 80.6411, 225.3297, 53, 53, RESPAWN_VEHS_SECONDS);	// infernus - vcripz
	cripVehs[1] = AddStaticVehicleEx(411, 286.7418, -1156.0349, 80.6380, 225.1132, 53, 53, RESPAWN_VEHS_SECONDS);	// infernus2 - vcripz
	cripVehs[2] = AddStaticVehicleEx(487, 263.3456, -1171.7356, 79.6268, 278.1578, 53, 53, RESPAWN_VEHS_SECONDS);	// heli - cripz
	cripVehs[3] = AddStaticVehicleEx(560, 278.0644, -1174.9341, 80.4535, 288.3980, 53, 53, RESPAWN_VEHS_SECONDS);	// sultan - vcripz
	cripVehs[4] = AddStaticVehicleEx(560, 280.8209, -1177.5951, 80.5118, 290.0709, 53, 53, RESPAWN_VEHS_SECONDS);	// sultan2 - vcripz
	cripVehs[5] = AddStaticVehicleEx(562, 286.8073, -1183.2435, 80.5736, 290.7241, 53, 53, RESPAWN_VEHS_SECONDS);	// elegy - cripz
	cripVehs[6] = AddStaticVehicleEx(562, 283.8889, -1180.3596, 80.5570, 292.7408, 53, 53, RESPAWN_VEHS_SECONDS);	// elegy2 - cripz
	cripVehs[7] = AddStaticVehicleEx(541, 273.3555, -1159.8564, 80.5399, 224.3608, 53, 53, RESPAWN_VEHS_SECONDS);	// kola - vcripz
	cripVehs[8] = AddStaticVehicleEx(573, 288.1286, -1147.2111, 81.5615, 222.8329, 53, 53, RESPAWN_VEHS_SECONDS);	// interior - vcripz
	cripVehs[9] = AddStaticVehicleEx(522, 305.4707, -1159.1051, 80.4810, 131.6496, 53, 53, RESPAWN_VEHS_SECONDS);	// motor - vcripz
	cripVehs[10] = AddStaticVehicleEx(522, 304.4301, -1157.9576, 80.4809, 136.7975, 53, 53, RESPAWN_VEHS_SECONDS);	// motor2 - vcripz
	cripVehs[11] = AddStaticVehicleEx(579, 317.2428, -1166.5176, 80.8455, 133.5803, 53, 53, RESPAWN_VEHS_SECONDS);	// djip - vcripz

	for (new i; i < 12; i++)
	{
		isCripVeh[cripVehs[i]] = true;
	}

	italianVehs[0] = AddStaticVehicleEx(533, 1470.1442, 2800.2061, 10.4890, 136.3480, 0, 0, RESPAWN_VEHS_SECONDS);	// italian 1
	italianVehs[1] = AddStaticVehicleEx(533, 1466.3016, 2794.7141, 10.4536, 150.7678, 0, 0, RESPAWN_VEHS_SECONDS);	// italian 2
	italianVehs[2] = AddStaticVehicleEx(421, 1472.8324, 2775.6514, 10.6237, 0.4994, 0, 0, RESPAWN_VEHS_SECONDS);	// italian 3
	italianVehs[3] = AddStaticVehicleEx(421, 1501.1859, 2810.5110, 10.7027, 321.0732, 0, 0, RESPAWN_VEHS_SECONDS);	// italian 4
	italianVehs[4] = AddStaticVehicleEx(421, 1505.2526, 2808.1257, 10.7049, 322.1577, 0, 0, RESPAWN_VEHS_SECONDS);	// italian 5
	italianVehs[5] = AddStaticVehicleEx(409, 1494.2219, 2838.3132, 10.6203, 358.6441, 0, 0, RESPAWN_VEHS_SECONDS);	// italian 6
	italianVehs[6] = AddStaticVehicleEx(409, 1489.2915, 2838.7205, 10.6203, 357.9728, 0, 0, RESPAWN_VEHS_SECONDS);	// italian 7

	for (new i; i < 7; i++)
	{
		isItalianVeh[italianVehs[i]] = true;
	}

	aztecasVehs[0] = AddStaticVehicleEx(560, 1870.8143, -2030.5721, 13.2522, 272.2525, 2, 2, RESPAWN_VEHS_SECONDS);	// aztec1
	aztecasVehs[1] = AddStaticVehicleEx(560, 1901.1042, -2030.4054, 13.2517, 90.4832, 2, 2, RESPAWN_VEHS_SECONDS);	// aztec2
	aztecasVehs[2] = AddStaticVehicleEx(567, 1888.5728, -2029.6936, 13.3891, 0.0509, 2, 2, RESPAWN_VEHS_SECONDS);	// aztec3
	aztecasVehs[3] = AddStaticVehicleEx(567, 1888.8243, -2022.1931, 13.3250, 359.4270, 2, 2, RESPAWN_VEHS_SECONDS);	// aztec4
	aztecasVehs[4] = AddStaticVehicleEx(533, 1883.2164, -2010.4913, 13.2559, 359.5882, 2, 2, RESPAWN_VEHS_SECONDS);	// aztec5
	aztecasVehs[5] = AddStaticVehicleEx(533, 1883.0885, -1994.3580, 13.2559, 0.2166, 2, 2, RESPAWN_VEHS_SECONDS);	// aztec6

	for (new i; i < 6; i++)
	{
		isAztecasVeh[aztecasVehs[i]] = true;
	}

	triadsVehs[0] = AddStaticVehicleEx(409, 1882.5085, 954.0179, 10.6203, 269.7534, 0, 0, RESPAWN_VEHS_SECONDS);	// triads 1
	triadsVehs[1] = AddStaticVehicleEx(409, 1882.5139, 960.4418, 10.6203, 268.4453, 0, 0, RESPAWN_VEHS_SECONDS);	// triads 2
	triadsVehs[2] = AddStaticVehicleEx(560, 1881.7281, 967.3627, 10.5243, 90.6629, 0, 0, RESPAWN_VEHS_SECONDS);	// triads 3
	triadsVehs[3] = AddStaticVehicleEx(560, 1938.8333, 929.3604, 10.3766, 272.1086, 0, 0, RESPAWN_VEHS_SECONDS);	// triads 4
	triadsVehs[4] = AddStaticVehicleEx(415, 1951.2225, 929.2953, 10.4416, 268.1323, 0, 0, RESPAWN_VEHS_SECONDS);	// triads 5
	triadsVehs[5] = AddStaticVehicleEx(415, 1911.9263, 963.4897, 10.5916, 356.5119, 0, 0, RESPAWN_VEHS_SECONDS);	// triads 6

	for (new i; i < 6; i++)
	{
		isTriadsVeh[triadsVehs[i]] = true;
	}

	groveVehs[0] = AddStaticVehicleEx(522, 2482.3757, -1652.5487, 13.0282, 142.6509, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[1] = AddStaticVehicleEx(566, 2498.3342, -1649.1823, 13.3081, 157.4072, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[2] = AddStaticVehicleEx(492, 2515.5366, -1665.1935, 13.5741, 91.9201, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[3] = AddStaticVehicleEx(429, 2516.7124, -1672.0027, 13.6131, 60.6237, 86, 0, RESPAWN_VEHS_SECONDS);
	groveVehs[4] = AddStaticVehicleEx(411, 2509.9509, -1686.9349, 13.2954, 50.8308, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[5] = AddStaticVehicleEx(567, 2488.0681, -1682.6639, 13.1949, 92.3377, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[6] = AddStaticVehicleEx(560, 2473.2893, -1695.6903, 13.1662, 0.0001, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[7] = AddStaticVehicleEx(560, 2473.2490, -1704.8604, 13.1925, 359.8790, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[8] = AddStaticVehicleEx(482, 2466.2520, -1688.1406, 13.6778, 267.1897, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[9] = AddStaticVehicleEx(579, 2470.4138, -1670.1687, 13.2181, 11.2582, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[10] = AddStaticVehicleEx(409, 2443.2847, -1644.2251, 13.3183, 181.7236, 86, 86, RESPAWN_VEHS_SECONDS);
	groveVehs[11] = AddStaticVehicleEx(562, 2425.2075, -1636.3978, 13.0753, 180.8151, 86, 86, RESPAWN_VEHS_SECONDS);

	for (new i; i < 12; i++)
	{
		isGroveVeh[groveVehs[i]] = true;
	}

	rentVehs[0] = AddStaticVehicleEx(402, 1755.0973, -1774.8459, 13.3670, 0.8262, 27, 27, RESPAWN_VEHS_SECONDS);	// rent ls
	rentVehs[1] = AddStaticVehicleEx(426, 1763.6781, -1775.1096, 13.2804, 358.4435, 2, 2, RESPAWN_VEHS_SECONDS);	// rent ls
	rentVehs[2] = AddStaticVehicleEx(421, 1759.6372, -1775.4369, 13.4188, 358.9511, 2, 2, RESPAWN_VEHS_SECONDS);	// rent ls
	rentVehs[3] = AddStaticVehicleEx(421, 1756.8501, -1755.7599, 13.4266, 359.9999, 27, 27, RESPAWN_VEHS_SECONDS);	// rent ls
	rentVehs[4] = AddStaticVehicleEx(426, 2016.7606, -1411.3591, 16.7357, 181.4750, 2, 2, RESPAWN_VEHS_SECONDS);	// veh rent 1
	rentVehs[5] = AddStaticVehicleEx(560, 2013.2618, -1411.5509, 16.6975, 183.3817, 32, 32, RESPAWN_VEHS_SECONDS);	// veh rent 2
	rentVehs[6] = AddStaticVehicleEx(560, 2010.3580, -1411.6415, 16.6970, 180.5936, 74, 74, RESPAWN_VEHS_SECONDS);	// veh rent 3
	rentVehs[7] = AddStaticVehicleEx(560, 1778.1798, -1891.0409, 13.0930, 89.5972, 74, 74, RESPAWN_VEHS_SECONDS);	// rent1
	rentVehs[8] = AddStaticVehicleEx(560, 1778.6654, -1895.5081, 13.0938, 90.7846, 26, 26, RESPAWN_VEHS_SECONDS);	// rent2
	rentVehs[9] = AddStaticVehicleEx(560, 2148.5098, 1408.6110, 10.5249, 0.1174, 27, 27, RESPAWN_VEHS_SECONDS);	// rent veh spawn 1
	rentVehs[10] = AddStaticVehicleEx(560, 2142.1719, 1398.1527, 10.5179, 0.0000, 26, 26, RESPAWN_VEHS_SECONDS);	// rent veh spawn 1
	rentVehs[11] = AddStaticVehicleEx(410, 2135.6799, 1398.3303, 10.4870, 0.0001, 26, 26, RESPAWN_VEHS_SECONDS);	// rent veh spawn 1
	rentVehs[12] = AddStaticVehicleEx(412, 2122.7632, 1408.0493, 10.6587, 359.9999, 26, 26, RESPAWN_VEHS_SECONDS);	// rent veh spawn 1
	rentVehs[13] = AddStaticVehicleEx(560, 2107.4343, 2479.3813, 10.5253, 359.9962, 2, 2, RESPAWN_VEHS_SECONDS);	// spawn 2 rent
	rentVehs[14] = AddStaticVehicleEx(560, 2102.4788, 2479.0344, 10.5252, 0.0000, 26, 26, RESPAWN_VEHS_SECONDS);	// spawn 2 rent
	rentVehs[15] = AddStaticVehicleEx(412, 2152.8865, 2475.6279, 10.6575, 270.7264, 25, 25, RESPAWN_VEHS_SECONDS);	// spawn 2 rent
	rentVehs[16] = AddStaticVehicleEx(412, 2152.3303, 2482.6260, 10.6575, 90.3772, 25, 25, RESPAWN_VEHS_SECONDS);	// spawn 2 rent
	rentVehs[17] = AddStaticVehicleEx(429, 2130.2063, 2469.9106, 10.5000, 360.0000, 25, 25, RESPAWN_VEHS_SECONDS);	// spawn 2 rent

	VehicleInfo[rentVehs[0]][vRentPrice] = 470;
	VehicleInfo[rentVehs[1]][vRentPrice] = 450;
	VehicleInfo[rentVehs[2]][vRentPrice] = 550;
	VehicleInfo[rentVehs[3]][vRentPrice] = 570;
	VehicleInfo[rentVehs[4]][vRentPrice] = 670;
	VehicleInfo[rentVehs[5]][vRentPrice] = 680;
	VehicleInfo[rentVehs[6]][vRentPrice] = 790;
	VehicleInfo[rentVehs[7]][vRentPrice] = 780;
	VehicleInfo[rentVehs[8]][vRentPrice] = 890;
	VehicleInfo[rentVehs[9]][vRentPrice] = 890;
	VehicleInfo[rentVehs[10]][vRentPrice] = 680;
	VehicleInfo[rentVehs[11]][vRentPrice] = 790;
	VehicleInfo[rentVehs[12]][vRentPrice] = 710;
	VehicleInfo[rentVehs[13]][vRentPrice] = 790;
	VehicleInfo[rentVehs[14]][vRentPrice] = 790;
	VehicleInfo[rentVehs[15]][vRentPrice] = 810;
	VehicleInfo[rentVehs[16]][vRentPrice] = 890;
	VehicleInfo[rentVehs[17]][vRentPrice] = 910;

	for (new i; i < MAX_RENTVEHS; i++)
	{
		VehicleInfo[rentVehs[i]][vRentable] = 1;
		VehicleInfo[rentVehs[i]][vRentedBy] = -1;
	}

	fbiVehs[0] = AddStaticVehicleEx(490, 282.4861, -1532.2808, 24.7222, 55.3871, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 1
	fbiVehs[1] = AddStaticVehicleEx(490, 285.9610, -1527.8297, 24.7214, 55.8582, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 2
	fbiVehs[2] = AddStaticVehicleEx(490, 294.1013, -1539.2716, 24.7217, 233.4837, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 3
	fbiVehs[3] = AddStaticVehicleEx(528, 294.7350, -1513.7788, 24.6389, 53.7180, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 3
	fbiVehs[4] = AddStaticVehicleEx(528, 298.1688, -1508.7887, 24.6408, 54.9414, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 5
	fbiVehs[5] = AddStaticVehicleEx(527, 300.7641, -1491.5259, 24.3092, 53.3279, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 6
	fbiVehs[6] = AddStaticVehicleEx(527, 304.1890, -1487.1415, 24.3092, 54.8809, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 7
	fbiVehs[7] = AddStaticVehicleEx(527, 307.4280, -1482.2848, 24.3092, 55.4559, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi 8

	fbiVehs[8] = AddStaticVehicleEx(411, -314.9803, 1514.3760, 75.0846, 359.0541, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[9] = AddStaticVehicleEx(411, -318.1299, 1514.3147, 75.1101, 360.0000, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[10] = AddStaticVehicleEx(421, -321.0093, 1514.6639, 75.2411, 0.0039, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[11] = AddStaticVehicleEx(421, -324.1725, 1514.7667, 75.2418, 359.7255, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[12] = AddStaticVehicleEx(436, -327.4367, 1513.8722, 75.1741, 0.0000, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[13] = AddStaticVehicleEx(436, -330.2361, 1515.0977, 75.1306, 0.2344, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[14] = AddStaticVehicleEx(490, -333.1547, 1515.2537, 75.4891, 0.1562, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[15] = AddStaticVehicleEx(490, -336.7874, 1514.9791, 75.4883, 359.5294, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1
	fbiVehs[16] = AddStaticVehicleEx(490, -339.6838, 1514.4314, 75.4874, 359.4469, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi1

	fbiVehs[17] = AddStaticVehicleEx(560, 337.8166, -1529.9153, 33.0104, 321.8966, 0, 0, RESPAWN_VEHS_SECONDS);	// sultan fbi
	fbiVehs[18] = AddStaticVehicleEx(560, 342.5491, -1523.9473, 32.9862, 318.3999, 0, 0, RESPAWN_VEHS_SECONDS);	// sultan fbi
	fbiVehs[19] = AddStaticVehicleEx(522, 355.5958, -1542.3398, 33.0157, 19.3788, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi motor
	fbiVehs[20] = AddStaticVehicleEx(522, 354.7134, -1542.6071, 32.9518, 22.4995, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi motor
	fbiVehs[21] = AddStaticVehicleEx(522, 353.8041, -1543.0680, 32.8971, 22.5546, 0, 0, RESPAWN_VEHS_SECONDS);	// fbi motor

	for (new i; i < 22; i++)
	{
		isFbiVeh[fbiVehs[i]] = true;
	}

	newsVehs[0] = AddStaticVehicleEx(582, 1655.1990, -1718.6079, 20.5390, 359.3306, 1, 142, RESPAWN_VEHS_SECONDS);	// news
	newsVehs[1] = AddStaticVehicleEx(582, 1662.8997, -1718.9016, 20.5414, 359.3341, 1, 142, RESPAWN_VEHS_SECONDS);	// news
	newsVehs[2] = AddStaticVehicleEx(487, 1668.7084, -1700.9755, 20.6612, 271.4148, 1, 142, RESPAWN_VEHS_SECONDS);	// news
	for (new i; i < 3; i++)
	{
		isNewsVeh[newsVehs[i]] = true;
	}

	lspdVehs[0] = AddStaticVehicleEx(497, 1550.9646, -1643.7083, 28.5792, 89.3442, 0, 1, RESPAWN_VEHS_SECONDS);	// heli1
	isLspdDutyVeh[lspdVehs[0]] = true;
	lspdVehs[1] = AddStaticVehicleEx(497, 1553.4291, -1707.0154, 28.5715, 88.2664, 0, 1, RESPAWN_VEHS_SECONDS);	// heli2
	isLspdDutyVeh[lspdVehs[1]] = true;
	lspdVehs[2] = AddStaticVehicleEx(411, 1536.2924, -1679.7081, 13.0969, 357.1805, 0, 0, RESPAWN_VEHS_SECONDS);	// lspd-car1
	lspdVehs[3] = AddStaticVehicleEx(411, 1536.3489, -1666.2152, 13.1038, 358.2486, 0, 0, RESPAWN_VEHS_SECONDS);	// lspd-car2
	lspdVehs[4] = AddStaticVehicleEx(599, 1602.2394, -1683.2700, 6.0828, 90.6304, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-djip1
	isLspdDutyVeh[lspdVehs[4]] = true;
	lspdVehs[5] = AddStaticVehicleEx(599, 1601.5393, -1704.6410, 6.0790, 268.9965, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-djip2
	isLspdDutyVeh[lspdVehs[5]] = true;
	lspdVehs[6] = AddStaticVehicleEx(599, 1583.3994, -1709.8268, 6.0819, 180.3757, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-djip3
	isLspdDutyVeh[lspdVehs[6]] = true;
	lspdVehs[7] = AddStaticVehicleEx(601, 1563.5790, -1710.0881, 5.6493, 179.3469, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-voda
	isLspdDutyVeh[lspdVehs[7]] = true;
	lspdVehs[8] = AddStaticVehicleEx(601, 1530.9926, -1684.1453, 5.6534, 90.2107, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-voda2
	isLspdDutyVeh[lspdVehs[8]] = true;
	lspdVehs[9] = AddStaticVehicleEx(528, 1585.6462, -1671.5748, 5.9393, 92.7203, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-kola
	isLspdDutyVeh[lspdVehs[9]] = true;
	lspdVehs[10] = AddStaticVehicleEx(523, 1542.2328, -1613.0499, 12.9546, 268.1767, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-motor1
	isLspdDutyVeh[lspdVehs[10]] = true;
	lspdVehs[11] = AddStaticVehicleEx(523, 1542.5605, -1611.5183, 12.9545, 265.1640, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-motor2
	isLspdDutyVeh[lspdVehs[11]] = true;
	lspdVehs[12] = AddStaticVehicleEx(523, 1542.3011, -1614.3456, 12.9522, 270.9788, 0, 1, RESPAWN_VEHS_SECONDS);	// lspd-motor3
	isLspdDutyVeh[lspdVehs[12]] = true;
	lspdVehs[13] = AddStaticVehicleEx(430, 2135.5732, -125.9760, -0.2632, 138.3780, 0, 1, RESPAWN_VEHS_SECONDS);	// police boat
	isLspdDutyVeh[lspdVehs[13]] = true;
	lspdVehs[14] = AddStaticVehicleEx(430, 2139.5027, -130.1309, -0.2883, 143.6408, 0, 1, RESPAWN_VEHS_SECONDS);	// police boat
	isLspdDutyVeh[lspdVehs[14]] = true;
	lspdVehs[15] = AddStaticVehicleEx(522, 1524.4365, -1670.1814, 12.9457, 321.2372, 0, 0, RESPAWN_VEHS_SECONDS);	// motor police
	lspdVehs[16] = AddStaticVehicleEx(522, 1523.8256, -1668.8770, 12.9633, 308.8820, 0, 0, RESPAWN_VEHS_SECONDS);	// motor police
	lspdVehs[17] = AddStaticVehicleEx(522, 1523.8544, -1667.4537, 12.9533, 313.0348, 0, 0, RESPAWN_VEHS_SECONDS);	// motor police

	for (new i; i < 18; i++)
	{
		isLspdVeh[lspdVehs[i]] = true;
	}

	//LVPD - open
	lvpdVehs[0] = AddStaticVehicleEx(598, 2251.6960, 2461.1604, 10.5647, 0.7289, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar1
	isLvpdVeh[lvpdVehs[0]] = true;
	lvpdVehs[1] = AddStaticVehicleEx(598, 2281.7688, 2477.1084, 10.5665, 359.6116, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar2
	isLvpdVeh[lvpdVehs[1]] = true;
	lvpdVehs[2] = AddStaticVehicleEx(599, 2278.2905, 2443.0581, 11.0037, 359.6354, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar3
	isLvpdVeh[lvpdVehs[2]] = true;
	lvpdVehs[3] = AddStaticVehicleEx(599, 2269.5115, 2442.8984, 11.0052, 0.0001, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar4
	isLvpdVeh[lvpdVehs[3]] = true;
	lvpdVehs[4] = AddStaticVehicleEx(427, 2313.4092, 2490.0430, 3.4570, 89.8919, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar5
	isLvpdVeh[lvpdVehs[4]] = true;
	lvpdVehs[5] = AddStaticVehicleEx(427, 2300.4929, 2456.4758, 3.4689, 270.9489, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar6
	isLvpdVeh[lvpdVehs[5]] = true;
	lvpdVehs[6] = AddStaticVehicleEx(601, 2315.9565, 2470.5745, 3.0322, 89.3433, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar7
	isLvpdVeh[lvpdVehs[6]] = true;
	lvpdVehs[7] = AddStaticVehicleEx(598, 2241.8032, 2437.7478, 3.0233, 270.0572, 0, 1, RESPAWN_VEHS_SECONDS);	// policecar8
	isLvpdVeh[lvpdVehs[7]] = true;
	lvpdVehs[8] = AddStaticVehicleEx(523, 2277.7908, 2476.9065, 10.3955, 3.4096, 0, 1, RESPAWN_VEHS_SECONDS);	// bike1
	isLvpdVeh[lvpdVehs[8]] = true;
	lvpdVehs[9] = AddStaticVehicleEx(523, 2251.6497, 2441.2209, 10.3816, 181.8576, 0, 1, RESPAWN_VEHS_SECONDS);	// bike2
	isLvpdVeh[lvpdVehs[9]] = true;
	lvpdVehs[10] = AddStaticVehicleEx(497, 2312.0928, 2452.2563, 10.9972, 179.6904, 0, 1, RESPAWN_VEHS_SECONDS);	// hili
	isLvpdVeh[lvpdVehs[10]] = true;
	lvpdVehs[11] = AddStaticVehicleEx(411, 2273.7292, 2418.5339, 10.4708, 270.7391, 0, 0, RESPAWN_VEHS_SECONDS);	// polic civil
	lvpdVehs[12] = AddStaticVehicleEx(411, 2279.8196, 2418.2539, 10.4822, 271.2716, 0, 0, RESPAWN_VEHS_SECONDS);	// polic civil
	lvpdVehs[13] = AddStaticVehicleEx(522, 2297.9795, 2423.6655, 10.3938, 152.9445, 0, 0, RESPAWN_VEHS_SECONDS);	// polic civil
	lvpdVehs[14] = AddStaticVehicleEx(522, 2299.0229, 2423.6201, 10.3944, 156.3204, 0, 0, RESPAWN_VEHS_SECONDS);	// polic civil
	lvpdVehs[15] = AddStaticVehicleEx(522, 2300.0513, 2423.7378, 10.3822, 161.7260, 0, 0, RESPAWN_VEHS_SECONDS);	// polic civil

	for (new i; i < 16; i++)
	{
		isLvpdVeh[lvpdVehs[i]] = true;
	}

	//LVPD - close

	lsArmyVehs[0] = AddStaticVehicleEx(548, 817.0307, -2245.9573, 14.4755, 179.0173, 0, 0, RESPAWN_VEHS_SECONDS);	// dfcar
	lsArmyVehs[1] = AddStaticVehicleEx(548, 770.9144, -2241.8374, 14.5284, 178.7060, 0, 0, RESPAWN_VEHS_SECONDS);	// dfcar2
	lsArmyVehs[2] = AddStaticVehicleEx(470, 824.8119, -2157.0513, 12.8390, 269.5110, 0, 0, RESPAWN_VEHS_SECONDS);	// dfcar3
	lsArmyVehs[3] = AddStaticVehicleEx(470, 824.8430, -2147.7466, 12.8430, 268.2695, 0, 0, RESPAWN_VEHS_SECONDS);	// dfcar4
	lsArmyVehs[4] = AddStaticVehicleEx(470, 824.8992, -2141.6255, 12.8437, 265.4050, 0, 0, RESPAWN_VEHS_SECONDS);	// dfcar5
	lsArmyVehs[5] = AddStaticVehicleEx(470, 824.8854, -2131.8750, 12.8442, 269.2822, 0, 0, RESPAWN_VEHS_SECONDS);	// dfcar6
	lsArmyVehs[6] = AddStaticVehicleEx(470, 824.9623, -2125.6196, 12.8456, 269.8185, 0, 0, RESPAWN_VEHS_SECONDS);	// dfcar7
	lsArmyVehs[7] = AddStaticVehicleEx(470, 825.0194, -2116.0430, 12.8429, 264.3820, 0, 0, RESPAWN_VEHS_SECONDS);	// dfcar8
	lsArmyVehs[8] = AddStaticVehicleEx(470, 825.0418, -2107.2092, 12.8426, 265.8801, 0, 0, RESPAWN_VEHS_SECONDS);	// dfcar9
	lsArmyVehs[9] = AddStaticVehicleEx(470, 825.0038, -2100.4587, 12.8480, 269.3357, 0, 0, RESPAWN_VEHS_SECONDS);	// dfcar10
	lsArmyVehs[10] = AddStaticVehicleEx(470, 825.0626, -2090.7229, 12.8441, 268.4541, 0, 0, RESPAWN_VEHS_SECONDS);	// dfcar11
	lsArmyVehs[11] = AddStaticVehicleEx(470, 825.1733, -2084.6230, 12.8837, 266.3433, 0, 0, RESPAWN_VEHS_SECONDS);	// dfcar12

	//special army vehs - open
	lsArmyVehs[12] = AddStaticVehicleEx(430, 808.3689, -2306.0146, -0.1026, 154.1122, 1, 1, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[12]] = true;	// sforce1
	lsArmyVehs[13] = AddStaticVehicleEx(430, 784.4291, -2325.0977, -0.0137, 65.8529, 1, 1, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[13]] = true;	// sforce2
	lsArmyVehs[14] = AddStaticVehicleEx(430, 785.1269, -2315.0447, -0.4699, 67.2432, 1, 1, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[14]] = true;	// sforce3
	lsArmyVehs[15] = AddStaticVehicleEx(432, 882.1873, -2248.5005, 12.8664, 94.4960, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[15]] = true;	// sforce4
	lsArmyVehs[16] = AddStaticVehicleEx(432, 882.2750, -2242.9099, 12.8656, 95.9650, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[16]] = true;	// sforce5
	lsArmyVehs[17] = AddStaticVehicleEx(432, 892.8770, -2248.5293, 12.8427, 91.6792, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[17]] = true;	// sforce6
	lsArmyVehs[18] = AddStaticVehicleEx(432, 892.4963, -2241.7083, 12.8589, 92.8191, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[18]] = true;	// sforce7
	lsArmyVehs[19] = AddStaticVehicleEx(520, 878.3239, -2297.6335, 13.3822, 87.3091, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[19]] = true;	// sforce8
	lsArmyVehs[20] = AddStaticVehicleEx(520, 878.9005, -2317.0137, 13.3822, 79.9242, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[20]] = true;	// sforce9
	lsArmyVehs[21] = AddStaticVehicleEx(520, 880.2167, -2329.3601, 13.3822, 89.8608, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[21]] = true;	// sforce10
	lsArmyVehs[22] = AddStaticVehicleEx(520, 878.2840, -2342.0686, 13.3822, 86.5012, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[22]] = true;	// sforce11
	lsArmyVehs[23] = AddStaticVehicleEx(520, 878.0682, -2357.1230, 13.3821, 81.1244, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[23]] = true;	// sforce12
	lsArmyVehs[24] = AddStaticVehicleEx(520, 878.8068, -2370.3452, 13.3822, 90.4048, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[24]] = true;	// sforce13
	lsArmyVehs[25] = AddStaticVehicleEx(425, 854.8376, -2374.7275, 13.2311, 280.4905, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[25]] = true;	// sforce14
	lsArmyVehs[26] = AddStaticVehicleEx(425, 854.7662, -2359.4111, 13.2310, 263.6804, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[26]] = true;	// sforce15
	lsArmyVehs[27] = AddStaticVehicleEx(425, 852.2786, -2346.5659, 13.2152, 272.1270, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[27]] = true;	// sforce16
	lsArmyVehs[28] = AddStaticVehicleEx(425, 852.2847, -2328.1987, 13.2146, 270.5380, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[28]] = true;	// sforce17
	lsArmyVehs[29] = AddStaticVehicleEx(425, 852.2910, -2315.2180, 13.2133, 268.6584, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[29]] = true;	// sforce18
	lsArmyVehs[30] = AddStaticVehicleEx(425, 852.2875, -2297.5378, 13.2046, 266.1672, 0, 0, RESPAWN_VEHS_SECONDS);
	isLsArmySpecialVeh[lsArmyVehs[30]] = true;	// sforce19
	//special army vehs - close

	for (new i = 1; i < 75; i++)
	{
		isLsArmyVeh[lsArmyVehs[i]] = true;
	}

	//LV Army Vehs - open
	lvArmyVehs[1] = AddStaticVehicleEx(470, 174.6902, 1823.6055, 17.6359, 179.3837, 0, 0, RESPAWN_VEHS_SECONDS);	// df1
	lvArmyVehs[2] = AddStaticVehicleEx(470, 184.7799, 1823.7397, 17.6334, 182.9867, 0, 0, RESPAWN_VEHS_SECONDS);	// df2
	lvArmyVehs[3] = AddStaticVehicleEx(470, 193.6554, 1823.9792, 17.6331, 179.1090, 0, 0, RESPAWN_VEHS_SECONDS);	// df3
	lvArmyVehs[4] = AddStaticVehicleEx(470, 202.2596, 1823.7877, 17.6307, 182.0231, 0, 0, RESPAWN_VEHS_SECONDS);	// df4
	lvArmyVehs[5] = AddStaticVehicleEx(470, 217.1758, 1823.3910, 17.6391, 180.2234, 0, 0, RESPAWN_VEHS_SECONDS);	// df5
	lvArmyVehs[6] = AddStaticVehicleEx(470, 225.8352, 1823.6820, 17.6350, 176.7340, 0, 0, RESPAWN_VEHS_SECONDS);	// df6
	lvArmyVehs[7] = AddStaticVehicleEx(470, 234.9217, 1823.3407, 17.6447, 175.0246, 0, 0, RESPAWN_VEHS_SECONDS);	// df7
	lvArmyVehs[8] = AddStaticVehicleEx(470, 243.6241, 1823.6116, 17.6327, 178.1475, 0, 0, RESPAWN_VEHS_SECONDS);	// df8
	lvArmyVehs[9] = AddStaticVehicleEx(548, 332.0512, 1970.0282, 19.2044, 107.2690, 0, 0, RESPAWN_VEHS_SECONDS);	// hili bez sf
	lvArmyVehs[10] = AddStaticVehicleEx(548, 341.7886, 1952.6494, 19.1965, 121.6352, 0, 0, RESPAWN_VEHS_SECONDS);	// hili bez sf
	lvArmyVehs[11] = AddStaticVehicleEx(548, 360.6813, 1978.6136, 19.2036, 105.4584, 0, 0, RESPAWN_VEHS_SECONDS);	// hili bez sf
	lvArmyVehs[12] = AddStaticVehicleEx(548, 363.7833, 1960.3016, 19.3252, 135.2507, 0, 0, RESPAWN_VEHS_SECONDS);	// hili bez sf
	lvArmyVehs[13] = AddStaticVehicleEx(470, 220.4568, 1920.5354, 17.6340, 359.9070, 0, 0, RESPAWN_VEHS_SECONDS);	// dfkola
	lvArmyVehs[14] = AddStaticVehicleEx(470, 211.7383, 1919.9647, 17.6315, 359.4653, 0, 0, RESPAWN_VEHS_SECONDS);	// dfkola
	lvArmyVehs[15] = AddStaticVehicleEx(470, 193.3184, 1919.8345, 17.6346, 358.2539, 0, 0, RESPAWN_VEHS_SECONDS);	// dfkola
	lvArmyVehs[16] = AddStaticVehicleEx(470, 202.4863, 1920.1973, 17.6314, 0.4122, 0, 0, RESPAWN_VEHS_SECONDS);	// dfkola

	lvArmyVehs[17] = AddStaticVehicleEx(425, 371.5724, 1911.5908, 18.2128, 102.5378, 0, 0, RESPAWN_VEHS_SECONDS);
	isLvArmySpecialVeh[lvArmyVehs[17]] = true;	// heli1 SF
	lvArmyVehs[18] = AddStaticVehicleEx(425, 372.6227, 1894.8573, 18.2465, 104.2150, 0, 0, RESPAWN_VEHS_SECONDS);
	isLvArmySpecialVeh[lvArmyVehs[18]] = true;	// heli2 SF
	lvArmyVehs[19] = AddStaticVehicleEx(425, 348.9114, 1906.9314, 18.2159, 110.9549, 0, 0, RESPAWN_VEHS_SECONDS);
	isLvArmySpecialVeh[lvArmyVehs[19]] = true;	// heli3 SF
	lvArmyVehs[20] = AddStaticVehicleEx(425, 352.7063, 1886.8627, 18.2301, 109.0154, 0, 0, RESPAWN_VEHS_SECONDS);
	isLvArmySpecialVeh[lvArmyVehs[20]] = true;	// heli4 SF
	lvArmyVehs[21] = AddStaticVehicleEx(432, 275.6758, 1949.8693, 17.6481, 87.6926, 0, 0, RESPAWN_VEHS_SECONDS);
	isLvArmySpecialVeh[lvArmyVehs[21]] = true;	// tank1
	lvArmyVehs[22] = AddStaticVehicleEx(432, 275.7441, 1958.3391, 17.6481, 88.2671, 0, 0, RESPAWN_VEHS_SECONDS);
	isLvArmySpecialVeh[lvArmyVehs[22]] = true;	// tank2
	lvArmyVehs[23] = AddStaticVehicleEx(432, 272.9016, 1994.4033, 17.6480, 88.5286, 0, 0, RESPAWN_VEHS_SECONDS);
	isLvArmySpecialVeh[lvArmyVehs[23]] = true;	// tank3
	lvArmyVehs[24] = AddStaticVehicleEx(432, 273.1917, 1986.5502, 17.6480, 86.6627, 0, 0, RESPAWN_VEHS_SECONDS);
	isLvArmySpecialVeh[lvArmyVehs[24]] = true;	// tank4
	lvArmyVehs[25] = AddStaticVehicleEx(432, 272.6226, 2027.1511, 17.6481, 91.4752, 0, 0, RESPAWN_VEHS_SECONDS);
	isLvArmySpecialVeh[lvArmyVehs[25]] = true;	// tank5
	lvArmyVehs[26] = AddStaticVehicleEx(432, 272.8747, 2018.5863, 17.6480, 85.8870, 0, 0, RESPAWN_VEHS_SECONDS);
	isLvArmySpecialVeh[lvArmyVehs[26]] = true;	// tank6
	lvArmyVehs[27] = AddStaticVehicleEx(520, 317.4840, 2038.0183, 18.5716, 185.2749, 0, 0, RESPAWN_VEHS_SECONDS);
	isLvArmySpecialVeh[lvArmyVehs[27]] = true;	// samolet 1
	lvArmyVehs[28] = AddStaticVehicleEx(520, 304.3071, 2040.2072, 18.5722, 183.2220, 0, 0, RESPAWN_VEHS_SECONDS);
	isLvArmySpecialVeh[lvArmyVehs[28]] = true;	// samolet 2
	//LV Army Vehs - close

	for (new i = 1; i < 29; i++)
	{
		isLvArmyVeh[lvArmyVehs[i]] = true;
	}

	//Taxi vehs
	taxiVehs[0] = AddStaticVehicleEx(438, 1778.5715, -1904.5757, 13.3909, 88.6945, 6, 1, RESPAWN_VEHS_SECONDS);	// taxi 1
	taxiVehs[1] = AddStaticVehicleEx(438, 1778.2467, -1926.3647, 13.3909, 90.0150, 6, 1, RESPAWN_VEHS_SECONDS);	// taxi 2
	taxiVehs[2] = AddStaticVehicleEx(438, 1778.2336, -1930.5292, 13.3907, 89.5323, 6, 1, RESPAWN_VEHS_SECONDS);	// taxi 3

	for (new i; i < 3; i++)
	{
		isTaxiVeh[taxiVehs[i]] = true;
	}

	//Pizza vehs
	pizzaRcVehs[0] = AddStaticVehicleEx(448, 1354.4657, 238.2722, 19.1671, 65.7184, 3, 6, RESPAWN_VEHS_SECONDS);	// pizzaveh1
	pizzaRcVehs[1] = AddStaticVehicleEx(448, 1355.2198, 240.0866, 19.1668, 64.9130, 3, 6, RESPAWN_VEHS_SECONDS);	// pizzaveh2
	pizzaRcVehs[2] = AddStaticVehicleEx(448, 1355.9218, 241.6502, 19.1675, 66.0910, 3, 6, RESPAWN_VEHS_SECONDS);	// pizzaveh3
	pizzaRcVehs[3] = AddStaticVehicleEx(448, 1362.2090, 257.1578, 19.1659, 66.2668, 3, 6, RESPAWN_VEHS_SECONDS);	// pizzaveh4
	pizzaRcVehs[4] = AddStaticVehicleEx(448, 1362.9819, 258.7182, 19.1661, 65.0909, 3, 6, RESPAWN_VEHS_SECONDS);	// pizzaveh5
	pizzaRcVehs[5] = AddStaticVehicleEx(448, 1363.7780, 260.4910, 19.1675, 67.7035, 3, 6, RESPAWN_VEHS_SECONDS);	// pizzaveh6

	for (new i; i < 6; i++)
	{
		isPizzaVeh[pizzaRcVehs[i]] = true;
	}

	//Coalmine vehs
	coalmineVehs[0] = AddStaticVehicleEx(406, 858.2269, 879.6721, 14.7627, 201.0449, 1, 1, RESPAWN_VEHS_SECONDS);	//
	coalmineVehs[1] = AddStaticVehicleEx(406, 850.8806, 876.3572, 14.9247, 202.1210, 1, 1, RESPAWN_VEHS_SECONDS);	//
	coalmineVehs[2] = AddStaticVehicleEx(406, 843.9622, 873.7372, 14.7720, 202.0721, 1, 1, RESPAWN_VEHS_SECONDS);	//
	coalmineVehs[3] = AddStaticVehicleEx(406, 837.6867, 870.4841, 14.7916, 201.2635, 1, 1, RESPAWN_VEHS_SECONDS);	//
	for (new i; i < 4; i++)
	{
		isCoalmineVeh[coalmineVehs[i]] = true;
	}

	//Deliver vehs
	deliverVehs[0] = AddStaticVehicleEx(609, 51.5395, -290.2064, 1.7787, 358.7311, 86, 86, RESPAWN_VEHS_SECONDS);	// deliver 1
	deliverVehs[1] = AddStaticVehicleEx(609, 40.3445, -289.7541, 2.0665, 1.9102, 86, 86, RESPAWN_VEHS_SECONDS);	// deliver 2
	for (new i; i < 2; i++)
	{
		isDeliverVeh[deliverVehs[i]] = true;
	}

	//Sweep vehs
	sweepVehs[0] = AddStaticVehicleEx(574, 217.9324, -1.6491, 2.2951, 270.5554, 27, 27, RESPAWN_VEHS_SECONDS);	// sweepcar
	sweepVehs[1] = AddStaticVehicleEx(574, 217.8936, 0.4934, 2.2960, 271.0149, 27, 27, RESPAWN_VEHS_SECONDS);	// sweepcar
	sweepVehs[2] = AddStaticVehicleEx(574, 217.5836, 6.5614, 2.2960, 269.7299, 27, 27, RESPAWN_VEHS_SECONDS);	// sweepcar
	sweepVehs[3] = AddStaticVehicleEx(574, 217.6197, 9.5346, 2.2960, 269.5610, 27, 27, RESPAWN_VEHS_SECONDS);	// sweepcar

	for (new i; i < 4; i++)
	{
		isSweepVeh[sweepVehs[i]] = true;
	}

	mechanicVehs[0] = AddStaticVehicleEx(525,1847.6825,-1766.1328,13.4345,359.6136,3,5, RESPAWN_VEHS_SECONDS); // 1
    mechanicVehs[1] = AddStaticVehicleEx(525,1857.7076,-1766.2072,13.4413,359.8357,1,3, RESPAWN_VEHS_SECONDS); // 2

	for (new i; i < 2; i++)
	{
		isMechanicVeh[mechanicVehs[i]] = true;
	}

	bankerVehs[0] = AddStaticVehicleEx(428, 1361.5886, -1658.5933, 13.5046, 269.6851, 0, 0, RESPAWN_VEHS_SECONDS);	// bank job
	bankerVehs[1] = AddStaticVehicleEx(428, 1361.7114, -1650.7360, 13.5064, 268.1789, 0, 0, RESPAWN_VEHS_SECONDS);	// bank job
	bankerVehs[2] = AddStaticVehicleEx(428, 1361.5974, -1635.1168, 13.5054, 269.2869, 0, 0, RESPAWN_VEHS_SECONDS);	// bank job

	for (new i; i < 3; i++)
	{
		isBankerVeh[bankerVehs[i]] = true;
	}

	/*//Teleport Buses
	busTeleportVehs[0]=AddStaticVehicleEx(431,-282.9401,1521.6145,75.5518,134.6043,1,4);	// bus
	busTeleportVehs[1]=AddStaticVehicleEx(431,2282.0894,2390.9702,10.8390,1.8248,1,4);	// bus2
	busTeleportVehs[2]=AddStaticVehicleEx(431,-174.7114,1144.3436,19.7671,269.7854,1,5);	// bus3

	for(new i; i < 3; i++)
	{
	isBusTeleportVeh[busTeleportVehs[i]]=true;
	}

	new Text3D: busTpText = Create3DTextLabel("Качете се в автобуса, за да отидете до Las Venturas\nЦена: $10", COLOR_BUS, 0.0, 0.0, 0.0, 15.0, 0, 1);
	Attach3DTextLabelToVehicle(busTpText, busTeleportVehs[0], 0.0, 0.0, 0.0);
	new Text3D: busTpText2 = Create3DTextLabel("Качете се в автобуса, за да отидете до Bone County\nЦена: $10", COLOR_BUS, 0.0, 0.0, 0.0, 15.0, 0, 1);
	Attach3DTextLabelToVehicle(busTpText2, busTeleportVehs[1], 0.0, 0.0, 0.0);
	new Text3D: busTpText3 = Create3DTextLabel("Качете се в автобуса, за да отидете до Las Venturas\nЦена: $10", COLOR_BUS, 0.0, 0.0, 0.0, 15.0, 0, 1);
	Attach3DTextLabelToVehicle(busTpText3, busTeleportVehs[2], 0.0, 0.0, 0.0);
	*/

	busVehs[0] = AddStaticVehicleEx(431, -535.7722, 2577.4409, 53.5108, 89.0092, 1, 4, RESPAWN_VEHS_SECONDS);	// bus 1
	busVehs[1] = AddStaticVehicleEx(431, -535.6921, 2565.8389, 53.5200, 88.7775, 1, 23, RESPAWN_VEHS_SECONDS);	// bus 2
	busVehs[2] = AddStaticVehicleEx(431, -535.6921, 2549.1191, 53.5124, 90.3969, 1, 43, RESPAWN_VEHS_SECONDS);	// bus 3
	busVehs[3] = AddStaticVehicleEx(431, -513.6310, 2562.9104, 53.5181, 270.6521, 1, 102, RESPAWN_VEHS_SECONDS);	// bus 4
	busVehs[4] = AddStaticVehicleEx(431, -512.0355, 2618.7168, 53.5101, 268.3646, 1, 102, RESPAWN_VEHS_SECONDS);	// bus 5

	new Text3D: busText[5];
	for (new i; i < 5; i++)
	{
		isBusVeh[busVehs[i]] = true;
		busText[i] = Create3DTextLabel("Автобус\nЦена за транспорт: $5", COLOR_BUS, 0.0, 0.0, 4.0, 15.0, 0, 1);
		Attach3DTextLabelToVehicle(busText[i], busVehs[i], 0.0, 0.0, 1.0);
	}

	fuelremarke[0] = AddStaticVehicleEx(584, 271.4840, 1341.2374, 11.7400, 0.5160, 0, 0, RESPAWN_VEHS_SECONDS);	// remarke1
	fuelremarke[1] = AddStaticVehicleEx(584, 263.8116, 1340.9697, 11.7545, 0.3961, 0, 0, RESPAWN_VEHS_SECONDS);	// remarke2
	fuelremarke[2] = AddStaticVehicleEx(584, 280.3829, 1341.1115, 11.7410, 1.0650, 0, 0, RESPAWN_VEHS_SECONDS);	// remarke3
	fueltruck[0] = AddStaticVehicleEx(403, 284.3264, 1360.4240, 11.1927, 88.2289, 0, 0, RESPAWN_VEHS_SECONDS);	// veh1
	fueltruck[1] = AddStaticVehicleEx(403, 284.4374, 1371.9625, 11.1927, 90.2667, 8, 8, RESPAWN_VEHS_SECONDS);	// veh2
	fueltruck[2] = AddStaticVehicleEx(403, 284.4071, 1365.9193, 11.1926, 89.6312, 9, 9, RESPAWN_VEHS_SECONDS);	// veh3

	for (new i; i < 3; i++)
	{
		isFuelComapnyVeh[fueltruck[i]] = true;
		isFuelComapnyVeh[fuelremarke[i]] = true;
	}

	boatFish[0] = AddStaticVehicleEx(453, 2107.6313, -108.0593, -0.3556, 121.4741, 1, 1, RESPAWN_VEHS_SECONDS);	// lodka
	boatFish[1] = AddStaticVehicleEx(453, 2101.4890, -98.5692, -0.3568, 123.8792, 1, 1, RESPAWN_VEHS_SECONDS);	// lodka2

	new Text3D: boatText[2];
	for (new i; i < 2; i++)
	{
		boatText[i] = Create3DTextLabel("Можете да ловувате риба в тази лодка", COLOR_WHITE, 0.0, 0.0, 0.0, 15.0, 0, 1);
		Attach3DTextLabelToVehicle(boatText[i], boatFish[i], 0.0, 0.0, 0.0);
	}

	bankVehs[0] = AddStaticVehicleEx(428, 2450.5425, 2341.8767, 10.9445, 87.9220, 0, 128, RESPAWN_VEHS_SECONDS);	// bank1
	bankVehs[1] = AddStaticVehicleEx(428, 2470.2029, 2339.1416, 10.9445, 91.1608, 0, 128, RESPAWN_VEHS_SECONDS);	// bank2

	for (new i; i < 2; i++)
	{
		isBankVeh[bankVehs[i]] = true;
	}

	//civil vehs - open
	//spawn
	//spawn lv 2 - open
	AddStaticVehicleEx(462, 2116.6550, 2467.5781, 10.4205, 357.8820, 27, 27, RESPAWN_VEHS_SECONDS);	// motor lv spawn 2
	AddStaticVehicleEx(462, 2118.1108, 2467.6125, 10.4197, 1.8371, 27, 27, RESPAWN_VEHS_SECONDS);	// motor lv spawn 2
	AddStaticVehicleEx(462, 2119.3564, 2467.6509, 10.4195, 357.7028, 27, 27, RESPAWN_VEHS_SECONDS);	// motor lv spawn 2
	//spawn lv 2 - close
	//spawn lv - open
	AddStaticVehicleEx(462, 2169.2502, 1415.3430, 10.4213, 91.7630, 28, 28, RESPAWN_VEHS_SECONDS);	// spawn 1
	AddStaticVehicleEx(462, 2169.3186, 1413.4613, 10.4209, 92.6614, 28, 28, RESPAWN_VEHS_SECONDS);	// spawn 1
	AddStaticVehicleEx(462, 2169.2744, 1412.0426, 10.4110, 90.6773, 28, 28, RESPAWN_VEHS_SECONDS);	// spawn 1
	AddStaticVehicleEx(462, 2169.0994, 1397.1996, 10.4200, 95.0080, 26, 26, RESPAWN_VEHS_SECONDS);	// spawn 1
	AddStaticVehicleEx(462, 2169.1375, 1395.9515, 10.4204, 92.4020, 26, 26, RESPAWN_VEHS_SECONDS);	// spawn 1
	//spawn lv - close
	//spawn ls - open
	AddStaticVehicleEx(462, 1138.8596, -1700.7587, 13.5046, 2.4568, 2, 2, RESPAWN_VEHS_SECONDS);	// motor new
	AddStaticVehicleEx(462, 1137.2993, -1700.9215, 13.5576, 359.3921, 2, 2, RESPAWN_VEHS_SECONDS);	// motor new
	AddStaticVehicleEx(462, 1135.6172, -1700.5497, 13.4132, 359.9675, 27, 27, RESPAWN_VEHS_SECONDS);	// motor new
	AddStaticVehicleEx(462, 1133.5524, -1700.6260, 13.3476, 359.9503, 27, 27, RESPAWN_VEHS_SECONDS);	// motor new
	AddStaticVehicleEx(462, 1131.4808, -1700.6720, 13.2834, 359.9183, 4, 4, RESPAWN_VEHS_SECONDS);	// motor new
	AddStaticVehicleEx(462, 1129.9302, -1701.0543, 13.3368, 359.4106, 22, 22, RESPAWN_VEHS_SECONDS);	// motor new
	AddStaticVehicleEx(462, 1128.5214, -1700.8473, 13.1806, 5.5543, 4, 4, RESPAWN_VEHS_SECONDS);	// motor new
	AddStaticVehicleEx(462, 1146.7318, -1751.5193, 13.1763, 360.0000, 122, 122, RESPAWN_VEHS_SECONDS);	// spawn motor
	AddStaticVehicleEx(462, 1146.0728, -1751.4017, 13.1780, 1.2955, 122, 122, RESPAWN_VEHS_SECONDS);	// spawn motor
	AddStaticVehicleEx(462, 1145.3751, -1751.5210, 13.1803, 0.2202, 12, 12, RESPAWN_VEHS_SECONDS);	// spawn motor
	AddStaticVehicleEx(462, 1144.4950, -1751.3873, 13.1780, 2.9692, 12, 12, RESPAWN_VEHS_SECONDS);	// spawn motor
	AddStaticVehicleEx(462, 1143.1527, -1751.3843, 13.1731, 3.6122, 2, 2, RESPAWN_VEHS_SECONDS);	// spawn motor
	AddStaticVehicleEx(462, 1142.3275, -1751.3843, 13.1769, 6.4763, 2, 2, RESPAWN_VEHS_SECONDS);	// spawn motor
	AddStaticVehicleEx(462, 1161.3829, -1751.6030, 13.1801, 2.1101, 2, 2, RESPAWN_VEHS_SECONDS);	// spawn motor
	AddStaticVehicleEx(462, 1162.1289, -1751.5796, 13.1804, 359.4267, 2, 2, RESPAWN_VEHS_SECONDS);	// spawn motor
	AddStaticVehicleEx(462, 1162.8815, -1751.4615, 13.1801, 357.2576, 1, 1, RESPAWN_VEHS_SECONDS);	// spawn motor
	//spawn ls - close
	//spawn ls 2 - open
	AddStaticVehicleEx(462, 314.5074, -1839.9395, 3.1550, 55.4963, 2, 2, RESPAWN_VEHS_SECONDS);	// bike
	AddStaticVehicleEx(462, 313.9979, -1840.9817, 3.1234, 58.4155, 1, 1, RESPAWN_VEHS_SECONDS);	// bike
	AddStaticVehicleEx(462, 313.5479, -1841.8756, 3.0987, 54.6391, 4, 4, RESPAWN_VEHS_SECONDS);	// bike
	AddStaticVehicleEx(462, 300.7394, -1840.4030, 3.1401, 318.3378, 4, 4, RESPAWN_VEHS_SECONDS);	// bike
	AddStaticVehicleEx(462, 300.2790, -1839.4071, 3.1651, 309.9850, 1, 1, RESPAWN_VEHS_SECONDS);	// bike
	AddStaticVehicleEx(462, 299.9911, -1838.2666, 3.1984, 312.6636, 4, 4, RESPAWN_VEHS_SECONDS);	// bike
	AddStaticVehicleEx(401, 324.4154, -1808.9545, 4.2677, 359.1248, 3, 3, RESPAWN_VEHS_SECONDS);	// veh
	AddStaticVehicleEx(401, 334.4237, -1789.6183, 4.6691, 359.8644, 5, 5, RESPAWN_VEHS_SECONDS);	// veh
	AddStaticVehicleEx(401, 327.8274, -1789.7367, 4.6092, 359.3019, 122, 122, RESPAWN_VEHS_SECONDS);	// veh
	AddStaticVehicleEx(436, 321.1252, -1789.5436, 4.4874, 358.5345, 122, 122, RESPAWN_VEHS_SECONDS);	// veh
	//spawn ls 2 - close
	//hospital 2 - open
	AddStaticVehicleEx(462, 2022.0415, -1419.4250, 16.5911, 10.4200, 32, 32, RESPAWN_VEHS_SECONDS);	// veh civil
	AddStaticVehicleEx(462, 2021.0931, -1419.4727, 16.5910, 0.8071, 32, 32, RESPAWN_VEHS_SECONDS);	// veh civil
	AddStaticVehicleEx(462, 2019.8796, -1419.5433, 16.5918, 4.8352, 32, 32, RESPAWN_VEHS_SECONDS);	// veh civil
	AddStaticVehicleEx(462, 2019.0234, -1419.5857, 16.5905, 15.8584, 32, 32, RESPAWN_VEHS_SECONDS);	// veh civil
	//hospital 2 - close
	//lv airport - open
	AddStaticVehicleEx(462, 1697.4027, 1431.0612, 10.3452, 292.4398, 2, 2, RESPAWN_VEHS_SECONDS);	// lv motor
	AddStaticVehicleEx(462, 1697.9028, 1430.1844, 10.3395, 295.2267, 1, 1, RESPAWN_VEHS_SECONDS);	// lv motor
	AddStaticVehicleEx(462, 1698.2917, 1429.4946, 10.3308, 297.7863, 23, 23, RESPAWN_VEHS_SECONDS);	// lv motor
	AddStaticVehicleEx(462, 1698.5894, 1445.3818, 10.3771, 239.3801, 23, 23, RESPAWN_VEHS_SECONDS);	// lv motor
	AddStaticVehicleEx(462, 1698.9000, 1446.0223, 10.3820, 233.9090, 23, 23, RESPAWN_VEHS_SECONDS);	// lv motor
	AddStaticVehicleEx(462, 1699.3135, 1446.9801, 10.3873, 227.9590, 2, 2, RESPAWN_VEHS_SECONDS);	// lv motor
	//lv airport - close
	//news - open
	AddStaticVehicleEx(436, 1666.1871, -1717.5608, 15.3786, 2.8615, 122, 122, RESPAWN_VEHS_SECONDS);	// news
	AddStaticVehicleEx(436, 1661.7482, -1717.6685, 15.3766, 359.2407, 2, 2, RESPAWN_VEHS_SECONDS);	// news
	AddStaticVehicleEx(436, 1667.8354, -1693.5791, 15.3767, 0.8925, 1, 1, RESPAWN_VEHS_SECONDS);	// news
	//news - close
	//near dmv - open
	AddStaticVehicleEx(436, 1062.7429, -1769.6036, 13.1314, 90.7284, 122, 122, RESPAWN_VEHS_SECONDS);	// new kola
	AddStaticVehicleEx(436, 1062.7717, -1766.6177, 13.1484, 89.9315, 12, 12, RESPAWN_VEHS_SECONDS);	// new kola
	AddStaticVehicleEx(401, 1078.5596, -1754.8850, 13.1732, 269.6415, 1, 1, RESPAWN_VEHS_SECONDS);	// new kola
	AddStaticVehicleEx(401, 1062.3951, -1746.0513, 13.2361, 269.7840, 2, 2, RESPAWN_VEHS_SECONDS);	// new kola
	//near dmv - close
	//taxi - open
	AddStaticVehicleEx(462, 1797.4634, -1898.4181, 13.0065, 91.8755, 2, 2, RESPAWN_VEHS_SECONDS);	// motor1
	AddStaticVehicleEx(462, 1796.8942, -1896.9901, 13.0010, 89.5833, 2, 2, RESPAWN_VEHS_SECONDS);	// motor2
	AddStaticVehicleEx(462, 1800.0656, -1898.2136, 13.0031, 91.2447, 22, 22, RESPAWN_VEHS_SECONDS);	// motor3
	AddStaticVehicleEx(462, 1800.1989, -1896.9935, 13.0033, 92.8540, 22, 22, RESPAWN_VEHS_SECONDS);	// motor4
	AddStaticVehicleEx(538, 1767.7855, -1953.7959, 14.8756, 269.9391, 1, 1, RESPAWN_VEHS_SECONDS);	// train
	//taxi - close
	//taxi bar - open
	AddStaticVehicleEx(462, 1704.7346, -1896.9193, 13.1668, 260.0842, 27, 27, RESPAWN_VEHS_SECONDS);	// bike taxi bar
	AddStaticVehicleEx(462, 1704.7069, -1897.8047, 13.1684, 267.4645, 27, 27, RESPAWN_VEHS_SECONDS);	// bike taxi bar
	AddStaticVehicleEx(462, 1704.8606, -1898.5544, 13.1655, 266.2551, 27, 27, RESPAWN_VEHS_SECONDS);	// bike taxi bar
	//taxi bar - close
	//fbi - open
	AddStaticVehicleEx(462, 332.4672, -1511.1948, 35.5090, 186.8345, 2, 2, RESPAWN_VEHS_SECONDS);	// motor fbi
	AddStaticVehicleEx(462, 333.1449, -1510.7942, 35.4628, 190.7923, 2, 2, RESPAWN_VEHS_SECONDS);	// motor fbi
	AddStaticVehicleEx(462, 333.8465, -1510.2797, 35.4481, 191.4423, 21, 21, RESPAWN_VEHS_SECONDS);	// motor fbi
	AddStaticVehicleEx(462, 334.4904, -1509.5858, 35.4678, 196.6385, 23, 23, RESPAWN_VEHS_SECONDS);	// motor fbi
	AddStaticVehicleEx(462, 335.2132, -1508.9205, 35.4659, 194.9413, 28, 28, RESPAWN_VEHS_SECONDS);	// motor fbi
	//fbi - close
	//hall ls - open
	AddStaticVehicleEx(401, 1471.7997, -1721.1718, 13.1911, 357.8400, 3, 3, RESPAWN_VEHS_SECONDS);	// rent1-NEW
	AddStaticVehicleEx(410, 1468.1445, -1720.8793, 13.0668, 359.6268, 85, 85, RESPAWN_VEHS_SECONDS);	// rent2
	AddStaticVehicleEx(421, 1464.1719, -1720.7644, 13.2942, 1.2310, 2, 2, RESPAWN_VEHS_SECONDS);	// rent3
	AddStaticVehicleEx(426, 1459.9519, -1720.5712, 13.1549, 359.0347, 26, 26, RESPAWN_VEHS_SECONDS);	// rent4
	AddStaticVehicleEx(436, 1441.2557, -1713.4465, 13.1630, 270.5883, 26, 26, RESPAWN_VEHS_SECONDS);	// rent5
	//hall ls - close
	//pizza - open
	AddStaticVehicleEx(401, 1381.5486, 268.2083, 19.3463, 335.2867, 27, 27, RESPAWN_VEHS_SECONDS);	// pizza1
	AddStaticVehicleEx(401, 1386.2289, 266.1105, 19.3465, 335.6227, 27, 27, RESPAWN_VEHS_SECONDS);	// pizza2
	//pizza - close
	//hospital - open
	AddStaticVehicleEx(462, 1182.7056, -1318.3268, 13.1767, 269.6859, 3, 3, RESPAWN_VEHS_SECONDS);	// motor bolnica
	AddStaticVehicleEx(462, 1182.9470, -1312.5552, 13.1652, 271.7266, 2, 2, RESPAWN_VEHS_SECONDS);	// motor bolnica
	AddStaticVehicleEx(462, 1182.8927, -1329.5107, 13.1817, 268.0156, 2, 2, RESPAWN_VEHS_SECONDS);	// motor bolnica
	AddStaticVehicleEx(462, 1183.1971, -1330.8168, 13.1771, 269.4868, 4, 4, RESPAWN_VEHS_SECONDS);	// motor bolnica
	AddStaticVehicleEx(462, 1183.1372, -1331.9536, 13.1807, 263.0629, 6, 6, RESPAWN_VEHS_SECONDS);	// motor bolnica
	AddStaticVehicleEx(462, 1183.4852, -1332.9308, 13.1784, 269.8343, 23, 23, RESPAWN_VEHS_SECONDS);	// motor bolnica
	AddStaticVehicleEx(462, 1183.4631, -1333.6271, 13.1799, 268.4226, 221, 221, RESPAWN_VEHS_SECONDS);	// motor bolnica
	//hospital - close
	//civil vehs - close

	ToggleAllVehiclesEngineOFF();
	//LoadAllVehs();
	return 1;
}

stock DefineBusStops()
{
	Create3DTextLabel("Спирка за автобуси\nИзчакайте тук автобуса, цена: $5", COLOR_BUS, JOB_BUS_LOC4, 35, 0, 0);
	Create3DTextLabel("Спирка за автобуси\nИзчакайте тук автобуса, цена: $5", COLOR_BUS, JOB_BUS_LOC5, 35, 0, 0);
	Create3DTextLabel("Спирка за автобуси\nИзчакайте тук автобуса, цена: $5", COLOR_BUS, JOB_BUS_LOC6, 35, 0, 0);
	Create3DTextLabel("Спирка за автобуси\nИзчакайте тук автобуса, цена: $5", COLOR_BUS, JOB_BUS_LOC7, 35, 0, 0);
	Create3DTextLabel("Спирка за автобуси\nИзчакайте тук автобуса, цена: $5", COLOR_BUS, JOB_BUS_LOC8, 35, 0, 0);
	Create3DTextLabel("Спирка за автобуси\nИзчакайте тук автобуса, цена: $5", COLOR_BUS, JOB_BUS_LOC9, 35, 0, 0);
	Create3DTextLabel("Спирка за автобуси\nИзчакайте тук автобуса, цена: $5", COLOR_BUS, JOB_BUS_LOC10, 35, 0, 0);
	Create3DTextLabel("Спирка за автобуси\nИзчакайте тук автобуса, цена: $5", COLOR_BUS, JOB_BUS_LOC11, 35, 0, 0);
}

stock DefineTrashCans()
{
	Create3DTextLabel("Използвай {40BF00}/searchtrash{ffffff} за да провериш за предмети в кофата", COLOR_WHITE, LOC_TRASHCAN_1, 20, 0, 0);
	Create3DTextLabel("Използвай {40BF00}/searchtrash{ffffff} за да провериш за предмети в кофата", COLOR_WHITE, LOC_TRASHCAN_2, 20, 0, 0);
	Create3DTextLabel("Използвай {40BF00}/searchtrash{ffffff} за да провериш за предмети в кофата", COLOR_WHITE, LOC_TRASHCAN_3, 20, 0, 0);
	//Objects
	CreateDynamicObject(3035, 2035.440551, 1561.573486, 10.550578, 0.000000, 0.000000, -88.299980, -1, -1, -1, 300.00, 300.00);
	CreateDynamicObject(3035, 2083.237548, 1255.050781, 10.521080, 0.000000, 0.000000, 89.299987, -1, -1, -1, 300.00, 300.00);
	CreateDynamicObject(3035, 1564.808349, -1725.285888, 13.243104, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);

	//TrashCanInfo
	new randomItem = randomex(0, 5);
	TrashCanInfo[0][trashID] = randomItem;
	randomItem = randomex(0, 5);
	TrashCanInfo[1][trashID] = randomItem;
	randomItem = randomex(0, 5);
	TrashCanInfo[2][trashID] = randomItem;
}

stock DefineFuelStations()
{
	//{2C7DD3}[Бензиностанция]\n\n{ffffff}За да заредите натиснете{FFFF00}Y\n{40BF00}Цена за литър: $1\n{00ff00}[5000 литра от 5000]

	fuelStationText[0] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 1004.0327, -937.5370, 42.3281, 40, 0, 0);
	fuelStationText[1] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 1942.3719, -1772.8666, 13.6406, 40, 0, 0);
	fuelStationText[2] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, -1606.7223, -2713.3562, 48.5335, 40, 0, 0);
	fuelStationText[3] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, -2026.7813, 156.5509, 29.0391, 40, 0, 0);
	fuelStationText[4] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, -2243.8149, -2559.8899, 31.9219, 40, 0, 0);
	fuelStationText[5] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, -1676.2601, 413.5443, 7.1797, 40, 0, 0);
	fuelStationText[6] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 2201.8296, 2475.1350, 10.8203, 40, 0, 0);
	fuelStationText[7] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 615.3391, 1690.0454, 6.9922, 40, 0, 0);
	fuelStationText[8] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, -1328.2731, 2677.5278, 50.0625, 40, 0, 0);
	fuelStationText[9] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 70.3842, 1219.0177, 18.8116, 40, 0, 0);
	fuelStationText[10] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 2113.3835, 919.5655, 10.8203, 40, 0, 0);
	fuelStationText[11] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 2641.0115, 1106.6252, 10.8203, 40, 0, 0);
	fuelStationText[12] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 2146.7964, 2747.8115, 10.8203, 40, 0, 0);
	fuelStationText[13] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, -1471.1836, 1863.7598, 32.6328, 40, 0, 0);
	fuelStationText[14] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 655.7673, -565.0798, 16.3359, 40, 0, 0);
	fuelStationText[15] = Create3DTextLabel("{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}5000", COLOR_LIGHTBLUE3, 1381.8230, 459.1453, 20.3452, 40, 0, 0);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_1);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_2);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_3);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_4);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_5);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_6);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_7);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_8);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_9);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_10);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_11);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_12);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_13);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_14);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_15);
	CreateDynamicPickup(1274, 1, LOC_FUELSTATION_16);
}

stock DefinePlayerScreenTexts(playerid)
{
	levelExp[playerid] = TextDrawCreate(502.000000, 9.000000, "");
	TextDrawBackgroundColor(levelExp[playerid], 0x000000ff);
	TextDrawSetOutline(levelExp[playerid], 1);
	TextDrawFont(levelExp[playerid], 1);
	TextDrawLetterSize(levelExp[playerid], 0.2400, 1.4000);
	TextDrawSetProportional(levelExp[playerid], 1);
	TextDrawSetShadow(levelExp[playerid], 1);

	//New Texts:
	SpeedStatus[playerid] = TextDrawCreate(515.666809, 394.488769, "150 Km/H");
	TextDrawLetterSize(SpeedStatus[playerid], 0.184666, 1.396741);
	TextDrawAlignment(SpeedStatus[playerid], 1);
	TextDrawColor(SpeedStatus[playerid], -2139062017);
	TextDrawSetShadow(SpeedStatus[playerid], 0);
	TextDrawSetOutline(SpeedStatus[playerid], 1);
	TextDrawBackgroundColor(SpeedStatus[playerid], 51);
	TextDrawFont(SpeedStatus[playerid], 1);
	TextDrawSetProportional(SpeedStatus[playerid], 1);

	FuelStatus[playerid] = TextDrawCreate(550.999816, 395.318542, "100 L");
	TextDrawLetterSize(FuelStatus[playerid], 0.221999, 1.181037);
	TextDrawAlignment(FuelStatus[playerid], 1);
	TextDrawColor(FuelStatus[playerid], -1061109505);
	TextDrawSetShadow(FuelStatus[playerid], 0);
	TextDrawSetOutline(FuelStatus[playerid], 1);
	TextDrawBackgroundColor(FuelStatus[playerid], 51);
	TextDrawFont(FuelStatus[playerid], 1);
	TextDrawSetProportional(FuelStatus[playerid], 1);

	VehicleNameSpeedo[playerid] = TextDrawCreate(579.666503, 394.488891, "Sultan");
	TextDrawLetterSize(VehicleNameSpeedo[playerid], 0.198333, 1.384296);
	TextDrawAlignment(VehicleNameSpeedo[playerid], 1);
	TextDrawColor(VehicleNameSpeedo[playerid], -1);
	TextDrawSetShadow(VehicleNameSpeedo[playerid], 0);
	TextDrawSetOutline(VehicleNameSpeedo[playerid], 1);
	TextDrawBackgroundColor(VehicleNameSpeedo[playerid], 51);
	TextDrawFont(VehicleNameSpeedo[playerid], 3);
	TextDrawSetProportional(VehicleNameSpeedo[playerid], 1);
	//New Texts Close

	driverCourseText[playerid] = TextDrawCreate(500.5190, 245.0, " ");
	TextDrawBackgroundColor(driverCourseText[playerid], 250);
	TextDrawFont(driverCourseText[playerid], 1);
	TextDrawLetterSize(driverCourseText[playerid], 0.2899, 1.3999);
	TextDrawColor(driverCourseText[playerid], -1);
	TextDrawSetOutline(driverCourseText[playerid], 1);
	TextDrawSetProportional(driverCourseText[playerid], 1);

	GiveCashText[playerid] = TextDrawCreate(502.000000, 156.500000, "~g~~h~+ $230");
	TextDrawBackgroundColor(GiveCashText[playerid], 250);
	TextDrawFont(GiveCashText[playerid], 2);
	TextDrawLetterSize(GiveCashText[playerid], 0.2800, 1.8000);
	TextDrawColor(GiveCashText[playerid], -1);
	TextDrawSetOutline(GiveCashText[playerid], 1);
	TextDrawSetProportional(GiveCashText[playerid], 1);

	DeathTimerText[playerid] = TextDrawCreate(549.000000, 268.500000, "~y~Death Timer: ~w~60");
	TextDrawBackgroundColor(DeathTimerText[playerid], 250);
	TextDrawFont(DeathTimerText[playerid], 1);
	TextDrawLetterSize(DeathTimerText[playerid], 0.2800, 1.8000);
	TextDrawColor(DeathTimerText[playerid], -1);
	TextDrawSetOutline(DeathTimerText[playerid], 1);
	TextDrawSetProportional(DeathTimerText[playerid], 1);

	PlayerAreaText[playerid] = TextDrawCreate(3.000000, 425.500000, "Area 51");
	TextDrawBackgroundColor(PlayerAreaText[playerid], 250);
	TextDrawFont(PlayerAreaText[playerid], 2);
	TextDrawLetterSize(PlayerAreaText[playerid], 0.2800, 1.8000);
	TextDrawColor(PlayerAreaText[playerid], -1);
	TextDrawSetOutline(PlayerAreaText[playerid], 1);
	TextDrawSetProportional(PlayerAreaText[playerid], 1);

	Clock[playerid] = TextDrawCreate(588.000000, 25.000000, "19:23");
	TextDrawFont(Clock[playerid], 3);
	TextDrawLetterSize(Clock[playerid], 0.329165, 1.449998);
	TextDrawTextSize(Clock[playerid], 400.000000, 17.000000);
	TextDrawSetOutline(Clock[playerid], 1);
	TextDrawSetShadow(Clock[playerid], 1);
	TextDrawAlignment(Clock[playerid], 2);
	TextDrawColor(Clock[playerid], -1);
	TextDrawBackgroundColor(Clock[playerid], 255);
	TextDrawBoxColor(Clock[playerid], 50);
	TextDrawUseBox(Clock[playerid], 0);
	TextDrawSetProportional(Clock[playerid], 1);
	TextDrawSetSelectable(Clock[playerid], 0);

	FareStatus[playerid] = TextDrawCreate(540.5190, 350.0, "Fare: ~y~~h~$0");
	TextDrawBackgroundColor(FareStatus[playerid], 250);
	TextDrawFont(FareStatus[playerid], 1);
	TextDrawLetterSize(FareStatus[playerid], 0.3299, 1.5999);
	TextDrawColor(FareStatus[playerid], -1);
	TextDrawSetOutline(FareStatus[playerid], 1);
	TextDrawSetProportional(FareStatus[playerid], 1);

	TankFuel[playerid] = TextDrawCreate(540.5190, 350.0, "~y~Tank: 0 L");
    TextDrawBackgroundColor(TankFuel[playerid], 250);
    TextDrawFont(TankFuel[playerid], 1);
    TextDrawLetterSize(TankFuel[playerid], 0.3299, 1.5999);
    TextDrawColor(TankFuel[playerid], -1);
    TextDrawSetOutline(TankFuel[playerid], 1);
    TextDrawSetProportional(TankFuel[playerid], 1);

	MessageInfo[playerid] = TextDrawCreate(260.0, 400.0, " ");
	TextDrawBackgroundColor(MessageInfo[playerid], 250);
	TextDrawFont(MessageInfo[playerid], 1);
	TextDrawLetterSize(MessageInfo[playerid], 0.3299, 1.5999);
	TextDrawColor(MessageInfo[playerid], -1);
	TextDrawSetOutline(MessageInfo[playerid], 1);
	TextDrawSetProportional(MessageInfo[playerid], 1);

	CommandInfo[playerid] = TextDrawCreate(260.0, 380.0, " ");
	TextDrawBackgroundColor(CommandInfo[playerid], 250);
	TextDrawFont(CommandInfo[playerid], 1);
	TextDrawLetterSize(CommandInfo[playerid], 0.3299, 1.5999);
	TextDrawColor(CommandInfo[playerid], -1);
	TextDrawSetOutline(CommandInfo[playerid], 1);
	TextDrawSetProportional(CommandInfo[playerid], 1);

/*
	ServerLogo[playerid] = TextDrawCreate(632.000000, 8.000000, "LAWLESS ROLEPLAY");
	TextDrawFont(ServerLogo[playerid], 3);
	TextDrawLetterSize(ServerLogo[playerid], 0.241666, 1.299998);
	TextDrawTextSize(ServerLogo[playerid], 400.000000, 17.000000);
	TextDrawSetOutline(ServerLogo[playerid], 1);
	TextDrawSetShadow(ServerLogo[playerid], 0);
	TextDrawAlignment(ServerLogo[playerid], 3);
	TextDrawColor(ServerLogo[playerid], -1);
	TextDrawBackgroundColor(ServerLogo[playerid], 255);
	TextDrawBoxColor(ServerLogo[playerid], 50);
	TextDrawUseBox(ServerLogo[playerid], 0);
	TextDrawSetProportional(ServerLogo[playerid], 1);
	TextDrawSetSelectable(ServerLogo[playerid], 0);
*/
	ServerLogo[playerid] = TextDrawCreate(21.000000, 434.000000, "~w~LAWLESS ROLEPLAY");
	TextDrawBackgroundColor(ServerLogo[playerid], 250);
	TextDrawFont(ServerLogo[playerid], 2);
	TextDrawLetterSize(ServerLogo[playerid], 0.2100, 1.3000);
	TextDrawColor(ServerLogo[playerid], -1);
	TextDrawSetOutline(ServerLogo[playerid], 1);
	TextDrawSetProportional(ServerLogo[playerid], 1);
}

stock DefineScreenTexts()
{
	RESTARTText = TextDrawCreate(400.000000, 328.000000, " ");
	TextDrawBackgroundColor(RESTARTText, 250);
	TextDrawFont(RESTARTText, 1);
	TextDrawLetterSize(RESTARTText, 0.2700, 1.5500);
	TextDrawColor(RESTARTText, -1);
	TextDrawSetOutline(RESTARTText, 1);
	TextDrawSetProportional(RESTARTText, 1);

	/*
    Clock=TextDrawCreate(528.000000,25.500000,"~w~   15:16:24");
	TextDrawBackgroundColor(Clock, 250);
	TextDrawFont(Clock, 1);
	TextDrawLetterSize(Clock, 0.3, 1.8000);
	TextDrawColor(Clock, -1);
	TextDrawSetOutline(Clock, 1);
	TextDrawSetProportional(Clock, 1);
	*/

	//Vehicle Speedo:
	//VehicleSpeedo

	VehicleSpeedo[0] = TextDrawCreate(622.333129, 398.477722, "usebox");
	TextDrawLetterSize(VehicleSpeedo[0], 0.000000, -0.777570);
	TextDrawTextSize(VehicleSpeedo[0], 513.666687, 0.000000);
	TextDrawAlignment(VehicleSpeedo[0], 1);
	TextDrawColor(VehicleSpeedo[0], 0);
	TextDrawUseBox(VehicleSpeedo[0], true);
	TextDrawBoxColor(VehicleSpeedo[0], 102);
	TextDrawSetShadow(VehicleSpeedo[0], 0);
	TextDrawSetOutline(VehicleSpeedo[0], 0);
	TextDrawFont(VehicleSpeedo[0], 0);

	VehicleSpeedo[1] = TextDrawCreate(551.666564, 377.066619, "Fuel:");
	TextDrawLetterSize(VehicleSpeedo[1], 0.237999, 1.172740);
	TextDrawAlignment(VehicleSpeedo[1], 1);
	TextDrawColor(VehicleSpeedo[1], -1378294017);
	TextDrawSetShadow(VehicleSpeedo[1], 0);
	TextDrawSetOutline(VehicleSpeedo[1], 1);
	TextDrawBackgroundColor(VehicleSpeedo[1], 51);
	TextDrawFont(VehicleSpeedo[1], 3);
	TextDrawSetProportional(VehicleSpeedo[1], 1);

	VehicleSpeedo[2] = TextDrawCreate(515.666625, 375.822082, "Speed:");
	TextDrawLetterSize(VehicleSpeedo[2], 0.275666, 1.355259);
	TextDrawAlignment(VehicleSpeedo[2], 1);
	TextDrawColor(VehicleSpeedo[2], -1378294017);
	TextDrawSetShadow(VehicleSpeedo[2], 0);
	TextDrawSetOutline(VehicleSpeedo[2], 1);
	TextDrawBackgroundColor(VehicleSpeedo[2], 51);
	TextDrawFont(VehicleSpeedo[2], 3);
	TextDrawSetProportional(VehicleSpeedo[2], 1);

	VehicleSpeedo[3] = TextDrawCreate(576.666503, 375.407348, "Vehicle:");
	TextDrawLetterSize(VehicleSpeedo[3], 0.227333, 1.359407);
	TextDrawAlignment(VehicleSpeedo[3], 1);
	TextDrawColor(VehicleSpeedo[3], -1378294017);
	TextDrawSetShadow(VehicleSpeedo[3], 0);
	TextDrawSetOutline(VehicleSpeedo[3], 1);
	TextDrawBackgroundColor(VehicleSpeedo[3], 51);
	TextDrawFont(VehicleSpeedo[3], 3);
	TextDrawSetProportional(VehicleSpeedo[3], 1);

	//Vehicle Speedo Close

	/*
	SiteText = TextDrawCreate(24.000000, 425.500000, "~w~OFFICIAL SITE: SOON");
	TextDrawBackgroundColor(SiteText, 250);
	TextDrawFont(SiteText, 2);
	TextDrawLetterSize(SiteText, 0.2100, 1.3000);
	TextDrawColor(SiteText, -1);
	TextDrawSetOutline(SiteText, 1);
	TextDrawSetProportional(SiteText, 1);
	*/
	
	PaintBallTimerText = TextDrawCreate(540.5190, 350.0, "Paintball Time");
	TextDrawBackgroundColor(PaintBallTimerText, 250);
	TextDrawFont(PaintBallTimerText, 1);
	TextDrawLetterSize(PaintBallTimerText, 0.3299, 1.5999);
	TextDrawColor(PaintBallTimerText, -1);
	TextDrawSetOutline(PaintBallTimerText, 1);
	TextDrawSetProportional(PaintBallTimerText, 1);

	Box[0] = TextDrawCreate(0.000000, 0.000000, "~n~");
	TextDrawUseBox(Box[0], 1);
	TextDrawBoxColor(Box[0], 0x000000FF);
	TextDrawLetterSize(Box[0], 5.0, 12.0);

	Box[1] = TextDrawCreate(0.000000, 380.000000, "~n~");
	TextDrawUseBox(Box[1], 1);
	TextDrawBoxColor(Box[1], 0x000000FF);
	TextDrawLetterSize(Box[1], 5.0, 12.0);

}

stock AddSnowIfWinter()
{
	new whetherSnow = randomex(1, 6);
	new year, mounth, day;
	getdate(year, mounth, day);
	if (mounth >= 11)
	{
		if (whetherSnow >= 4) {}
	}
}

stock AddAllObjects()
{
	new tmpobjid;
	//armours - open
	lvpdArmour = CreateDynamicPickup(1242, 1, 1586.7275, -1682.0957, 2982.2800, 1, 6);
	lspdArmour = CreateDynamicPickup(1242, 1, 1558.0682, -1684.2411, 2113.0349, 1, 6);
	lsArmyArmour = CreateDynamicPickup(1242, 1, 884.6625, -2256.2368, 12.8527, 0, 0);
	lvArmyArmour = CreateDynamicPickup(1242, 1, 209.0646, 1812.5510, 21.8672, 0, 0);
	fbiArmour[0] = CreateDynamicPickup(1242, 1, 1570.0292, -1688.6154, 62.1910, 1, 5);
	fbiArmour[1] = CreateDynamicPickup(1242, 1, 1570.0292, -1688.6154, 62.1910, 1, 6);
	//armours - close
	//gun machines - open
	Create3DTextLabel("{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 1570.0121, -1691.7775, 62.1910, 12, 1, 5);	//fbi gunmachine
	Create3DTextLabel("{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 1570.0121, -1691.7775, 62.1910, 12, 1, 6);	//fbi gunmachine
	Create3DTextLabel("{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 1556.4564, -1688.1058, 2113.0349, 12, 1, 6);	//lspd gunmachine
	Create3DTextLabel("{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 1590.1691, -1682.0958, 2982.2700, 12, 1, 6);	//lvpd gunmachine
	Create3DTextLabel("{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 880.5675, -2255.6067, 12.8527, 12, 0, 0);	//ls army gunmachine
	Create3DTextLabel("{FFFFFF}За да си вземете оръжие, напишете {40BF00}/getgun", 0xFFFFFFFF, 213.2412, 1806.7898, 17.6406, 12, 0, 0);	//lv army gunmachine
	CreateDynamicObject(18885, 213.2412, 1806.7898, 17.6406, 0, 0, 0, 0);	// lv army
	//gun machines - close
	//lspd gates - open
	lspdGateDoor = CreateDynamicObject(6400, 1581.93713, -1637.98376, 13.92183, 0.00000, 0.00000, -87.09998);
	lspdGate = CreateDynamicObject(10558, 1588.66833, -1638.39941, 14.45710, 0.00000, 0.00000, -90.60007);
	Create3DTextLabel("{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 1588.2328, -1635.5154, 13.3828, 12, 0, 0);	//lspd
	lspdPort = CreateDynamicObject(968, 1544.74634, -1630.74500, 13.01674, 1.00000, -89.50008, -89.20010);
	Create3DTextLabel("{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 1542.8047, -1627.7461, 13.3828, 12, 0, 0);	//lspd
	//lspd gates - close
	//Las Venturas Army - open
	CreateObject(19313, 344.711486, 1797.858520, 18.126768, 0.000000, 0.000000, 34.900020);
	CreateObject(19313, 96.767890, 1914.917602, 20.396505, 0.000000, 0.000000, -89.899971);
	CreateObject(19312, 191.151473, 1870.016113, 21.471294, 0.000000, 0.000000, 0.000000);
	//Las Venturas Army - close
	//FUEL COMPANY - location - open
	CreateObject(11546, 285.549499, 1386.814086, 9.519872, 0.000000, 0.000000, -88.500015);
	CreateObject(9193, 286.184661, 1398.065063, 14.108742, 0.000000, 0.000000, 0.000000);
	CreateObject(9193, 286.184661, 1423.356567, 14.108742, 0.000000, 0.000000, 0.000000);
	CreateObject(16083, 264.158660, 1459.661010, 14.346237, 0.000000, 0.000000, 79.399955);
	//FUEL COMPANY - location - close
	//hospital 1 - open
	tmpobjid = CreateDynamicObject(14416, 1147.777587, -1380.186401, 13.356093, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(14416, 1147.777587, -1374.316406, 17.416090, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(14416, 1147.777587, -1368.587036, 21.376077, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3934, 1160.024902, -1378.635375, 25.692928, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3934, 1160.024902, -1351.133911, 25.692928, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//hostpial 1 - close
	//BLACK MARKET - OPEN
	tmpobjid = CreateDynamicObject(983, 1849.644042, -1863.164428, 13.282809, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(983, 1851.486328, -1876.267578, 13.114594, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(983, 1858.380126, -1835.087646, 13.201409, 0.000000, -0.299999, 79.799995, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2121, 1865.617797, -1873.175659, 13.043338, 0.000000, 0.000000, -53.800010, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1369, 1866.301635, -1876.945312, 13.086498, 0.000000, 0.000000, -131.500061, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(849, 1864.797119, -1874.829101, 12.764517, 0.000000, 0.000000, -56.199996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18689, 1864.890136, -1874.976806, 10.084227, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3005, 1863.654296, -1878.223022, 12.510950, 0.000000, 0.000000, -83.599998, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1412, 1856.779785, -1863.807373, 13.819031, 0.000000, 0.000000, -90.799957, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1412, 1856.853271, -1858.547973, 13.819031, 0.000000, 0.000000, -90.799957, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1459, 1859.409057, -1862.753051, 13.145540, 0.000000, 0.000000, 0.900000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2840, 1862.938720, -1874.229858, 12.555544, 0.000000, -5.200003, -53.999996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1372, 1864.339477, -1871.687011, 12.636197, 0.000000, 0.000000, -18.500003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(355, 1867.647583, -1876.305664, 14.273150, 0.000000, -0.299999, -82.199981, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1238, 1862.445068, -1871.704223, 12.824115, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(935, 1864.138671, -1866.266235, 13.102522, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(935, 1864.909423, -1866.266235, 13.102522, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(935, 1864.909423, -1867.036621, 13.102522, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(935, 1864.159057, -1867.036621, 13.102522, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//BLACK MARKET - CLOSE
	//HOSPITAL INTERIOR 2 - OPEN
	CreateDynamicObject(19449, -207.3999939, -1739.6999512, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 0
	CreateDynamicObject(17038, -205.8994141, -1747.6992188, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 1
	CreateDynamicObject(17038, -204.3994141, -1747.6992188, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 2
	CreateDynamicObject(17038, -202.8999939, -1747.6999512, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 3
	CreateDynamicObject(17038, -201.3994141, -1747.6992188, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 4
	CreateDynamicObject(19460, -207.3990021, -1739.6999512, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 5
	CreateDynamicObject(19449, -202.5996094, -1734.7998047, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 6
	CreateDynamicObject(19460, -206.1999969, -1734.8010254, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 7
	CreateDynamicObject(1569, -206.0000000, -1734.9000244, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 8
	CreateDynamicObject(1569, -203.0000000, -1734.9000244, 674.7999878, 0.0000000, 0.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 9
	CreateDynamicObject(19387, -196.6992188, -1744.5000000, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 10
	CreateDynamicObject(19357, -201.3994141, -1736.5000000, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 11
	CreateDynamicObject(19368, -201.4003906, -1736.5000000, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 12
	CreateDynamicObject(2885, -211.7998047, -1734.7998047, 678.4000244, 270.0000000, 180.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 13
	CreateDynamicObject(17038, -199.8994141, -1747.6992188, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 14
	CreateDynamicObject(17038, -198.3999939, -1747.6999512, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 15
	CreateDynamicObject(17038, -196.8994141, -1747.6992188, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 16
	CreateDynamicObject(19449, -196.6000061, -1738.0159912, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 17
	CreateDynamicObject(19460, -196.6719971, -1738.0169678, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 18
	CreateDynamicObject(19449, -195.3994141, -1742.8994141, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 19
	CreateDynamicObject(17038, -195.3994141, -1747.6992188, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 20
	CreateDynamicObject(19460, -195.4010010, -1742.9000244, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 21
	CreateDynamicObject(19449, -201.1000061, -1739.6999512, 674.0999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 22
	CreateDynamicObject(19460, -201.1005859, -1739.6992188, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 23
	CreateDynamicObject(19357, -199.8837891, -1744.5000000, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 24
	CreateDynamicObject(19460, -191.1503906, -1744.4990234, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 25
	CreateDynamicObject(19460, -191.1503906, -1744.5009766, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 26
	CreateDynamicObject(19368, -199.0749969, -1744.4990234, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 27
	CreateDynamicObject(19368, -199.0749969, -1744.5009766, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 28
	CreateDynamicObject(19368, -199.8849945, -1744.4980469, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 29
	CreateDynamicObject(19460, -201.0989990, -1739.5999756, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 30
	CreateDynamicObject(19357, -201.3994141, -1746.0996094, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 31
	CreateDynamicObject(19387, -201.3994141, -1749.2998047, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 32
	CreateDynamicObject(19357, -201.3999939, -1752.5000000, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 33
	CreateDynamicObject(19387, -201.3999939, -1755.6999512, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 34
	CreateDynamicObject(19357, -201.3994141, -1758.8994141, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 35
	CreateDynamicObject(17038, -205.8994141, -1768.3994141, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 36
	CreateDynamicObject(17038, -204.3994141, -1768.3994141, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 37
	CreateDynamicObject(17038, -202.8999939, -1768.4000244, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 38
	CreateDynamicObject(17038, -201.3999939, -1768.4000244, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 39
	CreateDynamicObject(17038, -199.8994141, -1768.3994141, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 40
	CreateDynamicObject(17038, -198.3994141, -1768.3994141, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 41
	CreateDynamicObject(17038, -196.8999939, -1768.4000244, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 42
	CreateDynamicObject(17038, -195.3994141, -1768.3994141, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 43
	CreateDynamicObject(19368, -201.4019928, -1746.0999756, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 44
	CreateDynamicObject(19368, -201.4010010, -1746.9250488, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 45
	CreateDynamicObject(19387, -201.3994141, -1762.0996094, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 46
	CreateDynamicObject(19368, -201.4010010, -1751.6369629, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 47
	CreateDynamicObject(19368, -201.4019928, -1753.3249512, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 48
	CreateDynamicObject(19368, -201.4010010, -1758.0369873, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 49
	CreateDynamicObject(19368, -201.4019928, -1759.7249756, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 50
	CreateDynamicObject(19387, -207.3994141, -1746.0996094, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 51
	CreateDynamicObject(19387, -207.3994141, -1758.8994141, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 52
	CreateDynamicObject(19357, -207.3994141, -1762.0996094, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 53
	CreateDynamicObject(19449, -195.3994141, -1752.5000000, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 54
	CreateDynamicObject(19449, -195.3994141, -1762.0996094, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 55
	CreateDynamicObject(19449, -196.5996094, -1758.7998047, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 56
	CreateDynamicObject(19460, -206.0000000, -1733.2998047, 672.5999756, 270.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 57
	CreateDynamicObject(19460, -203.0000000, -1733.3000488, 672.5999756, 270.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 58
	CreateDynamicObject(19441, -203.7140045, -1733.3010254, 677.4000244, 0.0000000, 270.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 59
	CreateDynamicObject(19441, -205.2870026, -1733.3010254, 677.4000244, 0.0000000, 270.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 60
	CreateDynamicObject(2885, -200.8994141, -1734.7998047, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 61
	CreateDynamicObject(2885, -200.8994141, -1741.5000000, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 62
	CreateDynamicObject(2885, -211.7998047, -1741.5000000, 678.4000244, 270.0000000, 179.9945068, 179.9945068, -1, 1, -1, 500, 500);	//Object number 63
	CreateDynamicObject(2885, -211.7998047, -1748.1992188, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 64
	CreateDynamicObject(2885, -200.8999939, -1748.1999512, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 65
	CreateDynamicObject(2885, -200.8994141, -1754.8994141, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 66
	CreateDynamicObject(2885, -200.8994141, -1761.5996094, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 67
	CreateDynamicObject(2885, -211.7998047, -1761.5996094, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 68
	CreateDynamicObject(17038, -207.3994141, -1747.6992188, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 69
	CreateDynamicObject(17038, -208.8994141, -1747.6992188, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 70
	CreateDynamicObject(17038, -210.3999939, -1747.6999512, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 71
	CreateDynamicObject(17038, -211.8999939, -1747.6999512, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 72
	CreateDynamicObject(17038, -213.3994141, -1747.6992188, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 73
	CreateDynamicObject(17038, -213.3994141, -1768.3994141, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 74
	CreateDynamicObject(17038, -211.8999939, -1768.4000244, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 75
	CreateDynamicObject(17038, -210.3994141, -1768.3994141, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 76
	CreateDynamicObject(17038, -208.8994141, -1768.3994141, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 77
	CreateDynamicObject(17038, -207.3999939, -1768.4000244, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 78
	CreateDynamicObject(19449, -214.5996094, -1758.8994141, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 79
	CreateDynamicObject(19449, -214.5996094, -1749.2998047, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 80
	CreateDynamicObject(19449, -214.6000061, -1739.6999512, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 81
	CreateDynamicObject(19449, -212.1992188, -1734.7998047, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 82
	CreateDynamicObject(19368, -199.8000031, -1744.5010986, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 83
	CreateDynamicObject(19368, -201.3979950, -1746.0999756, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 84
	CreateDynamicObject(19368, -201.3990021, -1746.9250488, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 85
	CreateDynamicObject(19368, -201.3990021, -1751.6369629, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 86
	CreateDynamicObject(19368, -201.3970032, -1753.3242188, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 87
	CreateDynamicObject(19368, -201.3990021, -1758.0369873, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 88
	CreateDynamicObject(19368, -201.3979950, -1759.7249756, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 89
	CreateDynamicObject(19460, -195.4010010, -1752.5000000, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 90
	CreateDynamicObject(19460, -195.4003906, -1762.0996094, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 91
	CreateDynamicObject(19460, -196.6494141, -1758.7988281, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 92
	CreateDynamicObject(19460, -196.6494141, -1758.8007812, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 93
	CreateDynamicObject(19460, -207.3979950, -1740.5140381, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 94
	CreateDynamicObject(19368, -207.3984375, -1761.2363281, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 95
	CreateDynamicObject(19368, -207.3974609, -1764.3994141, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 96
	CreateDynamicObject(19460, -214.5986328, -1758.7998047, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 97
	CreateDynamicObject(19460, -214.5980072, -1749.1999512, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 98
	CreateDynamicObject(19460, -214.5989990, -1739.5999756, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 99
	CreateDynamicObject(19460, -215.8000031, -1734.8011475, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 100
	CreateDynamicObject(19460, -207.4010010, -1739.6999512, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 101
	CreateDynamicObject(19460, -207.4013672, -1740.5136719, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 102
	CreateDynamicObject(19368, -207.4011993, -1761.2370605, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 103
	CreateDynamicObject(19368, -207.4010010, -1764.3994141, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 104
	CreateDynamicObject(1523, -201.3699951, -1756.4499512, 674.7399902, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 105
	CreateDynamicObject(1523, -201.3691406, -1750.0498047, 674.7399902, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 106
	CreateDynamicObject(1523, -201.3691406, -1762.8496094, 674.7399902, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 107
	CreateDynamicObject(2686, -201.5130005, -1744.9000244, 676.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 108
	CreateDynamicObject(2685, -201.5130005, -1745.4000244, 676.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 109
	CreateDynamicObject(2688, -207.2998047, -1747.5996094, 676.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 110
	CreateDynamicObject(16101, -201.5000000, -1748.5000000, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 111
	CreateDynamicObject(16101, -201.5000000, -1750.0000000, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 112
	CreateDynamicObject(16101, -201.5000000, -1754.9000244, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 113
	CreateDynamicObject(16101, -201.5000000, -1756.4000244, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 114
	CreateDynamicObject(16101, -201.5000000, -1761.2998047, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 115
	CreateDynamicObject(16101, -201.5000000, -1762.8000488, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 116
	CreateDynamicObject(16101, -201.3291016, -1748.5000000, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 117
	CreateDynamicObject(16101, -201.3300018, -1750.0000000, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 118
	CreateDynamicObject(16101, -201.3300018, -1754.9000244, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 119
	CreateDynamicObject(16101, -201.3300018, -1756.4000244, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 120
	CreateDynamicObject(16101, -201.3300018, -1761.3000488, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 121
	CreateDynamicObject(16101, -201.3300018, -1762.8000488, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 122
	CreateDynamicObject(14487, -211.8000031, -1751.5000000, 678.0999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 123
	CreateDynamicObject(14487, -211.7998047, -1729.5996094, 678.0999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 124
	CreateDynamicObject(14487, -218.5996094, -1729.5996094, 678.0999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 125
	CreateDynamicObject(14487, -218.6000061, -1754.3000488, 678.0999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 126
	CreateDynamicObject(14487, -190.8994141, -1753.5996094, 678.0999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 127
	CreateDynamicObject(14487, -190.8994141, -1735.1992188, 678.0999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 128
	CreateDynamicObject(14487, -190.8994141, -1731.6992188, 678.0999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 129
	CreateDynamicObject(1523, -207.3691406, -1746.8496094, 674.7399902, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 130
	CreateDynamicObject(1523, -207.3691406, -1759.6494141, 674.7399902, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 131
	CreateDynamicObject(16101, -207.3291016, -1745.2998047, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 132
	CreateDynamicObject(16101, -207.3300018, -1746.8199463, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 133
	CreateDynamicObject(16101, -207.3300018, -1758.0999756, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 134
	CreateDynamicObject(16101, -207.3291016, -1759.6191406, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 135
	CreateDynamicObject(16101, -207.5000000, -1759.5999756, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 136
	CreateDynamicObject(16101, -207.5000000, -1758.0999756, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 137
	CreateDynamicObject(16101, -207.5000000, -1746.8000488, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 138
	CreateDynamicObject(16101, -207.5000000, -1745.2998047, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 139
	CreateDynamicObject(1999, -200.5000000, -1740.3994141, 674.7999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 140
	CreateDynamicObject(2009, -199.5000000, -1743.7998047, 674.7999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 141
	CreateDynamicObject(1671, -199.5000000, -1739.3000488, 675.2000122, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 142
	CreateDynamicObject(1671, -199.2998047, -1743.0000000, 675.2000122, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 143
	CreateDynamicObject(19387, -213.0000000, -1742.6992188, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 144
	CreateDynamicObject(19357, -209.7998047, -1742.6992188, 673.9010010, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 145
	CreateDynamicObject(19357, -209.0000000, -1742.7001953, 673.9000244, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 146
	CreateDynamicObject(19449, -212.1999969, -1742.6989746, 679.0000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 147
	CreateDynamicObject(19466, -208.5000000, -1742.6999512, 676.4000244, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 148
	CreateDynamicObject(19466, -210.7402344, -1742.6992188, 676.4000244, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 149
	CreateDynamicObject(19368, -209.0000000, -1742.6989746, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 150
	CreateDynamicObject(19368, -210.6640015, -1742.6979980, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 151
	CreateDynamicObject(19368, -215.3739929, -1742.6989746, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 152
	CreateDynamicObject(19368, -215.3750000, -1742.7001953, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 153
	CreateDynamicObject(19368, -209.0000000, -1742.7011719, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 154
	CreateDynamicObject(19368, -210.6640015, -1742.7021484, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 155
	CreateDynamicObject(1523, -213.7890625, -1742.7294922, 674.7399902, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 156
	CreateDynamicObject(16101, -212.2998047, -1742.7998047, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 157
	CreateDynamicObject(16101, -213.8000031, -1742.8000488, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 158
	CreateDynamicObject(16101, -213.8000031, -1742.5999756, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 159
	CreateDynamicObject(16101, -212.3000031, -1742.5999756, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 160
	CreateDynamicObject(16101, -207.5000000, -1742.6992188, 666.9000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 161
	CreateDynamicObject(3657, -213.8999939, -1745.6999512, 675.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 162
	CreateDynamicObject(3394, -213.7998047, -1739.0000000, 674.7999878, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 163
	CreateDynamicObject(3396, -208.1992188, -1737.0000000, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 164
	CreateDynamicObject(3397, -208.1992188, -1740.8994141, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 165
	CreateDynamicObject(14487, -218.6000061, -1731.8000488, 678.0999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 166
	CreateDynamicObject(2007, -213.6992188, -1735.3994141, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 167
	CreateDynamicObject(2007, -212.6992188, -1735.3994141, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 168
	CreateDynamicObject(2132, -211.0996094, -1735.3994141, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 169
	CreateDynamicObject(14532, -211.3994141, -1737.0996094, 675.7800293, 0.0000000, 0.0000000, 194.7491455, -1, 1, -1, 500, 500);	//Object number 170
	CreateDynamicObject(2146, -211.0996094, -1738.7998047, 675.2700195, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 171
	CreateDynamicObject(3657, -206.8999939, -1754.5999756, 675.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 172
	CreateDynamicObject(2811, -201.8994141, -1735.3994141, 674.7999878, 0.0000000, 0.0000000, 139.9932861, -1, 1, -1, 500, 500);	//Object number 173
	CreateDynamicObject(2811, -201.8999939, -1763.1999512, 674.7999878, 0.0000000, 0.0000000, 219.9957275, -1, 1, -1, 500, 500);	//Object number 174
	CreateDynamicObject(2811, -206.8994141, -1763.1992188, 674.7999878, 0.0000000, 0.0000000, 149.9908752, -1, 1, -1, 500, 500);	//Object number 175
	CreateDynamicObject(3657, -206.8999939, -1739.5999756, 675.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 176
	CreateDynamicObject(2811, -206.8994141, -1735.3994141, 674.7999878, 0.0000000, 0.0000000, 221.9897461, -1, 1, -1, 500, 500);	//Object number 177
	CreateDynamicObject(2688, -201.5000000, -1760.5000000, 676.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 178
	CreateDynamicObject(19460, -201.5000000, -1739.6999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 179
	CreateDynamicObject(19460, -207.3000031, -1739.6999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 180
	CreateDynamicObject(19460, -207.3000031, -1749.3000488, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 181
	CreateDynamicObject(19460, -207.2998047, -1758.8994141, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 182
	CreateDynamicObject(19460, -201.5000000, -1749.3000488, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 183
	CreateDynamicObject(19460, -201.5000000, -1758.8994141, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 184
	CreateDynamicObject(19460, -204.8000031, -1734.9000244, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 185
	CreateDynamicObject(19460, -214.5000000, -1758.9000244, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 186
	CreateDynamicObject(19460, -214.5000000, -1749.3000488, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 187
	CreateDynamicObject(19460, -214.5000000, -1739.6999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 188
	CreateDynamicObject(19460, -207.5000000, -1758.9000244, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 189
	CreateDynamicObject(19460, -207.5000000, -1749.3000488, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 190
	CreateDynamicObject(19460, -207.5000000, -1739.6999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 191
	CreateDynamicObject(19460, -214.3999939, -1734.9000244, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 192
	CreateDynamicObject(19460, -212.1999969, -1742.8000488, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 193
	CreateDynamicObject(19460, -212.1999969, -1742.5999756, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 194
	CreateDynamicObject(19460, -196.6000061, -1744.4000244, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 195
	CreateDynamicObject(19460, -196.6000061, -1738.0999756, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 196
	CreateDynamicObject(19460, -196.6000061, -1744.5999756, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 197
	CreateDynamicObject(19460, -196.6000061, -1758.6999512, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 198
	CreateDynamicObject(19460, -196.6000061, -1758.9000244, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 199
	CreateDynamicObject(19460, -195.5000000, -1758.9000244, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 200
	CreateDynamicObject(19460, -195.5000000, -1749.3000488, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 201
	CreateDynamicObject(19460, -195.5000000, -1739.6999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 202
	CreateDynamicObject(19357, -209.0000000, -1748.8010254, 673.9010010, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 203
	CreateDynamicObject(19449, -207.3999939, -1752.5000000, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 204
	CreateDynamicObject(19460, -207.4010010, -1751.5999756, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 205
	CreateDynamicObject(19460, -207.3990021, -1751.5999756, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 206
	CreateDynamicObject(19460, -207.4019928, -1753.3000488, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 207
	CreateDynamicObject(19460, -207.3979950, -1753.3000488, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 208
	CreateDynamicObject(3657, -206.8999939, -1750.4000244, 675.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 209
	CreateDynamicObject(19387, -213.0000000, -1748.8000488, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 210
	CreateDynamicObject(19449, -212.1999969, -1748.8010254, 679.0000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 211
	CreateDynamicObject(19357, -209.8000031, -1748.8000488, 673.9000244, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 212
	CreateDynamicObject(19466, -208.6000061, -1748.8000488, 676.4000244, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 213
	CreateDynamicObject(19466, -210.8398438, -1748.7998047, 676.4000244, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 214
	CreateDynamicObject(19449, -212.1999969, -1756.1999512, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 215
	CreateDynamicObject(1523, -213.7890015, -1748.8299561, 674.7399902, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 216
	CreateDynamicObject(19460, -212.1999969, -1748.6999512, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 217
	CreateDynamicObject(19460, -212.1999969, -1748.9000244, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 218
	CreateDynamicObject(19460, -212.1999969, -1756.0999756, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 219
	CreateDynamicObject(19460, -212.3000031, -1756.1989746, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 220
	CreateDynamicObject(19368, -209.0000000, -1748.7989502, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 221
	CreateDynamicObject(19368, -210.6629944, -1748.7989502, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 222
	CreateDynamicObject(19368, -210.6621094, -1748.8027344, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 223
	CreateDynamicObject(19368, -209.0000000, -1748.8017578, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 224
	CreateDynamicObject(19368, -215.3750000, -1748.7989502, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 225
	CreateDynamicObject(19368, -215.3750000, -1748.8007812, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 226
	CreateDynamicObject(3397, -208.1999969, -1750.8000488, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 227
	CreateDynamicObject(3396, -208.1999969, -1754.4000244, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 228
	CreateDynamicObject(19460, -212.1999969, -1756.3000488, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 229
	CreateDynamicObject(2132, -209.8999939, -1755.5999756, 674.7999878, 0.0000000, 0.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 230
	CreateDynamicObject(2007, -212.3000031, -1755.5999756, 674.7999878, 0.0000000, 0.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 231
	CreateDynamicObject(2007, -213.3000031, -1755.5999756, 674.7999878, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 232
	CreateDynamicObject(3394, -213.8000031, -1752.1999512, 674.7999878, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 233
	CreateDynamicObject(2146, -211.1000061, -1751.9000244, 675.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 234
	CreateDynamicObject(14532, -210.6999969, -1753.5000000, 675.7999878, 0.0000000, 0.0000000, 14.0000000, -1, 1, -1, 500, 500);	//Object number 235
	CreateDynamicObject(19460, -212.2998047, -1756.2001953, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 236
	CreateDynamicObject(3657, -201.8994141, -1746.5000000, 675.2999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 237
	CreateDynamicObject(2811, -214.0000000, -1743.4000244, 674.7999878, 0.0000000, 0.0000000, 251.9897461, -1, 1, -1, 500, 500);	//Object number 238
	CreateDynamicObject(2811, -214.0000000, -1748.0999756, 674.7999878, 0.0000000, 0.0000000, 295.9879761, -1, 1, -1, 500, 500);	//Object number 239
	CreateDynamicObject(16101, -207.5000000, -1748.8000488, 666.9000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 240
	CreateDynamicObject(3394, -213.7998047, -1761.5000000, 674.7999878, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 241
	CreateDynamicObject(2007, -214.0000000, -1758.5999756, 674.7999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 242
	CreateDynamicObject(2007, -214.0000000, -1757.5999756, 674.7999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 243
	CreateDynamicObject(2132, -210.1000061, -1763.0999756, 674.7999878, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 244
	CreateDynamicObject(3396, -208.1999969, -1761.6999512, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 245
	CreateDynamicObject(3397, -210.8000031, -1756.6999512, 674.7999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 246
	CreateDynamicObject(2146, -211.1999969, -1759.9000244, 675.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 247
	CreateDynamicObject(11237, -230.0000000, -1760.3994141, 698.9000244, 0.0000000, 179.9945068, 179.9945068, -1, 1, -1, 500, 500);	//Object number 248
	CreateDynamicObject(3053, -211.1999969, -1760.4000244, 678.4000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 249
	CreateDynamicObject(16101, -211.1999969, -1760.4000244, 688.0999756, 0.0000000, 180.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 250
	CreateDynamicObject(2596, -214.3000031, -1760.0999756, 676.7000122, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 251
	CreateDynamicObject(2885, -211.8000031, -1754.9000244, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 252
	CreateDynamicObject(2596, -214.3000031, -1760.8000488, 676.7000122, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 253
	CreateDynamicObject(2596, -214.3000031, -1760.8000488, 677.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 254
	CreateDynamicObject(2596, -214.3000031, -1760.0999756, 677.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 255
	CreateDynamicObject(16101, -222.5996094, -1760.3994141, 677.9000244, 0.0000000, 90.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 256
	CreateDynamicObject(16101, -214.5000000, -1760.4000244, 666.19387220, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 257
	CreateDynamicObject(3808, -207.2500000, -1757.7998047, 676.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 258
	CreateDynamicObject(3808, -212.0000000, -1742.8499756, 676.2999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 259
	CreateDynamicObject(3808, -212.0000000, -1748.6600342, 676.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 260
	CreateDynamicObject(19460, -201.3000031, -1749.5000000, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 261
	CreateDynamicObject(19460, -201.3000031, -1759.0999756, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 262
	CreateDynamicObject(2009, -199.5000000, -1747.8000488, 674.7999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 263
	CreateDynamicObject(1999, -200.5000000, -1746.0999756, 674.8010254, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 264
	CreateDynamicObject(1671, -199.3999939, -1746.9000244, 675.2000122, 0.0000000, 0.0000000, 264.0000000, -1, 1, -1, 500, 500);	//Object number 265
	CreateDynamicObject(1671, -199.3999939, -1745.0999756, 675.2000122, 0.0000000, 0.0000000, 278.0000000, -1, 1, -1, 500, 500);	//Object number 266
	CreateDynamicObject(2009, -196.8000031, -1753.8000488, 674.8010254, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 267
	CreateDynamicObject(1999, -197.8000031, -1752.0999756, 674.7999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 268
	CreateDynamicObject(1999, -198.6999969, -1752.8000488, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 269
	CreateDynamicObject(2009, -199.6999969, -1751.0999756, 674.8010254, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 270
	CreateDynamicObject(1671, -197.6000061, -1753.0000000, 675.2000122, 0.0000000, 0.0000000, 282.0000000, -1, 1, -1, 500, 500);	//Object number 271
	CreateDynamicObject(1671, -196.8000031, -1751.3000488, 675.2000122, 0.0000000, 0.0000000, 260.0000000, -1, 1, -1, 500, 500);	//Object number 272
	CreateDynamicObject(1671, -199.8000031, -1752.0999756, 675.2000122, 0.0000000, 0.0000000, 84.0000000, -1, 1, -1, 500, 500);	//Object number 273
	CreateDynamicObject(1671, -199.8000031, -1753.8000488, 675.2000122, 0.0000000, 0.0000000, 104.0000000, -1, 1, -1, 500, 500);	//Object number 274
	CreateDynamicObject(2009, -196.0000000, -1757.1999512, 674.7999878, 0.0000000, 0.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 275
	CreateDynamicObject(1999, -197.6999969, -1758.1999512, 674.8010254, 0.0000000, 0.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 276
	CreateDynamicObject(1671, -196.8999939, -1757.3000488, 675.2000122, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 277
	CreateDynamicObject(1671, -198.6999969, -1758.0000000, 675.2000122, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 278
	CreateDynamicObject(2202, -196.0000000, -1746.1999512, 674.7800293, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 279
	CreateDynamicObject(2811, -195.8999939, -1745.0999756, 674.7999878, 0.0000000, 0.0000000, 115.9932861, -1, 1, -1, 500, 500);	//Object number 280
	CreateDynamicObject(2007, -196.0000000, -1748.3000488, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 281
	CreateDynamicObject(2007, -196.0000000, -1749.3000488, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 282
	CreateDynamicObject(2811, -200.8999939, -1758.3000488, 674.7999878, 0.0000000, 0.0000000, 141.9881592, -1, 1, -1, 500, 500);	//Object number 283
	CreateDynamicObject(2611, -198.1999969, -1758.6700439, 676.7999878, 0.0000000, 0.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 284
	CreateDynamicObject(2611, -201.2700043, -1746.4000244, 676.5999756, 0.0000000, 0.0000000, 89.9945068, -1, 1, -1, 500, 500);	//Object number 288
	CreateDynamicObject(19449, -212.1999969, -1763.6999512, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 289
	CreateDynamicObject(19449, -195.3994141, -1771.6992188, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 290
	CreateDynamicObject(2885, -200.8994141, -1768.2998047, 678.4000244, 270.0000000, 180.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 291
	CreateDynamicObject(19460, -201.3984375, -1767.5791016, 673.3010254, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 292
	CreateDynamicObject(19460, -195.4003906, -1771.6992188, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 293
	CreateDynamicObject(19460, -195.5000000, -1768.5000000, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 294
	CreateDynamicObject(19460, -201.2998047, -1768.6992188, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 295
	CreateDynamicObject(14487, -190.8994141, -1778.1992188, 678.0999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 296
	CreateDynamicObject(1789, -211.8000031, -1753.0999756, 675.2999878, 0.0000000, 0.0000000, 290.0000000, -1, 1, -1, 500, 500);	//Object number 297
	CreateDynamicObject(1789, -211.8994141, -1759.1992188, 675.2999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 298
	CreateDynamicObject(1789, -210.1999969, -1737.6999512, 675.2999878, 0.0000000, 0.0000000, 99.9951172, -1, 1, -1, 500, 500);	//Object number 299
	CreateDynamicObject(19460, -212.1999969, -1763.5999756, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 300
	CreateDynamicObject(1999, -197.5000000, -1740.4000244, 674.7999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 301
	CreateDynamicObject(1671, -196.5000000, -1739.3000488, 675.2000122, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 302
	CreateDynamicObject(19460, -212.3000031, -1765.4010010, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 305
	CreateDynamicObject(16101, -212.3000031, -1748.6999512, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 306
	CreateDynamicObject(16101, -213.8000031, -1748.6999512, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 307
	CreateDynamicObject(16101, -213.8000031, -1748.9000244, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 308
	CreateDynamicObject(16101, -212.3000031, -1748.9000244, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 309
	CreateDynamicObject(2852, -206.8000031, -1742.8000488, 675.2800293, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 310
	CreateDynamicObject(2315, -206.8000031, -1742.4000244, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 311
	CreateDynamicObject(2855, -206.6999969, -1743.6999512, 675.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 312
	CreateDynamicObject(19387, -207.3994141, -1768.5000000, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 313
	CreateDynamicObject(19357, -207.3994141, -1765.2998047, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 314
	CreateDynamicObject(19387, -207.3994141, -1773.2998047, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 315
	CreateDynamicObject(17038, -213.3999939, -1789.0999756, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 316
	CreateDynamicObject(17038, -211.8994141, -1789.0996094, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 317
	CreateDynamicObject(17038, -210.3999939, -1789.0999756, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 318
	CreateDynamicObject(17038, -208.8999939, -1789.0999756, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 319
	CreateDynamicObject(17038, -207.3999939, -1789.0999756, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 320
	CreateDynamicObject(17038, -205.8999939, -1789.0999756, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 321
	CreateDynamicObject(17038, -204.3999939, -1789.0999756, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 322
	CreateDynamicObject(17038, -202.8999939, -1789.0999756, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 323
	CreateDynamicObject(17038, -201.3994141, -1789.0996094, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 324
	CreateDynamicObject(17038, -199.8994141, -1789.0996094, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 325
	CreateDynamicObject(17038, -198.3999939, -1789.0999756, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 326
	CreateDynamicObject(17038, -196.8994141, -1789.0996094, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 327
	CreateDynamicObject(17038, -195.3999939, -1789.0999756, 668.2999878, 0.0000000, 270.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 328
	CreateDynamicObject(19449, -212.1269989, -1779.6999512, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 329
	CreateDynamicObject(19449, -214.5996094, -1768.5000000, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 330
	CreateDynamicObject(19449, -214.6000061, -1778.0999756, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 331
	CreateDynamicObject(19449, -214.6000061, -1787.6999512, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 332
	CreateDynamicObject(19387, -213.0000000, -1785.1992188, 676.5000000, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 333
	CreateDynamicObject(19387, -207.0000000, -1785.1999512, 676.5000000, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 334
	CreateDynamicObject(19430, -210.5996094, -1785.1992188, 676.5000000, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 335
	CreateDynamicObject(19387, -201.8000031, -1785.1999512, 676.5000000, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 336
	CreateDynamicObject(19430, -199.3994141, -1785.1992188, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 337
	CreateDynamicObject(19387, -197.0000000, -1785.1992188, 676.5000000, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 338
	CreateDynamicObject(19449, -195.3994141, -1781.2998047, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 339
	CreateDynamicObject(19449, -209.8000031, -1790.0000000, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 340
	CreateDynamicObject(19449, -204.3999939, -1790.0000000, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 341
	CreateDynamicObject(19449, -200.1999969, -1790.0000000, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 342
	CreateDynamicObject(19449, -195.3999939, -1790.9000244, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 343
	CreateDynamicObject(19449, -200.1999969, -1792.1999512, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 344
	CreateDynamicObject(19449, -209.7998047, -1792.1992188, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 345
	CreateDynamicObject(19430, -207.3994141, -1770.8994141, 676.5000000, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 346
	CreateDynamicObject(19387, -207.3994141, -1776.5000000, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 347
	CreateDynamicObject(19449, -212.1999969, -1775.0000000, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 348
	CreateDynamicObject(19449, -212.1999969, -1770.1999512, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 349
	CreateDynamicObject(19449, -212.1992188, -1765.3994141, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 350
	CreateDynamicObject(19460, -195.4004059, -1781.3000488, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 351
	CreateDynamicObject(19460, -195.4004059, -1790.9000244, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 352
	CreateDynamicObject(19460, -214.5980072, -1768.4000244, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 353
	CreateDynamicObject(19460, -214.5980072, -1778.0000000, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 354
	CreateDynamicObject(19460, -214.5980072, -1787.5996094, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 355
	CreateDynamicObject(19460, -212.3000031, -1763.6979980, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 356
	CreateDynamicObject(19460, -212.3000031, -1770.2010498, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 357
	CreateDynamicObject(19460, -212.2998047, -1770.1972656, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 358
	CreateDynamicObject(19460, -212.3000031, -1774.9980469, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 359
	CreateDynamicObject(19460, -212.3000031, -1775.0009766, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 360
	CreateDynamicObject(19460, -212.3000031, -1779.6979980, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 361
	CreateDynamicObject(19460, -212.2998047, -1779.7001953, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 362
	CreateDynamicObject(19368, -207.3981018, -1766.1250000, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 363
	CreateDynamicObject(19368, -207.4015045, -1766.1250000, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 364
	CreateDynamicObject(19368, -207.4010010, -1770.8360596, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 365
	CreateDynamicObject(19368, -207.4015045, -1770.9260254, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 366
	CreateDynamicObject(19368, -207.3974609, -1770.9248047, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 367
	CreateDynamicObject(19368, -207.3984985, -1770.8360596, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 368
	CreateDynamicObject(19441, -207.3979950, -1774.8344727, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 369
	CreateDynamicObject(19441, -207.4010010, -1774.8339844, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 370
	CreateDynamicObject(19441, -207.4015045, -1774.9279785, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 371
	CreateDynamicObject(19441, -207.3979950, -1774.9279785, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 372
	CreateDynamicObject(19441, -207.3974609, -1778.0332031, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 373
	CreateDynamicObject(19441, -207.3970032, -1778.9899902, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 374
	CreateDynamicObject(19441, -207.4010010, -1778.9000244, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 375
	CreateDynamicObject(19441, -207.4015045, -1778.0340576, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 376
	CreateDynamicObject(19430, -207.3999939, -1778.9000244, 676.5000000, 0.0000000, 0.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 377
	CreateDynamicObject(19460, -201.4010010, -1767.5999756, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 378
	CreateDynamicObject(19460, -196.6000061, -1779.6979980, 673.3010254, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 379
	CreateDynamicObject(19368, -201.3999939, -1778.0000000, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 380
	CreateDynamicObject(19460, -207.3000031, -1768.5000000, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 381
	CreateDynamicObject(19460, -207.3000031, -1778.0999756, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 382
	CreateDynamicObject(19460, -201.5000000, -1768.5000000, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 383
	CreateDynamicObject(19460, -201.5000000, -1778.0999756, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 384
	CreateDynamicObject(19460, -207.5000000, -1768.5000000, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 385
	CreateDynamicObject(19460, -207.5010071, -1774.9000244, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 386
	CreateDynamicObject(19460, -201.3009949, -1774.9000244, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 387
	CreateDynamicObject(19460, -196.6000061, -1779.5999756, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 388
	CreateDynamicObject(19460, -196.6000061, -1779.8000488, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 389
	CreateDynamicObject(19460, -212.1000061, -1779.8000488, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 390
	CreateDynamicObject(19460, -212.1000061, -1775.0999756, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 391
	CreateDynamicObject(19460, -212.1000061, -1774.9000244, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 392
	CreateDynamicObject(19460, -212.1000061, -1770.3000488, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 393
	CreateDynamicObject(19460, -212.1000061, -1770.0999756, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 394
	CreateDynamicObject(19460, -212.1000061, -1765.5000000, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 395
	CreateDynamicObject(19460, -195.5000000, -1778.0999756, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 396
	CreateDynamicObject(19460, -195.5000000, -1787.6999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 397
	CreateDynamicObject(19460, -200.3999939, -1792.0999756, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 398
	CreateDynamicObject(19460, -210.0000000, -1792.0999756, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 399
	CreateDynamicObject(19460, -214.5000000, -1787.6999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 400
	CreateDynamicObject(19460, -214.5000000, -1768.5000000, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 401
	CreateDynamicObject(19460, -214.5000000, -1778.0999756, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 402
	CreateDynamicObject(19460, -200.3000031, -1785.0999756, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 403
	CreateDynamicObject(19460, -200.3000031, -1785.3000488, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 404
	CreateDynamicObject(19460, -209.8999939, -1785.3000488, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 405
	CreateDynamicObject(19460, -209.8999939, -1785.0999756, 679.9000244, 0.0000000, 179.9945068, 90.0000000, -1, 1, -1, 500, 500);	//Object number 406
	CreateDynamicObject(19460, -209.8999939, -1790.1999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 407
	CreateDynamicObject(19460, -209.6999969, -1790.1999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 408
	CreateDynamicObject(19460, -204.3000031, -1790.1999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 409
	CreateDynamicObject(19460, -200.3000031, -1790.1999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 410
	CreateDynamicObject(19460, -200.1000061, -1790.1999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 411
	CreateDynamicObject(19460, -209.6999969, -1792.1979980, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 412
	CreateDynamicObject(19460, -200.1000061, -1792.1979980, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 413
	CreateDynamicObject(2885, -200.8999939, -1775.0000000, 678.4000244, 270.0000000, 180.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 414
	CreateDynamicObject(2885, -200.8999939, -1781.6999512, 678.4000244, 270.0000000, 180.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 415
	CreateDynamicObject(2885, -200.8999939, -1788.4000244, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 416
	CreateDynamicObject(2885, -211.8000031, -1788.4000244, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 417
	CreateDynamicObject(2885, -211.8000031, -1781.6999512, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 418
	CreateDynamicObject(2885, -211.8000031, -1775.0000000, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 419
	CreateDynamicObject(2885, -211.8000031, -1768.3000488, 678.4000244, 270.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 420
	CreateDynamicObject(19460, -201.5010071, -1780.5000000, 679.9010010, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 421
	CreateDynamicObject(19460, -207.3009949, -1780.4000244, 679.9010010, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 422
	CreateDynamicObject(19430, -209.0000000, -1785.2010498, 676.5000000, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 423
	CreateDynamicObject(19430, -204.6000061, -1785.1999512, 676.5000000, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 424
	CreateDynamicObject(19430, -204.0000000, -1785.2010498, 676.5000000, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 425
	CreateDynamicObject(14487, -211.8000031, -1768.0000000, 678.0999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 426
	CreateDynamicObject(14487, -211.8000031, -1773.5000000, 678.0999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 427
	CreateDynamicObject(19460, -218.5480042, -1785.1979980, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 431
	CreateDynamicObject(19368, -210.6260071, -1785.1979980, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 432
	CreateDynamicObject(19368, -209.3370056, -1785.1970215, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 433
	CreateDynamicObject(19368, -204.6260071, -1785.1979980, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 434
	CreateDynamicObject(19368, -204.1369934, -1785.1970215, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 435
	CreateDynamicObject(19368, -199.4259949, -1785.1979980, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 436
	CreateDynamicObject(19368, -199.3370056, -1785.1970215, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 437
	CreateDynamicObject(19368, -194.6260071, -1785.1979980, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 438
	CreateDynamicObject(19460, -205.6999969, -1790.1999512, 679.9000244, 0.0000000, 179.9945068, 0.0000000, -1, 1, -1, 500, 500);	//Object number 439
	CreateDynamicObject(19449, -205.6000061, -1790.0000000, 676.5000000, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 440
	CreateDynamicObject(19379, -210.8000031, -1790.0000000, 674.7000122, 0.0000000, 90.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 441
	CreateDynamicObject(19379, -200.3000031, -1790.0000000, 674.7000122, 0.0000000, 90.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 442
	CreateDynamicObject(19460, -218.5480042, -1785.2010498, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 443
	CreateDynamicObject(19368, -210.6250000, -1785.2010498, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 444
	CreateDynamicObject(19368, -209.3370056, -1785.2015381, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 445
	CreateDynamicObject(19368, -204.6250000, -1785.2010498, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 446
	CreateDynamicObject(19368, -204.1369934, -1785.2015381, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 447
	CreateDynamicObject(19368, -199.4250031, -1785.2010498, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 448
	CreateDynamicObject(19368, -199.3370056, -1785.2004395, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 449
	CreateDynamicObject(19368, -194.6250000, -1785.2010498, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 450
	CreateDynamicObject(19379, -212.6000061, -1768.5000000, 674.7000122, 0.0000000, 90.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 451
	CreateDynamicObject(19379, -212.6000061, -1774.9000244, 674.7009888, 0.0000000, 90.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 452
	CreateDynamicObject(19460, -209.8009949, -1789.9899902, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 453
	CreateDynamicObject(19460, -209.7980042, -1790.0000000, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 454
	CreateDynamicObject(19460, -205.6009979, -1790.0000000, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 455
	CreateDynamicObject(19460, -204.3979950, -1790.0000000, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 456
	CreateDynamicObject(19460, -200.2010040, -1789.9998779, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 457
	CreateDynamicObject(19460, -200.1979980, -1790.0000000, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 458
	CreateDynamicObject(1844, -196.0000000, -1771.5999756, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 459
	CreateDynamicObject(1848, -196.0000000, -1767.5999756, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 460
	CreateDynamicObject(1884, -198.8000031, -1772.5999756, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 461
	CreateDynamicObject(1885, -200.8000031, -1773.8000488, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 462
	CreateDynamicObject(1889, -198.8000031, -1766.5999756, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 463
	CreateDynamicObject(1890, -198.8000031, -1769.5999756, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 464
	CreateDynamicObject(1983, -198.8000031, -1764.5999756, 674.7999878, 0.0000000, 0.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 465
	CreateDynamicObject(1984, -197.1000061, -1761.9000244, 674.7999878, 0.0000000, 0.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 466
	CreateDynamicObject(1885, -196.0000000, -1764.4000244, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 467
	CreateDynamicObject(1991, -196.0000000, -1773.5000000, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 468
	CreateDynamicObject(1996, -196.0000000, -1774.5000000, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 469
	CreateDynamicObject(2362, -196.6000061, -1761.9000244, 675.7299805, 0.0000000, 0.0000000, 320.0000000, -1, 1, -1, 500, 500);	//Object number 470
	CreateDynamicObject(1883, -198.3000031, -1777.1999512, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 471
	CreateDynamicObject(1846, -198.3000031, -1777.1999512, 676.7000122, 0.0000000, 180.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 472
	CreateDynamicObject(1990, -196.0000000, -1759.4000244, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 473
	CreateDynamicObject(1990, -196.8999939, -1759.4000244, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 474
	CreateDynamicObject(1775, -198.6000061, -1759.4000244, 675.9000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 475
	CreateDynamicObject(1776, -201.8999939, -1752.3000488, 675.9000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 476
	CreateDynamicObject(1886, -200.8999939, -1759.5000000, 678.2999878, 19.9759827, 2.9261780, 22.9995728, -1, 1, -1, 500, 500);	//Object number 477
	CreateDynamicObject(1886, -195.8000031, -1769.4000244, 678.2999878, 19.9731445, 2.9223633, 332.9943848, -1, 1, -1, 500, 500);	//Object number 478
	CreateDynamicObject(1886, -201.0000000, -1779.0000000, 678.2999878, 19.9676514, 2.9223633, 164.9901123, -1, 1, -1, 500, 500);	//Object number 479
	CreateDynamicObject(19460, -201.3999939, -1769.0999756, 673.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 485
	CreateDynamicObject(1649, -201.3999939, -1778.0000000, 676.4000244, 0.0000000, 90.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 487
	CreateDynamicObject(1649, -201.3994141, -1778.0000000, 676.4000244, 0.0000000, 90.0000000, 89.7484436, -1, 1, -1, 500, 500);	//Object number 488
	CreateDynamicObject(1649, -201.3999939, -1771.6999512, 676.5999756, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 489
	CreateDynamicObject(1649, -201.3999939, -1767.3000488, 676.5999756, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 490
	CreateDynamicObject(19430, -201.3999939, -1764.5000000, 676.5000000, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 491
	CreateDynamicObject(1649, -201.3994141, -1767.2998047, 676.5999756, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 492
	CreateDynamicObject(1649, -201.3994141, -1771.6992188, 676.5999756, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 493
	CreateDynamicObject(1649, -199.1999969, -1779.6999512, 676.5999756, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 494
	CreateDynamicObject(19430, -196.1000061, -1779.6999512, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 495
	CreateDynamicObject(19460, -192.2010040, -1779.7010498, 673.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 496
	CreateDynamicObject(1649, -199.1992188, -1779.6992188, 676.5999756, 0.0000000, 0.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 497
	CreateDynamicObject(2811, -201.0000000, -1779.3000488, 674.7999878, 0.0000000, 0.0000000, 139.9908447, -1, 1, -1, 500, 500);	//Object number 498
	CreateDynamicObject(3657, -206.8000031, -1765.5999756, 675.2999878, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 499
	CreateDynamicObject(2636, -196.1000061, -1780.3000488, 675.4000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 500
	CreateDynamicObject(2637, -197.1000061, -1780.9000244, 675.2000122, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 501
	CreateDynamicObject(2637, -200.1999969, -1780.9000244, 675.2000122, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 502
	CreateDynamicObject(2637, -208.5000000, -1780.9000244, 675.2000122, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 503
	CreateDynamicObject(2637, -212.3000031, -1780.9000244, 675.2000122, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 504
	CreateDynamicObject(2636, -196.1000061, -1781.4000244, 675.4000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 505
	CreateDynamicObject(2636, -199.3000031, -1781.4000244, 675.4000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 506
	CreateDynamicObject(2636, -199.3000031, -1780.4000244, 675.4000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 507
	CreateDynamicObject(2636, -207.6000061, -1780.4000244, 675.4000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 508
	CreateDynamicObject(2636, -207.6000061, -1781.4000244, 675.4000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 509
	CreateDynamicObject(2636, -211.3999939, -1781.4000244, 675.4000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 510
	CreateDynamicObject(2636, -211.3999939, -1780.4000244, 675.4000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 511
	CreateDynamicObject(2636, -213.3000031, -1780.4000244, 675.4000244, 0.0000000, 0.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 512
	CreateDynamicObject(2636, -213.3000031, -1781.4000244, 675.4000244, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 513
	CreateDynamicObject(2636, -209.5000000, -1781.4000244, 675.4000244, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 514
	CreateDynamicObject(2636, -209.5000000, -1780.3000488, 675.4000244, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 515
	CreateDynamicObject(2636, -201.1999969, -1780.3000488, 675.4000244, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 516
	CreateDynamicObject(2636, -201.1999969, -1781.3000488, 675.4000244, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 517
	CreateDynamicObject(2636, -198.0000000, -1781.3000488, 675.4000244, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 518
	CreateDynamicObject(2636, -198.0000000, -1780.3000488, 675.4000244, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 519
	CreateDynamicObject(1796, -210.1999969, -1778.5999756, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 520
	CreateDynamicObject(1796, -213.3999939, -1787.8000488, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 521
	CreateDynamicObject(1796, -213.3999939, -1790.5000000, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 522
	CreateDynamicObject(1796, -209.1999969, -1790.5000000, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 523
	CreateDynamicObject(1796, -209.1999969, -1787.8000488, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 524
	CreateDynamicObject(1796, -203.8000031, -1787.8000488, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 525
	CreateDynamicObject(1796, -199.0000000, -1787.8000488, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 526
	CreateDynamicObject(1796, -203.8000031, -1790.5000000, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 527
	CreateDynamicObject(1796, -199.0000000, -1790.5000000, 674.7999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 528
	CreateDynamicObject(1796, -212.8999939, -1778.5999756, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 529
	CreateDynamicObject(1796, -212.8999939, -1773.8000488, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 530
	CreateDynamicObject(1796, -212.8999939, -1769.0000000, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 531
	CreateDynamicObject(1796, -210.1999969, -1773.8000488, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 532
	CreateDynamicObject(1796, -210.1999969, -1769.0000000, 674.7999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 533
	CreateDynamicObject(2811, -206.8999939, -1774.9000244, 674.7999878, 0.0000000, 0.0000000, 95.9908447, -1, 1, -1, 500, 500);	//Object number 534
	CreateDynamicObject(1523, -207.3500061, -1769.2509766, 674.7399902, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 535
	CreateDynamicObject(1523, -207.3500061, -1774.0520020, 674.7399902, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 536
	CreateDynamicObject(1523, -207.3500061, -1777.2509766, 674.7399902, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 537
	CreateDynamicObject(1523, -212.2100067, -1785.1700439, 674.7399902, 0.0000000, 0.0000000, 180.0000000, -1, 1, -1, 500, 500);	//Object number 538
	CreateDynamicObject(1523, -206.2100067, -1785.1700439, 674.7399902, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 539
	CreateDynamicObject(1523, -201.0079956, -1785.1700439, 674.7399902, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 540
	CreateDynamicObject(1523, -196.2100067, -1785.1700439, 674.7399902, 0.0000000, 0.0000000, 179.9945068, -1, 1, -1, 500, 500);	//Object number 541
	CreateDynamicObject(3808, -207.2500000, -1767.5000000, 676.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 542
	CreateDynamicObject(3808, -207.2500000, -1772.2900391, 676.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 543
	CreateDynamicObject(3808, -207.2500000, -1775.5000000, 676.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 544
	CreateDynamicObject(3808, -214.0000000, -1785.0500488, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 545
	CreateDynamicObject(3808, -208.0000000, -1785.0500488, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 546
	CreateDynamicObject(3808, -202.8000031, -1785.0500488, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 547
	CreateDynamicObject(3808, -198.0000000, -1785.0500488, 676.5000000, 0.0000000, 0.0000000, 90.0000000, -1, 1, -1, 500, 500);	//Object number 548
	CreateDynamicObject(16101, -207.3300018, -1767.6999512, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 549
	CreateDynamicObject(16101, -207.3329926, -1769.2800293, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 550
	CreateDynamicObject(16101, -207.3300018, -1772.5000000, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 551
	CreateDynamicObject(16101, -207.3300018, -1774.0000000, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 552
	CreateDynamicObject(16101, -207.3300018, -1775.6999512, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 553
	CreateDynamicObject(16101, -207.3300018, -1777.2800293, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 554
	CreateDynamicObject(16101, -213.7799988, -1785.1300049, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 555
	CreateDynamicObject(16101, -212.2100067, -1785.1300049, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 556
	CreateDynamicObject(16101, -207.7799988, -1785.1300049, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 557
	CreateDynamicObject(16101, -206.2100067, -1785.1300049, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 558
	CreateDynamicObject(16101, -202.5800018, -1785.1300049, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 559
	CreateDynamicObject(16101, -201.0099945, -1785.1300049, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 560
	CreateDynamicObject(16101, -197.7799988, -1785.1300049, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 561
	CreateDynamicObject(16101, -196.2100067, -1785.1300049, 666.2999878, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 562
	CreateDynamicObject(3657, -201.8999939, -1758.9000244, 675.2999878, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 563
	CreateDynamicObject(1776, -199.8994141, -1759.3994141, 675.9000244, 0.0000000, 0.0000000, 0.0000000, -1, 1, -1, 500, 500);	//Object number 564
	//CreateDynamicObject(19329, -201.41, -1767.30, 676.04,   0.00, 0.00, 90.00, 500.00);
	//CreateDynamicObject(19326, -201.41, -1771.68, 676.04,   0.00, 0.00, 90.00, 500.00);
	//CreateDynamicObject(19329, -201.41, -1778.03, 676.04,   0.00, 0.00, 90.00, 500.00);
	//CreateDynamicObject(19326, -199.18, -1779.70, 676.04,   0.00, 0.00, 180.00, 500.00);
	//CreateDynamicObject(19327, -210.56, -1779.90, 676.75,   0.00, 0.00, 0.00, 500.00);
	//CreateDynamicObject(19328, -195.59, -1777.19, 676.77,   0.00, 0.00, 270.00, 500.00);

	CreateDynamicObject(11435, -204.3999939, -1745.0999756, 679.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 285
	CreateDynamicObject(11435, -204.3994141, -1758.7998047, 679.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 287
	CreateDynamicObject(11435, -198.6000061, -1755.0000000, 679.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 303
	CreateDynamicObject(11435, -198.6000061, -1750.9000244, 679.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 304
	CreateDynamicObject(11435, -204.3999939, -1772.5000000, 679.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 429
	CreateDynamicObject(11435, -201.3999939, -1774.4000244, 679.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 480
	CreateDynamicObject(11435, -201.3999939, -1765.6999512, 679.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 481
	CreateDynamicObject(11435, -201.3999939, -1770.0000000, 679.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 482
	CreateDynamicObject(11435, -201.3999939, -1776.8000488, 679.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 483
	CreateDynamicObject(11435, -201.3999939, -1780.1999512, 679.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 484
	CreateDynamicObject(11435, -197.0000000, -1780.1999512, 679.4000244, 0.0000000, 0.0000000, 270.0000000, -1, 1, -1, 500, 500);	//Object number 486
	//HOSPITAL INTERIOR 2 - CLOSE
	//army - open
	armyLvPort1 = CreateDynamicObject(19313, 135.142593, 1941.479492, 21.597537, 0.000000, 0.000000, 0.000000);
	armyLvPort2 = CreateDynamicObject(19313, 285.723236, 1820.534057, 19.915033, 0.000000, 0.000000, 89.800071);
	Create3DTextLabel("{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 136.5198, 1941.1293, 19.3139, 16, 0, 0);	//lv army
	Create3DTextLabel("{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 285.2253, 1820.8843, 17.6406, 16, 0, 0);	//lv army

	armyLsPort1 = CreateDynamicObject(980, 836.487792, -2069.757812, 14.618954, 0.000000, 0.000000, 0.000000);
	Create3DTextLabel("{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 837.3369, -2074.3181, 12.8527, 16, 0, 0);	//ls army
	armyLsPort2 = CreateDynamicObject(980, 836.365417, -2027.369750, 14.646684, 0.000000, 0.000000, 0.000000);
	Create3DTextLabel("{FFFFFF}Използвайте копчетата {40BF00}SCROLL / R \n{FFFFFF}или командата {40BF00}/barrier {FFFFFF}за да вдигнете заграждението", 0xFFFFFFFF, 837.2773, -2030.8582, 12.8672, 16, 0, 0);	//ls army

	CreateObject(4585, 838.197326, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 809.826354, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 869.766296, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 900.604187, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 778.814208, -2091.250244, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 778.814208, -2128.983642, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 778.814208, -2167.389892, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 778.814208, -2205.367675, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 778.814208, -2243.125976, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 815.823974, -2243.125976, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 847.703552, -2243.125976, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 847.703552, -2208.197509, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 847.703552, -2169.537841, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 847.703552, -2129.957275, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 808.544006, -2129.957275, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 810.361206, -2171.278076, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 810.361206, -2202.869384, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 883.081054, -2202.869384, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 882.577819, -2168.588623, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 882.577819, -2243.432861, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 882.577819, -2130.613037, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 901.378356, -2130.540283, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 901.378356, -2168.619628, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 901.378356, -2206.968017, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(4585, 901.378356, -2243.368408, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(8148, 759.284545, -2151.047363, 14.962260, 0.000000, 0.000000, 0.000000);
	CreateObject(8148, 759.284545, -2183.484375, 14.962260, 0.000000, 0.000000, 0.000000);
	CreateObject(8148, 919.654968, -2151.047363, 14.962260, 0.000000, 0.000000, 0.000000);
	CreateObject(8148, 919.654968, -2182.510742, 14.962260, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 759.586059, -2070.185791, 11.661706, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 759.586059, -2070.185791, 14.601703, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 771.615783, -2070.185791, 14.601703, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 771.615783, -2070.185791, 10.311701, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 783.405822, -2070.185791, 10.311701, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 783.405822, -2070.185791, 14.511699, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 795.275939, -2070.185791, 14.511699, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 795.275939, -2070.185791, 9.631697, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 807.076110, -2070.185791, 9.631697, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 807.046081, -2070.185791, 14.641714, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 854.142333, -2070.517333, 14.339406, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 854.073547, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 866.073974, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 878.063659, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 890.113464, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 902.023132, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 907.973815, -2070.185791, 9.591712, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 907.973815, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 896.093750, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 884.144042, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 872.094055, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 861.053588, -2070.185791, 14.611725, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 919.919067, -2264.012939, 11.826725, 0.000000, 0.000000, -174.800018);
	CreateObject(987, 919.919067, -2264.012939, 14.626738, 0.000000, 0.000000, -174.800018);
	CreateObject(987, 908.018188, -2265.096923, 14.626738, 0.000000, 0.000000, -174.800018);
	CreateObject(987, 908.018188, -2265.096923, 10.196736, 0.000000, 0.000000, -174.800018);
	CreateObject(987, 896.426330, -2266.151611, 10.196736, 0.000000, 0.000000, -174.800018);
	CreateObject(987, 884.475402, -2267.239501, 10.196736, 0.000000, 0.000000, -174.800018);
	CreateObject(987, 861.780639, -2266.685791, 11.716729, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 849.730529, -2266.601806, 11.716729, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 837.880554, -2266.518798, 11.716729, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 825.921081, -2266.436035, 11.716729, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 813.971130, -2266.351562, 11.716729, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 802.001708, -2266.267089, 11.716729, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 790.011901, -2266.184082, 11.716729, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 778.002014, -2266.100341, 11.716729, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 771.831176, -2266.056640, 11.716729, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 771.831176, -2266.056640, 14.666730, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 783.810485, -2266.141113, 14.666730, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 795.800720, -2266.225341, 14.666730, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 807.710998, -2266.308593, 14.666730, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 819.640502, -2266.391357, 14.666730, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 831.650451, -2266.474365, 14.666730, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 843.600585, -2266.558837, 14.666730, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 855.570556, -2266.642822, 14.666730, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 861.700622, -2266.685546, 14.666730, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 885.840881, -2266.854248, 14.666730, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 897.840576, -2266.937255, 14.666730, 0.000000, 0.000000, 179.600006);
	CreateObject(987, 757.960754, -2266.936767, 14.666730, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 757.956665, -2265.785644, 11.386724, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 820.092590, -2027.803222, 11.850197, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 820.092590, -2027.803222, 15.310198, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 841.303161, -2027.803222, 11.840193, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 841.303161, -2027.803222, 15.860177, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 820.073059, -2027.803222, 20.310178, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 841.133178, -2027.803222, 20.310178, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 830.412902, -2027.803222, 20.310178, 0.000000, 0.000000, 0.000000);
	CreateObject(3528, 826.434936, -2026.530273, 24.639692, 0.000000, 0.000000, 87.700004);
	CreateObject(3528, 846.362731, -2025.989013, 24.639692, 0.000000, 0.000000, 87.700004);
	CreateObject(987, 841.611206, -2039.449218, 11.845917, 0.000000, 0.000000, 90.799964);
	CreateObject(987, 841.777465, -2051.337402, 11.845917, 0.000000, 0.000000, 90.799964);
	CreateObject(987, 841.940734, -2063.061767, 11.845917, 0.000000, 0.000000, 90.799964);
	CreateObject(987, 842.038940, -2070.074951, 11.845917, 0.000000, 0.000000, 90.799964);
	CreateObject(987, 842.038940, -2070.074951, 11.845917, 0.000000, 0.000000, -1.400006);
	CreateObject(987, 832.153747, -2027.829345, 11.845917, 0.000000, 0.000000, -89.200187);
	CreateObject(987, 832.152038, -2039.022583, 11.845917, 0.000000, 0.000000, -90.800094);
	CreateObject(987, 831.987060, -2050.821044, 11.845917, 0.000000, 0.000000, -90.800094);
	CreateObject(987, 831.882812, -2058.282958, 11.845917, 0.000000, 0.000000, -90.800094);
	CreateObject(987, 831.458374, -2069.631103, 11.845917, 0.000000, 0.000000, -176.900085);
	CreateObject(987, 830.769104, -2069.667724, 11.845917, 0.000000, 0.000000, -176.900085);
	CreateObject(987, 830.769104, -2069.667724, 14.495929, 0.000000, 0.000000, -179.100128);
	CreateObject(987, 831.489196, -2069.655517, 14.495929, 0.000000, 0.000000, -179.100128);
	CreateObject(987, 853.896240, -2069.303955, 14.495929, 0.000000, 0.000000, -179.100128);
	CreateObject(987, 842.487731, -2069.484863, 16.215896, 0.000000, 0.000000, -179.100128);
	CreateObject(3464, 892.028015, -2086.043457, 14.214990, 0.000000, 0.000000, 0.000000);
	CreateObject(3464, 892.028015, -2112.745605, 14.214990, 0.000000, 0.000000, 0.000000);
	CreateObject(3464, 892.028015, -2139.313476, 14.214990, 0.000000, 0.000000, 0.000000);
	CreateObject(3464, 892.028015, -2165.366699, 14.214990, 0.000000, 0.000000, 0.000000);
	CreateObject(3464, 892.028015, -2191.177001, 14.214990, 0.000000, 0.000000, 0.000000);
	CreateObject(3464, 892.028015, -2217.870361, 14.214990, 0.000000, 0.000000, 0.000000);
	CreateObject(3279, 846.334899, -2075.705810, 11.810224, 0.000000, 0.000000, 178.900085);
	CreateObject(3279, 826.744873, -2075.705810, 11.810224, 0.000000, 0.000000, 0.000000);
	CreateObject(1231, 847.466430, -2025.762939, 14.636410, 0.000000, 0.000000, 0.000000);
	CreateObject(1231, 850.666442, -2025.762939, 14.526410, 0.000000, 0.000000, 0.000000);
	CreateObject(1231, 831.016418, -2025.762939, 14.526410, 0.000000, 0.000000, 0.000000);
	CreateObject(1231, 824.560546, -2025.762939, 14.526410, 0.000000, 0.000000, 0.000000);
	CreateObject(7021, 797.706970, -2113.315673, 15.438562, 0.000000, 0.000000, -0.199970);
	CreateObject(6522, 798.324035, -2195.433593, 20.330322, 0.000000, 0.000000, 90.599983);
	CreateObject(3598, 767.498474, -2166.142578, 13.959624, 0.000000, 0.000000, 88.899986);
	CreateObject(3598, 768.002502, -2138.904785, 13.959624, 0.000000, 0.000000, 88.899986);
	CreateObject(3598, 768.529785, -2111.417724, 13.959624, 0.000000, 0.000000, 88.899986);
	CreateObject(3598, 769.053466, -2084.142089, 13.959624, 0.000000, 0.000000, 88.899986);
	CreateObject(16093, 881.974914, -2253.761230, 11.698994, 0.000000, 0.000000, -174.599990);
	CreateObject(4585, 815.823974, -2243.125976, -87.991020, 0.000000, 0.000000, 0.000000);
	CreateObject(8171, 865.214660, -2331.259277, 11.658988, 0.000000, 0.000000, 0.000000);
	CreateObject(3092, 835.018859, -2027.055175, 21.408720, 0.000000, 0.000000, 0.000000);
	CreateObject(3092, 837.814819, -2027.697875, 21.640621, 0.000000, 0.000000, 0.000000);
	CreateObject(18885, 880.052551, -2256.146240, 12.884333, 0.000000, 0.000000, 140.300003);
	CreateObject(7021, 797.563781, -2154.332275, 15.438562, 0.000000, 0.000000, -0.199970);
	CreateObject(11493, 822.785827, -2284.706054, 4.800974, 0.000000, 0.000000, -76.799980);
	CreateObject(17068, 806.152893, -2300.848876, 1.993783, 0.000000, 0.000000, 150.799987);
	CreateObject(17068, 798.887756, -2313.852050, 1.993783, 0.000000, 0.000000, 150.799987);
	CreateObject(17068, 784.206176, -2319.484375, 1.993783, 0.000000, 0.000000, -117.999847);
	CreateObject(8546, 874.673278, -2186.790771, -121.204551, 0.000000, 0.000000, 0.000000);
	CreateObject(987, 831.230346, -2028.613403, 17.104427, 0.000000, 0.000000, 0.000000);
	CreateObject(980, 836.569641, -2069.956542, 8.990184, 0.000000, 0.000000, 0.000000);
	//army - close

	//taxi bar - open
	tmpobjid = CreateDynamicObject(1649, 1725.230102, -1887.681274, 14.199495, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1720.840698, -1887.681274, 14.199495, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.230102, -1887.681274, 17.429513, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1720.840698, -1887.681274, 17.429513, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.308593, -1887.681274, 14.199495, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1704.919189, -1887.681274, 14.199495, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.308593, -1887.681274, 17.429513, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1704.919189, -1887.681274, 17.429513, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.308593, -1873.051147, 14.199495, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1704.919189, -1873.051147, 14.199495, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.308593, -1873.051147, 17.429513, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1704.919189, -1873.051147, 17.429513, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.459472, -1873.051147, 14.199495, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1721.070068, -1873.051147, 14.199495, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.459472, -1873.051147, 17.429513, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1721.070068, -1873.051147, 17.429513, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1705.199829, -1872.981323, 14.199495, 0.000000, 0.000007, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.589111, -1873.011840, 14.199495, 0.000000, 0.000007, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1705.199829, -1872.981323, 17.429513, 0.000000, 0.000015, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.589111, -1873.011840, 17.429513, 0.000000, 0.000015, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1721.120971, -1873.092285, 14.199495, 0.000000, 0.000015, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.510253, -1873.122924, 14.199495, 0.000000, 0.000015, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1721.120971, -1873.092285, 17.429513, 0.000000, 0.000022, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.510253, -1873.122924, 17.429513, 0.000000, 0.000022, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1721.018920, -1887.722167, 14.199495, 0.000000, 0.000022, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.408203, -1887.752807, 14.199495, 0.000000, 0.000022, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1721.018920, -1887.722167, 17.429513, 0.000000, 0.000030, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1725.408203, -1887.752807, 17.429513, 0.000000, 0.000030, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1704.868408, -1887.609497, 14.199495, 0.000000, 0.000030, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.257690, -1887.640136, 14.199495, 0.000000, 0.000030, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1704.868408, -1887.609497, 17.429513, 0.000000, 0.000038, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1649, 1709.257690, -1887.640136, 17.429513, 0.000000, 0.000038, 179.600509, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2606, 1711.045898, -1873.788452, 19.606479, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2606, 1718.966186, -1873.788452, 19.606479, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3921, 1728.917846, -1883.114624, 13.092984, 0.000000, 0.000000, -0.700000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2176, 1703.455932, -1888.898193, 15.146409, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2176, 1710.866455, -1888.898193, 15.146409, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2176, 1719.186889, -1888.898193, 15.146409, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2176, 1727.336791, -1888.898193, 15.146409, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11689, 1727.514526, -1874.945556, 12.575836, 0.000000, 0.000000, -1.199999, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11689, 1724.479248, -1877.052490, 12.575836, 0.000000, 0.000000, 88.299919, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19474, 1726.814819, -1877.742553, 12.688375, 0.000000, 0.000000, 89.899955, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2534, 1722.987548, -1887.103393, 12.532108, 0.000000, 0.000000, 179.599868, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2534, 1724.017944, -1887.111572, 12.532108, 0.000000, 0.000000, 179.599868, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2108, 1718.631591, -1879.808715, 19.313335, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2108, 1711.870727, -1879.808715, 19.313335, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2256, 1727.567504, -1873.577392, 15.367986, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2256, 1702.085937, -1873.577392, 15.367986, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1712.186889, -1889.448974, 13.108884, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1717.877807, -1889.448974, 13.108884, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1712.186889, -1891.890625, 13.108884, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1717.877807, -1891.890625, 13.108884, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1712.186889, -1894.331665, 13.108884, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1717.877807, -1894.331665, 13.108884, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1712.186889, -1872.790161, 13.108884, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1717.877807, -1872.790161, 13.108884, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1712.186889, -1870.248779, 13.108884, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1717.877807, -1870.248779, 13.108884, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1712.186889, -1867.807373, 13.108884, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1717.877807, -1867.807373, 13.108884, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2231, 1702.036010, -1886.173217, 12.570036, 0.000000, 0.000000, 166.100006, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2231, 1701.922485, -1873.650024, 12.570036, 0.000000, 0.000000, 31.199991, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1281, 1711.090209, -1882.262695, 13.371792, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1281, 1711.090209, -1878.892822, 13.371792, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1594, 1707.576782, -1882.463500, 13.005648, 0.000000, 0.000000, -29.900003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1594, 1708.657714, -1876.613037, 13.005648, 0.000000, 0.000000, -29.900003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1594, 1706.668701, -1880.071899, 13.005648, 0.000000, 0.000000, -29.900003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1719.260253, -1866.399047, 13.108884, 0.000000, 0.000038, -82.300003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1710.653320, -1866.928100, 13.108884, 0.000000, 0.000038, -82.300003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3437, 1733.572631, -1888.032714, 13.962777, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1704, 1725.569946, -1898.843750, 12.544325, 0.000000, 0.000000, -90.999984, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1704, 1725.548950, -1900.023803, 12.544325, 0.000000, 0.000000, -90.999984, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1704, 1725.527954, -1901.223754, 12.544325, 0.000000, 0.000000, -90.999984, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3525, 1711.031372, -1888.131713, 18.622402, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3525, 1719.242309, -1888.131713, 18.622402, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1709.012573, -1867.008544, 13.700131, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1707.000732, -1867.008544, 13.700131, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1721.591064, -1867.008544, 13.700131, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1727.726318, -1860.542358, 13.263640, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1727.726318, -1849.102294, 13.263640, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1732.277832, -1860.542358, 13.263640, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1732.277832, -1849.102294, 13.263640, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1736.348876, -1860.542358, 13.263640, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1736.348876, -1849.102294, 13.263640, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1729.669311, -1860.475708, 12.982136, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1734.189941, -1860.475708, 12.982136, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1734.189941, -1849.224609, 12.982136, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1729.939453, -1849.224609, 12.982136, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//taxi bar - close

	//beach objects - open
	CreateDynamicObject(8496, 189.73097, -1816.81531, 10.37910, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3437, 214.47182, -1829.52393, 8.69660, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(970, 301.53659, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 297.35199, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 293.15979, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 288.90570, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 301.53659, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 297.35199, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 293.15979, -1812.02698, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 288.96680, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2898, 312.56314, -2062.68262, -0.14103, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18103, -1837.31531, 4.32796, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8535, 305.73779, -1867.83264, 8.19960, 0.00000, 0.00000, -90.48000);
	CreateDynamicObject(3461, 309.18100, -1839.35547, 4.14240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18100, -1841.56360, 4.03911, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18100, -1843.82361, 4.02655, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18100, -1846.27869, 4.00143, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18100, -1848.56042, 3.92101, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18100, -1850.86230, 3.82315, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 309.18100, -1853.28552, 3.78760, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3528, 210.71457, -1826.62732, 10.93387, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3528, 210.71460, -1807.25269, 10.93390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13667, 210.78065, -1816.37463, 27.12060, 0.00000, 0.00000, 7.32000);
	CreateDynamicObject(6299, 359.52838, -1853.22217, 4.37910, 0.00000, 0.00000, -180.20010);
	CreateDynamicObject(1570, 340.70798, -1849.62317, 3.73078, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1570, 334.04330, -1847.87695, 3.73080, 0.00000, 0.00000, -29.34000);
	CreateDynamicObject(1570, 327.40411, -1831.30188, 4.07080, 0.00000, 0.00000, -129.82001);
	CreateDynamicObject(1570, 325.52570, -1836.50000, 3.93080, 0.00000, 0.00000, -88.78000);
	CreateDynamicObject(1342, 356.81400, -1829.54224, 3.94870, 0.00000, 0.00000, -179.88000);
	CreateDynamicObject(1341, 356.77939, -1827.14966, 4.01910, 0.00000, 0.00000, 180.83990);
	CreateDynamicObject(1340, 356.81400, -1832.56067, 3.81490, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1342, 356.81400, -1835.99146, 3.94870, 0.00000, 0.00000, -179.88000);
	CreateDynamicObject(7588, 343.75931, -1877.82532, 2.31040, -0.78000, -0.96000, -266.64001);
	CreateDynamicObject(7916, 359.18253, -1874.00891, 2.26880, 0.00000, 0.00000, -164.51991);
	CreateDynamicObject(3515, 356.16718, -1887.37439, 2.51407, -34.50001, -20.34000, -3.12000);
	CreateDynamicObject(3461, 309.18100, -1855.64966, 3.56510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 303.45181, -1837.31531, 4.32800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 303.22012, -1841.55420, 2.97820, 0.00000, -5.00000, 180.66000);
	CreateDynamicObject(1280, 303.16061, -1851.31409, 2.71830, 0.00000, -5.00000, 180.66000);
	CreateDynamicObject(3461, 303.45181, -1839.35547, 4.14240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 303.45181, -1843.82361, 4.02650, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 303.45181, -1846.27869, 4.00140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 303.45181, -1848.56042, 3.92100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 303.45181, -1853.28552, 3.80760, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3461, 303.45181, -1855.64966, 3.56510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 338.73029, -1825.34363, 3.56375, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 340.33340, -1843.19910, 3.00690, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 339.77481, -1834.77405, 3.28490, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 349.14841, -1826.14429, 3.42610, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 347.24033, -1831.84192, 3.36490, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 346.30746, -1839.26733, 3.15613, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(642, 340.33899, -1843.34607, 3.86783, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(642, 346.15109, -1839.43860, 4.03200, -0.84000, -10.26000, 20.92000);
	CreateDynamicObject(642, 338.70541, -1825.39441, 4.41200, 0.12000, 0.14000, 0.00000);
	CreateDynamicObject(642, 347.21420, -1831.89880, 4.22470, 0.12000, 0.14000, 0.00000);
	CreateDynamicObject(642, 354.95328, -1823.36865, 3.57409, -28.98001, -61.98003, -106.92001);
	CreateDynamicObject(3437, 214.46581, -1836.66809, 8.23700, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(3437, 214.46581, -1843.34998, 7.19700, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(3437, 214.46581, -1849.56091, 5.91930, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(3437, 214.46620, -1804.19995, 8.69660, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(3437, 214.46581, -1796.89905, 8.25690, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(3437, 214.46581, -1789.32239, 7.19700, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(3437, 214.46581, -1782.30359, 5.91930, 0.00000, 0.00000, -90.40000);
	CreateDynamicObject(1214, 308.78479, -1771.74890, 3.55990, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1536, 211.32809, -1815.77515, 3.47130, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1536, 211.36810, -1818.75525, 3.47130, 0.00000, 0.00000, -270.00000);
	CreateDynamicObject(19372, 211.30415, -1817.43420, 5.12900, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19372, 212.95589, -1819.04883, 5.12900, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19372, 212.95590, -1815.45544, 5.12900, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19372, 213.54829, -1820.35815, 5.12900, 0.00000, 0.00000, -41.82000);
	CreateDynamicObject(19372, 211.04633, -1822.04504, 5.00930, 0.00000, 0.00000, -71.28000);
	CreateDynamicObject(19372, 213.50703, -1814.25964, 5.12900, 0.00000, 0.00000, 41.82000);
	CreateDynamicObject(19372, 210.97701, -1812.57922, 5.12900, 0.00000, 0.00000, 71.28000);
	CreateDynamicObject(19380, 209.43329, -1820.63171, 6.87560, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19380, 209.43330, -1813.09570, 6.85990, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(8621, 196.28647, -1790.94385, 16.87415, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(9833, 217.20027, -1825.08521, 3.44840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 217.20030, -1808.99365, 3.44840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19381, 289.07910, -1881.39856, 2.66780, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19381, 298.13181, -1881.39856, 2.56780, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19381, 307.73929, -1881.39856, 2.56780, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19381, 317.37909, -1881.39856, 2.56780, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19381, 322.11441, -1881.39832, 2.56780, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19382, 263.53751, -1896.22327, 1.94040, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19381, 327.05481, -1876.69080, -2.60990, 0.00000, 0.00000, -2.64000);
	CreateDynamicObject(19381, 327.01480, -1867.40295, -2.60990, 0.00000, 0.00000, -2.64000);
	CreateDynamicObject(19381, 284.36469, -1876.65601, -2.70990, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19381, 284.46469, -1870.14661, -2.70990, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8645, 345.33649, -1817.28186, 4.14576, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8649, 323.00851, -1817.22803, 4.12580, 0.00000, 0.00000, -90.24000);
	CreateDynamicObject(8649, 323.32849, -1786.33606, 4.38580, 0.00000, 0.00000, -90.24000);
	CreateDynamicObject(8649, 308.52921, -1801.95813, 4.18580, 0.00000, 0.00000, -180.58009);
	CreateDynamicObject(1214, 308.78479, -1781.48389, 3.52010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 308.78479, -1779.09766, 3.52010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 308.78479, -1776.92834, 3.52010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 308.78479, -1774.63831, 3.52010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1214, 308.78479, -1784.10376, 3.52010, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(982, 347.12131, -1818.82263, 3.96890, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(982, 321.42709, -1818.82263, 3.96890, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19123, 337.29941, -1818.78918, 5.16810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 327.76059, -1818.78918, 5.16810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 308.64401, -1818.78918, 5.16810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 318.19080, -1818.78918, 5.16810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 347.12271, -1818.78918, 5.16810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 356.72079, -1818.78918, 5.08810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(643, 322.34399, -1849.76953, 2.82040, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(642, 322.32950, -1849.80786, 3.70540, 0.12000, 0.14000, 0.00000);
	CreateDynamicObject(1598, 333.46353, -1840.93518, 2.87716, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1598, 336.98999, -1839.13269, 2.98665, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1598, 333.26819, -1834.92456, 3.01319, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1642, 341.15451, -1830.37415, 2.96150, 3.00000, 0.00000, 0.00000);
	CreateDynamicObject(1641, 337.42010, -1828.68372, 3.00777, 3.40000, 0.00000, 0.00000);
	CreateDynamicObject(1640, 330.65009, -1836.72473, 2.74120, 1.00000, 0.00000, 28.92000);
	CreateDynamicObject(643, 317.19153, -1844.11487, 3.28490, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1643, 319.91089, -1839.30212, 2.67410, 2.00000, 0.00000, -10.00000);
	CreateDynamicObject(2410, 310.97791, -1897.61841, 0.46260, 5.00000, 10.00000, -68.04000);
	CreateDynamicObject(2410, 306.45480, -1897.09009, 0.46260, 5.00000, 5.00000, -91.98004);
	CreateDynamicObject(2406, 303.65552, -1897.48376, 0.54183, -80.00000, 20.00000, -12.60000);
	CreateDynamicObject(2405, 300.36490, -1894.98352, 0.57780, -80.00000, 2.00000, 0.00000);
	CreateDynamicObject(2404, 291.14429, -1886.32751, 1.05970, -100.00000, 0.00000, -83.28000);
	CreateDynamicObject(1609, 348.88992, -1871.55347, 2.41548, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1670, 339.72479, -1834.86401, 3.69490, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2219, 338.65411, -1825.80566, 4.02950, -26.70000, 22.74000, 24.54000);
	CreateDynamicObject(2217, 322.51660, -1849.90161, 3.27730, -26.70000, 22.74000, 0.00000);
	CreateDynamicObject(1670, 339.72479, -1834.86401, 3.69490, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1670, 317.23569, -1843.90344, 3.69490, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2672, 348.19714, -1837.81274, 3.01150, 1.00000, 0.00000, -4.86000);
	CreateDynamicObject(2222, 349.12411, -1826.14233, 3.90390, 0.00000, 0.00000, -29.28000);
	CreateDynamicObject(3509, 295.70117, -1794.32605, 3.31710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3509, 295.92081, -1777.80383, 3.31708, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6284, 307.26563, -1760.54688, 7.62500, 356.85840, 0.00000, 3.14159);
	CreateDynamicObject(3509, 295.90680, -1785.07263, 3.31710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3509, 286.19818, -1788.59900, 3.31710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 340.41891, -1799.08044, 6.31950, 356.85840, 0.00000, 3.14160);
	CreateDynamicObject(1232, 328.41299, -1799.08044, 6.31950, 356.85840, 0.00000, 3.14160);
	CreateDynamicObject(1232, 317.72211, -1799.08044, 6.31950, 356.85840, 0.00000, 3.14160);
	CreateDynamicObject(1232, 300.77661, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 288.77661, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(927, 382.54111, -1879.28015, 3.28120, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(929, 384.66086, -1879.73267, 2.77860, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1420, 383.35901, -1892.51208, 4.61670, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1420, 384.98651, -1892.52686, 4.61670, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1353, 388.58011, -1879.83374, 2.45890, 2.00000, 0.00000, 0.00000);
	CreateDynamicObject(3273, 374.64621, -1892.13062, 0.64617, 0.00000, 0.00000, 267.54001);
	CreateDynamicObject(3865, 366.39063, -1890.87305, 2.37190, 0.00000, 0.00000, 93.11999);
	CreateDynamicObject(2971, 366.86267, -1890.61377, 1.07099, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1440, 368.97366, -1890.69019, 1.58261, 0.00000, 0.00000, -18.84000);
	CreateDynamicObject(1327, 373.62009, -1886.99194, 1.71060, 5.00000, -25.00000, -46.86000);
	CreateDynamicObject(1219, 364.85019, -1889.48413, 3.63850, -50.00000, 0.00000, 3.24000);
	CreateDynamicObject(1265, 367.39935, -1891.40601, 2.43060, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1265, 366.84760, -1890.56897, 3.24770, 0.00000, 6.00000, -108.83999);
	CreateDynamicObject(849, 369.63730, -1890.86975, 1.25270, 0.00000, 0.00000, -0.66000);
	CreateDynamicObject(1442, 385.90857, -1890.08765, 1.24876, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14578, 374.04617, -1879.58875, 1.97491, 0.00000, 180.00000, 80.40002);
	CreateDynamicObject(3675, 380.28729, -1879.29248, 1.77526, -89.58000, -23.10000, 71.75998);
	CreateDynamicObject(989, 398.08951, -1890.55640, 2.40575, 0.00000, 0.00000, 18.96000);
	CreateDynamicObject(989, 397.89157, -1885.09180, 2.40575, 0.00000, 0.00000, 18.96000);
	CreateDynamicObject(983, 398.04221, -1889.74011, 4.90000, 0.00000, 0.00000, 1.92000);
	CreateDynamicObject(983, 397.95270, -1886.56372, 4.90000, 0.00000, 0.00000, 1.92000);
	CreateDynamicObject(3509, 286.13809, -1780.57776, 3.31710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18785, 253.32610, -1842.17529, 1.70560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19295, 496.23599, -1874.50000, 7.92800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19295, 493.99301, -1895.55505, 7.76400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19295, 451.97400, -1895.56201, 8.09000, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19295, 449.70300, -1873.62805, 7.46800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19294, 493.10199, -1892.23596, 3.52500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19294, 492.87399, -1853.49500, 3.52500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19294, 453.49701, -1853.74597, 3.52500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19294, 453.52301, -1892.18005, 3.52500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18783, 253.30615, -1862.02771, 1.71519, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18783, 233.30811, -1862.02771, 1.71520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18783, 233.30811, -1881.96448, 1.71520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18783, 253.30620, -1881.98450, 1.71520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18785, 233.32809, -1842.17761, 1.70560, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, 262.95410, -1886.89771, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8650, 263.07410, -1867.28943, 3.08910, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(18766, 262.95410, -1876.90857, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 262.95410, -1866.90918, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 262.95410, -1856.99402, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 223.65320, -1886.91772, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 223.65320, -1877.14856, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 223.65320, -1867.20923, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 223.65320, -1857.25391, 6.70240, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 228.33980, -1891.44226, 6.70240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, 238.25140, -1891.44226, 6.70240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, 248.11880, -1891.44226, 6.70240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, 258.10880, -1891.44226, 6.70240, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8650, 263.07410, -1867.28943, 0.87850, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(8650, 263.06909, -1876.62524, 3.08910, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(8650, 263.06909, -1876.62524, 0.87850, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(8650, 263.06909, -1876.62524, -1.04578, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8650, 223.55029, -1867.50415, 3.10910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8650, 223.55930, -1876.66699, 3.10910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8650, 223.55034, -1867.44409, 0.90464, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8650, 223.55930, -1876.66699, 0.90464, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18981, 250.93640, -1879.36133, 9.70170, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(18981, 235.71899, -1879.36133, 9.69570, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(18981, 235.67920, -1864.77893, 9.70420, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(18981, 250.89661, -1864.78186, 9.69570, 0.00000, -90.00000, 0.00000);
	CreateDynamicObject(11495, 225.04640, -1863.25122, 4.18600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11495, 225.05190, -1877.93066, 4.18300, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11495, 236.93410, -1889.82019, 4.18600, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11495, 249.75920, -1889.80676, 4.17600, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11495, 261.59760, -1863.25122, 4.18600, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11495, 261.59760, -1877.93066, 4.17600, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3509, 295.88586, -1834.92065, 2.70828, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3509, 295.80789, -1844.03784, 2.42979, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3509, 295.83643, -1852.40637, 2.18546, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3509, 286.11105, -1840.83838, 2.35844, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3509, 286.16626, -1850.95764, 2.22906, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19380, 209.43329, -1820.63171, 6.87560, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19372, 211.30620, -1817.12146, 5.12900, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 264.18185, -1838.47388, 5.15729, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 276.77661, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 264.77661, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 252.77660, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 240.77660, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 228.77660, -1821.23828, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 300.77661, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 288.77661, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 276.77661, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 264.77661, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 252.77660, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 240.77660, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 228.77660, -1812.35254, 6.09960, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 284.75470, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 280.53049, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 276.34879, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 272.12601, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 267.94379, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 263.76682, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 259.57220, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 255.34930, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 251.22501, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 248.53720, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 238.73740, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 234.50200, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 230.35890, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 226.19679, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 222.01199, -1821.61353, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 284.75470, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 280.53049, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 276.34879, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 267.94379, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 272.12601, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 263.76682, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 255.34930, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 251.22501, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 242.87891, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 247.06509, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 234.50200, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 238.73740, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 230.35890, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 226.19679, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 222.01199, -1812.02637, 4.02970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 255.45120, -1852.43848, 5.98520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 241.34650, -1852.43848, 5.98520, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(980, 230.15150, -1852.49597, 6.88980, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19459, 255.84840, -1854.05371, 2.47670, 180.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 246.23790, -1854.05371, 2.47670, 180.00000, 0.00000, 90.00000);
	CreateDynamicObject(19459, 236.60899, -1854.05371, 2.47670, 180.00000, 0.00000, 90.00000);
	CreateDynamicObject(3660, 256.74661, -1839.92847, 4.71070, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 229.80344, -1840.45264, 4.71070, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(18784, 241.94640, -1861.96814, 3.90660, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(18784, 241.94170, -1881.96423, 3.90660, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19379, 234.69400, -1789.05835, 4.21000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 227.74049, -1789.05835, 4.20000, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19367, 231.45280, -1793.96655, 2.53060, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 231.45284, -1794.14355, 2.39178, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 231.45280, -1794.32361, 2.21827, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 231.45280, -1794.48364, 2.05830, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 231.45280, -1794.66357, 1.89830, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19367, 234.67171, -1793.81543, 2.53060, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19453, 239.87900, -1789.04504, 2.53390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19453, 222.56100, -1789.04504, 2.53390, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19453, 235.11650, -1793.77380, 2.53390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 227.29210, -1793.77380, 2.53390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 235.11650, -1784.30896, 2.53390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19453, 227.29210, -1784.30896, 2.53390, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1840, 228.08040, -1786.19348, 4.29060, 0.00000, 0.00000, -246.05991);
	CreateDynamicObject(1840, 228.14853, -1785.85364, 4.29060, 0.00000, 0.00000, -246.05991);
	CreateDynamicObject(1840, 228.39330, -1786.05505, 4.29060, 0.00000, 0.00000, -246.05991);
	CreateDynamicObject(2229, 228.36884, -1786.82166, 4.21210, 0.00000, 0.00000, 22.56000);
	CreateDynamicObject(1840, 228.20940, -1785.99744, 4.75610, 0.00000, 0.00000, -246.05991);
	CreateDynamicObject(2232, 226.15576, -1790.42310, 4.86913, 0.00000, 0.00000, 40.26000);
	CreateDynamicObject(14537, 275.92606, -1842.42102, 4.66019, 0.00000, 0.00000, -0.78000);
	CreateDynamicObject(2232, 226.15581, -1790.42310, 6.11220, 0.00000, 0.00000, 40.26000);
	CreateDynamicObject(2232, 236.73270, -1790.42310, 4.86910, 0.00000, 0.00000, -40.26000);
	CreateDynamicObject(2232, 236.73270, -1790.42310, 6.11220, 0.00000, 0.00000, -40.26000);
	CreateDynamicObject(2207, 230.59067, -1786.95007, 4.22411, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2225, 237.00594, -1786.12073, 4.26109, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2225, 237.72549, -1786.12073, 4.26110, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2227, 236.50020, -1785.78479, 4.30665, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2229, 234.75211, -1786.82166, 4.21210, 0.00000, 0.00000, -22.56000);
	CreateDynamicObject(14820, 231.61339, -1786.66589, 5.04040, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1958, 233.49541, -1786.46643, 4.27630, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19317, 236.41940, -1790.03748, 5.05560, -10.38000, 0.00000, -126.72000);
	CreateDynamicObject(8875, 220.29945, -1782.91138, 9.07323, 0.00000, 0.00000, 134.39995);
	CreateDynamicObject(8876, 223.01924, -1787.20227, 9.95855, 0.00000, 0.00000, 122.82001);
	CreateDynamicObject(19144, 231.90335, -1852.26648, 9.73724, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19144, 256.64362, -1852.33179, 9.73724, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18654, 225.21181, -1791.44324, 4.24200, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(18654, 231.37704, -1784.84778, 4.24205, 0.00000, 0.00000, -88.67997);
	CreateDynamicObject(18654, 237.81779, -1791.44324, 4.24200, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(716, 227.74268, -1780.12830, 3.26345, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(716, 234.49940, -1780.06128, 3.26345, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 259.18188, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 254.18190, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 249.18190, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 236.94720, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 231.94720, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 226.94720, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 221.94720, -1838.47388, 5.15730, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6965, 263.04132, -1792.15186, 7.14980, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 265.88315, -1796.48950, 2.74815, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 265.88309, -1787.74170, 2.74810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 258.79620, -1787.74170, 2.74810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 258.79620, -1796.48950, 2.74810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(10281, 255.93811, -1851.67627, 6.91590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(10281, 245.77382, -1851.62671, 6.91590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19126, 271.63144, -1799.68457, 3.02492, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 273.78967, -1794.80444, 3.02492, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 273.89645, -1789.66028, 3.02492, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 272.06870, -1786.00964, 3.02492, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 267.93390, -1782.55200, 2.94710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 263.00885, -1780.82556, 2.85017, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 258.77411, -1782.11230, 2.85017, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 254.55800, -1785.27368, 2.90469, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 251.44493, -1789.64978, 2.90469, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 251.68643, -1794.69653, 2.94470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 254.02100, -1798.99097, 3.04667, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 257.71216, -1802.70337, 3.08066, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 262.83411, -1803.91663, 3.08066, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19126, 267.80777, -1802.88281, 3.08066, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 303.89713, -1809.38110, 3.99123, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 303.89709, -1805.24377, 3.99120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 303.89709, -1801.04028, 3.99120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 303.89709, -1796.91614, 3.99120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 303.89709, -1792.83533, 3.99120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 303.89709, -1788.57556, 3.99120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 303.89709, -1784.28442, 3.99120, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(711, 284.04111, -1805.49182, 8.99408, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(711, 283.98123, -1800.63220, 8.99408, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(711, 283.87314, -1796.49377, 8.99408, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(711, 296.09232, -1804.13110, 8.99408, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(711, 290.47433, -1800.36914, 8.99408, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(711, 296.14407, -1797.17334, 8.99408, 0.00000, 0.00000, 99.77999);
	CreateDynamicObject(1836, 271.09836, -1812.28918, 3.40290, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1515, 273.15359, -1812.51855, 3.40550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1515, 274.23431, -1812.51855, 3.40550, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 209.62912, -1827.58130, 1.74309, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 209.62910, -1837.17603, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 209.62910, -1846.63770, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 209.61909, -1851.76782, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 204.88499, -1856.50952, 1.74310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19455, 195.42281, -1856.50952, 1.74310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19455, 185.83850, -1856.50952, 1.74310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19455, 176.32970, -1856.50952, 1.74310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19455, 174.84489, -1856.50452, 1.74310, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19455, 169.92595, -1851.83398, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 169.92590, -1842.33984, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 169.92590, -1832.73071, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19455, 169.92590, -1824.04639, 1.74310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 215.30499, -1827.98486, -1.87480, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19377, 220.02870, -1823.25610, -1.87480, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 234.43280, -1821.51868, 1.65440, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19454, 272.42581, -1821.51868, 1.65440, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8661, 284.19638, -1821.60840, -6.66753, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(8661, 244.23430, -1821.60840, -6.66750, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(8661, 204.34331, -1821.60840, -6.66750, 90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, 235.53780, -1816.79626, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 246.01810, -1816.79626, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 256.35999, -1816.79626, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 266.81781, -1816.79626, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 214.90750, -1823.26074, 3.44690, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 214.90750, -1810.46045, 3.44690, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 214.86749, -1816.01514, 3.44490, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 277.25320, -1816.79626, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 284.82349, -1816.79663, 3.32350, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 225.13570, -1816.79626, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 292.80042, -1816.79614, 3.32450, 180.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, 298.76089, -1816.79626, 3.33450, 180.00000, 90.00000, 0.00000);
	//beach objects - close
	//offices - open
	CreateDynamicObject(1808, 1799.89453, -1300.56104, 12.50250, 0.00000, 0.00000, -92.00000);
	CreateDynamicObject(2776, 1799.60291, -1301.92932, 13.05190, 0.00000, 0.00000, -92.00000);
	CreateDynamicObject(2776, 1799.51648, -1302.86560, 13.05190, 0.00000, 0.00000, -92.00000);
	CreateDynamicObject(2776, 1799.51440, -1303.70911, 13.05190, 0.00000, 0.00000, -92.00000);
	CreateDynamicObject(2239, 1799.27783, -1306.07642, 12.65731, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2007, 1793.22180, -1307.73157, 12.66265, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2007, 1791.24463, -1304.68250, 12.52938, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(2184, 1793.56946, -1305.46301, 12.57330, 0.00000, 0.00000, 91.00000);
	CreateDynamicObject(2184, 1793.20972, -1302.55933, 12.57330, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(2261, 1782.26184, -1301.85242, 14.76086, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2239, 1779.48987, -1307.22827, 12.65731, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1742, 1782.75586, -1305.10742, 12.63500, 0.00000, 0.00000, -89.00000);
	CreateDynamicObject(2239, 1782.40320, -1302.64600, 12.48265, 0.00000, 0.00000, 84.00000);
	CreateDynamicObject(2010, 1782.41431, -1303.70422, 12.54705, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, 1775.29712, -1306.65381, 12.65311, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2261, 1775.39612, -1303.14185, 14.76090, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1808, 1775.44824, -1300.25476, 12.52180, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(1723, 1776.91711, -1303.32581, 12.52293, 0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1723, 1780.07910, -1304.27405, 12.52290, 0.00000, 0.00000, 185.00000);
	CreateDynamicObject(1704, 1781.22827, -1301.39197, 12.29960, 0.00000, 0.00000, -86.00000);
	CreateDynamicObject(1827, 1778.78088, -1302.31799, 12.39325, 0.00000, 0.00000, 0.00000);
	//offices - close
	//mafia - open
	tmpobjid = CreateDynamicObject(1568, 1193.159301, -2040.934936, 67.814872, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1193.159301, -2033.224853, 67.814872, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1197.562744, -2040.934936, 67.814872, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1197.562744, -2033.224853, 67.814872, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1201.194213, -2040.934936, 67.814872, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1201.194213, -2033.224853, 67.814872, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1153.218505, -2040.934936, 67.814872, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1153.218505, -2033.224853, 67.814872, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1157.621948, -2040.934936, 67.814872, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1157.621948, -2033.224853, 67.814872, 0.000000, 0.000014, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1161.253417, -2040.934936, 67.814872, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1161.253417, -2033.224853, 67.814872, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(9833, 1181.218750, -2021.451049, 69.900039, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(9833, 1168.507934, -2021.451049, 69.900039, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(9833, 1181.218750, -2050.912841, 69.900039, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(9833, 1168.507934, -2050.912841, 69.900039, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(6965, 1150.781372, -2019.355102, 71.692558, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(6965, 1150.781372, -2054.286865, 71.692558, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3928, 1116.029907, -2056.675048, 73.445304, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3928, 1116.029907, -2017.844238, 73.445304, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3749, 1289.904174, -2056.998291, 63.205230, 0.000000, 0.000000, 88.700012, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3505, 1186.848266, -2031.012084, 67.497062, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3505, 1186.848266, -2042.102172, 67.497062, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3505, 1163.148071, -2042.102172, 67.497062, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3505, 1163.148071, -2031.282348, 67.497062, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//mafia - close
	//ls fuel station - open
	tmpobjid = CreateDynamicObject(970, 1947.052124, -1764.966064, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1947.086791, -1768.987060, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1947.122680, -1773.107788, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1947.159057, -1777.257812, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1931.551147, -1780.103759, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1931.587158, -1784.183105, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1931.482177, -1772.152099, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1931.445800, -1768.022094, 12.933617, 0.000000, 0.000000, -89.500045, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1942.342773, -1767.297485, 12.825937, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1942.342773, -1770.718017, 12.825937, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1942.342773, -1774.158813, 12.825937, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1942.342773, -1777.609130, 12.825937, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1940.982055, -1767.297485, 12.825937, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1940.982055, -1770.718017, 12.825937, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1940.982055, -1774.158813, 12.825937, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1940.982055, -1777.609130, 12.825937, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	//ls fuel station - close
	//ls fences - open
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1832.582519, 12.968790, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1829.192626, 12.968790, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1835.982788, 12.968790, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1839.392822, 12.968790, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1818.951416, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1815.561523, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1822.351684, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1825.761718, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1805.340454, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1801.950561, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1808.740722, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1812.150756, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1791.689086, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1788.299194, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1795.089355, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1798.499389, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1778.084594, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1774.694702, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1781.484863, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1784.894897, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1764.451416, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1761.061523, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1767.851684, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1771.261718, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1750.820312, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1747.430419, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1754.220581, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1757.630615, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1737.209350, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1733.819458, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1723.557983, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1720.168090, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1726.958251, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1730.368286, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1709.953491, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1706.563598, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1713.353759, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1716.763793, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1743.989868, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1740.600463, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1703.114501, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1692.899902, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1689.510009, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1696.300170, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1302.778198, -1699.710205, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1832.582519, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1829.192626, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1835.982788, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1839.392822, 12.968790, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1818.951416, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1815.561523, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1822.351684, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1825.761718, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1805.340454, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1801.950561, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1808.740722, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1812.150756, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1791.689086, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1788.299194, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1795.089355, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1798.499389, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1778.084594, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1774.694702, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1781.484863, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1784.894897, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1764.451416, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1761.061523, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1767.851684, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1771.261718, 12.968790, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1750.820312, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1747.430419, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1754.220581, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1757.630615, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1737.209350, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1733.819458, 12.968790, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1723.557983, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1720.168090, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1726.958251, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1730.368286, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1709.953491, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1706.563598, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1703.114501, 12.968790, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1692.899902, 12.968790, 0.000000, 0.000053, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1689.510009, 12.968790, 0.000000, 0.000053, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1696.300170, 12.968790, 0.000000, 0.000053, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1699.710205, 12.968790, 0.000000, 0.000053, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1743.979614, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1740.559448, 12.968790, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1716.738037, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1306.809570, -1713.377319, 12.968790, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1305.200683, -1707.502685, 11.827879, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1305.200683, -1720.403076, 11.827879, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1305.200683, -1741.432861, 11.827879, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1305.200683, -1758.384277, 11.827879, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1305.200683, -1768.824707, 11.827879, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//ls fences - close
	//news exterior - open
	tmpobjid = CreateDynamicObject(970, 1652.495727, -1687.433593, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1665.496826, -1687.433593, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1672.244995, -1687.433593, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1644.723632, -1687.433593, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(712, 1658.642211, -1689.523315, 27.968414, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(712, 1658.642211, -1673.192871, 27.968414, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1652.495727, -1675.453735, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1665.485229, -1675.453735, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1672.726684, -1675.453735, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1644.727050, -1675.453735, 20.898147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(9833, 1658.875976, -1681.010498, 22.887819, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3515, 1672.738281, -1666.606445, 19.704469, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3515, 1641.968627, -1668.567626, 19.704469, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1643.229248, -1686.597656, 20.964023, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1643.229248, -1676.606201, 20.964023, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1673.482299, -1686.597656, 20.964023, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1673.482299, -1676.606201, 20.964023, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3934, 1669.770385, -1701.142700, 19.476881, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//news exterior - close
	//civil spawn - open
	tmpobjid = CreateDynamicObject(1290, 1164.509277, -1730.140502, 16.028436, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1164.509277, -1722.359008, 16.028436, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1147.979003, -1730.140502, 16.028436, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1147.979003, -1722.359008, 16.028436, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1129.187988, -1730.140502, 16.028436, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1129.187988, -1722.359008, 16.028436, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1113.678100, -1730.140502, 16.028436, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1113.678100, -1722.359008, 16.028436, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1095.738159, -1730.140502, 16.028436, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1095.738159, -1722.359008, 16.028436, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1080.497314, -1730.140502, 16.028436, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1080.497314, -1722.359008, 16.028436, 0.000000, 0.000038, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1066.776733, -1730.140502, 16.028436, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1066.776733, -1722.359008, 16.028436, 0.000000, 0.000045, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1049.175048, -1730.140502, 16.028436, 0.000000, 0.000053, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1290, 1049.175048, -1722.359008, 16.028436, 0.000000, 0.000053, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1727.056762, 15.159070, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1731.326660, 15.159070, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1736.007446, 15.159070, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1740.277343, 15.159070, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1744.297241, 15.159070, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1748.567138, 15.159070, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1751.118164, 15.159070, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1755.388061, 15.159070, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1758.639160, 15.159070, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1177.518310, -1762.909057, 15.159070, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1723.491943, 13.173267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1726.911987, 13.173267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1730.321899, 13.173267, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1733.765380, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1737.185424, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1740.595336, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1744.035522, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1747.455566, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1750.865478, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1752.594116, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1756.014160, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1759.424072, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1762.867553, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1766.287597, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1769.697509, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1773.137695, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1776.557739, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1176.358154, -1779.967651, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1723.491943, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1726.911987, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1730.321899, 13.173267, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1733.765380, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1737.185424, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1740.595336, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1744.035522, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1747.455566, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1750.865478, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1752.594116, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1756.014160, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1759.424072, 13.173267, 0.000000, 0.000015, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1762.867553, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1766.287597, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1769.697509, 13.173267, 0.000000, 0.000022, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1773.137695, 13.173267, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1776.557739, 13.173267, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1178.519409, -1779.967651, 13.173267, 0.000000, 0.000030, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(718, 1154.510253, -1726.371093, 12.821385, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(718, 1137.720092, -1726.371093, 12.821385, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(718, 1120.989746, -1726.371093, 12.821385, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(718, 1106.539062, -1726.371093, 12.821385, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1160.418090, -1726.246215, 14.119071, 0.000000, 0.000000, -86.999984, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1161.916015, -1726.167846, 14.119071, 0.000000, 0.000000, -86.999984, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1147.057739, -1726.246215, 14.119071, -0.000007, 0.000000, -86.999961, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1148.555664, -1726.167846, 14.119071, -0.000007, 0.000000, -86.999961, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1132.956420, -1726.246215, 14.119071, -0.000015, 0.000000, -86.999938, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1134.454345, -1726.167846, 14.119071, -0.000015, 0.000000, -86.999938, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1117.036010, -1726.246215, 14.119071, -0.000022, 0.000001, -86.999916, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1231, 1118.533935, -1726.167846, 14.119071, -0.000022, 0.000001, -86.999916, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1146.281616, -1758.850585, 12.980204, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1146.281616, -1755.520141, 12.980204, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1144.563842, -1753.828735, 12.980204, 0.000000, 0.000000, 90.599967, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1161.812500, -1758.850585, 12.980204, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1161.812500, -1755.520141, 12.980204, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3850, 1163.525024, -1753.810424, 12.980204, 0.000000, 0.000000, 90.599967, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18761, 1154.088500, -1763.574462, 16.925083, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1334, 1144.591552, -1755.017578, 13.262896, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1346, 1165.033691, -1752.652465, 13.787750, 0.000000, 0.000000, -90.499992, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1363, 1139.792846, -1750.194824, 13.380208, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1139.890136, -1752.827026, 13.205301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1135.829711, -1752.827026, 13.205301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1131.719116, -1752.827026, 13.205301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1139.890136, -1755.987182, 13.205301, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1135.829711, -1755.987182, 13.205301, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1131.719116, -1755.987182, 13.205301, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	//civil spawn - close
	//Los santos hall - open
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 24.91257, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 21.64585, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 18.40866, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 15.13166, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 24.91257, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 21.69713, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 18.41969, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 15.13130, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 24.91257, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 21.64072, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 18.36888, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 15.06503, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 24.91257, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 21.62359, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 18.37724, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 15.14004, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 24.91260, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 21.64070, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 18.36890, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1475.68481, -1751.25659, 15.06500, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 24.91260, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 21.62360, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 18.37720, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1470.21387, -1751.20850, 15.14000, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 24.91260, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 21.69710, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 18.41970, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1486.65771, -1751.23474, 15.13130, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 24.91260, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 21.64590, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 18.40870, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1491.94788, -1751.03845, 15.13170, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1231, 1506.82666, -1754.33484, 13.58516, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1506.74377, -1751.80908, 13.58516, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1506.72571, -1749.13574, 13.58516, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1456.21606, -1754.32483, 13.49043, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1456.41504, -1751.89331, 13.49043, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 1456.54004, -1749.53137, 13.49043, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1331, 1534.15234, -1755.28198, 13.39049, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1334, 1531.59192, -1755.17493, 13.41624, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 1494.37354, -1771.28687, 18.36866, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 1494.38110, -1768.58203, 18.36866, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 1468.00122, -1771.26587, 18.36866, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 1467.97815, -1768.52942, 18.36866, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1494.17896, -1766.41260, 17.39805, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1494.02148, -1764.30640, 17.39805, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1468.08386, -1766.83472, 17.39805, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1232, 1468.03967, -1764.55225, 17.39805, 0.00000, 0.00000, 0.00000);
	//Los santos hall - close
	//lottery budka - open
	CreateDynamicObject(3881, 1537.09070, -1710.97290, 14.11059, 0.00000, 0.00000, 0.00000);
	//lottery budka - close
	//taxi - open
	tmpobjid = CreateDynamicObject(970, 1785.404052, -1884.518676, 13.050114, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1789.555175, -1884.518676, 13.050114, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(7520, 1797.777343, -1916.826049, 12.593605, 0.000000, 0.000000, -89.800117, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1781.245239, -1884.518676, 13.050114, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1797.883300, -1884.518676, 13.050114, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1802.034423, -1884.518676, 13.050114, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1793.724487, -1884.518676, 13.050114, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1806.124023, -1884.518676, 13.050114, 0.000000, 0.000007, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1777.094604, -1884.518676, 13.050114, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.389038, -1886.661987, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.426147, -1890.821533, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.462280, -1894.961669, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.498657, -1899.092407, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.534301, -1903.192993, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.570678, -1907.353515, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.606811, -1911.483886, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.642700, -1915.614624, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(970, 1774.678344, -1919.743774, 13.050114, 0.000000, 0.000000, 90.500053, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(4642, 1810.616455, -1895.313232, 13.968057, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(4642, 1810.616455, -1895.313232, 13.968057, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(4642, 1810.616455, -1885.252197, 13.968057, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(9697, 1777.474243, -1932.682495, 12.400878, 0.000000, 0.000000, 89.499992, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(14467, 1753.778320, -1885.524047, 15.032141, 0.000000, 0.000000, 56.799991, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1805.723022, -1945.709472, 12.637668, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1798.652832, -1945.709472, 12.637668, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1792.042602, -1945.709472, 12.637668, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1774.032348, -1914.316284, 12.221195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1774.032348, -1907.486083, 12.221195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1774.032348, -1924.916381, 12.221195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1774.032348, -1900.186035, 12.221195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1568, 1774.032348, -1892.735595, 12.221195, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1444, 1775.192993, -1938.791259, 13.363592, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1444, 1769.913452, -1938.791259, 13.363592, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19123, 1765.518676, -1906.824707, 13.017954, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19123, 1769.009399, -1906.824707, 13.017954, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19123, 1762.729492, -1906.824707, 13.017954, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19123, 1760.039062, -1906.824707, 13.017954, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//taxi - close
	//police ls - open
	CreateDynamicObject(5822, 1545.51917, -1638.21411, 21.53090, 0.00000, 0.00000, 5.00000);
	CreateDynamicObject(970, 1539.49414, -1653.46118, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1649.33618, 13.45850, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1645.22620, 13.45850, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1641.11621, 13.45850, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1638.19116, 13.45850, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1541.53406, -1636.13623, 13.45850, 0.00000, 0.00000, 1.00000);
	CreateDynamicObject(970, 1539.49414, -1657.58618, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1661.71118, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1665.85120, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1697.87915, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49243, -1693.74207, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1689.61218, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1685.46021, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1681.30823, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1669.96118, 13.05350, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1541.56213, -1671.98230, 13.05350, 0.00000, 0.00000, 1.00000);
	CreateDynamicObject(970, 1541.56213, -1679.19934, 13.05350, 0.00000, 0.00000, 1.00000);
	CreateDynamicObject(646, 1546.38794, -1672.36792, 15.26000, 360.00000, 0.00000, 3.00000);
	CreateDynamicObject(646, 1546.38708, -1678.63367, 15.26000, 360.00000, 0.00000, 3.00000);
	CreateDynamicObject(970, 1539.49414, -1701.99524, 13.45250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1706.11121, 13.45250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1710.22717, 13.45250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1539.49414, -1713.46118, 13.45250, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, 1541.55212, -1715.51917, 13.45250, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1544.99597, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1542.59607, -1639.76245, 27.28470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1542.59607, -1644.76038, 27.28470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1542.59607, -1648.30945, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1545.13708, -1650.70337, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1550.13513, -1650.70337, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1551.22705, -1650.70337, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1553.61658, -1653.14917, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1658.14722, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1663.14514, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1668.14307, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1670.32715, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1556.02515, -1672.73450, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1553.61658, -1680.84814, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1556.04797, -1678.44971, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1553.61658, -1685.84607, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1690.84412, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1695.84204, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1553.61658, -1698.08899, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1551.17505, -1700.49341, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1545.00098, -1700.49341, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1547.37402, -1700.49341, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1542.60425, -1702.93689, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1542.60425, -1707.93494, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1542.60425, -1711.98792, 27.28400, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19866, 1545.06848, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1550.06653, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1555.06445, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1560.06250, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1565.06055, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1570.05847, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1575.05652, -1714.38000, 27.28400, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1553.31201, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1558.31006, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1563.30798, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1568.30603, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1573.30396, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19866, 1574.98401, -1637.25989, 27.28470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1642.41284, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1652.68176, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1662.95081, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1673.21985, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1683.50977, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1693.79980, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1704.06885, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1577.46301, -1709.21375, 28.74160, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1281, 1573.23254, -1641.55920, 28.16140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1573.00403, -1648.18005, 28.16140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1572.92285, -1654.72229, 28.16140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1566.01233, -1655.59998, 28.16140, 0.00000, 0.00000, -40.00000);
	CreateDynamicObject(1281, 1558.97595, -1647.87231, 28.16140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1565.80432, -1640.48767, 28.16140, 0.00000, 0.00000, -40.00000);
	CreateDynamicObject(1281, 1559.01025, -1640.73145, 28.16140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1281, 1559.00134, -1655.37329, 28.16140, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3928, 1549.68713, -1707.94373, 27.39350, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3928, 1568.32617, -1708.28162, 27.39350, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3928, 1564.01624, -1693.65405, 27.39350, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1565.31213, -1648.34399, 30.27860, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1571, 1560.37769, -1665.41504, 28.61190, 0.00000, 0.00000, 164.00000);
	CreateDynamicObject(1342, 1568.29065, -1665.51685, 28.37360, 0.00000, 0.00000, 120.00000);
	CreateDynamicObject(1341, 1544.26294, -1648.26831, 28.36770, 0.00000, 0.00000, 18.00000);
	CreateDynamicObject(1340, 1544.78650, -1642.63086, 28.47270, 0.00000, 0.00000, -18.00000);
	CreateDynamicObject(1359, 1563.47131, -1651.79480, 28.03310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1359, 1569.33154, -1651.29248, 28.03310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1359, 1568.71057, -1644.54810, 28.03310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1359, 1563.13672, -1644.81055, 28.03310, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1226, 1544.08020, -1637.91687, 31.14240, 0.00000, 0.00000, 156.00000);
	CreateDynamicObject(1226, 1543.97839, -1649.71106, 31.14240, 0.00000, 0.00000, 207.00000);
	CreateDynamicObject(1226, 1576.44263, -1638.24597, 31.14240, 0.00000, 0.00000, 33.00000);
	CreateDynamicObject(3666, 1559.15454, -1707.77917, 27.84800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 1573.23706, -1699.46655, 27.84800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 1556.78442, -1686.50610, 27.84800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1638.16650, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1640.13147, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1642.08154, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1644.04651, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1646.04150, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1648.00647, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1649.80652, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1701.38745, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1703.30151, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1705.21545, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1707.12952, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1709.04346, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1710.95752, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1712.93750, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18648, 1542.50476, -1713.46545, 27.41170, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1544.43652, -1622.39258, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1544.50122, -1621.12671, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1544.55273, -1619.91296, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1544.61340, -1618.68115, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1544.11853, -1633.61548, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1544.11926, -1635.17773, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1532.14929, -1608.20044, 12.35470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1527.00183, -1608.22375, 12.35470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1532.20715, -1639.31909, 12.35470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1527.04614, -1639.32886, 12.35470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1532.24060, -1709.89343, 12.35470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19425, 1527.05933, -1709.91211, 12.35470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1297, 1607.13318, -1603.29688, 15.64540, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1297, 1607.18555, -1637.23901, 15.64540, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(1297, 1607.04456, -1619.82019, 15.64540, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1297, 1587.63354, -1603.51135, 15.64540, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1297, 1568.13599, -1603.57947, 15.64540, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1297, 1540.69580, -1603.12146, 15.64540, 0.00000, 0.00000, 145.00000);
	CreateDynamicObject(1297, 1540.48853, -1616.95447, 15.64540, 0.00000, 0.00000, 220.00000);
	CreateDynamicObject(3095, 1544.30798, -1607.05200, 11.82750, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1553.28723, -1607.04907, 11.82750, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1562.27332, -1607.04871, 11.82750, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1571.26392, -1607.05444, 11.82750, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1580.25854, -1607.06335, 11.82750, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1589.23962, -1607.05469, 11.82750, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1597.74634, -1607.05249, 11.90750, 0.00000, -1.00000, 0.00000);
	CreateDynamicObject(3095, 1603.41589, -1607.05774, 12.00750, 0.00000, -1.00000, 0.00000);
	CreateDynamicObject(3095, 1544.21252, -1613.11646, 11.82700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1553.20361, -1613.24719, 11.82700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1562.18811, -1613.46985, 11.82700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1571.16614, -1616.00256, 11.82700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1580.16174, -1616.05286, 11.82700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1589.14771, -1616.04175, 11.82700, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1597.54810, -1616.02319, 11.90750, 0.02000, -1.00000, 0.00000);
	CreateDynamicObject(3095, 1603.40894, -1616.02405, 12.00750, 0.00000, -1.00000, 0.00000);
	CreateDynamicObject(3095, 1580.04443, -1625.03357, 11.84700, -0.04000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1571.06201, -1625.04980, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1562.08850, -1625.06885, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1553.10974, -1625.08801, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1544.11194, -1625.11804, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1603.49731, -1625.01465, 12.00750, 0.00000, -1.00000, 0.00000);
	CreateDynamicObject(3095, 1596.22839, -1625.00854, 11.90750, -0.22000, -1.00000, 0.00000);
	CreateDynamicObject(3095, 1588.43408, -1625.01025, 11.84300, -0.10000, -0.02000, 0.00000);
	CreateDynamicObject(3095, 1603.75537, -1628.39050, 11.92750, -2.06000, -0.88000, 0.00000);
	CreateDynamicObject(3095, 1594.84656, -1632.59949, 11.96750, -1.38000, -0.88000, 0.00000);
	CreateDynamicObject(3095, 1585.90491, -1632.52588, 11.94750, -1.24000, -0.74000, 0.00000);
	CreateDynamicObject(3095, 1576.99072, -1633.91528, 11.84700, -0.04000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1568.01196, -1634.03784, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1559.01807, -1634.05688, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1550.05237, -1634.08154, 11.84700, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(3095, 1544.12158, -1634.10583, 11.84600, -0.02000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1547.59216, -1620.32434, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1551.63184, -1620.31921, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1555.87231, -1620.29480, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1559.57288, -1620.30847, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1563.33240, -1620.30518, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1566.89246, -1620.32019, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1570.86121, -1620.29077, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1574.75537, -1620.29419, 13.08260, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1579.45056, -1620.30713, 13.08260, 0.00000, 0.00000, 0.00000);
	//police ls - close

	//Los Santos Parking - open
	CreateDynamicObject(984, 1755.21008, -1769.55798, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1768.01221, -1769.78455, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1780.73364, -1769.93823, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1793.46521, -1770.15137, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1756.57861, -1750.96399, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1769.28821, -1751.13635, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1782.04602, -1751.33826, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(984, 1794.81628, -1751.51794, 13.17090, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(7952, 1769.18274, -1742.37573, 12.94810, 0.00000, 0.00000, 91.00000);
	CreateDynamicObject(7952, 1810.06140, -1783.04761, 12.94810, 0.00000, 0.00000, 179.00000);
	CreateDynamicObject(9697, 1757.16565, -1774.04517, 12.55220, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9697, 1755.40601, -1755.39185, 12.55220, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 1798.63696, -1821.82959, 14.94660, 0.00000, 0.00000, -4.00000);
	CreateDynamicObject(3660, 1761.00439, -1814.58704, 14.94660, 0.00000, 0.00000, -14.00000);
	CreateDynamicObject(3660, 1780.04785, -1819.09558, 14.94660, 0.00000, 0.00000, -13.00000);
	CreateDynamicObject(1360, 1809.80432, -1803.66577, 13.28210, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1360, 1809.67249, -1807.57117, 13.28210, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1360, 1810.02515, -1785.92041, 13.28210, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1360, 1810.08240, -1783.12109, 13.28210, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1360, 1810.39075, -1765.54456, 13.28210, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1360, 1810.50525, -1758.97827, 13.28210, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 1811.39111, -1762.62952, 17.85910, 0.00000, 0.00000, 89.00000);
	CreateDynamicObject(1290, 1789.59448, -1741.64771, 17.85910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 1767.66809, -1741.86377, 17.85910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1290, 1746.07922, -1741.88171, 17.85910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1729.12952, -1800.33899, 12.21917, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1714.96899, -1798.97241, 11.98985, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1768.10059, -1741.28308, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1762.86072, -1741.16455, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1757.69177, -1740.97034, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1752.53357, -1740.85376, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1747.41272, -1740.95093, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1742.24670, -1740.89294, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1737.06763, -1740.83142, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1731.99780, -1740.86829, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1773.34497, -1741.11609, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1778.55615, -1741.05859, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1783.76086, -1741.05042, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1788.92102, -1740.97266, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1794.05823, -1740.92090, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1799.33313, -1741.00427, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, 1804.48669, -1741.04602, 12.31701, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(645, 1784.98621, -1816.44104, 12.51861, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(648, 1802.98816, -1818.51331, 10.39544, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(874, 1795.57776, -1817.35083, 11.64551, 0.00000, 0.00000, 77.00000);
	CreateDynamicObject(874, 1801.15356, -1817.72070, 11.64551, 0.00000, 0.00000, 77.00000);
	//Los Santos Parking - close
	//park - location - open
	CreateObject(19377, 1508.88171, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1498.39063, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1477.42065, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1466.91663, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1456.43347, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1445.95544, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1712.85889, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1703.23535, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1693.60095, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1683.97412, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1674.35059, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1664.73352, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1655.10181, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1645.48047, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1635.84766, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1626.22754, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1616.60291, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1439.70276, -1606.99622, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1712.85889, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1693.60095, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1683.97412, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1664.73352, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1674.35059, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1655.10181, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1645.48047, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1635.84766, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1626.22754, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1616.60291, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.36206, -1606.99622, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1450.20459, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1460.69678, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1471.19165, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1481.69031, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1492.15833, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1502.65112, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1513.13928, -1601.98511, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1705.62183, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateDynamicObject(19435, 1445.25586, -1714.62781, 12.79647, 125.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1445.25354, -1712.17981, 12.79650, 125.00000, 90.00000, 90.00000);
	CreateObject(19377, 1442.70789, -1695.99976, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1686.37952, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1676.77954, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1663.64417, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateDynamicObject(19435, 1445.49414, -1670.23193, 12.48390, 0.00000, 90.00000, 90.00000);
	CreateObject(19377, 1442.70789, -1654.02490, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1644.40491, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1634.79102, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1442.70789, -1625.16675, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1450.20459, -1611.61096, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1460.69678, -1611.61096, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1471.19165, -1611.61096, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1481.67542, -1611.59753, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1492.15833, -1611.61096, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1502.65112, -1611.61096, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1513.13928, -1611.61096, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1442.70459, -1622.78247, 9.15570, 0.00000, 35.00000, 0.00000);
	CreateObject(19377, 1451.32556, -1614.31140, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateObject(19377, 1450.18103, -1621.22144, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1445.66162, -1618.02832, 11.75660, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 1446.53674, -1617.24072, 11.75660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 1445.63049, -1716.21338, 11.75660, 0.00000, 0.00000, 90.00000);
	CreateObject(19377, 1450.18921, -1712.87146, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1446.49194, -1716.91992, 11.75660, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1451.26477, -1719.87866, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateObject(19377, 1460.89832, -1719.87866, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateObject(19377, 1470.52515, -1719.87866, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateObject(19377, 1486.55957, -1719.88550, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateDynamicObject(19435, 1480.02869, -1716.99036, 12.50390, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1493.23572, -1719.87866, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateObject(19377, 1502.85828, -1719.87866, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateObject(19377, 1508.86646, -1712.85840, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1512.43005, -1716.89014, 11.75660, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1516.28821, -1711.40063, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1507.55798, -1719.87415, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateDynamicObject(19435, 1513.34705, -1716.17163, 11.75660, 0.00000, 0.00000, 90.00000);
	CreateObject(19377, 1516.30261, -1701.77917, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateDynamicObject(19435, 1513.51538, -1670.20288, 12.48390, 0.00000, 90.00000, 90.00000);
	CreateObject(19377, 1516.30261, -1692.14404, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.30261, -1682.52527, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.29675, -1676.74878, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.27844, -1663.63354, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.29785, -1654.03357, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.29785, -1644.41357, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.29785, -1634.79565, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1516.29785, -1625.18298, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateObject(19377, 1473.47461, -1719.88330, 9.15570, 0.00000, 35.00000, 90.00000);
	CreateDynamicObject(19381, 1473.04053, -1712.11926, 13.41755, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1462.55237, -1712.11926, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1452.08582, -1712.11926, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1451.66394, -1712.11926, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.93079, -1711.47070, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1486.98718, -1712.11926, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1497.47144, -1712.11926, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1507.26343, -1712.11926, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.09546, -1711.30200, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.09875, -1701.68457, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.09875, -1692.05420, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.09875, -1682.42297, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.12183, -1676.75818, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.10095, -1663.64636, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.10364, -1654.02112, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.09937, -1644.38782, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.10706, -1634.76282, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.92920, -1701.84314, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.92920, -1692.22351, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.92297, -1682.69031, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.91870, -1676.76917, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.89294, -1663.65015, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.89294, -1654.02820, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.89294, -1644.40588, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.89294, -1634.78589, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1480.02869, -1716.75037, 12.68390, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1480.02869, -1716.47046, 12.86390, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1480.02869, -1716.21045, 13.04390, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1480.02869, -1715.93042, 13.22390, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1480.02869, -1715.65039, 13.38390, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1481.78479, -1713.00293, 8.24413, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1478.24023, -1713.00293, 8.24410, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 1480.02869, -1715.33044, 13.44390, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19358, 1480.00769, -1717.70520, 10.84030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1480.00769, -1717.46521, 11.02030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1480.00769, -1717.18518, 11.20030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1480.00769, -1716.94519, 11.38030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1480.00769, -1716.64514, 11.56030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19358, 1480.00769, -1716.36511, 11.72030, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19454, 1480.03186, -1709.78882, 13.43666, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1473.46960, -1705.64648, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1463.86182, -1705.64648, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1486.58496, -1705.64648, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1496.20728, -1705.64648, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1480.03186, -1700.16296, 13.43670, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1479.96765, -1680.88245, 13.43670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1480.03186, -1690.52783, 13.43670, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1479.97461, -1671.26294, 13.43670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(8397, 1479.88538, -1661.09277, 23.88650, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1479.96765, -1661.62939, 13.43670, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1449.48999, -1668.40332, 8.22830, 0.00000, 0.00000, 90.00000);
	CreateObject(19377, 1449.48999, -1672.03345, 8.22830, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 1445.75415, -1670.23193, 12.66390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1446.03418, -1670.23193, 12.84390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1446.31421, -1670.23193, 13.02390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1446.55420, -1670.23193, 13.20390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1446.81421, -1670.23193, 13.38390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19358, 1444.77515, -1670.21667, 10.81570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1445.03516, -1670.21667, 10.99570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1445.31519, -1670.21667, 11.17570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1445.59521, -1670.21667, 11.35570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1445.81519, -1670.21667, 11.53570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1446.09521, -1670.21667, 11.71570, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1509.53394, -1668.39819, 8.25052, 0.00000, 0.00000, 90.00000);
	CreateObject(19377, 1509.53394, -1672.00989, 8.25050, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 1513.27539, -1670.20288, 12.66390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1513.03882, -1670.21399, 12.84390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1512.79883, -1670.21399, 13.02390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1512.53882, -1670.21399, 13.20390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 1512.25879, -1670.21399, 13.38390, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19358, 1514.24109, -1670.20422, 10.81570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1514.00110, -1670.20422, 10.99570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1513.76111, -1670.20422, 11.17570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1513.52112, -1670.20422, 11.35570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1513.26111, -1670.20422, 11.53570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19358, 1512.98108, -1670.20422, 11.69570, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 1508.18774, -1670.20422, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1498.55103, -1670.20422, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1488.91553, -1670.20422, 13.45670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1450.98840, -1670.21338, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1460.60718, -1670.21338, 13.43670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1470.23792, -1670.21338, 13.44670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1457.77417, -1702.60022, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1457.77417, -1692.98364, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1457.77417, -1683.37952, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1457.77417, -1673.77722, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1501.13916, -1702.61389, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1501.13916, -1692.99854, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1501.13916, -1683.36108, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1501.13916, -1673.73962, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1463.52881, -1700.01123, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1474.02112, -1700.01123, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1486.73230, -1700.01123, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1497.23328, -1700.00952, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1463.52881, -1690.42725, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1474.00110, -1690.42749, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1486.73230, -1690.42725, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1497.21338, -1690.42725, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1463.52881, -1680.83569, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1463.52881, -1671.21753, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1474.00110, -1680.83569, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1486.73230, -1680.83569, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1497.21338, -1680.83569, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1474.00317, -1671.23743, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1486.71228, -1671.21655, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1497.21338, -1671.21753, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1453.07312, -1671.20288, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1461.38684, -1661.58337, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1479.85034, -1656.88635, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1461.38684, -1651.96069, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1461.38684, -1642.37512, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1461.38684, -1632.77686, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1471.85876, -1661.58337, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1471.85876, -1651.96118, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1471.85876, -1642.34363, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1471.85876, -1632.74780, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1482.34070, -1651.96118, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1482.34070, -1642.34363, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1482.34070, -1632.74780, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1492.83008, -1661.65405, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1482.34070, -1661.58337, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1492.82849, -1651.96118, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1492.82849, -1642.34363, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1492.82849, -1632.74780, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1503.30896, -1661.58337, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1502.04663, -1671.19641, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1503.30896, -1651.96118, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1503.30896, -1642.34363, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1503.28906, -1632.74780, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1485.93738, -1610.95264, 9.15570, 0.00000, 35.00000, 315.00000);
	CreateObject(19377, 1473.85901, -1610.95569, 9.15570, 0.00000, 35.00000, -495.00000);
	CreateObject(19377, 1479.88306, -1613.50000, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateObject(19377, 1496.16296, -1606.71228, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateObject(19377, 1463.59680, -1606.73035, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateObject(19377, 1507.75635, -1614.31140, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateObject(19377, 1508.85754, -1621.00366, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19435, 1512.56323, -1617.23132, 11.75660, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1516.30750, -1622.70276, 9.15570, 0.00000, 35.00000, 180.00000);
	CreateDynamicObject(19435, 1513.34790, -1617.94604, 11.75660, 0.00000, 0.00000, 90.00000);
	CreateObject(19377, 1503.09802, -1613.70752, 8.23787, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1456.03601, -1613.68384, 8.23787, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1498.24280, -1606.70361, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateObject(19377, 1460.92017, -1606.73328, 9.15570, 0.00000, 35.00000, 270.00000);
	CreateDynamicObject(19435, 1491.34705, -1609.66785, 11.73660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 1491.42505, -1609.67993, 11.73660, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(19435, 1468.38025, -1609.72314, 11.73660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 1468.38501, -1609.70459, 11.73660, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19381, 1508.10706, -1625.15247, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1508.11743, -1622.67212, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1507.37683, -1622.07764, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1503.28906, -1623.14148, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1492.82849, -1623.14148, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1482.34070, -1623.14148, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1471.85876, -1623.14148, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1461.38684, -1623.14148, 13.38760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.89294, -1625.15161, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1450.89294, -1622.77393, 13.42760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1451.72864, -1622.06812, 13.40760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1461.19556, -1614.48413, 13.41760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1463.05457, -1614.47620, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1468.07507, -1616.74243, 13.41760, 0.00000, 90.00000, 45.00000);
	CreateDynamicObject(19381, 1478.19897, -1621.26697, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1488.70142, -1621.26697, 13.43760, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1491.12866, -1616.71912, 13.41760, 0.00000, 90.00000, 45.00000);
	CreateDynamicObject(19381, 1496.65503, -1614.47888, 13.43787, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19381, 1497.93884, -1614.46509, 13.41790, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1501.13916, -1664.11804, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1499.30444, -1655.67566, 13.43670, 0.00000, 90.00000, 25.00000);
	CreateDynamicObject(19454, 1497.45557, -1647.32593, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1457.77551, -1664.13794, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1459.58887, -1655.68628, 13.43670, 0.00000, 90.00000, -25.00000);
	CreateDynamicObject(19454, 1461.44836, -1647.24805, 13.45670, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, 1494.48315, -1640.28735, 13.43670, 0.00000, 90.00000, 45.00000);
	CreateDynamicObject(19454, 1464.32813, -1640.21899, 13.43670, 0.00000, 90.00000, -45.00000);
	CreateDynamicObject(19454, 1471.30029, -1637.33179, 13.44670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1480.92505, -1637.33179, 13.44670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, 1487.49194, -1637.33179, 13.42670, 0.00000, 90.00000, 90.00000);
	CreateDynamicObject(870, 1486.74707, -1673.56812, 13.66356, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(870, 1486.75085, -1675.81470, 13.66356, 0.00000, 0.00000, -11.04000);
	CreateDynamicObject(870, 1486.70288, -1678.14941, 13.66356, 0.00000, 0.00000, 49.07999);
	CreateDynamicObject(870, 1486.72949, -1680.13525, 13.66356, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(870, 1473.41223, -1673.73572, 13.66356, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(870, 1473.34985, -1676.05920, 13.66356, 0.00000, 0.00000, -11.04000);
	CreateDynamicObject(870, 1473.21790, -1678.40027, 13.66356, 0.00000, 0.00000, 49.07999);
	CreateDynamicObject(870, 1473.21387, -1679.95349, 13.66356, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(803, 1485.06433, -1647.30273, 14.33030, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(870, 1473.02258, -1682.12622, 13.66356, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(870, 1473.14038, -1684.15051, 13.66356, 0.00000, 0.00000, -11.04000);
	CreateDynamicObject(870, 1486.65662, -1682.35181, 13.66356, 0.00000, 0.00000, 49.07999);
	CreateDynamicObject(870, 1486.77979, -1684.31775, 13.66356, 0.00000, 0.00000, -11.04000);
	CreateDynamicObject(1359, 1475.84900, -1679.46387, 14.16905, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1359, 1484.00500, -1679.26343, 14.16910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1223, 1478.02808, -1711.80286, 13.44473, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1223, 1469.28589, -1703.49097, 13.44470, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1223, 1490.23804, -1703.66504, 13.44470, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1223, 1508.06519, -1668.09155, 13.44470, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1223, 1450.97778, -1667.96216, 13.44470, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1223, 1462.53735, -1639.07422, 13.44470, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(1223, 1495.81714, -1638.89160, 13.44470, 0.00000, 0.00000, 235.00000);
	CreateDynamicObject(1280, 1462.81079, -1648.31836, 13.87610, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 1496.19299, -1647.73718, 13.87610, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1359, 1462.67126, -1646.28284, 14.16905, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1359, 1496.04932, -1645.64380, 14.16905, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1226, 1445.17603, -1717.72961, 16.42190, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(1226, 1514.09729, -1717.49438, 16.42190, 0.00000, 0.00000, 135.00000);
	CreateDynamicObject(8674, 1472.41833, -1716.90796, 14.77496, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 1487.42102, -1716.90796, 14.77500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 1462.11401, -1716.90796, 14.77500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 1451.82690, -1716.90796, 14.77500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 1497.76807, -1716.90796, 14.77500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 1507.13928, -1716.89343, 14.77500, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 1513.35120, -1710.94629, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.35120, -1700.61987, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.35120, -1690.27539, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.28015, -1679.95764, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.35120, -1660.69629, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.35120, -1650.39819, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.35120, -1640.07642, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1513.35120, -1629.77539, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1711.00439, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1700.70264, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1690.42029, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1680.11804, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1661.09680, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1650.79626, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1640.49658, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 1445.69165, -1630.13672, 14.77500, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19375, 1479.83838, -1616.51538, 12.58726, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19375, 1487.93469, -1613.21936, 12.58730, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19375, 1471.72485, -1613.12793, 12.58730, 0.00000, 0.00000, 45.00000);
	CreateDynamicObject(16101, 1484.60083, -1616.44043, 17.84425, 0.00000, 180.00000, 0.00000);
	CreateDynamicObject(16101, 1475.13391, -1616.42139, 17.84425, 0.00000, 180.00000, 0.00000);
	CreateDynamicObject(16101, 1491.32849, -1609.77209, 17.84425, 0.00000, 180.00000, 0.00000);
	CreateDynamicObject(16101, 1468.38757, -1609.73926, 17.84425, 0.00000, 180.00000, 0.00000);
	CreateDynamicObject(717, 1454.41028, -1724.50159, 12.64662, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1488.63708, -1724.45447, 12.64660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1510.41858, -1726.09192, 12.64660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1444.22437, -1724.39514, 12.64660, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(647, 1507.37256, -1683.78992, 14.62020, 0.00000, 0.00000, 12.36000);
	CreateDynamicObject(808, 1506.47192, -1695.36072, 14.86119, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(647, 1467.14807, -1711.56897, 14.62020, 0.00000, 0.00000, 12.36000);
	CreateDynamicObject(647, 1450.51086, -1691.39258, 14.65979, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(808, 1450.58972, -1679.66064, 14.94301, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(808, 1464.70337, -1679.59241, 14.94301, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(803, 1491.99072, -1628.83252, 14.33030, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(647, 1475.34644, -1626.60693, 14.62020, 0.00000, 0.00000, 12.36000);
	CreateDynamicObject(808, 1483.36938, -1627.71924, 14.80097, 0.00000, 0.00000, -132.30000);
	CreateDynamicObject(808, 1463.88586, -1619.72961, 14.80097, 0.00000, 0.00000, -259.56003);
	CreateDynamicObject(1445, 1523.05615, -1718.02747, 12.99100, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1342, 1517.18445, -1706.82813, 13.41548, 0.00000, 0.00000, -22.56001);
	CreateDynamicObject(1340, 1516.44543, -1710.76160, 13.40245, 0.00000, 0.00000, -1.62000);
	CreateDynamicObject(1341, 1516.69788, -1713.60925, 13.20514, 0.00000, 0.00000, 7.38000);
	CreateDynamicObject(1281, 1520.77197, -1710.58533, 13.16697, 0.00000, 0.00000, 70.74000);
	CreateObject(19377, 1519.38037, -1703.23792, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(717, 1522.46021, -1687.07397, 12.48909, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1522.28198, -1644.33130, 12.48909, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1257, 1522.84570, -1680.78235, 13.52780, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1285, 1514.67847, -1666.44910, 12.94730, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1286, 1514.67847, -1665.97815, 12.94730, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1289, 1514.67847, -1665.48560, 12.94730, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1258, 1522.84900, -1663.76233, 12.92386, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1257, 1499.39880, -1724.91907, 13.52780, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1288, 1455.15051, -1718.09497, 12.86884, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1286, 1455.61316, -1718.09497, 12.86880, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1285, 1456.06897, -1718.09497, 12.86880, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(3861, 1442.50464, -1628.31079, 13.40645, 0.00000, 0.00000, -75.29993);
	CreateDynamicObject(3862, 1442.73206, -1633.44592, 13.40650, 0.00000, 0.00000, -91.56003);
	CreateDynamicObject(3863, 1442.04663, -1638.94373, 13.40650, 0.00000, 0.00000, -97.98000);
	CreateDynamicObject(3862, 1442.20044, -1643.76355, 13.40650, 0.00000, 0.00000, -88.80002);
	CreateDynamicObject(1258, 1436.09424, -1653.96704, 12.93698, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(870, 1493.12427, -1610.86584, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1495.26624, -1610.91602, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1497.59375, -1611.07996, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1499.54102, -1610.90955, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1501.64050, -1610.77234, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1501.58765, -1612.73511, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1501.52930, -1614.82288, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1501.42297, -1616.79053, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1502.15027, -1618.57703, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1504.13062, -1618.76343, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1506.29321, -1618.77344, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1508.63452, -1618.75525, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1510.83606, -1618.76318, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1466.58447, -1610.88232, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1464.48303, -1610.77966, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1462.72314, -1610.79358, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1458.40186, -1610.76868, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1460.54224, -1610.75098, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1457.34033, -1610.82092, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1457.48572, -1612.62537, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1457.34705, -1614.54260, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1457.57727, -1616.58240, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1454.89368, -1618.45728, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1457.18054, -1618.33704, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1452.81348, -1618.51599, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1450.78857, -1618.47070, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(870, 1448.64343, -1618.43225, 13.51375, 0.00000, 0.00000, -67.07995);
	CreateDynamicObject(3462, 1479.67908, -1609.86084, 13.84636, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3515, 1497.88525, -1614.69727, 12.67966, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1461.12244, -1614.91492, 12.67966, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 1497.23047, -1608.41650, 12.81052, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1280, 1462.13184, -1608.54211, 12.81052, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1359, 1494.89636, -1608.17090, 13.13175, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1359, 1464.19116, -1608.33765, 13.13175, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1512.45764, -1608.19226, 12.48909, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1447.13293, -1608.19226, 12.48910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1495.62939, -1598.58789, 12.48910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(717, 1460.77112, -1598.58789, 12.48910, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 1479.69531, -1615.19067, 12.81052, 0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1361, 1489.13794, -1605.29932, 13.19079, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1485.80688, -1601.79956, 13.19079, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1479.69421, -1601.79956, 13.19080, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1474.36401, -1601.79956, 13.19080, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1470.50537, -1605.29932, 13.19080, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(647, 1496.22546, -1711.98975, 14.62020, 0.00000, 0.00000, 12.36000);
	CreateDynamicObject(19450, 1507.55786, -1715.96814, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1497.92810, -1715.96814, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1478.72632, -1715.96814, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1488.34668, -1715.96777, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1469.09741, -1715.96814, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1459.48438, -1715.96814, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1451.39819, -1715.96814, 12.44190, 0.00000, 270.00000, 90.00000);
	CreateDynamicObject(19450, 1446.58630, -1711.36450, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1701.75024, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1692.12854, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1682.50598, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1672.92273, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1663.28760, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1653.67578, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1644.07239, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58630, -1624.91846, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.58972, -1634.50305, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1446.60632, -1622.93115, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1512.39441, -1711.31299, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19435, 1511.75098, -1716.15601, 11.75660, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19450, 1512.39441, -1701.69250, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1692.13269, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1682.53162, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1672.94080, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1663.69824, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1654.10229, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1644.46838, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1634.88770, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.39441, -1625.28271, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1512.41907, -1622.90210, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1507.72498, -1618.20215, 12.44190, 0.00000, 270.00000, 270.00000);
	CreateDynamicObject(19450, 1451.38257, -1618.21594, 12.44190, 0.00000, 270.00000, 270.00000);
	CreateDynamicObject(19450, 1457.67932, -1613.97278, 12.44190, 0.00000, 270.00000, 0.00000);
	CreateDynamicObject(19450, 1501.45007, -1613.87769, 12.44190, 0.00000, 270.00000, 180.00000);
	CreateDynamicObject(19450, 1460.87463, -1610.67480, 12.44190, 0.00000, 270.00000, 270.00000);
	CreateDynamicObject(19450, 1463.51831, -1610.67883, 12.44190, 0.00000, 270.00000, 270.00000);
	CreateDynamicObject(19450, 1498.20447, -1610.59827, 12.44190, 0.00000, 270.00000, 270.00000);
	CreateDynamicObject(19450, 1496.20923, -1610.60999, 12.44190, 0.00000, 270.00000, 270.00000);
	CreateDynamicObject(19445, 1477.25854, -1717.68872, 10.68335, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1473.62073, -1717.68872, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1470.05212, -1717.68872, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1466.16370, -1717.68872, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1462.28748, -1717.68872, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1458.17480, -1717.68872, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1472.54517, -1717.77502, 10.70330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1462.92468, -1717.78345, 10.70330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1444.74011, -1710.22729, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1444.74011, -1700.59949, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1444.74011, -1690.97375, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1444.74670, -1681.88721, 10.68330, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19445, 1443.91309, -1714.94946, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1711.03003, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1707.08728, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1702.96423, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.76367, -1698.76575, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1694.52478, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1690.24316, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1686.03369, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1681.64929, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19445, 1443.91309, -1677.16418, 10.66330, 0.00000, 0.00000, 90.00000);
	CreateObject(19377, 1439.67529, -1717.75500, 12.29580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19362, 1436.85059, -1722.66699, 12.31460, 0.00000, 90.00000, -45.59996);
	CreateDynamicObject(19362, 1439.02258, -1724.89551, 12.30460, 0.00000, 90.00000, -45.60000);
	CreateObject(19377, 1444.31958, -1722.48987, 12.34580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1519.31799, -1717.69470, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateObject(19377, 1514.66406, -1722.46851, 12.30580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19362, 1522.19397, -1722.62964, 12.31460, 0.00000, 90.00000, 45.17999);
	CreateDynamicObject(19362, 1519.94702, -1724.89258, 12.29460, 0.00000, 90.00000, 45.18000);
	CreateObject(19377, 1516.19617, -1601.99988, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19362, 1520.82825, -1599.46289, 12.31460, 0.00000, 90.00000, 32.39949);
	CreateDynamicObject(19362, 1522.27283, -1601.77734, 12.29460, 0.00000, 90.00000, 32.33995);
	CreateDynamicObject(19362, 1522.77515, -1601.44897, 12.27460, 0.00000, 90.00000, 32.33990);
	CreateDynamicObject(19362, 1521.52698, -1598.46338, 12.27460, 0.00000, 90.00000, 32.33990);
	CreateObject(19377, 1444.20691, -1602.04956, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19362, 1436.83508, -1601.98303, 12.29460, 0.00000, 90.00000, 47.22002);
	CreateDynamicObject(19362, 1438.99658, -1599.60559, 12.31460, 0.00000, 90.00000, 48.12000);
	CreateDynamicObject(19362, 1436.00574, -1601.11731, 12.27460, 0.00000, 90.00000, 47.22000);
	CreateDynamicObject(19362, 1438.10999, -1598.29688, 12.27460, 0.00000, 90.00000, 47.22000);
	CreateDynamicObject(673, 1466.30945, -1661.40344, 13.48555, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(706, 1460.56128, -1628.76392, 13.49221, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1477.05322, -1714.39734, 24.36810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1483.38660, -1715.02063, 24.36810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1511.51440, -1673.98560, 24.36810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1511.35828, -1666.92261, 24.36810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1446.68799, -1666.99902, 24.36810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(736, 1446.81531, -1673.93933, 24.36810, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1364, 1476.00500, -1682.76477, 14.23470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1364, 1476.11670, -1675.87720, 14.23470, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1364, 1483.93262, -1675.61829, 14.23470, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1364, 1483.97510, -1682.71936, 14.23470, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(870, 1476.60205, -1686.87195, 13.66360, 0.00000, 0.00000, -59.00000);
	CreateDynamicObject(870, 1474.57666, -1686.72107, 13.66360, 0.00000, 0.00000, -76.00000);
	CreateDynamicObject(870, 1472.91052, -1686.48730, 13.66360, 0.00000, 0.00000, 30.00000);
	CreateDynamicObject(870, 1486.62341, -1686.70288, 13.66360, 0.00000, 0.00000, 30.00000);
	CreateDynamicObject(870, 1484.88757, -1686.77258, 13.66360, 0.00000, 0.00000, -62.00000);
	CreateDynamicObject(870, 1483.22205, -1686.91479, 13.66360, 0.00000, 0.00000, -69.00000);
	CreateDynamicObject(1361, 1484.04590, -1672.76990, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1476.03809, -1672.94580, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1498.65808, -1667.82422, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1498.67346, -1672.63464, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1498.73596, -1703.04700, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1482.52466, -1703.18542, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1477.55872, -1703.08801, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1460.14197, -1703.26514, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1460.10608, -1672.65295, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1361, 1460.16394, -1667.85388, 14.22200, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1364, 1465.37341, -1703.35620, 14.23470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1364, 1493.77466, -1703.46729, 14.23470, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(672, 1506.89294, -1712.11035, 13.49253, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1496.69727, -1668.28540, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1493.29309, -1668.29028, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1493.20459, -1672.13428, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1496.85107, -1672.15833, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1495.53943, -1668.28418, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1495.67041, -1672.19885, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1492.13623, -1668.30249, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1492.00342, -1672.14294, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1494.51550, -1668.27783, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1490.96765, -1668.28784, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1490.93372, -1672.15759, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1494.40942, -1672.17822, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18749, 1479.88733, -1667.54004, 18.70710, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1468.67578, -1694.08594, 16.40220, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1489.92078, -1694.52002, 16.40220, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1521.88977, -1718.16101, 12.50600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1522.48486, -1694.68420, 12.50600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1521.67981, -1660.81091, 12.50600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1521.23071, -1631.88818, 12.50600, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1521.78491, -1609.14734, 12.50600, 0.00000, 0.00000, 0.00000);
	CreateObject(19377, 1487.89990, -1722.49072, 12.32580, 0.00000, 90.00000, 0.00000);
	CreateDynamicObject(3472, 1477.20020, -1722.39941, 12.40840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1436.96179, -1665.84668, 12.40840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1437.25574, -1624.01123, 12.40840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1452.45398, -1600.73499, 12.40840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3472, 1509.07251, -1601.12561, 12.40840, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11722, 1520.84631, -1710.26404, 13.30850, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11723, 1520.88464, -1710.45129, 13.30900, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1546.55652, -1664.17639, 12.13970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1546.45898, -1686.77051, 12.13970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(813, 1546.70020, -1658.13257, 14.70680, 0.00000, 0.00000, 116.00000);
	CreateDynamicObject(813, 1546.11194, -1692.10413, 14.70680, 0.00000, 0.00000, 136.00000);
	CreateDynamicObject(18014, 1553.15515, -1672.40918, 16.09030, 0.00000, 0.00000, 91.00000);
	CreateDynamicObject(18014, 1553.18140, -1678.74683, 16.09030, 0.00000, 0.00000, 91.00000);
	CreateDynamicObject(767, 1506.23889, -1649.78210, 13.43520, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(768, 1455.51160, -1711.47302, 13.43950, 0.00000, 0.00000, -40.00000);
	CreateDynamicObject(640, 1546.77832, -1667.41528, 13.20100, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(640, 1546.69580, -1683.78174, 13.20100, 0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19122, 1543.88562, -1666.77991, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1543.83728, -1655.78760, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1549.46570, -1655.75208, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1549.45471, -1666.77844, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1543.76538, -1684.39160, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1549.62695, -1684.40137, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1549.65564, -1695.55066, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19122, 1543.79858, -1695.55310, 13.44800, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1504.98389, -1666.34668, 12.71970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1504.95703, -1674.08093, 12.71970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1483.86926, -1709.52429, 12.71970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1476.18738, -1709.53760, 12.71970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1453.95337, -1674.11230, 12.71970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1453.93970, -1666.35120, 12.71970, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1461.56885, -1668.35437, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1461.68286, -1672.09998, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1462.69336, -1668.37219, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1462.78943, -1672.09277, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1464.00049, -1668.35938, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1464.04749, -1672.13489, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1465.31042, -1668.35132, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19121, 1465.27197, -1672.11536, 14.05370, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1466.53162, -1668.36572, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19123, 1466.44238, -1672.10962, 14.04510, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1467.73621, -1668.33899, 14.04460, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19124, 1467.64844, -1672.08936, 14.04460, 0.00000, 0.00000, 0.00000);
	//park - location - close
	//bank ls interior - open
	tmpobjid = CreateDynamicObject(19454, 1407.466186, -1684.897705, 51.941089, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "LASLACMA96", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1407.466186, -1675.368774, 51.941089, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "LASLACMA96", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.735473, -1670.507568, 51.941089, 0.000000, 0.000000, -91.300003, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "LASLACMA96", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.735473, -1670.507568, 55.411106, 0.000000, 0.000000, -91.300003, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "LASLACMA96", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1407.466186, -1675.368774, 55.381080, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "LASLACMA96", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1407.466186, -1684.898559, 55.381080, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "LASLACMA96", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1396.491455, -1670.390625, 51.940807, 0.000000, 0.000000, 89.900077, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.619995, -1672.132934, 50.213130, -0.000007, 90.100059, -89.999984, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "fakestone1_LA", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.620727, -1675.601806, 50.207099, -0.000007, 90.100059, -89.999984, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "fakestone1_LA", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.619750, -1679.072631, 50.201015, -0.000007, 90.100059, -89.999984, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "fakestone1_LA", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.619873, -1682.522705, 50.225006, -0.000007, 90.100059, -89.999984, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "fakestone1_LA", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.619384, -1685.953125, 50.188991, -0.000007, 90.100059, -89.999984, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "fakestone1_LA", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.619506, -1687.883178, 50.225612, -0.000007, 90.100059, -89.999984, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "fakestone1_LA", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1396.491455, -1670.390625, 55.420814, 0.000000, 0.000000, 89.900077, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1393.349609, -1670.390625, 51.940807, 0.000007, 0.000000, 89.900054, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1393.349609, -1670.390625, 55.420814, 0.000007, 0.000000, 89.900054, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.735473, -1689.450805, 51.941089, -0.000007, -0.000000, -91.299980, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "LASLACMA96", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.735473, -1689.450805, 55.411106, -0.000007, -0.000000, -91.299980, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "LASLACMA96", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1396.491455, -1689.333862, 51.940807, 0.000007, 0.000000, 89.900054, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1396.491455, -1689.333862, 55.420814, 0.000007, 0.000000, 89.900054, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1393.349609, -1689.333862, 51.940807, 0.000015, 0.000000, 89.900032, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1393.349609, -1689.333862, 55.420814, 0.000015, 0.000000, 89.900032, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1393.039550, -1679.072631, 50.201015, -0.000007, 90.100059, -89.999984, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "ab_tileStar", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1393.060058, -1672.132934, 50.213130, -0.000015, 90.100059, -89.999961, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "fakestone1_LA", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1393.060791, -1675.601806, 50.207099, -0.000015, 90.100059, -89.999961, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "fakestone1_LA", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1393.059448, -1685.953125, 50.218986, -0.000015, 90.100059, -89.999961, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "fakestone1_LA", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1393.059570, -1687.883178, 50.225612, -0.000015, 90.100059, -89.999961, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7088, "casinoshops1", "fakestone1_LA", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1393.039550, -1682.523681, 50.194969, -0.000007, 90.100059, -89.999984, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "ab_tileStar", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1386.615112, -1675.186035, 50.206501, -0.000007, 90.100059, 179.900131, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19800, "lsacarpark1", "dt_officewall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1386.598632, -1684.786254, 50.206501, -0.000007, 90.100059, 179.900131, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19800, "lsacarpark1", "dt_officewall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1383.224975, -1675.186035, 50.206501, -0.000007, 90.100051, 179.900085, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19800, "lsacarpark1", "dt_officewall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1383.208496, -1684.786254, 50.206501, -0.000007, 90.100051, 179.900085, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19800, "lsacarpark1", "dt_officewall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1390.192382, -1670.390625, 51.940807, 0.000007, 0.000000, 89.900054, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1390.192382, -1670.390625, 55.420814, 0.000007, 0.000000, 89.900054, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1387.050537, -1670.390625, 51.940807, 0.000015, 0.000000, 89.900032, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1387.050537, -1670.390625, 55.420814, 0.000015, 0.000000, 89.900032, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1383.921508, -1670.390625, 51.940807, 0.000015, 0.000000, 89.900032, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1383.921508, -1670.390625, 55.420814, 0.000015, 0.000000, 89.900032, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1380.779663, -1670.390625, 51.940807, 0.000022, 0.000000, 89.900009, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1380.779663, -1670.390625, 55.420814, 0.000022, 0.000000, 89.900009, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1380.903808, -1675.186035, 50.206501, -0.000007, 90.100044, 179.900039, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19800, "lsacarpark1", "dt_officewall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1380.887329, -1684.786254, 50.206501, -0.000007, 90.100044, 179.900039, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19800, "lsacarpark1", "dt_officewall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1390.161499, -1689.333862, 51.940807, 0.000015, 0.000000, 89.900032, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1390.161499, -1689.333862, 55.420814, 0.000015, 0.000000, 89.900032, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1387.019653, -1689.333862, 51.940807, 0.000022, 0.000000, 89.900009, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1387.019653, -1689.333862, 55.420814, 0.000022, 0.000000, 89.900009, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1383.860717, -1689.333862, 51.940807, 0.000022, 0.000000, 89.900009, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1383.860717, -1689.333862, 55.420814, 0.000022, 0.000000, 89.900009, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1380.718872, -1689.333862, 51.940807, 0.000030, 0.000000, 89.899986, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1380.718872, -1689.333862, 55.420814, 0.000030, 0.000000, 89.899986, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4833, "airprtrunway_las", "policeha02black_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1379.402832, -1684.617431, 51.941089, 0.000000, 0.000022, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "LASLACMA96", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1379.402832, -1675.088500, 51.941089, 0.000000, 0.000022, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "LASLACMA96", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1379.402832, -1675.088500, 55.381080, 0.000000, 0.000022, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "LASLACMA96", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1379.402832, -1684.618286, 55.381080, 0.000000, 0.000022, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4830, "airport2", "LASLACMA96", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1384.814086, -1676.699829, 49.466705, 0.000000, 0.000015, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7488, "vegasdwntwn1", "vgnstonewall1_256", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1383.298095, -1675.081054, 49.466705, -0.000015, 0.000000, -89.099990, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7488, "vegasdwntwn1", "vgnstonewall1_256", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1384.814086, -1679.839721, 49.466705, 0.000000, 0.000015, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7488, "vegasdwntwn1", "vgnstonewall1_256", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1384.814086, -1683.019653, 49.466705, 0.000000, 0.000015, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7488, "vegasdwntwn1", "vgnstonewall1_256", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1380.077392, -1675.132812, 49.466705, -0.000015, 0.000000, -89.099990, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7488, "vegasdwntwn1", "vgnstonewall1_256", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1383.258789, -1684.726318, 49.466705, -0.000015, 0.000000, -89.099990, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7488, "vegasdwntwn1", "vgnstonewall1_256", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1380.218750, -1684.773681, 49.466705, -0.000015, 0.000000, -89.099990, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7488, "vegasdwntwn1", "vgnstonewall1_256", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1384.663940, -1676.699829, 49.466705, 0.000000, 0.000030, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1384.663940, -1679.839721, 49.466705, 0.000000, 0.000030, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1384.663940, -1683.019653, 49.466705, 0.000000, 0.000030, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1384.543823, -1676.699829, 49.466705, 0.000000, 0.000045, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7488, "vegasdwntwn1", "vgnstonewall1_256", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1384.543823, -1679.839721, 49.466705, 0.000000, 0.000045, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7488, "vegasdwntwn1", "vgnstonewall1_256", 0x00000000);
	tmpobjid = CreateDynamicObject(19355, 1384.543823, -1683.019653, 49.466705, 0.000000, 0.000045, 0.000000, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 7488, "vegasdwntwn1", "vgnstonewall1_256", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.619873, -1682.532714, 57.044960, 0.199992, 90.100059, -89.999984, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1393.040405, -1682.532714, 57.011516, 0.199992, 90.100059, -89.999984, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1383.470703, -1682.532714, 56.978076, 0.199992, 90.100059, -89.999984, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.619873, -1686.003662, 57.044960, 0.199984, 90.100059, -89.999961, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1393.040405, -1686.003662, 57.011516, 0.199984, 90.100059, -89.999961, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1383.470703, -1686.003662, 56.978076, 0.199984, 90.100059, -89.999961, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.619873, -1687.665039, 57.044960, 0.199977, 90.100059, -89.999938, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1393.040405, -1687.665039, 57.011516, 0.199977, 90.100059, -89.999938, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1383.470703, -1687.665039, 56.978076, 0.199977, 90.100059, -89.999938, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.619873, -1679.124145, 57.044960, 0.199969, 90.100059, -89.999916, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1393.040405, -1679.124145, 57.011516, 0.199969, 90.100059, -89.999916, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1383.470703, -1679.124145, 56.978076, 0.199969, 90.100059, -89.999916, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.619873, -1675.763061, 57.044960, 0.199961, 90.100059, -89.999893, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1393.040405, -1675.763061, 57.011516, 0.199961, 90.100059, -89.999893, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1383.470703, -1675.763061, 56.978076, 0.199961, 90.100059, -89.999893, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1402.619873, -1672.371337, 57.044960, 0.199954, 90.100059, -89.999870, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1393.040405, -1672.371337, 57.011516, 0.199954, 90.100059, -89.999870, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	tmpobjid = CreateDynamicObject(19454, 1383.470703, -1672.371337, 56.978076, 0.199954, 90.100059, -89.999870, 1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14668, "711c", "gun_ceiling1128", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(1557, 1407.363403, -1678.907958, 50.322174, 0.000000, 0.000000, -89.799995, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1557, 1407.362426, -1681.907104, 50.322174, 0.000000, 0.000000, 89.799957, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1557, 1379.515869, -1686.069213, 50.322174, -0.000022, 0.000000, -89.799926, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1557, 1379.514892, -1689.068359, 50.322174, 0.000022, 0.000000, 89.799888, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1557, 1379.515869, -1670.557250, 50.322174, -0.000030, 0.000000, -89.799903, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1557, 1379.514892, -1673.556396, 50.322174, 0.000030, 0.000000, 89.799865, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1557, 1379.515869, -1678.958740, 50.322174, -0.000038, 0.000000, -89.799880, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1557, 1379.514892, -1681.957885, 50.322174, 0.000038, 0.000000, 89.799842, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19121, 1405.524047, -1682.062988, 50.635231, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19121, 1405.524047, -1678.691650, 50.635231, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2942, 1395.551757, -1671.276489, 50.839653, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2942, 1397.051757, -1671.276489, 50.839653, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1671, 1383.018676, -1680.553466, 50.711860, 0.000000, 0.000000, 69.399993, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1216, 1383.488647, -1675.919433, 51.002109, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1775, 1399.774536, -1688.710693, 51.257312, 0.000000, 0.000000, -179.200103, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1723, 1392.439086, -1671.052490, 50.207275, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1723, 1389.149169, -1671.052490, 50.207275, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1886, 1385.090454, -1672.449340, 57.060523, 0.000000, 0.000000, 57.999996, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1661, 1394.197509, -1681.215087, 56.897689, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1661, 1394.197509, -1678.184570, 56.897689, 0.000000, 0.000000, 0.000000, 1, -1, -1, 300.00, 300.00);
	//bank ls interior - close
	//bike shop interior - open
	tmpobjid = CreateDynamicObject(19447, 692.773437, -515.063415, -4.949180, 0.000000, 0.000014, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 711.694030, -515.333618, -4.949180, 0.000000, 0.000014, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 706.969909, -520.018615, -4.949180, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 707.119567, -510.529663, -4.949180, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.520446, -510.379180, -4.949180, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.371032, -519.858215, -4.949180, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.497741, -511.784790, -6.679432, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "ws_bigstones", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 707.056762, -511.934783, -6.679432, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "ws_bigstones", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.371032, -519.858215, -1.559180, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 707.119567, -510.529663, -1.549180, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.520446, -510.379180, -1.549178, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 692.773437, -515.063415, -1.559180, 0.000000, 0.000014, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 706.969909, -520.018615, -1.569182, -0.000014, 0.000000, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 711.694030, -515.333618, -1.569180, 0.000000, 0.000014, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "mp_burn_ceiling", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 707.002685, -515.403747, -6.721834, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "ws_bigstones", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 706.948852, -518.852722, -6.763989, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "ws_bigstones", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.340454, -518.702026, -6.763989, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "ws_bigstones", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.394104, -515.272766, -6.722081, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "ws_bigstones", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.340332, -518.758666, -2.124330, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "easykerb", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.394165, -515.319458, -2.082298, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "easykerb", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 697.449462, -511.849456, -2.039906, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "easykerb", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 707.018005, -511.999389, -2.039906, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "easykerb", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 706.964050, -515.458557, -2.082180, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "easykerb", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 706.909790, -518.918029, -2.124455, -0.000014, 90.700096, -90.899940, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4835, "airoads_las", "easykerb", 0x00000000);
	tmpobjid = CreateDynamicObject(19359, 711.689331, -514.613830, -3.987645, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 6282, "beafron2_law2", "heat_03", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(2395, 702.363159, -519.783569, -5.039431, 0.000000, 0.000000, 178.299865, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2630, 702.211791, -519.280578, -6.708858, 0.000000, 0.000000, 88.400009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2630, 700.322448, -519.227905, -6.708858, 0.000000, 0.000000, 88.400009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1556, 701.809265, -510.538787, -6.646059, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1556, 700.309082, -510.538787, -6.646059, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1722, 706.248840, -514.657775, -6.616866, 0.000000, 0.000000, 93.900009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3034, 692.883239, -515.039855, -3.438714, 0.000000, 0.000000, 89.899978, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2184, 704.206481, -514.210205, -6.660360, 0.000000, 0.000000, -70.299972, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2531, 697.485778, -511.085662, -6.691649, 0.000000, 0.000000, -2.099998, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2531, 695.946899, -511.029266, -6.691649, 0.000000, 0.000000, -2.099998, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2012, 693.481445, -517.863891, -6.683752, 0.000000, 0.000000, 90.699989, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1661, 698.582275, -514.533386, -2.425457, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1518, 700.581359, -510.475799, -2.751517, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1518, 703.291198, -510.475799, -2.751517, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2229, 711.671325, -510.736999, -6.638994, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1514, 704.735961, -515.102355, -5.674490, 0.000000, 0.000000, -45.599998, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2493, 698.876403, -519.705139, -4.580351, 0.000000, 0.000000, -178.899978, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2012, 693.442993, -514.714172, -6.683752, 0.000000, 0.000000, 90.699989, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1884, 695.675659, -519.668457, -6.806284, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19173, 701.064392, -519.831359, -5.520337, 0.000000, 0.000000, -1.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2630, 702.225769, -518.780578, -6.708858, 0.000000, 0.000000, 88.400009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2630, 700.338439, -518.667663, -6.708858, 0.000000, 0.000000, 88.400009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2630, 700.356323, -518.047363, -6.708858, 0.000000, 0.000000, 88.400009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2630, 702.243957, -518.120788, -6.708858, 0.000000, 0.000000, 88.400009, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1886, 711.055358, -510.853118, -2.034826, 0.000000, 0.000000, -49.099987, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1886, 711.463867, -519.587768, -2.034826, 0.000000, 0.000000, -111.499977, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2855, 704.928771, -515.997131, -5.913246, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2480, 710.075378, -513.577148, -6.077589, 0.000000, 0.000000, -95.499969, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2480, 709.941345, -514.970764, -6.077589, 0.000000, 0.000000, -95.499969, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2267, 708.793029, -510.663299, -3.822557, 0.000000, 0.000000, -0.799999, -1, 1, -1, 300.00, 300.00);
	//bike shop interior - close
	//house in the ocean - open
	tmpobjid = CreateDynamicObject(19448, 1426.593872, -291.480712, 3.208006, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1423.212646, -292.199493, 3.057084, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1419.840820, -292.916076, 2.906597, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1416.479492, -293.630523, 2.756546, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1413.109130, -294.346832, 2.606053, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1409.747558, -295.061370, 2.456003, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1406.396362, -295.773742, 2.306386, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1403.044555, -296.486236, 2.156774, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1399.663696, -297.204956, 2.005849, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1396.303222, -297.919403, 1.855797, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1392.922973, -298.637878, 1.704874, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1424.619018, -282.178100, 3.208006, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1422.634033, -272.836425, 3.208006, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1421.247436, -282.894805, 3.057520, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1417.876586, -283.611297, 2.907033, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1414.514648, -284.325866, 2.756983, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1411.182495, -285.034179, 2.608241, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1407.772094, -285.759155, 2.456009, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1404.390502, -286.477844, 2.305087, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1401.068359, -287.184082, 2.156780, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1397.765991, -287.886047, 2.009346, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1394.366455, -288.608703, 1.857550, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1390.946044, -289.335693, 1.704881, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1419.253784, -273.554992, 3.057080, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1415.863037, -274.275695, 2.905720, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1412.501464, -274.990173, 2.755669, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1409.120849, -275.708740, 2.604745, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1405.816528, -276.411041, 2.457313, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1402.415283, -277.133972, 2.305518, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1399.034912, -277.852569, 2.154595, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1395.625488, -278.577239, 2.002360, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1392.235351, -279.297851, 1.851000, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19448, 1388.952026, -279.995788, 1.704438, 0.000000, -92.500007, 12.000003, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18368, 1407.666015, -271.928558, -1.879041, -2.399999, 0.000000, 90.899894, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3598, 1410.038696, -283.678771, 4.634941, 0.000000, 0.000000, 14.800004, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(17950, 1394.035644, -288.770446, 4.331573, 0.000000, 0.000000, -163.899948, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1389.290893, -283.244018, 1.916652, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3472, 1389.290893, -274.044158, 1.916652, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(17068, 1383.182128, -280.976928, 0.345578, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	//house in the ocean - close
	//taxi - interior - open
	tmpobjid = CreateDynamicObject(19358, 1834.780029, 653.625915, 29.676860, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.780029, 653.625915, 33.126865, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.780029, 656.806152, 29.676860, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.780029, 656.806152, 33.126865, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.780029, 659.945800, 29.676860, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.780029, 659.945800, 33.126865, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.256469, 661.477111, 29.676860, 0.000015, 0.000022, 89.699974, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.256469, 661.477111, 33.126865, 0.000015, 0.000022, 89.699974, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 663.115356, 29.676860, 0.000000, 0.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 663.115356, 33.126865, 0.000000, 0.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 666.275939, 29.676860, 0.000000, 0.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 666.275939, 33.126865, 0.000000, 0.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 669.416015, 29.676860, 0.000000, 0.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 669.416015, 33.126865, 0.000000, 0.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 672.566345, 29.676860, 0.000000, 0.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.738403, 672.566345, 33.126865, 0.000000, 0.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.256469, 674.157958, 29.676860, 0.000022, 0.000022, 89.699951, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.256469, 674.157958, 33.126865, 0.000022, 0.000022, 89.699951, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.317749, 674.157958, 29.676860, 0.000045, 0.000022, 89.699882, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.317749, 674.157958, 33.126865, 0.000045, 0.000022, 89.699882, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.447021, 674.157958, 29.676860, 0.000030, 0.000022, 89.699928, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.447021, 674.157958, 33.126865, 0.000030, 0.000022, 89.699928, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.508300, 674.157958, 29.676860, 0.000053, 0.000022, 89.699859, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.508300, 674.157958, 33.126865, 0.000053, 0.000022, 89.699859, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1845.678710, 674.157958, 29.676860, 0.000061, 0.000022, 89.699836, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1845.678710, 674.157958, 33.126865, 0.000061, 0.000022, 89.699836, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 672.527038, 29.676860, 0.000000, 0.000068, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 672.527038, 33.126865, 0.000000, 0.000068, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 669.376770, 29.676860, 0.000000, 0.000076, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 669.376770, 33.126865, 0.000000, 0.000076, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 666.236206, 29.676860, 0.000000, 0.000083, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 666.236206, 33.126865, 0.000000, 0.000083, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 663.086059, 29.676860, 0.000000, 0.000091, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.158203, 663.086059, 33.126865, 0.000000, 0.000091, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1845.641113, 661.537963, 29.676860, 0.000068, 0.000022, 89.699813, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1845.641113, 661.537963, 33.126865, 0.000068, 0.000022, 89.699813, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.123168, 659.925476, 29.676860, 0.000000, 0.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.123168, 659.925476, 33.126865, 0.000000, 0.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.123168, 656.774597, 29.676860, 0.000000, 0.000068, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.123168, 656.774597, 33.126865, 0.000000, 0.000068, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.123168, 653.623840, 29.676860, 0.000000, 0.000076, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.123168, 653.623840, 33.126865, 0.000000, 0.000076, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.304443, 652.466064, 29.676860, 0.000045, 0.000022, 89.699882, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.304443, 652.466064, 33.126865, 0.000045, 0.000022, 89.699882, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.435424, 652.456054, 29.676860, 0.000053, 0.000022, 89.699859, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.435424, 652.456054, 33.126865, 0.000053, 0.000022, 89.699859, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.617309, 652.456054, 29.676860, 0.000061, 0.000022, 89.699836, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.617309, 652.456054, 33.126865, 0.000061, 0.000022, 89.699836, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 655.409301, 28.139579, 0.000000, -91.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 655.409301, 28.052810, 0.000000, -91.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 655.409301, 28.221542, 0.000000, -91.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 655.409301, 27.966434, 0.000000, -91.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 655.409301, 28.306056, 0.000000, -91.000061, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 661.250000, 28.139579, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 661.250000, 28.052810, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 661.250000, 28.221542, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 661.250000, 27.966434, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 661.250000, 28.306056, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 667.001403, 28.139579, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 667.001403, 28.052810, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 667.001403, 28.221542, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 667.001403, 27.966434, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 667.001403, 28.306056, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 672.773559, 28.139579, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 672.773559, 28.052810, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 672.773559, 28.221542, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 672.773559, 27.966434, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 672.773559, 28.306056, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 655.409301, 33.809604, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 655.409301, 33.722835, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 655.409301, 33.891567, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 655.409301, 33.636459, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 655.409301, 33.976081, 0.000000, -91.000053, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 661.250000, 33.809604, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 661.250000, 33.722835, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 661.250000, 33.891567, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 661.250000, 33.636459, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 661.250000, 33.976081, 0.000000, -91.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 667.001403, 33.809604, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 667.001403, 33.722835, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 667.001403, 33.891567, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 667.001403, 33.636459, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 667.001403, 33.976081, 0.000000, -91.000038, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1840.239379, 672.773559, 33.809604, 0.000000, -91.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1835.270751, 672.773559, 33.722835, 0.000000, -91.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1844.939208, 672.773559, 33.891567, 0.000000, -91.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1830.322021, 672.773559, 33.636459, 0.000000, -91.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(19464, 1849.779174, 672.773559, 33.976081, 0.000000, -91.000030, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
	tmpobjid = CreateDynamicObject(1505, 1837.769042, 652.520141, 28.137165, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "vgncorpdoor1_512", 0x00000000);
	tmpobjid = CreateDynamicObject(1505, 1839.248901, 652.520141, 28.137165, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 8391, "ballys01", "vgncorpdoor1_512", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.810058, 654.086242, 27.176864, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.810058, 657.256164, 27.176864, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.810058, 659.956420, 27.176864, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.089843, 659.956420, 27.176864, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.089843, 656.806396, 27.176864, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.089843, 653.636169, 27.176864, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.447143, 652.477539, 27.176864, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.136230, 652.477539, 27.176864, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.136230, 652.477539, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.256347, 652.477539, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.416625, 652.477539, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.089843, 653.636169, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.089843, 656.775939, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1844.089843, 659.935913, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.839355, 659.935913, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.839355, 656.765930, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1834.839355, 653.676269, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.083984, 665.705688, 31.026876, 0.000000, 0.000076, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9515, "bigboxtemp1", "ws_airportwin1", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 663.125854, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 666.185729, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 669.345825, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 672.486083, 34.786846, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 663.135742, 27.266820, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 666.236267, 27.266820, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 669.376464, 27.266820, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1847.111083, 672.546813, 27.266820, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 663.125854, 34.786846, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 666.185729, 34.786846, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 669.345825, 34.786846, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 672.486083, 34.786846, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 663.135742, 27.266820, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 666.236267, 27.266820, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 669.376464, 27.266820, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1831.779418, 672.546813, 27.266820, 0.000000, 0.000015, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1845.603515, 661.564880, 34.786846, 0.000000, 0.000007, -90.399932, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1845.603515, 661.564880, 27.266826, 0.000000, 0.000007, -90.399932, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.283813, 661.651000, 27.266826, 0.000000, 0.000007, -90.399932, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.283813, 661.651000, 34.786823, 0.000000, 0.000007, -90.399932, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.455444, 674.107910, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.605102, 674.107910, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.784790, 674.107910, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.953979, 674.107910, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1846.074707, 674.107910, 34.786865, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1846.074707, 674.107910, 27.256845, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1842.944458, 674.107910, 27.256845, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.804687, 674.107910, 27.256845, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1836.654663, 674.107910, 27.256845, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1833.465698, 674.107910, 27.256845, 0.000000, 0.000007, -89.999938, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateDynamicObject(19358, 1839.211181, 654.333679, 28.164615, 0.899999, 90.000053, -88.299980, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00874833, 0x00874833, 0);
	tmpobjid = CreateDynamicObject(19358, 1839.109375, 657.762207, 28.164615, 0.899999, 90.000053, -88.299980, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00874833, 0x00874833, 0);
	tmpobjid = CreateDynamicObject(19358, 1839.008422, 661.160888, 28.164615, 0.899999, 90.000053, -88.299980, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00874833, 0x00874833, 0);
	tmpobjid = CreateDynamicObject(19358, 1838.908081, 664.529052, 28.164615, 0.899999, 90.000053, -88.299980, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "whiteforletters", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00874833, 0x00874833, 0);
	tmpobjid = CreateDynamicObject(19815, 1838.646606, 674.071594, 31.837339, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "Taxi Services   ", 30, "Ariel", 10, 1, 0xFFFFFFFF, 0x007A4C3C, 1);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(945, 1841.938354, 662.761535, 40.798152, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(945, 1841.938354, 662.761535, 40.798152, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(945, 1836.977294, 662.761535, 40.798152, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1840.822875, 654.841674, 28.790645, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1837.582885, 654.841674, 28.790645, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2766, 1834.872192, 660.745483, 30.909553, 0.000000, 0.000000, 90.599990, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11706, 1836.801757, 654.306030, 28.180242, 0.000000, 0.000000, 158.299942, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1363, 1835.943725, 664.061401, 29.034250, 0.000000, 0.000000, -59.699993, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2184, 1837.705444, 667.687255, 28.261720, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2185, 1840.494873, 668.587707, 28.260465, 0.000000, 0.000000, 95.699989, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1500, 1837.925659, 674.020263, 28.085727, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1723, 1832.503540, 662.431884, 28.101026, 0.000000, 0.000000, 92.099960, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2942, 1832.781005, 666.766235, 28.788764, 0.000000, 0.000000, 93.000007, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2494, 1846.451171, 673.933471, 30.331533, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2494, 1845.661376, 673.933471, 30.331533, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19169, 1842.084472, 674.030944, 31.039834, 88.899986, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19169, 1835.033935, 674.030944, 31.039834, 88.899986, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2185, 1844.505493, 663.260437, 28.260465, 0.000000, 0.000000, 95.699989, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1840.822875, 661.132080, 28.790645, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	//taxi- interior - close
	//telenor interior - open
	tmpobjid = CreateDynamicObject(19447, 1833.844238, -1845.820312, 35.538017, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1833.844238, -1836.378173, 35.538017, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1838.557861, -1850.592285, 35.538017, -0.000007, 0.000000, -89.300010, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1848.016235, -1850.476806, 35.538017, -0.000007, 0.000000, -89.300010, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1838.594604, -1834.739379, 35.538017, -0.000007, 0.000000, -89.300010, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1848.113891, -1834.623168, 35.538017, -0.000007, 0.000000, -89.300010, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1852.505126, -1845.820312, 35.538017, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1852.505126, -1836.328979, 35.538017, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1833.844238, -1845.820312, 38.828071, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1833.844238, -1836.378173, 38.828071, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1838.557861, -1850.592285, 38.828071, -0.000022, 0.000000, -89.299964, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1848.016235, -1850.476806, 38.828071, -0.000022, 0.000000, -89.299964, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1838.594604, -1834.739379, 38.828071, -0.000022, 0.000000, -89.299964, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1848.113891, -1834.623168, 38.828071, -0.000022, 0.000000, -89.299964, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1852.505126, -1845.820312, 38.828071, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1852.505126, -1836.328979, 38.828071, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1833.879272, -1849.124755, 37.540275, 0.000000, -0.999932, 0.100000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "goldDecal", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1833.859008, -1836.222900, 37.540275, 0.000000, -0.999932, 0.100000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "goldDecal", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1835.695922, -1849.112670, 39.692199, 0.000000, -89.999916, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1835.675537, -1845.983276, 39.692199, 0.000000, -89.999916, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1835.653564, -1842.853149, 39.692199, 0.000000, -89.999916, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1835.632080, -1839.712768, 39.692199, 0.000000, -89.999916, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1835.609985, -1836.572509, 39.692199, 0.000000, -89.999916, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1835.587036, -1833.451171, 39.692199, 0.000000, -89.999916, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1835.717041, -1852.200317, 39.692199, 0.000000, -89.999916, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1839.078491, -1849.112670, 39.692199, 0.000000, -89.999900, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1839.058105, -1845.983276, 39.692199, 0.000000, -89.999900, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1839.036132, -1842.853149, 39.692199, 0.000000, -89.999900, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1839.014648, -1839.712768, 39.692199, 0.000000, -89.999900, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1838.992553, -1836.572509, 39.692199, 0.000000, -89.999900, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1838.969604, -1833.451171, 39.692199, 0.000000, -89.999900, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1839.099609, -1852.200317, 39.692199, 0.000000, -89.999900, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1842.450317, -1849.112670, 39.692199, 0.000000, -89.999893, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1842.429931, -1845.983276, 39.692199, 0.000000, -89.999893, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1842.407958, -1842.853149, 39.692199, 0.000000, -89.999893, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1842.386474, -1839.712768, 39.692199, 0.000000, -89.999893, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1842.364379, -1836.572509, 39.692199, 0.000000, -89.999893, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1842.341430, -1833.451171, 39.692199, 0.000000, -89.999893, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1842.471435, -1852.200317, 39.692199, 0.000000, -89.999893, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1845.851440, -1849.112670, 39.692199, 0.000000, -89.999885, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1845.831054, -1845.983276, 39.692199, 0.000000, -89.999885, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1845.809082, -1842.853149, 39.692199, 0.000000, -89.999885, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1845.787597, -1839.712768, 39.692199, 0.000000, -89.999885, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1845.765502, -1836.572509, 39.692199, 0.000000, -89.999885, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1845.742553, -1833.451171, 39.692199, 0.000000, -89.999885, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1845.872558, -1852.200317, 39.692199, 0.000000, -89.999885, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1849.292724, -1849.112670, 39.692199, 0.000000, -89.999877, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1849.272338, -1845.983276, 39.692199, 0.000000, -89.999877, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1849.250366, -1842.853149, 39.692199, 0.000000, -89.999877, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1849.228881, -1839.712768, 39.692199, 0.000000, -89.999877, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1849.206787, -1836.572509, 39.692199, 0.000000, -89.999877, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1849.183837, -1833.451171, 39.692199, 0.000000, -89.999877, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1849.313842, -1852.200317, 39.692199, 0.000000, -89.999877, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1852.673339, -1849.112670, 39.692199, 0.000000, -89.999870, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1852.652954, -1845.983276, 39.692199, 0.000000, -89.999870, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1852.630981, -1842.853149, 39.692199, 0.000000, -89.999870, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1852.609497, -1839.712768, 39.692199, 0.000000, -89.999870, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1852.587402, -1836.572509, 39.692199, 0.000000, -89.999870, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1852.564453, -1833.451171, 39.692199, 0.000000, -89.999870, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1852.694458, -1852.200317, 39.692199, 0.000000, -89.999870, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18800, "mroadhelix1", "concretemanky1", 0x00000000);
	tmpobjid = CreateDynamicObject(19447, 1833.894165, -1845.830444, 39.768039, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0xFF69F0FF, 0xFF69F0FF, 0);
	tmpobjid = CreateDynamicObject(19447, 1833.894165, -1836.359863, 39.768039, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0xFF69F0FF, 0xFF69F0FF, 0);
	tmpobjid = CreateDynamicObject(19447, 1852.484863, -1836.359863, 39.768039, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0xFF69F0FF, 0xFF69F0FF, 0);
	tmpobjid = CreateDynamicObject(19447, 1852.484863, -1845.920776, 39.768039, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-10-percent", 0x00000000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0xFF69F0FF, 0xFF69F0FF, 0);
	tmpobjid = CreateDynamicObject(19370, 1850.463867, -1843.843017, 33.822227, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00000000, 0xFF423622, 0);
	tmpobjid = CreateDynamicObject(19370, 1847.014160, -1843.865966, 33.822227, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00000000, 0xFF423622, 0);
	tmpobjid = CreateDynamicObject(19370, 1843.572998, -1843.890747, 33.822227, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00000000, 0xFF423622, 0);
	tmpobjid = CreateDynamicObject(19370, 1843.550659, -1840.770385, 33.822227, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00000000, 0xFF423622, 0);
	tmpobjid = CreateDynamicObject(19370, 1843.529296, -1837.720947, 33.822227, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00000000, 0xFF423622, 0);
	tmpobjid = CreateDynamicObject(19370, 1843.507202, -1834.540527, 33.822227, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00000000, 0xFF423622, 0);
	tmpobjid = CreateDynamicObject(19370, 1833.950561, -1842.814331, 38.564888, 0.000000, -0.299913, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "telenor", 20, "Ariel", 13, 1, 0xFFFFFFFF, 0xFF50D6EB, 1);
	tmpobjid = CreateDynamicObject(19370, 1839.691528, -1842.774291, 38.594924, 0.000000, -0.299913, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "services", 20, "Ariel", 13, 1, 0xFFFFFFFF, 0xFF50D6EB, 1);
	tmpobjid = CreateDynamicObject(19370, 1840.222290, -1843.913696, 33.822227, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00000000, 0xFF423622, 0);
	tmpobjid = CreateDynamicObject(19370, 1840.200439, -1840.773803, 33.822227, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00000000, 0xFF423622, 0);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(19370, 1835.695922, -1849.112670, 33.802238, 0.000000, -89.999916, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1835.674682, -1845.922851, 33.802238, 0.000000, -89.999916, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1835.652343, -1842.742431, 33.802238, 0.000000, -89.999916, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1835.631103, -1839.532958, 33.802238, 0.000000, -89.999916, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1835.607299, -1836.382324, 33.802238, 0.000000, -89.999916, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1839.167480, -1849.112670, 33.802238, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1839.146240, -1845.922851, 33.802238, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1839.123901, -1842.742431, 33.802238, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1839.102661, -1839.532958, 33.802238, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1839.078857, -1836.382324, 33.802238, 0.000000, -89.999908, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1842.638427, -1849.112670, 33.802238, 0.000000, -89.999900, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1842.617187, -1845.922851, 33.802238, 0.000000, -89.999900, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1842.594848, -1842.742431, 33.802238, 0.000000, -89.999900, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1842.573608, -1839.532958, 33.802238, 0.000000, -89.999900, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1842.549804, -1836.382324, 33.802238, 0.000000, -89.999900, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1846.069213, -1848.982543, 33.802238, 0.000000, -89.999877, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1846.047973, -1845.792724, 33.802238, 0.000000, -89.999877, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1846.025634, -1842.612304, 33.802238, 0.000000, -89.999877, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1846.004394, -1839.402832, 33.802238, 0.000000, -89.999877, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1845.980590, -1836.252197, 33.802238, 0.000000, -89.999877, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1849.401000, -1848.982543, 33.802238, 0.000000, -89.999870, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1849.379760, -1845.792724, 33.802238, 0.000000, -89.999870, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1849.357421, -1842.612304, 33.802238, 0.000000, -89.999870, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1849.336181, -1839.402832, 33.802238, 0.000000, -89.999870, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1849.312377, -1836.252197, 33.802238, 0.000000, -89.999870, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1852.802368, -1848.982543, 33.802238, 0.000000, -89.999862, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1852.781127, -1845.792724, 33.802238, 0.000000, -89.999862, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1852.758789, -1842.612304, 33.802238, 0.000000, -89.999862, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1852.737548, -1839.402832, 33.802238, 0.000000, -89.999862, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19370, 1852.713745, -1836.252197, 33.802238, 0.000000, -89.999862, 0.400000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1533, 1842.071289, -1834.887939, 33.813491, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1533, 1843.571044, -1834.887939, 33.813491, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1566, 1852.358520, -1842.114746, 35.355010, 0.000000, 0.000000, -89.799957, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1566, 1852.364013, -1843.665893, 35.355010, 0.000000, 0.000000, -89.799957, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1851.072998, -1841.831665, 34.397594, 0.000000, 0.000000, -88.799987, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1851.156494, -1845.811279, 34.397594, 0.000000, 0.000000, -88.799987, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1945, 1841.951416, -1850.464355, 38.658481, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1945, 1850.841186, -1850.364379, 38.658481, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1363, 1846.532714, -1835.862060, 34.734073, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1723, 1850.813354, -1848.982421, 33.908164, 0.000000, 0.000000, -178.399871, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1723, 1845.274902, -1849.136840, 33.908164, 0.000000, 0.000000, 178.500167, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1361, 1839.912231, -1836.438476, 34.338169, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19526, 1851.401855, -1839.735473, 33.864067, 0.000000, 0.000000, -91.799995, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2165, 1836.037597, -1840.582275, 33.872959, 0.000000, 0.000000, 1.099999, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2308, 1835.681274, -1843.919677, 33.866317, 0.000000, 0.000000, 92.699981, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2357, 1838.729736, -1842.343505, 34.277935, 0.000000, 0.000000, -88.800003, -1, 1, -1, 300.00, 300.00);
	//telenor interior - close
	//telenor exterior - open
	tmpobjid = CreateDynamicObject(19370, 1155.576660, -1458.264892, 19.032133, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "None", 10, "Ariel", 20, 0, 0x00000000, 0xFF00DCF0, 0);
	tmpobjid = CreateDynamicObject(19370, 1155.156738, -1457.874877, 19.702117, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "telenor", 20, "Ariel", 20, 1, 0xFFFFFFFF, 0xFF00DCF0, 1);
	tmpobjid = CreateDynamicObject(19370, 1155.156738, -1461.064331, 19.702117, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "telenor", 20, "Ariel", 20, 1, 0x00000000, 0xFF00DCF0, 1);
	tmpobjid = CreateDynamicObject(19370, 1155.156738, -1454.703979, 19.702117, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "telenor", 20, "Ariel", 20, 1, 0x00000000, 0xFF00DCF0, 1);
	tmpobjid = CreateDynamicObject(19370, 1155.156738, -1451.534301, 19.702117, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "telenor", 20, "Ariel", 20, 1, 0x00000000, 0xFF00DCF0, 1);
	tmpobjid = CreateDynamicObject(19370, 1155.156738, -1448.385498, 19.702117, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "telenor", 20, "Ariel", 20, 1, 0x00000000, 0xFF00DCF0, 1);
	tmpobjid = CreateDynamicObject(19370, 1155.512695, -1464.149291, 19.702117, 0.000000, 0.000000, 8.899999, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "telenor", 20, "Ariel", 20, 1, 0x00000000, 0xFF00DCF0, 1);
	tmpobjid = CreateDynamicObject(19370, 1155.156738, -1448.385498, 16.542091, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "telenor", 20, "Ariel", 20, 1, 0x00000000, 0xFF00DCF0, 1);
	tmpobjid = CreateDynamicObject(19370, 1155.512695, -1464.149291, 16.332098, 0.000000, 0.000000, 8.899999, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "telenor", 20, "Ariel", 20, 1, 0x00000000, 0xFF00DCF0, 1);
	tmpobjid = CreateDynamicObject(19370, 1155.156738, -1450.765380, 16.272085, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9907, "monlith_sfe", "sf_windos_4", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1155.156738, -1453.896362, 16.272085, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9907, "monlith_sfe", "sf_windos_4", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1156.880493, -1467.019653, 16.272085, 0.000000, 0.000000, 17.400003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9907, "monlith_sfe", "sf_windos_4", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1157.681640, -1469.577636, 16.272085, 0.000000, 0.000000, 17.400003, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9907, "monlith_sfe", "sf_windos_4", 0x00000000);
	tmpobjid = CreateDynamicObject(19370, 1156.347656, -1467.180664, 19.702117, 0.000000, 0.000000, 17.800001, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "telenor", 20, "Ariel", 20, 1, 0x00000000, 0xFF00DCF0, 1);
	tmpobjid = CreateDynamicObject(19370, 1157.307373, -1470.170410, 19.702117, 0.000000, 0.000000, 17.800001, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "telenor", 20, "Ariel", 20, 1, 0x00000000, 0xFF00DCF0, 1);
	tmpobjid = CreateDynamicObject(19370, 1157.664672, -1471.284423, 19.702117, 0.000000, 0.000000, 17.800001, -1, -1, -1, 300.00, 300.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "telenor", 20, "Ariel", 20, 1, 0x00000000, 0xFF00DCF0, 1);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(2773, 1152.760742, -1456.429565, 15.294413, 0.000000, 0.000000, -84.199966, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2773, 1153.091186, -1459.683959, 15.294413, 0.000000, 0.000000, -84.199966, -1, -1, -1, 300.00, 300.00);
	//telenor exterior - close
	//fish store interior - open
	tmpobjid = CreateDynamicObject(19450, 1786.782470, 1654.471435, -13.915359, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1786.732421, 1664.020996, -13.916053, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1783.273437, 1664.020996, -13.964355, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1779.794433, 1664.020996, -14.012969, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1776.353515, 1664.020996, -14.060989, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1783.352539, 1654.471435, -13.963264, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1779.873168, 1654.471435, -14.011894, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1776.373535, 1654.471435, -14.060783, 0.000000, -90.799995, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "wood02S", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1786.738281, 1654.471435, -9.455532, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1783.298461, 1654.471435, -9.503551, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1779.848022, 1654.471435, -9.551799, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1776.377563, 1654.471435, -9.600261, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1776.377563, 1664.051879, -9.600261, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1779.858398, 1664.051879, -9.551677, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1783.338500, 1664.051879, -9.503047, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1786.808959, 1664.051879, -9.454647, 0.000000, -90.799987, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3881, "apsecurity_sfxrf", "CJ_WOOD1", 0x00000000);
	tmpobjid = CreateDynamicObject(1507, 1781.810302, 1649.851928, -13.725271, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0x00000000);
	tmpobjid = CreateDynamicObject(1507, 1780.319702, 1649.851928, -13.725271, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1776.109130, 1654.632080, -8.601422, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1776.109130, 1664.232543, -8.601422, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1774.458129, 1664.232543, -10.428544, 0.000000, 90.099975, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1774.458129, 1654.672973, -10.428544, 0.000000, 90.099975, 0.000000, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1787.934448, 1664.252075, -8.601422, 0.000000, 0.000015, 179.699737, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1787.884155, 1654.651733, -8.601422, 0.000000, 0.000015, 179.699737, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1789.535034, 1654.643188, -10.428544, 0.000000, 90.099967, 179.699737, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	tmpobjid = CreateDynamicObject(19450, 1789.585083, 1664.202514, -10.428544, 0.000000, 90.099967, 179.699737, -1, 1, -1, 300.00, 300.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3437, "ballypillar01", "ballywall01_64", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(19450, 1775.548583, 1664.021240, -12.231437, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1775.548583, 1654.632080, -12.231437, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1788.480346, 1664.021240, -12.231437, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1788.480346, 1654.471435, -12.231437, 0.000000, 0.000022, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1780.280029, 1649.767456, -12.231437, -0.000022, -0.000000, -90.999961, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1789.879150, 1649.600463, -12.231437, -0.000022, -0.000000, -90.999961, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1780.427856, 1668.678222, -12.231437, -0.000022, -0.000000, -90.999961, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1790.025634, 1668.508911, -12.231437, -0.000022, -0.000000, -90.999961, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1775.548583, 1664.021240, -8.861424, 0.000000, 0.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1775.548583, 1654.632080, -8.861424, 0.000000, 0.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1788.480346, 1664.021240, -8.861424, 0.000000, 0.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1788.480346, 1654.471435, -8.861424, 0.000000, 0.000045, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1780.280029, 1649.767456, -8.861424, -0.000045, -0.000000, -90.999893, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1789.879150, 1649.600463, -8.861424, -0.000045, -0.000000, -90.999893, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1780.427856, 1668.678222, -8.861424, -0.000045, -0.000000, -90.999893, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19450, 1790.025634, 1668.508911, -8.861424, -0.000045, -0.000000, -90.999893, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19172, 1775.628295, 1655.948242, -11.572992, 0.000000, 0.000000, 90.200004, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2632, 1782.161621, 1650.798950, -13.926577, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1235, 1779.174804, 1650.697875, -13.424149, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2169, 1782.849487, 1666.046875, -13.923686, 0.000000, 0.000000, 179.600097, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1776.431030, 1657.791748, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1776.431030, 1653.222534, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1776.431030, 1661.502807, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1776.431030, 1665.262817, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1786.281494, 1665.262817, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1786.262451, 1661.502807, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1786.332031, 1657.791748, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1893, 1786.261230, 1653.222534, -9.300349, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2253, 1775.952392, 1668.279785, -13.763433, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3034, 1782.409057, 1668.535766, -11.859015, 0.000000, 0.000000, -0.899999, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19559, 1779.953247, 1668.623168, -13.571652, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19559, 1779.953247, 1668.252929, -13.571652, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19559, 1779.953247, 1667.872558, -13.571652, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19559, 1779.592895, 1668.623168, -13.571652, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19559, 1779.592895, 1668.252929, -13.571652, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(19559, 1779.592895, 1667.872558, -13.571652, 0.000000, 0.000007, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(3034, 1788.360229, 1661.953735, -11.859015, 0.000000, 0.000000, -90.000022, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(950, 1775.952758, 1656.214721, -13.516444, 0.000000, 0.000000, -93.199958, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2433, 1785.283691, 1659.527954, -13.956490, 0.000000, 0.000000, -91.500038, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2433, 1785.233276, 1657.618652, -13.956490, 0.000000, 0.000000, -91.500038, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2433, 1785.333251, 1661.437622, -13.956490, 0.000000, 0.000000, -91.500038, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2403, 1781.362792, 1658.471557, -13.802104, 0.000000, 0.000000, 138.399948, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2495, 1779.842407, 1668.540283, -12.607547, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(2495, 1779.842407, 1668.540283, -12.277548, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(1514, 1781.787597, 1665.841918, -12.918517, 0.000000, 0.000000, 0.000000, -1, 1, -1, 300.00, 300.00);
	//fish store interior - close
	//mechanic - open
    tmpobjid = CreateObject(19377, 1836.856201, -1767.134887, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1847.305664, -1767.134887, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1857.783935, -1767.134887, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1868.254028, -1767.134887, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1878.713623, -1767.134887, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1889.183349, -1767.134887, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1898.604248, -1767.134887, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1898.604248, -1776.754394, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1898.604248, -1786.383300, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1898.604248, -1796.002075, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1898.604248, -1805.611083, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1897.422119, -1812.212280, 12.479853, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1887.245971, -1809.749755, 12.479853, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1877.119140, -1807.300048, 12.479853, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1866.982421, -1804.847167, 12.449859, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1888.134887, -1776.754394, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1836.856201, -1776.724731, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1836.856201, -1786.295410, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1836.856201, -1795.924682, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1847.305664, -1776.743652, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1847.305664, -1786.353149, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1847.305664, -1795.923461, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1857.783935, -1776.745117, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1857.783935, -1786.365600, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1857.783935, -1795.924316, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1868.254028, -1776.724121, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1868.254028, -1786.323974, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1868.254028, -1795.903808, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1878.713623, -1776.763916, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1878.713623, -1786.374389, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1878.713623, -1795.914062, 12.479853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1888.134887, -1786.373046, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1888.134887, -1795.982421, 12.489853, 0.000000, 90.000000, 0.000000); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1856.825317, -1802.390502, 12.449859, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1846.717773, -1799.945068, 12.449859, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1836.640014, -1797.505859, 12.449859, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19905, 1885.883789, -1792.574340, 12.395788, 0.000000, 0.000000, 179.500183, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 16639, "a51_labs", "dam_terazzo", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19905, 1849.764526, -1792.259155, 12.395788, 0.000000, 0.000000, 179.500183, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 2, 16639, "a51_labs", "dam_terazzo", 0x00000000);
    tmpobjid = CreateObject(19377, 1876.443969, -1797.249145, 12.479853, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1889.255126, -1800.347778, 12.479853, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateObject(19377, 1886.242187, -1799.618896, 12.439852, 0.000000, 90.000000, -13.600007); 
    SetObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1903.783325, -1779.769165, 12.575792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1903.783325, -1770.219848, 12.575792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1903.803344, -1767.119750, 12.575792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1831.791259, -1779.148681, 12.575792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19435, 1831.604980, -1763.099609, 12.565792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19435, 1831.604980, -1764.689697, 12.565792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19435, 1831.604980, -1766.289550, 12.565792, 0.000000, 0.000007, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1836.340332, -1762.262817, 12.575792, 0.000007, 0.000000, 89.699989, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1845.919799, -1762.313842, 12.575792, 0.000007, 0.000000, 89.699989, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1855.518432, -1762.364868, 12.575792, 0.000007, 0.000000, 89.699989, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1865.117431, -1762.356079, 12.575792, 0.000007, 0.000000, 90.199981, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1874.759887, -1762.375976, 12.575792, 0.000007, 0.000000, 89.699989, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1899.023193, -1762.362304, 12.575792, 0.000007, 0.000000, 89.699989, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "sl_vicbrikwall01", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1832.241455, -1778.548095, 10.825787, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1832.241455, -1767.367309, 10.815789, 0.899999, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1836.948974, -1762.652221, 10.825787, 0.000000, 0.000000, 89.699996, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1846.578979, -1762.703369, 10.825787, 0.000000, 0.000000, 89.699996, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1856.128295, -1762.753051, 10.825787, 0.000000, 0.000000, 89.699996, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1865.688842, -1762.803100, 10.825787, 0.000000, 0.000000, 89.699996, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1875.259033, -1762.853271, 10.825787, 0.000000, 0.000000, 89.699996, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1898.439453, -1762.974731, 10.835787, 0.000000, 0.000000, 89.699996, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1903.161376, -1767.868041, 10.835787, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1903.161376, -1777.497802, 10.835787, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19449, 1903.161376, -1779.738891, 10.835787, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1878.696044, -1764.560668, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1878.696044, -1767.770263, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1874.735595, -1764.530639, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1870.934936, -1764.520629, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1867.174438, -1764.510620, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1863.484375, -1764.490600, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1859.944213, -1764.470581, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1856.353515, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1852.632080, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1849.322143, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1846.161621, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1842.911621, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1839.571166, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1836.280639, -1764.440551, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1874.735595, -1767.710083, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1870.935180, -1767.710083, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1867.174804, -1767.710083, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1863.484252, -1767.710083, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1859.943481, -1767.660034, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1856.353027, -1767.640014, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1852.632690, -1767.640014, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1849.312377, -1767.640014, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1846.161376, -1767.640014, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1842.910888, -1767.640014, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1839.570190, -1767.640014, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(19391, 1836.280639, -1767.620117, 10.825781, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(3287, 1888.705078, -1802.316040, 17.275774, 0.000000, 0.000000, 90.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 18835, "mickytextures", "smileyface1", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 3, 18631, "nomodelfile", "hazardtile6", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(3287, 1868.545288, -1802.316040, 17.275774, 0.000000, 0.000000, 90.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 19467, "speed_bumps", "vehicle_barrier01", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 3, 18631, "nomodelfile", "hazardtile6", 0x00000000);
    tmpobjid = CreateDynamicObjectEx(8324, 1867.560302, -1784.697387, 19.735792, 0.000000, 0.000000, 180.000000, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 16640, "a51", "ws_metalpanel1", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 1, 4830, "airport2", "sanairtex1", 0xFFCCFFFF);
    tmpobjid = CreateDynamicObjectEx(19482, 1867.756103, -1784.269409, 21.818897, 0.000000, 0.000000, 89.400009, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{ff0000} Mechanic", 80, "Calibri", 70, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObjectEx(19482, 1867.675781, -1784.288452, 21.878898, 0.000000, 0.000000, 89.400009, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} Mechanic", 80, "Calibri", 70, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObjectEx(19482, 1867.675781, -1784.288452, 20.188880, 0.000000, 0.000000, 89.400009, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} Central", 80, "Calibri", 55, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObjectEx(19482, 1867.726074, -1784.269042, 20.148880, 0.000000, 0.000000, 89.400009, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{ff0000} Central", 80, "Calibri", 55, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObjectEx(19482, 1867.534057, -1784.319580, 18.908870, 0.000000, 0.000000, 269.400024, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{000000} ", 80, "Quartz MS", 25, 1, 0x00000000, 0x00000000, 1);
    tmpobjid = CreateDynamicObjectEx(19482, 1871.081176, -1800.299072, 13.543722, 42.500007, 0.000000, 269.400024, 300.00, 300.00); 
    SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
    SetDynamicObjectMaterialText(tmpobjid, 0, "{111111} ", 80, "Calibri", 15, 1, 0x00000000, 0x00000000, 1);
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    tmpobjid = CreateDynamicObjectEx(19425, 1831.665771, -1772.439697, 12.565792, 0.000000, 0.000000, 91.299972, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19425, 1831.586547, -1768.921264, 12.565792, 0.000000, 0.000000, 91.299972, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19425, 1892.549316, -1762.351074, 12.565792, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19425, 1889.268920, -1762.351074, 12.565792, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19425, 1886.039550, -1762.351074, 12.565792, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19425, 1882.809570, -1762.351074, 12.565792, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19425, 1879.569702, -1762.351074, 12.565792, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1901.837402, -1799.611083, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1893.777465, -1799.512695, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1884.627685, -1799.401000, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1875.427978, -1799.288696, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1865.417846, -1799.166503, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1857.858154, -1799.074218, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1848.948242, -1798.965454, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19899, 1839.528442, -1798.850463, 12.595788, 0.000000, 0.000000, 89.300071, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1899.798461, -1791.493164, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1890.259887, -1791.326782, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1881.001586, -1791.165039, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1872.302490, -1791.013671, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1863.283691, -1790.856079, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1853.934570, -1790.693603, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1845.375732, -1790.544677, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19817, 1835.937255, -1790.380004, 10.955786, 0.000000, 0.000000, 178.999938, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1832.655883, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1842.206665, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1850.886352, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1859.997192, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1868.777465, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1877.947509, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1887.057983, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19903, 1896.438720, -1793.980468, 12.595788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1895.282714, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1886.001953, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1876.991333, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1868.670898, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1858.660278, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1848.839721, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1840.209106, -1791.658203, 12.605783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19900, 1832.649047, -1791.658203, 12.605783, 0.000000, 0.000000, 24.899997, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1890.774780, -1799.957275, 14.415789, 0.000000, 0.000000, 179.499908, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1903.204956, -1797.594238, 14.335787, 0.000000, 0.000000, -90.800064, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1881.703979, -1799.878173, 14.415789, 0.000000, 0.000000, 179.499908, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1872.423217, -1799.796997, 14.415789, 0.000000, 0.000000, 179.499908, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1854.892456, -1799.644287, 14.415789, 0.000000, 0.000000, 179.499908, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1845.832397, -1799.565551, 14.415789, 0.000000, 0.000000, 179.499908, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19815, 1836.531982, -1799.484497, 14.415789, 0.000000, 0.000000, 179.499908, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1903.197509, -1785.562744, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1903.197509, -1786.613159, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1903.197509, -1787.663085, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1903.197509, -1788.693115, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1903.197509, -1789.713867, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1867.068359, -1785.353759, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1867.068359, -1786.374023, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1867.068359, -1787.394531, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1080, 1867.068359, -1788.434936, 16.305788, 0.000000, 180.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(3632, 1867.112792, -1783.881835, 13.035784, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(3632, 1867.872802, -1783.881835, 13.035784, 0.000000, 0.000000, 24.399999, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(3632, 1867.546020, -1783.282958, 13.035784, 0.000000, 0.000000, 24.399999, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1900.995239, -1799.569091, 13.845783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1894.654541, -1799.569091, 13.845783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1884.604492, -1799.569091, 13.845783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1874.794433, -1799.569091, 13.845783, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1864.673706, -1799.218872, 14.685788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1858.694091, -1799.218872, 14.685788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1848.132934, -1799.218872, 14.685788, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1010, 1839.212280, -1798.968627, 14.685788, 0.000000, 0.000000, -21.300001, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1060, 1839.866333, -1798.855834, 15.105785, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1060, 1848.516967, -1798.855834, 15.105785, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1060, 1857.927734, -1798.855834, 15.105785, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1060, 1865.898071, -1798.855834, 15.105785, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1163, 1875.470581, -1799.480224, 15.257658, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1163, 1884.450317, -1799.480224, 15.257658, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1163, 1893.880615, -1799.480224, 15.257658, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1163, 1901.741088, -1799.480224, 15.257658, 0.000000, 0.000000, 13.600000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19996, 1900.707397, -1813.611450, 12.565791, 0.000000, 0.000000, -24.299999, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(1442, 1900.214355, -1816.077026, 13.166872, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19632, 1900.248413, -1816.083374, 13.305792, 0.000000, 0.000000, 0.000000, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19996, 1902.019775, -1814.203979, 12.565791, 0.000000, 0.000000, -44.100006, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(19996, 1898.869018, -1813.218017, 12.565791, 0.000000, 0.000000, -4.599998, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(2690, 1894.781982, -1784.380859, 13.785792, 0.000000, 0.000000, 178.499984, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(2690, 1885.921752, -1784.279296, 13.785792, 0.000000, 0.000000, 178.499984, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(2690, 1876.889526, -1784.253784, 13.785792, 0.000000, 0.000000, 178.499984, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(2690, 1858.879272, -1784.053833, 13.835792, 0.000000, 0.000000, 178.499984, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(2690, 1849.888427, -1783.969482, 13.835792, 0.000000, 0.000000, 178.499984, 300.00, 300.00); 
    tmpobjid = CreateDynamicObjectEx(2690, 1840.577392, -1783.895629, 13.835792, 0.000000, 0.000000, 178.499984, 300.00, 300.00); 
	//mechanic - close
	//fishing - open
	tmpobjid = CreateDynamicObject(11497, 2152.457519, -103.895492, 1.340256, -2.299999, -0.499999, 115.799964, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2132.660156, -99.856140, 0.904702, 0.000000, 0.000000, -49.699996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2130.431396, -101.744705, 0.904702, 0.000000, 0.000000, -49.699996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2128.195068, -103.639747, 0.904702, 0.000000, 0.000000, -49.699996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2125.951660, -105.541275, 0.904702, 0.000000, 0.000000, -49.699996, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2142.276123, -111.197036, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2140.435546, -113.513610, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2138.589355, -115.830070, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2136.741943, -118.154373, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2134.906250, -120.463035, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(11698, 2133.055175, -122.795249, 0.744702, 0.000000, 0.000000, -38.500022, -1, -1, -1, 300.00, 300.00);
	//fishing - close
	//bus interior - open
	CreateObject(2631, 2022.0, 2236.7, 2102.9, 0.0, 0.0, 90.0);
	CreateObject(2631, 2022.0, 2240.6, 2102.9, 0.0, 0.0, 90.0);
	CreateObject(2631, 2022.0, 2244.5, 2102.9, 0.0, 0.0, 90.0);
	CreateObject(2631, 2022.0, 2248.4, 2102.9, 0.0, 0.0, 90.0);
	CreateObject(16501, 2022.1, 2238.3, 2102.8, 0.0, 90.0, 0.0);
	CreateObject(16501, 2022.1, 2245.3, 2102.8, 0.0, 90.0, 0.0);
	CreateObject(16000, 2024.2, 2240.1, 2101.2, 0.0, 0.0, 90.0);
	CreateObject(16000, 2019.8, 2240.6, 2101.2, 0.0, 0.0, -90.0);
	CreateObject(16000, 2022.2, 2248.7, 2101.2, 0.0, 0.0, 180.0);
	CreateObject(16501, 2021.8, 2246.5, 2107.3, 0.0, 270.0, 90.0);
	CreateObject(16501, 2022.0, 2240.8, 2107.3, 0.0, 270.0, 0.0);
	CreateObject(16501, 2022.0, 2233.7, 2107.3, 0.0, 270.0, 0.0);
	CreateObject(18098, 2024.3, 2239.6, 2104.8, 0.0, 0.0, 90.0);
	CreateObject(18098, 2024.3, 2239.7, 2104.7, 0.0, 0.0, 450.0);
	CreateObject(18098, 2020.1, 2239.6, 2104.8, 0.0, 0.0, 90.0);
	CreateObject(18098, 2020.0, 2239.6, 2104.7, 0.0, 0.0, 90.0);
	CreateObject(2180, 2023.6, 2236.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2238.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2240.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2242.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2244.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2246.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2248.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2020.3, 2235.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2237.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2239.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2241.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2243.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2245.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2674, 2023.4, 2238.3, 2102.9, 0.0, 0.0, 600.0);
	CreateObject(2674, 2020.4, 2242.3, 2102.9, 0.0, 0.0, 600.0);
	CreateObject(2674, 2023.4, 2246.3, 2102.9, 0.0, 0.0, 600.0);
	CreateObject(14405, 2022.0, 2242.1, 2103.5, 0.0, 0.0, 540.0);
	CreateObject(14405, 2022.0, 2243.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2245.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2246.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2248.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2249.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2251.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2242.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2243.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2245.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2246.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2248.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2249.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2251.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2242.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2243.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2245.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2246.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2248.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2249.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2251.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2253.6, 2104.0, -6.0, 0.0, 180.0);
	CreateObject(14405, 2021.1, 2253.6, 2104.0, -6.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2253.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(2674, 2020.4, 2235.7, 2102.9, 0.0, 0.0, 52.0);
	CreateObject(2673, 2020.4, 2246.7, 2102.9, 0.0, 0.0, 270.0);
	CreateObject(2700, 2023.5, 2235.1, 2105.5, 180.0, -4.0, 90.0);
	CreateObject(2700, 2020.4, 2235.1, 2105.5, 180.0, 0.0, 90.0);
	CreateObject(2700, 2023.5, 2242.1, 2105.5, 180.0, -4.0, 90.0);
	CreateObject(2700, 2020.4, 2242.1, 2105.5, 180.0, 0.0, 90.0);
	CreateObject(1799, 2023.1, 2234.2, 2105.7, 270.0, 0.0, 360.0);
	CreateObject(1799, 2019.8, 2234.2, 2105.7, 270.0, 0.0, 0.0);
	CreateObject(1538, 2022.7, 2234.7, 2102.8, 0.0, 0.0, 180.0);
	CreateObject(1799, 2022.1, 2234.2, 2106.1, 720.0, 90.0, 450.0);
	CreateObject(1799, 2021.8, 2234.2, 2105.1, 0.0, 270.0, 270.0);
	CreateObject(1799, 2022.1, 2234.2, 2107.3, 0.0, 90.0, 90.0);
	CreateObject(1799, 2021.6, 2234.2, 2106.3, 0.0, 270.0, 270.0);
	CreateObject(1799, 2022.3, 2234.2, 2104.3, 90.0, 0.0, 180.0);
	//bus interior - close
	//police interior - open
	tmpobjid = CreateDynamicObject(19436, 1552.009, -1678.249, 2113.827, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19436, 1561.460, -1683.070, 2113.817, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19372, 1554.125, -1669.069, 2113.857, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19458, 1556.727, -1682.304, 2113.826, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19458, 1565.605, -1667.534, 2116.597, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19436, 1571.471, -1671.280, 2113.867, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19436, 1567.131, -1683.231, 2113.867, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(18981, 1564.407, -1678.029, 2111.535, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19597, "lsbeachside", "carpet19-128x128", -1);
	tmpobjid = CreateDynamicObject(19458, 1552.047, -1676.372, 2116.398, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19436, 1552.009, -1671.358, 2113.837, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(2920, 1552.013, -1671.000, 2112.035, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19458, 1556.736, -1682.264, 2111.244, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", -1);
	tmpobjid = CreateDynamicObject(19869, 1556.007, -1689.787, 2113.914, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14415, "carter_block_2", "mp_carter_cage", 0);
	tmpobjid = CreateDynamicObject(19940, 1557.868, -1670.796, 2112.966, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19808, 1567.766, -1668.476, 2112.865, 0.000, 0.000, 179.300, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19940, 1560.619, -1671.637, 2112.947, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19458, 1553.407, -1682.965, 2111.244, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19372, 1553.385, -1670.039, 2113.857, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19372, 1553.405, -1670.039, 2111.247, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2920, 1552.013, -1671.060, 2114.677, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19929, 1561.724, -1671.615, 2112.025, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1669.043, 2114.477, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(2920, 1552.013, -1672.190, 2107.557, 180.000, 180.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(18880, 1567.835, -1683.283, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(1721, 1560.017, -1667.138, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19981, 1560.024, -1671.605, 2117.225, 180.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2920, 1552.013, -1677.431, 2107.557, 180.000, 180.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19929, 1557.875, -1670.364, 2112.035, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19869, 1556.007, -1689.787, 2110.722, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14415, "carter_block_2", "mp_carter_cage", 0);
	tmpobjid = CreateDynamicObject(2920, 1552.013, -1676.181, 2107.557, 180.000, 180.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(2920, 1552.013, -1673.421, 2107.557, 180.000, 180.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19940, 1557.868, -1670.796, 2114.827, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19366, 1570.268, -1672.154, 2117.119, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19458, 1576.216, -1670.564, 2113.746, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1567.490, -1667.118, 2982.990, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(2161, 1563.513, -1665.509, 2112.025, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1563.513, -1665.509, 2113.366, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19174, 1556.190, -1682.216, 2114.184, 0.000, 0.000, 1260.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "cop_notice", 0);
	tmpobjid = CreateDynamicObject(19940, 1558.659, -1671.637, 2114.827, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19981, 1560.794, -1671.605, 2117.225, 180.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19458, 1565.715, -1661.844, 2113.857, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19372, 1555.846, -1669.099, 2111.247, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19372, 1555.856, -1669.049, 2113.857, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(18880, 1568.774, -1672.194, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1562.765, -1670.625, 2112.015, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.092, -1672.194, 2114.857, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19372, 1554.396, -1669.109, 2111.247, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1557.533, -1669.234, 2111.365, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19372, 1553.406, -1669.959, 2117.108, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19458, 1553.397, -1682.974, 2113.826, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19929, 1562.765, -1670.625, 2115.755, 180.000, 0.000, 1260.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19372, 1555.056, -1669.099, 2117.108, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19929, 1558.744, -1671.716, 2111.134, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19929, 1561.585, -1671.716, 2111.134, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19929, 1561.895, -1671.716, 2111.144, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19929, 1561.895, -1671.455, 2111.144, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19372, 1555.846, -1669.099, 2117.108, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19929, 1562.785, -1670.615, 2116.345, 180.000, 0.000, 1260.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 19480, "signsurf", "sign", 0);
	tmpobjid = CreateDynamicObject(19929, 1559.174, -1671.455, 2111.144, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19929, 1558.073, -1669.604, 2111.144, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19929, 1558.073, -1666.775, 2111.144, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19929, 1557.752, -1670.608, 2111.144, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19362, 1570.268, -1672.265, 2113.857, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", 0);
	tmpobjid = CreateDynamicObject(19436, 1567.131, -1683.331, 2113.787, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.315, -1672.277, 2113.867, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19372, 1557.486, -1668.448, 2117.108, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(11744, 1558.442, -1678.271, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19174, 1555.420, -1669.166, 2114.214, 0.000, 0.000, 1440.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 17511, "stadium_lae2", "ticketsnprice_lae2", 0);
	tmpobjid = CreateDynamicObject(19436, 1567.141, -1683.211, 2111.254, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19869, 1554.191, -1669.753, 2109.843, 360.000, 90.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19458, 1572.466, -1685.854, 2113.876, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19940, 1560.659, -1671.637, 2114.827, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19940, 1561.669, -1671.637, 2114.827, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(11744, 1554.252, -1669.731, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19436, 1552.670, -1671.589, 2113.837, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19940, 1561.669, -1671.637, 2112.947, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19940, 1558.649, -1671.637, 2112.947, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19358, 1570.263, -1672.291, 2111.284, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19458, 1565.615, -1667.344, 2110.485, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19940, 1562.339, -1670.186, 2115.487, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(11744, 1555.412, -1669.731, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19940, 1562.750, -1670.857, 2114.827, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(18880, 1567.033, -1672.194, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1561.795, -1671.635, 2116.338, 180.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19362, 1571.759, -1672.255, 2113.857, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", 0);
	tmpobjid = CreateDynamicObject(19458, 1570.385, -1665.693, 2113.746, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19358, 1571.765, -1672.302, 2111.284, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19940, 1562.750, -1670.857, 2112.937, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19610, 1567.792, -1668.474, 2113.035, 270.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19458, 1556.727, -1682.284, 2117.108, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(11744, 1556.632, -1669.731, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(1811, 1556.851, -1669.870, 2112.545, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19458, 1566.414, -1688.214, 2113.786, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(1811, 1555.501, -1669.870, 2112.545, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1554.190, -1669.870, 2112.545, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1554.851, -1669.870, 2112.545, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19309, 1560.423, -1671.479, 2112.855, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(1811, 1556.171, -1669.870, 2112.545, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.092, -1672.194, 2115.298, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.890, -1677.015, 2114.967, 720.000, -450.000, -270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1566.335, -1672.147, 2113.857, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.485, -1684.187, 2113.777, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1575.285, -1665.654, 2113.746, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19477, 1559.438, -1682.201, 2114.096, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "d", 90, "Webdings", 170, 0, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(18981, 1564.179, -1671.797, 2115.968, 0.000, 90.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", -1);
	tmpobjid = CreateDynamicObject(19610, 1560.438, -1671.473, 2113.035, 270.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19458, 1553.406, -1682.965, 2117.108, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(1811, 1556.851, -1669.901, 2112.575, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(2263, 1560.427, -1670.938, 2113.161, -10.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(1811, 1556.170, -1669.901, 2112.575, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(2263, 1560.387, -1671.923, 2112.988, 10.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2263, 1560.387, -1671.923, 2112.988, 10.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(1811, 1555.510, -1669.901, 2112.575, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19477, 1559.437, -1682.181, 2114.096, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "d", 90, "Webdings", 160, 0, -1785344, 0, 1);
	tmpobjid = CreateDynamicObject(19436, 1569.849, -1673.131, 2113.867, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(1811, 1554.860, -1669.901, 2112.575, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19477, 1559.447, -1682.171, 2114.096, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "d", 90, "Webdings", 150, 0, -16777088, 0, 1);
	tmpobjid = CreateDynamicObject(19477, 1559.447, -1682.142, 2114.396, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "LOS SANTOS", 120, "Ariel", 25, 1, -1, 0, 1);
	tmpobjid = CreateDynamicObject(19477, 1559.457, -1682.162, 2114.166, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "POLICE", 120, "Ariel", 25, 1, -1, 0, 1);
	tmpobjid = CreateDynamicObject(19477, 1559.447, -1682.162, 2113.936, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "DEPARTMENT", 120, "Ariel", 25, 1, -1, 0, 1);
	tmpobjid = CreateDynamicObject(1811, 1554.189, -1669.901, 2112.575, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(18762, 1557.914, -1669.541, 2114.155, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3741, "cehillhse14", "swimpoolbtm1_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, -1, "none", "none", -6724096);
	tmpobjid = CreateDynamicObject(19372, 1557.486, -1668.448, 2110.427, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1566.081, -1683.241, 2113.867, 0.000, 360.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19372, 1557.526, -1668.458, 2111.217, 0.000, 180.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1558.864, -1671.615, 2112.025, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(18880, 1565.653, -1669.854, 2112.976, 270.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18981, 1577.455, -1678.029, 2980.780, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10756, "airportroads_sfse", "Heliconcrete", -1);
	tmpobjid = CreateDynamicObject(18981, 1577.455, -1678.029, 2985.233, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19372, 1565.598, -1670.747, 2113.865, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19445, 1573.482, -1675.059, 2983.000, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1578.409, -1675.089, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2240, 1566.572, -1682.644, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19929, 1557.875, -1670.364, 2115.748, 180.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(18880, 1562.762, -1669.554, 2112.796, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19929, 1558.884, -1671.615, 2115.758, 180.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(18880, 1582.322, -1675.219, 2983.872, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1578.409, -1675.340, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1561.686, -1689.598, 2113.787, 0.000, 0.000, 179.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19372, 1558.478, -1667.448, 2113.855, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.057, -1683.335, 2113.787, 0.000, 0.000, 449.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.901, -1673.835, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.344, -1672.128, 2110.384, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19372, 1565.588, -1667.848, 2111.246, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19458, 1563.169, -1665.396, 2110.486, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19940, 1560.209, -1670.966, 2112.807, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1561.746, -1671.615, 2115.758, 180.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19458, 1552.086, -1676.482, 2117.108, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19940, 1562.199, -1670.966, 2112.807, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19940, 1558.839, -1670.966, 2112.817, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19174, 1560.041, -1665.485, 2114.234, 0.000, 0.000, 1440.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(18880, 1562.153, -1683.283, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1561.460, -1683.231, 2113.817, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19940, 1558.528, -1670.056, 2112.807, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19940, 1558.298, -1670.226, 2112.677, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19940, 1559.318, -1671.186, 2112.677, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19172, 1572.175, -1670.678, 2983.460, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(19940, 1561.318, -1671.186, 2112.677, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19445, 1571.091, -1670.588, 2983.000, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", -1);
	tmpobjid = CreateDynamicObject(19366, 1570.270, -1672.134, 2110.378, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18880, 1565.374, -1683.283, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1566.060, -1683.201, 2111.254, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1552.650, -1678.239, 2111.244, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1552.019, -1678.239, 2111.244, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1552.691, -1671.640, 2111.254, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", -1);
	tmpobjid = CreateDynamicObject(19436, 1552.020, -1671.360, 2111.254, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", -1);
	tmpobjid = CreateDynamicObject(19929, 1557.876, -1669.135, 2114.317, 270.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19883, 1560.804, -1671.600, 2114.805, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19883, 1560.023, -1671.600, 2114.805, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2268, 1568.295, -1689.689, 2113.767, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1684.062, 2115.417, 180.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19358, 1558.484, -1667.451, 2110.493, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19929, 1560.795, -1671.635, 2116.338, 180.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19458, 1574.246, -1683.225, 2111.285, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.902, -1675.566, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1565.586, -1661.853, 2110.486, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1569.830, -1676.281, 2113.877, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19174, 1559.380, -1697.626, 2114.074, 0.000, 0.000, 1530.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(18880, 1569.910, -1676.996, 2115.087, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18756, 1568.068, -1679.088, 2113.907, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4829, "airport_las", "liftdoorsac256", -1);
	tmpobjid = CreateDynamicObject(18756, 1571.876, -1679.018, 2113.907, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4829, "airport_las", "liftdoorsac256", -1);
	tmpobjid = CreateDynamicObject(19358, 1565.583, -1668.260, 2110.493, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19929, 1558.864, -1671.625, 2116.328, 180.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19372, 1565.718, -1670.747, 2113.865, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.921, -1681.137, 2115.087, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1557.875, -1670.624, 2116.329, 180.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19458, 1575.266, -1665.874, 2117.137, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1562.884, -1670.526, 2111.134, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19477, 1556.133, -1689.413, 2114.456, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "G", 130, "GTAWEAPON3", 199, 1, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(19477, 1556.143, -1689.443, 2114.516, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "5", 130, "GTAWEAPON3", 140, 0, -1, 0, 1);
	tmpobjid = CreateDynamicObject(19458, 1565.705, -1667.514, 2116.597, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1576.197, -1670.554, 2117.139, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2240, 1564.913, -1666.113, 2112.505, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19354, 1569.841, -1677.133, 2116.707, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", 0);
	tmpobjid = CreateDynamicObject(19436, 1571.461, -1671.280, 2117.126, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1565.653, -1669.854, 2114.738, 270.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1565.663, -1669.033, 2111.906, 360.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1565.595, -1661.844, 2113.857, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(18880, 1565.663, -1666.763, 2111.906, 360.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "cof_wood2", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19372, 1559.835, -1665.379, 2113.865, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19372, 1563.035, -1665.369, 2113.865, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19372, 1563.965, -1665.380, 2113.865, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1666.912, 2113.086, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1667.912, 2113.086, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(3858, 1565.655, -1664.689, 2113.445, 0.000, 0.000, 135.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(19458, 1552.206, -1674.883, 2113.826, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", -1);
	tmpobjid = CreateDynamicObject(18981, 1577.455, -1678.029, 2980.770, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1668.952, 2113.836, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1668.973, 2113.947, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1668.962, 2114.057, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1669.032, 2114.157, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1669.002, 2114.257, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1668.932, 2114.367, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19436, 1561.469, -1683.201, 2111.234, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.911, -1677.015, 2111.935, 1440.000, -450.000, -270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19436, 1561.469, -1682.991, 2111.244, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2165, 1559.434, -1665.966, 2112.035, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(1721, 1559.007, -1689.948, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(1721, 1558.346, -1689.948, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(1721, 1557.706, -1689.948, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19983, 1552.024, -1674.772, 2114.667, 360.000, 180.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19436, 1561.469, -1682.991, 2117.107, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19436, 1561.469, -1683.211, 2117.107, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19458, 1576.686, -1683.213, 2117.108, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(1721, 1572.839, -1670.809, 2981.280, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1557.056, -1689.948, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(18880, 1578.409, -1670.550, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1560.705, -1688.297, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19366, 1570.308, -1672.294, 2117.129, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(19436, 1569.829, -1676.260, 2111.287, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19354, 1569.841, -1680.333, 2116.707, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", 0);
	tmpobjid = CreateDynamicObject(19458, 1569.827, -1677.114, 2117.114, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19436, 1569.830, -1673.141, 2111.286, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1567.057, -1683.213, 2117.108, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19826, 1569.735, -1681.309, 2113.775, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -983041);
	tmpobjid = CreateDynamicObject(19610, 1569.813, -1681.307, 2113.765, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	tmpobjid = CreateDynamicObject(3089, 1569.869, -1673.959, 2113.356, 0.000, 0.000, 629.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(19477, 1560.418, -1671.646, 2114.557, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "POLICE DEPARTMENT", 120, "Ariel", 23, 1, -983041, 0, 1);
	tmpobjid = CreateDynamicObject(19458, 1558.486, -1664.262, 2117.118, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19362, 1570.268, -1672.155, 2113.857, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.761, -1681.101, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.761, -1680.442, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.761, -1679.791, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.761, -1679.131, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.349, -1679.131, 2112.545, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.349, -1679.772, 2112.545, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.349, -1680.412, 2112.545, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.349, -1681.042, 2112.545, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.499, -1681.042, 2112.545, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.499, -1680.422, 2112.545, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.499, -1679.792, 2112.545, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.499, -1679.152, 2112.545, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19436, 1571.461, -1671.280, 2110.373, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(1811, 1560.751, -1679.131, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.751, -1679.782, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.751, -1680.452, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.751, -1681.103, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.491, -1681.042, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.491, -1680.422, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.491, -1679.792, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.491, -1679.162, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.362, -1679.122, 2112.575, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.362, -1679.782, 2112.575, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.362, -1680.403, 2112.575, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.362, -1681.053, 2112.575, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.751, -1678.431, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1560.761, -1678.421, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1557.501, -1678.441, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19437, 1566.304, -1672.278, 2110.494, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.334, -1672.298, 2110.494, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(1811, 1557.491, -1678.442, 2112.575, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1669.023, 2113.126, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(1811, 1558.362, -1678.431, 2112.575, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19458, 1558.246, -1666.402, 2117.018, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(1811, 1558.349, -1678.432, 2112.545, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(11744, 1557.522, -1678.851, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19869, 1560.703, -1678.203, 2109.863, 360.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19869, 1560.703, -1678.784, 2109.843, 360.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19358, 1565.593, -1670.741, 2110.493, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1668.933, 2114.607, 180.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19869, 1558.401, -1678.784, 2109.843, 360.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1565.654, -1668.903, 2113.086, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14581, "ab_mafiasuitea", "cof_wood2", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19436, 1552.650, -1678.249, 2113.827, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(11744, 1560.753, -1678.262, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19869, 1557.461, -1678.784, 2109.843, 360.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(18880, 1565.374, -1683.293, 2114.824, 540.000, 270.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19366, 1567.106, -1672.294, 2117.129, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(11744, 1560.753, -1678.841, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(11744, 1560.743, -1679.422, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(11744, 1560.743, -1679.992, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(18880, 1569.913, -1672.681, 2115.366, 90.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1552.690, -1671.599, 2117.108, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.901, -1672.088, 2114.825, 90.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1565.374, -1683.293, 2115.404, 540.000, 270.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19366, 1571.769, -1672.294, 2117.129, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(11744, 1560.743, -1680.642, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19325, 1569.803, -1677.044, 2116.926, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2162, 1559.126, -1671.717, 2112.035, 0.000, 0.000, -171.799, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1565.695, -1690.455, 2113.787, 0.000, 0.000, 269.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1562.565, -1690.450, 2113.787, 0.000, 0.000, 269.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(11744, 1560.743, -1681.212, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(18880, 1564.993, -1690.503, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19981, 1567.749, -1668.573, 2110.203, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "white", -1);
	tmpobjid = CreateDynamicObject(19869, 1558.403, -1678.203, 2109.863, 360.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(11744, 1558.442, -1681.232, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19869, 1557.463, -1678.203, 2109.863, 360.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19458, 1563.036, -1665.381, 2117.118, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(11744, 1558.442, -1680.652, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(1763, 1574.550, -1667.904, 2112.035, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 13003, "ce_racestart", "CJ_TARTAN", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(11744, 1558.442, -1680.001, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19436, 1552.650, -1678.239, 2117.109, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(18880, 1563.252, -1690.503, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(11744, 1558.442, -1679.431, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(11744, 1558.442, -1678.851, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19458, 1565.705, -1667.514, 2111.117, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1575.275, -1665.683, 2116.766, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(11744, 1557.502, -1678.261, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19458, 1565.735, -1667.401, 2110.386, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(11744, 1557.522, -1679.421, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(11744, 1557.522, -1680.002, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(11744, 1557.522, -1680.632, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(11744, 1557.522, -1681.232, 2112.045, 180.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0);
	tmpobjid = CreateDynamicObject(19994, 1566.939, -1669.008, 2112.045, 0.000, 0.000, 1170.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19458, 1570.575, -1665.712, 2110.386, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1560.762, -1685.892, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1565.585, -1667.401, 2117.128, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19458, 1565.735, -1667.401, 2117.128, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.445, -1683.347, 2113.777, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.775, -1684.957, 2113.777, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.825, -1685.197, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.705, -1685.197, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18981, 1598.253, -1657.998, 2985.183, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.815, -1688.307, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1560.762, -1687.603, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1570.575, -1665.712, 2116.766, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1570.575, -1665.722, 2117.129, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19929, 1562.714, -1670.526, 2111.124, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 3741, "cehillhse14", "swimpoolbtm1_128", 0);
	tmpobjid = CreateDynamicObject(19458, 1575.266, -1665.874, 2110.392, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19366, 1567.106, -1672.144, 2117.129, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19458, 1576.205, -1670.562, 2116.766, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1576.197, -1670.554, 2110.396, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(630, 1554.432, -1681.428, 2113.186, 0.000, 0.000, -22.800, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", -983041);
	tmpobjid = CreateDynamicObject(18880, 1560.762, -1685.892, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2611, 1575.154, -1667.612, 2113.813, 0.000, -0.100, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -983041);
	SetDynamicObjectMaterial(tmpobjid, 3, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(18880, 1560.762, -1685.892, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.775, -1684.957, 2113.777, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.054, -1684.077, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19174, 1566.300, -1686.526, 2113.784, 0.000, 0.000, 1350.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "cop_notice", 0);
	tmpobjid = CreateDynamicObject(19476, 1560.906, -1687.854, 2113.735, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19437, 1560.064, -1683.046, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19477, 1560.908, -1687.862, 2113.735, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "W\nE\nA\nP\nO\nN", 130, "Ariel", 28, 1, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(19458, 1555.426, -1683.805, 2113.786, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.054, -1689.588, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.947, -1688.877, 2113.787, 0.000, 0.000, 89.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1688.773, 2111.925, 90.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(3089, 1556.010, -1684.333, 2113.356, 0.000, 0.000, 989.900, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(19174, 1572.370, -1686.986, 2114.074, 0.000, 0.000, 1350.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(19174, 1553.619, -1688.576, 2113.203, 360.000, 90.000, 1890.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "freighter5", 0);
	tmpobjid = CreateDynamicObject(19437, 1556.034, -1689.557, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1556.024, -1683.504, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1688.731, 2114.857, 180.000, 90.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(2164, 1572.534, -1665.802, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2165, 1568.393, -1668.176, 2112.035, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 7, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1560.762, -1685.972, 2114.845, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19366, 1559.893, -1671.264, 2117.019, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(19366, 1560.774, -1671.264, 2117.019, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(2161, 1571.205, -1665.789, 2112.025, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1569.875, -1665.789, 2112.025, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(18880, 1560.762, -1685.972, 2115.426, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18075, 1560.403, -1677.590, 2115.515, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10778, "airportcpark_sfse", "ws_fluorescent2", -1);
	tmpobjid = CreateDynamicObject(18762, 1560.517, -1674.801, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.387, -1674.801, 2117.937, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19458, 1563.266, -1663.393, 2110.486, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1685.931, 2111.925, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1688.873, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1684.210, 2111.925, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(2166, 1567.671, -1668.194, 2112.045, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.517, -1674.971, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19437, 1556.034, -1686.625, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1687.322, 2111.925, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(19825, 1571.348, -1665.818, 2114.237, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -983041);
	tmpobjid = CreateDynamicObject(2268, 1567.124, -1666.270, 2113.436, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.387, -1674.971, 2117.957, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.599, -1674.981, 2117.957, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2268, 1568.175, -1666.270, 2113.646, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(19458, 1574.266, -1683.245, 2113.876, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(18880, 1569.564, -1683.283, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(630, 1566.507, -1682.626, 2113.186, 0.000, 0.000, -132.600, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", -983041);
	tmpobjid = CreateDynamicObject(2855, 1569.708, -1666.002, 2113.346, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 15040, "cuntcuts", "GB_novels06", 0);
	tmpobjid = CreateDynamicObject(18075, 1557.317, -1662.977, 2115.485, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18075, 1558.387, -1662.977, 2115.485, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19458, 1563.374, -1663.404, 2113.737, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 11100, "bendytunnel_sfse", "Bow_sub_walltiles", -1);
	tmpobjid = CreateDynamicObject(949, 1574.653, -1666.437, 2112.515, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 9254, "carparkssfn", "decoacwallbtm1_256", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4003, "cityhall_tr_lan", "foliage256", 0);
	tmpobjid = CreateDynamicObject(2268, 1574.706, -1669.180, 2113.566, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18081, "cj_barb", "barberspic1", 0);
	tmpobjid = CreateDynamicObject(2267, 1570.088, -1672.028, 2114.146, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4003, "cityhall_tr_lan", "mc_flags1", 0);
	tmpobjid = CreateDynamicObject(18075, 1569.578, -1662.977, 2115.485, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18075, 1570.638, -1662.977, 2115.485, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18075, 1570.828, -1662.977, 2115.485, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.934, -1683.283, 2114.836, 0.000, 90.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1567.903, -1683.283, 2115.427, 0.000, 90.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2855, 1570.881, -1671.583, 2113.062, 15.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 15040, "cuntcuts", "GB_novels06", 0);
	tmpobjid = CreateDynamicObject(2161, 1562.193, -1665.509, 2112.025, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(949, 1565.791, -1699.610, 2112.515, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 9254, "carparkssfn", "decoacwallbtm1_256", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4003, "cityhall_tr_lan", "foliage256", 0);
	tmpobjid = CreateDynamicObject(2608, 1562.366, -1665.679, 2112.985, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1563.213, -1690.503, 2114.835, 0.000, 90.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1563.213, -1690.503, 2115.395, 0.000, 90.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18981, 1561.996, -1702.479, 2111.506, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19458, 1558.537, -1690.546, 2113.786, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(2263, 1567.804, -1667.946, 2113.064, -10.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19458, 1559.288, -1695.376, 2113.786, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1569.697, -1690.566, 2113.786, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(2165, 1567.753, -1686.855, 2112.035, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19458, 1566.428, -1688.104, 2113.786, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(2166, 1568.641, -1686.834, 2112.045, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19436, 1567.131, -1683.351, 2113.787, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1571.316, -1690.266, 2113.786, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.438, -1688.104, 2116.818, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1563.307, -1663.400, 2117.018, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1571.318, -1690.254, 2116.818, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1572.458, -1688.233, 2113.786, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1574.268, -1683.361, 2113.788, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1572.437, -1688.104, 2110.434, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1574.267, -1683.374, 2110.434, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1571.337, -1683.374, 2117.124, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1572.397, -1688.204, 2117.124, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.477, -1688.204, 2117.124, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1571.307, -1690.224, 2117.124, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2263, 1567.764, -1668.919, 2112.883, 10.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19458, 1571.307, -1690.244, 2110.434, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.447, -1688.234, 2110.434, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19476, 1567.750, -1668.604, 2112.895, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "POLICE OFFICER", 120, "Ariel", 35, 1, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(2161, 1569.555, -1690.150, 2112.015, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1569.555, -1690.150, 2113.346, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1568.235, -1690.150, 2112.014, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(949, 1566.982, -1683.888, 2112.515, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 9254, "carparkssfn", "decoacwallbtm1_256", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4003, "cityhall_tr_lan", "foliage256", 0);
	tmpobjid = CreateDynamicObject(2855, 1568.287, -1689.903, 2113.366, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "GB_novels06", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 15040, "cuntcuts", "GB_novels06", 0);
	tmpobjid = CreateDynamicObject(2268, 1567.674, -1689.689, 2113.907, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.889, -1671.927, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2267, 1570.957, -1683.470, 2114.146, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4003, "cityhall_tr_lan", "mc_flags1", 0);
	tmpobjid = CreateDynamicObject(19436, 1567.141, -1683.361, 2110.435, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1567.587, -1674.221, 2983.030, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", -1);
	tmpobjid = CreateDynamicObject(19436, 1567.141, -1683.361, 2116.807, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(2263, 1567.794, -1667.946, 2113.064, -10.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18981, 1564.179, -1695.669, 2115.958, 0.000, 90.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.329, -1695.376, 2113.786, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1563.059, -1700.197, 2113.786, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.317, -1695.424, 2110.423, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1561.857, -1700.134, 2110.423, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.318, -1695.422, 2116.798, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1561.627, -1700.161, 2116.798, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.955, -1692.966, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1558.547, -1690.570, 2116.798, 0.000, 0.000, 1170.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19458, 1559.317, -1695.493, 2110.423, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1558.546, -1690.563, 2110.423, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1562.749, -1690.583, 2117.096, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1559.327, -1695.413, 2117.096, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1566.278, -1695.413, 2117.096, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1561.558, -1700.125, 2117.096, 0.000, 0.000, 1170.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19458, 1569.690, -1690.583, 2110.434, 0.000, 0.000, 990.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.965, -1691.396, 2113.777, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.165, -1693.686, 2113.777, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.175, -1693.716, 2110.416, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.965, -1693.006, 2110.416, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.985, -1691.426, 2110.416, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.985, -1691.426, 2117.097, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.985, -1692.996, 2117.097, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1560.085, -1693.706, 2117.097, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(2165, 1564.255, -1697.489, 2112.035, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2166, 1564.229, -1696.694, 2112.045, 0.000, 0.000, 1440.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(949, 1565.791, -1691.119, 2112.515, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 9254, "carparkssfn", "decoacwallbtm1_256", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4003, "cityhall_tr_lan", "foliage256", 0);
	tmpobjid = CreateDynamicObject(2161, 1566.236, -1692.187, 2111.975, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1566.236, -1692.187, 2113.326, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1566.236, -1693.507, 2111.985, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.889, -1673.668, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2268, 1564.495, -1699.601, 2113.526, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18081, "cj_barb", "barberspic1", 0);
	tmpobjid = CreateDynamicObject(19372, 1558.465, -1664.609, 2113.857, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(2611, 1566.194, -1697.091, 2113.949, 0.000, -0.100, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -983041);
	SetDynamicObjectMaterial(tmpobjid, 3, 14668, "711c", "gun_ceiling1128", 0);
	tmpobjid = CreateDynamicObject(1763, 1561.579, -1692.814, 2112.035, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 13003, "ce_racestart", "CJ_TARTAN", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(2166, 1560.758, -1697.474, 2112.045, 0.000, 0.000, 1710.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2165, 1559.893, -1697.489, 2112.035, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.889, -1674.889, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2161, 1564.364, -1700.009, 2111.985, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2268, 1563.845, -1699.601, 2113.687, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18081, "cj_barb", "barberspic1", 0);
	tmpobjid = CreateDynamicObject(19366, 1558.618, -1665.334, 2110.458, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1563.427, -1696.938, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(1721, 1560.487, -1696.658, 2112.035, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2608, 1571.356, -1665.929, 2112.975, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.889, -1670.748, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2268, 1561.485, -1699.591, 2113.436, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2268, 1560.844, -1699.591, 2113.606, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(19983, 1552.024, -1677.094, 2114.667, 360.000, 180.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1552.024, -1672.514, 2114.667, 360.000, 180.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19983, 1552.013, -1673.461, 2114.317, 450.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", -1);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19458, 1555.206, -1690.216, 2113.786, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19458, 1553.537, -1688.605, 2113.786, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1687.303, 2113.165, 90.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1687.303, 2114.004, 90.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(2267, 1561.088, -1692.119, 2114.146, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4003, "cityhall_tr_lan", "mc_flags1", 0);
	tmpobjid = CreateDynamicObject(19437, 1565.675, -1690.576, 2116.790, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19858, 1576.510, -1677.392, 2981.730, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19445, 1567.750, -1670.580, 2982.990, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(2610, 1570.390, -1670.932, 2982.090, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(2610, 1569.909, -1670.932, 2982.090, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(2610, 1569.419, -1670.932, 2982.090, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(2610, 1568.928, -1670.932, 2982.090, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1570.988, -1670.809, 2981.280, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1571.608, -1670.809, 2981.280, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.449, -1671.846, 2981.270, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(3089, 1567.384, -1671.963, 2982.581, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 18646, "matcolours", "grey-60-percent", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.449, -1673.566, 2981.270, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.449, -1670.573, 2984.052, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1567.490, -1678.278, 2982.990, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1563.856, -1675.054, 2983.000, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1567.449, -1670.404, 2984.662, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(1721, 1572.229, -1670.809, 2981.280, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2240, 1554.291, -1681.454, 2112.515, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19174, 1553.619, -1686.946, 2112.342, 360.000, 90.000, 1890.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "freighter5", 0);
	tmpobjid = CreateDynamicObject(19174, 1553.629, -1688.137, 2113.203, 360.000, 90.000, 1890.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "freighter5", 0);
	tmpobjid = CreateDynamicObject(18981, 1548.702, -1649.383, 2108.902, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981, 1548.702, -1674.362, 2108.902, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981, 1548.702, -1699.364, 2108.902, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981, 1548.702, -1724.323, 2108.902, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18981, 1548.702, -1749.319, 2108.902, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "mono2_sfe", -1);
	tmpobjid = CreateDynamicObject(18880, 1585.374, -1674.649, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(630, 1564.993, -1666.137, 2113.186, 0.000, 0.000, -28.300, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", -983041);
	tmpobjid = CreateDynamicObject(2240, 1569.092, -1676.263, 2112.545, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(630, 1569.017, -1676.292, 2113.186, 0.000, 0.000, -132.600, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", -983041);
	tmpobjid = CreateDynamicObject(19174, 1558.069, -1690.136, 2114.274, 0.000, 0.000, 1620.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18062, "ab_sfammuitems01", "ammu_gunboard3", 0);
	tmpobjid = CreateDynamicObject(19437, 1568.378, -1675.042, 2983.030, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", -1);
	tmpobjid = CreateDynamicObject(19174, 1558.049, -1683.885, 2114.274, 0.000, 0.000, 1800.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18062, "ab_sfammuitems01", "ammu_gunboard4", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.899, -1673.776, 2982.571, 0.000, -90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.899, -1670.985, 2984.631, 0.000, -90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19436, 1569.809, -1681.831, 2111.287, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1569.819, -1676.310, 2111.287, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1569.779, -1682.381, 2111.287, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19436, 1569.800, -1682.382, 2113.877, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19436, 1569.820, -1681.842, 2113.877, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(18880, 1575.899, -1670.985, 2984.071, 0.000, -90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.899, -1671.807, 2982.561, 0.000, -90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1555.981, -1688.731, 2114.857, 180.000, 90.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 4510, "barrierblk", "yellow_64", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "black64", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 4510, "barrierblk", "yellow_64", 0);
	tmpobjid = CreateDynamicObject(19445, 1575.841, -1678.595, 2980.759, 180.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1575.841, -1666.994, 2980.729, 180.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1575.899, -1670.985, 2984.071, 0.000, -90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1575.899, -1670.985, 2984.631, 0.000, -90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(3858, 1575.916, -1668.418, 2987.052, 0.000, 0.000, 135.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(3858, 1575.916, -1668.418, 2987.052, 0.000, 0.000, 135.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(3858, 1575.928, -1681.095, 2981.116, 0.000, 0.000, 135.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(3858, 1575.923, -1664.480, 2981.158, 0.000, 0.000, 135.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1674.762, 2984.691, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1673.801, 2984.691, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1673.801, 2984.691, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1670.880, 2984.691, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1671.791, 2984.691, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1675.643, 2984.491, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1675.123, 2984.201, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1671.862, 2982.699, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1673.762, 2982.699, 90.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1673.762, 2983.931, 90.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1671.812, 2983.931, 90.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1672.052, 2984.041, 180.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1575.912, -1673.543, 2984.061, 180.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19445, 1575.941, -1666.994, 2980.698, 180.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1575.941, -1678.586, 2980.708, 180.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1582.322, -1675.219, 2984.633, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1582.130, -1675.340, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1582.131, -1675.089, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19361, 1574.005, -1670.581, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(19361, 1576.683, -1670.552, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(19458, 1569.797, -1678.474, 2117.114, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(19445, 1577.289, -1679.920, 2982.980, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1578.409, -1670.309, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1582.322, -1670.419, 2983.872, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1583.260, -1679.939, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1573.490, -1675.360, 2982.990, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1582.130, -1670.550, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1582.129, -1670.309, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19361, 1583.713, -1675.072, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(18880, 1582.322, -1670.419, 2984.643, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19361, 1583.804, -1670.552, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(19361, 1583.804, -1670.291, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(19361, 1576.683, -1670.281, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(19361, 1583.843, -1675.363, 2983.001, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", 0);
	tmpobjid = CreateDynamicObject(19445, 1577.289, -1665.759, 2983.000, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1580.809, -1679.939, 2982.980, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.592, -1677.412, 2981.760, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19858, 1582.602, -1677.442, 2981.790, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19445, 1583.260, -1665.419, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.582, -1677.472, 2981.760, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19858, 1582.582, -1677.452, 2983.312, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19858, 1582.612, -1677.432, 2983.322, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(18880, 1585.483, -1670.429, 2983.872, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1585.374, -1670.948, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1585.613, -1670.948, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19858, 1582.592, -1677.412, 2983.312, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18880, 1585.624, -1674.649, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1585.651, -1679.569, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1585.360, -1679.569, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.632, -1677.432, 2983.291, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19445, 1585.360, -1666.187, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1585.641, -1666.187, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(18880, 1585.503, -1670.429, 2984.623, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19858, 1582.632, -1677.432, 2981.730, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19858, 1576.540, -1677.382, 2981.750, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19858, 1576.530, -1677.442, 2981.740, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19858, 1576.520, -1677.412, 2981.760, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(18981, 1598.455, -1675.920, 2980.770, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10756, "airportroads_sfse", "Heliconcrete", -1);
	tmpobjid = CreateDynamicObject(19445, 1580.809, -1665.859, 2982.980, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19087, 1582.622, -1678.622, 2983.306, 225.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1582.622, -1676.272, 2983.306, 225.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1582.700, -1669.102, 2981.783, 225.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1582.651, -1676.273, 2981.805, 225.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.875, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1589.013, -1670.517, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1588.962, -1670.509, 2984.052, 0.000, 90.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1588.962, -1670.509, 2984.623, 0.000, 90.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1590.743, -1670.517, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1595.652, -1670.437, 2982.990, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1593.972, -1666.527, 2982.990, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1590.191, -1663.417, 2982.990, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19325, 1567.423, -1670.798, 2986.083, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19445, 1585.681, -1665.656, 2982.990, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19373, 1587.300, -1670.478, 2979.740, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1593.952, -1666.527, 2979.730, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1595.602, -1670.419, 2979.730, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1590.570, -1663.438, 2979.730, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1585.709, -1665.638, 2979.730, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19373, 1587.300, -1670.548, 2985.714, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1585.710, -1665.607, 2986.053, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1590.590, -1663.426, 2986.053, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19983, 1585.844, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1593.971, -1665.607, 2986.053, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1595.651, -1670.428, 2986.053, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19939, 1594.066, -1666.069, 2983.311, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.066, -1666.069, 2982.761, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.066, -1666.069, 2982.210, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2983.191, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2983.191, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2983.111, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2983.111, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.951, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2983.031, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.951, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.871, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19430, 1593.943, -1666.063, 2982.040, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "barbersmir1", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.651, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.871, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.571, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.651, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2983.031, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.490, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.410, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.330, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2982.090, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.571, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.490, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2981.990, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.330, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.588, 2982.410, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2981.900, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2981.810, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1666.549, 2981.720, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(18880, 1590.513, -1675.098, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2982.090, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2981.900, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2981.990, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2981.810, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19939, 1594.346, -1665.589, 2981.720, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19373, 1587.300, -1670.538, 2980.564, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1585.693, -1670.517, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.346, -1670.544, 2982.330, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.866, -1670.544, 2982.330, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.875, -1670.544, 2983.941, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.284, -1670.544, 2983.941, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.346, -1670.544, 2983.861, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.927, -1670.544, 2983.861, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.927, -1670.544, 2983.781, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.436, -1670.544, 2983.781, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.436, -1670.544, 2983.701, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.886, -1670.544, 2983.701, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.886, -1670.544, 2983.621, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.336, -1670.544, 2983.621, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.336, -1670.544, 2983.541, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.887, -1670.544, 2983.541, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.887, -1670.544, 2983.461, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.456, -1670.544, 2983.461, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.456, -1670.544, 2983.381, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.917, -1670.544, 2983.381, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.917, -1670.544, 2983.291, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.277, -1670.544, 2983.291, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.277, -1670.544, 2983.200, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.897, -1670.544, 2983.200, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.897, -1670.544, 2983.110, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.427, -1670.544, 2983.110, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1586.704, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.084, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.044, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.914, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.883, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1586.743, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.834, -1670.544, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1591.328, -1670.484, 2984.180, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1591.328, -1670.484, 2984.480, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1590.607, -1670.494, 2984.120, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1589.156, -1670.494, 2984.120, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18981, 1597.535, -1673.509, 2985.243, 0.000, 90.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(2855, 1586.005, -1666.669, 2982.640, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(19172, 1585.786, -1666.219, 2983.450, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "cop_notice", 0);
	tmpobjid = CreateDynamicObject(2608, 1586.003, -1665.552, 2982.240, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2608, 1586.003, -1666.303, 2982.240, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(1763, 1588.445, -1669.929, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 13003, "ce_racestart", "CJ_TARTAN", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19172, 1592.356, -1670.329, 2982.990, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(19373, 1587.300, -1675.068, 2980.571, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1588.782, -1675.098, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1590.899, -1674.381, 2983.030, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19373, 1587.300, -1675.068, 2985.732, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1585.851, -1675.098, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19373, 1592.180, -1675.048, 2983.011, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19983, 1591.328, -1670.484, 2984.180, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1588.832, -1675.099, 2984.052, 0.000, 90.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1588.832, -1675.099, 2984.613, 0.000, 90.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.686, -1675.066, 2982.330, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.606, -1675.066, 2982.330, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.606, -1675.066, 2983.961, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.676, -1675.066, 2983.961, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1586.006, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.647, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.607, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1586.037, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1587.787, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1586.776, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1586.806, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1587.817, -1675.066, 2983.961, 0.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.686, -1675.066, 2983.881, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.881, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.801, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.721, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.641, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.551, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.460, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.370, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.280, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.190, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.100, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.586, -1675.066, 2983.010, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 18646, "matcolours", "grey-90-percent", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1595.469, -1675.140, 2982.990, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19983, 1590.887, -1675.066, 2984.191, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1590.887, -1675.066, 2984.471, 0.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1590.386, -1675.066, 2984.181, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1588.925, -1675.066, 2984.181, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19437, 1590.899, -1671.411, 2983.030, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(2265, 1593.398, -1667.917, 2982.820, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(19172, 1588.565, -1663.538, 2982.990, 0.000, 0.000, 1080.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(2265, 1593.398, -1668.498, 2982.820, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2265, 1593.398, -1669.078, 2982.820, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(2265, 1591.899, -1664.008, 2982.820, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2265, 1592.459, -1664.017, 2982.820, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(19445, 1585.658, -1679.841, 2982.990, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19444, 1593.836, -1675.991, 2983.021, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(2395, 1593.939, -1679.489, 2984.361, 0.000, 90.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19444, 1593.836, -1680.271, 2983.021, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(18880, 1593.853, -1681.068, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1593.853, -1682.808, 2981.270, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1593.873, -1680.968, 2984.631, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1593.883, -1680.968, 2984.061, 0.000, 90.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1598.760, -1682.968, 2982.990, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1590.208, -1683.018, 2982.990, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1598.760, -1679.747, 2982.990, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1585.670, -1680.007, 2979.719, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1585.670, -1680.007, 2986.029, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1588.921, -1682.997, 2986.029, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1588.921, -1682.997, 2979.716, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1598.743, -1679.966, 2979.716, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1598.743, -1682.966, 2979.716, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1598.743, -1675.146, 2979.716, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1593.863, -1676.187, 2979.716, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1593.860, -1676.217, 2986.029, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1598.721, -1679.858, 2986.029, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1598.781, -1682.929, 2986.029, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1595.461, -1675.158, 2986.029, 0.000, 0.000, 810.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1593.821, -1676.157, 2986.029, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1593.821, -1676.127, 2979.728, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19373, 1592.230, -1675.148, 2979.730, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19983, 1593.759, -1676.805, 2981.329, 360.000, 360.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.759, -1676.805, 2983.711, 360.000, 360.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.759, -1679.445, 2983.291, 360.000, 360.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.759, -1679.445, 2981.169, 360.000, 360.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.768, -1679.475, 2981.489, 360.000, 450.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.768, -1679.475, 2984.261, 360.000, 450.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2855, 1590.516, -1663.840, 2982.660, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(19172, 1585.744, -1679.948, 2982.990, 0.000, 0.000, 1170.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(2198, 1588.159, -1679.524, 2981.280, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 4, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2198, 1589.159, -1680.544, 2981.280, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 4, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2265, 1586.237, -1676.717, 2983.000, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2265, 1586.237, -1676.127, 2983.220, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2855, 1593.117, -1675.528, 2982.930, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(2855, 1591.626, -1675.528, 2982.930, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper02", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(2265, 1591.348, -1675.726, 2983.000, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2265, 1591.918, -1675.726, 2983.000, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2265, 1592.489, -1675.726, 2983.000, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 7009, "vgndwntwn1", "newpolice_sa", 0);
	tmpobjid = CreateDynamicObject(19858, 1582.602, -1667.952, 2981.790, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.582, -1667.922, 2981.780, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.572, -1667.982, 2981.770, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.572, -1667.982, 2981.770, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19858, 1582.592, -1667.952, 2981.760, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(19858, 1576.700, -1667.952, 2981.760, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", -1);
	tmpobjid = CreateDynamicObject(19858, 1576.730, -1667.992, 2981.770, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19858, 1576.710, -1667.902, 2981.780, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19858, 1576.650, -1667.952, 2981.790, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19087, 1582.651, -1678.623, 2981.805, 225.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1582.700, -1666.812, 2981.783, 225.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1577.926, -1676.273, 2981.777, 225.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1577.926, -1678.563, 2981.777, 225.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1578.018, -1669.113, 2981.784, 225.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19087, 1578.018, -1666.792, 2981.784, 225.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.378, -1669.115, 2982.422, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.378, -1666.793, 2982.422, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.378, -1676.276, 2982.332, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.378, -1678.565, 2982.332, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1583.159, -1678.625, 2982.312, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1583.159, -1676.274, 2982.312, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1583.169, -1676.274, 2983.863, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1583.169, -1678.625, 2983.863, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1583.169, -1669.102, 2982.261, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1583.169, -1666.811, 2982.261, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1582.738, -1666.811, 2981.821, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1582.738, -1669.102, 2981.821, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1582.668, -1676.274, 2981.821, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1582.668, -1678.615, 2981.821, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1582.668, -1678.615, 2983.352, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1582.668, -1676.275, 2983.352, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.896, -1676.275, 2981.801, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.896, -1678.565, 2981.801, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.976, -1669.114, 2981.821, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19883, 1577.976, -1666.792, 2981.821, 180.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19172, 1571.355, -1674.960, 2983.460, 0.000, 0.000, 900.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(2008, 1596.877, -1678.071, 2981.281, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 2, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 6, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1593.848, -1675.891, 2982.990, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", -1);
	tmpobjid = CreateDynamicObject(19983, 1593.859, -1682.666, 2984.091, 360.000, 360.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.859, -1681.206, 2984.091, 360.000, 360.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.869, -1681.066, 2984.191, 450.000, 360.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1593.869, -1681.066, 2984.482, 450.000, 360.000, 360.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.496, -1674.516, 2983.971, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.496, -1671.095, 2983.971, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.496, -1672.045, 2984.011, 360.000, 630.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.496, -1670.934, 2984.011, 360.000, 630.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.496, -1670.934, 2984.481, 360.000, 630.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19983, 1585.496, -1672.015, 2984.481, 360.000, 630.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1590.889, -1672.911, 2983.030, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14881, "gf5", "mp_jail_wall", -1);
	tmpobjid = CreateDynamicObject(19994, 1586.924, -1680.221, 2981.290, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(14793, 1571.577, -1680.197, 2984.571, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(14793, 1576.270, -1680.197, 2984.571, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(14793, 1597.370, -1680.197, 2984.571, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19089, 1582.253, -1675.123, 2984.491, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1582.253, -1675.123, 2984.001, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1582.253, -1670.392, 2984.011, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19089, 1582.253, -1670.392, 2984.501, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1582.006, -1670.395, 2983.971, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1578.556, -1670.395, 2983.971, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1578.556, -1675.125, 2983.971, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19983, 1582.007, -1675.125, 2983.971, 180.000, 180.000, 180.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(1721, 1572.117, -1674.830, 2981.280, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1572.718, -1674.830, 2981.280, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1571.517, -1674.830, 2981.280, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1570.417, -1674.830, 2981.280, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(1721, 1569.807, -1674.830, 2981.280, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18075, 1578.263, -1683.022, 2984.792, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18075, 1577.202, -1683.023, 2984.792, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18075, 1583.774, -1662.817, 2984.792, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(18075, 1582.714, -1662.817, 2984.792, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19940, 1557.868, -1670.066, 2113.916, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 8396, "sphinx01", "luxorceiling02_128", -1);
	tmpobjid = CreateDynamicObject(18762, 1564.599, -1674.801, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.719, -1674.801, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.719, -1674.981, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.197, -1674.981, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.077, -1674.981, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.077, -1674.801, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.197, -1674.801, 2117.937, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.517, -1680.203, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.517, -1680.353, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.387, -1680.353, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1560.387, -1680.203, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.609, -1680.203, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.609, -1680.363, 2117.937, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.719, -1680.363, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1564.719, -1680.203, 2117.957, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.097, -1680.203, 2117.957, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.197, -1680.203, 2117.967, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.197, -1680.353, 2117.947, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(18762, 1556.097, -1680.353, 2117.937, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19994, 1590.464, -1679.881, 2981.300, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(4150, 1528.750, -1661.588, 2109.290, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4186, 1476.268, -1693.858, 2116.290, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3985, 1476.338, -1632.208, 2108.790, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(712, 1509.208, -1669.938, 2119.229, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(713, 1495.269, -1708.318, 2109.510, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4163, 1465.968, -1731.568, 2109.290, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3997, 1479.348, -1801.540, 2109.360, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3980, 1481.188, -1785.068, 2119.239, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4002, 1479.869, -1790.400, 2152.550, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3994, 1476.130, -1593.218, 2109.148, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(620, 1479.290, -1666.179, 2109.489, 356.858, 0.000, 3.137, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(647, 1499.359, -1620.160, 2112.330, 356.850, 0.000, 359.540, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(647, 1476.540, -1665.250, 2112.090, 356.850, 0.000, 357.260, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(647, 1483.509, -1665.438, 2112.090, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4016, 1493.718, -1547.180, 2114.408, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4144, 1438.680, -1518.468, 2109.128, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4008, 1405.170, -1544.530, 2116.760, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4206, 1476.438, -1640.170, 2110.530, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(700, 1494.208, -1694.438, 2110.458, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3978, 1392.000, -1654.938, 2107.458, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4005, 1414.500, -1681.479, 2122.128, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4197, 1392.088, -1655.130, 2107.458, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4006, 1406.948, -1620.318, 2128.800, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(4146, 1367.588, -1583.280, 2109.158, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19807, 1567.203, -1668.214, 2112.896, 0.000, 0.000, 170.200, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3975, 1575.119, -1675.710, 2109.900, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3858, 1552.018, -1673.497, 2112.035, 0.000, 0.000, 135.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(11711, 1552.113, -1674.778, 2115.017, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19808, 1560.417, -1670.963, 2112.836, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1579.130, -1675.119, 2985.942, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(14532, 1558.860, -1668.640, 2113.006, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1775, 1553.730, -1679.786, 2113.126, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2855, 1561.784, -1671.616, 2112.966, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1560.404, -1669.642, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16779, 1569.217, -1686.812, 2115.958, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16779, 1564.017, -1688.142, 2115.958, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2827, 1566.670, -1667.262, 2112.901, 0.000, 0.000, 274.100, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16779, 1564.017, -1695.813, 2115.958, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19830, 1570.212, -1665.953, 2113.365, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(334, 1553.731, -1687.484, 2113.106, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1808, 1571.930, -1670.338, 2112.035, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1567.675, -1666.910, 2112.035, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2202, 1570.705, -1671.496, 2112.035, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19813, 1565.810, -1668.401, 2112.305, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1562.037, -1683.335, 2116.866, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1570.897, -1683.335, 2116.866, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1569.017, -1672.215, 2116.866, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1561.953, -1690.484, 2116.926, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2202, 1570.835, -1683.955, 2112.035, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1568.265, -1688.140, 2112.035, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1560.772, -1688.913, 2116.916, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(14532, 1571.330, -1689.780, 2113.006, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1565.545, -1696.833, 2112.035, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1560.494, -1699.024, 2112.035, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2202, 1559.905, -1695.206, 2112.035, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19873, 1562.281, -1662.129, 2113.036, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19835, 1561.162, -1671.328, 2113.046, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16779, 1557.968, -1685.932, 2115.958, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1553.910, -1687.177, 2112.165, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2068, 1552.635, -1687.932, 2115.408, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2373, 1553.395, -1688.606, 2112.035, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(356, 1553.883, -1688.949, 2112.875, 715.000, 290.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(356, 1553.896, -1688.728, 2112.891, 715.000, 290.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(356, 1553.906, -1688.515, 2112.884, 715.000, 290.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(356, 1553.919, -1688.306, 2112.895, 715.000, 290.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(356, 1553.907, -1688.094, 2112.890, 715.000, 290.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(356, 1553.861, -1687.870, 2112.862, 715.000, 290.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(358, 1553.662, -1688.132, 2114.196, 0.000, 0.000, 272.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(334, 1553.731, -1687.324, 2113.106, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(334, 1553.731, -1686.533, 2113.106, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(334, 1553.731, -1687.324, 2113.106, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(334, 1553.731, -1686.964, 2113.106, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(334, 1553.731, -1686.754, 2113.106, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3013, 1553.903, -1688.811, 2112.165, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3013, 1553.903, -1687.900, 2112.165, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3013, 1553.903, -1688.320, 2112.165, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1554.050, -1686.596, 2112.165, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1553.990, -1686.947, 2112.395, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2619, 1553.658, -1686.799, 2114.447, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19813, 1573.358, -1674.957, 2981.610, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(348, 1554.008, -1686.759, 2112.515, 90.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1555.271, -1689.798, 2112.165, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1554.400, -1689.798, 2112.165, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1554.400, -1689.798, 2112.395, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1554.400, -1689.798, 2112.615, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1554.400, -1689.798, 2112.846, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1555.271, -1689.798, 2112.385, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1555.271, -1689.798, 2112.615, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1554.810, -1689.798, 2113.056, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(3013, 1554.794, -1689.820, 2113.306, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(358, 1555.343, -1689.644, 2112.239, -6.000, 280.000, 632.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(358, 1555.132, -1689.618, 2112.246, -6.000, 280.000, 632.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(358, 1554.169, -1689.652, 2112.337, -6.000, 280.000, 632.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(358, 1554.357, -1689.655, 2112.317, -6.000, 280.000, 632.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19302, 1579.413, -1670.450, 2982.521, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19302, 1581.154, -1670.450, 2982.521, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1579.130, -1670.399, 2985.942, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19302, 1579.753, -1675.195, 2985.394, 180.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19302, 1580.804, -1675.205, 2985.384, 180.000, 90.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19302, 1579.403, -1675.211, 2982.521, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19302, 1581.144, -1675.211, 2982.521, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(11706, 1568.150, -1670.950, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2358, 1555.271, -1689.798, 2112.836, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(11705, 1570.103, -1670.967, 2982.931, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(11727, 1574.270, -1674.966, 2983.719, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(11727, 1573.560, -1674.966, 2983.719, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1586.831, -1670.536, 2981.280, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1592.253, -1670.489, 2986.151, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2165, 1588.973, -1665.392, 2981.280, 0.000, 0.000, 540.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(14532, 1586.287, -1670.036, 2982.250, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2161, 1585.792, -1664.385, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2161, 1585.792, -1664.385, 2982.630, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2161, 1585.792, -1665.715, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2161, 1585.792, -1667.045, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1588.385, -1663.857, 2981.280, 0.000, 0.000, 360.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1721, 1593.698, -1667.939, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1721, 1593.698, -1668.550, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1721, 1593.698, -1669.161, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1590.925, -1675.060, 2987.483, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1586.683, -1675.060, 2985.291, 90.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2164, 1590.624, -1682.919, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1721, 1592.468, -1663.670, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1721, 1591.837, -1663.670, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1721, 1593.108, -1663.670, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2066, 1590.387, -1664.000, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2066, 1590.967, -1664.000, 2981.280, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1808, 1586.000, -1667.870, 2981.280, 0.000, 0.000, 90.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1593.765, -1677.566, 2982.311, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2165, 1587.382, -1675.662, 2981.280, 0.000, 0.000, 630.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(1714, 1586.074, -1676.319, 2981.280, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2164, 1587.072, -1682.919, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2164, 1588.844, -1682.919, 2981.280, 0.000, 0.000, 180.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2986, 1591.788, -1682.898, 2984.192, 360.000, 630.000, 450.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16780, 1589.723, -1680.186, 2985.293, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16780, 1596.415, -1678.935, 2985.293, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(16780, 1590.215, -1666.560, 2985.173, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2197, 1591.974, -1676.230, 2981.258, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2197, 1592.654, -1676.240, 2981.258, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2197, 1593.345, -1676.230, 2981.258, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(2197, 1591.293, -1676.250, 2981.258, 0.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19994, 1590.474, -1679.881, 2981.280, 0.000, 0.000, 270.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19994, 1586.914, -1680.221, 2981.280, 0.000, 0.000, 450.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1585.486, -1672.662, 2987.194, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19325, 1593.859, -1682.414, 2987.384, 90.000, 0.000, 0.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19994, 1596.185, -1676.951, 2981.300, 0.000, 0.000, 720.000, 1, -1, -1, 450.000, 450.000);
	tmpobjid = CreateDynamicObject(19994, 1597.026, -1678.931, 2981.300, 0.000, 0.000, 1350.000, 1, -1, -1, 450.000, 450.000);

	///2 floor

	tmpobjid = CreateDynamicObject(18981, 1574.162, -1682.075, 60.671, 180.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(18756, 1565.427, -1692.328, 63.131, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4829, "airport_las", "liftdoorsac256", 0);
	tmpobjid = CreateDynamicObject(18756, 1565.517, -1696.129, 63.091, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 4829, "airport_las", "liftdoorsac256", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.526, -1694.222, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1563.415, -1694.222, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.526, -1694.202, 64.121, 90.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1567.526, -1694.202, 61.101, 90.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1563.235, -1698.049, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19445, 1567.734, -1698.059, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(18981, 1574.123, -1682.075, 65.181, 180.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1572.466, -1693.317, 62.941, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19445, 1569.046, -1692.696, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(19174, 1568.835, -1690.469, 63.171, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12855, "cunte_cop", "sw_PD", 0);
	tmpobjid = CreateDynamicObject(1499, 1567.096, -1682.487, 61.191, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 18031, "cj_exp", "mp_cloth_wall", 0);
	tmpobjid = CreateDynamicObject(19378, 1581.254, -1688.918, 61.121, 540.000, 450.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14709, "lamidint2", "mp_apt1_bathfloor1", -1);
	tmpobjid = CreateDynamicObject(1721, 1562.159, -1691.051, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1562.159, -1691.662, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1999, 1568.078, -1676.958, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19387, 1561.874, -1688.708, 62.951, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19387, 1561.794, -1688.718, 62.971, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(1499, 1561.816, -1689.447, 61.191, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 18031, "cj_exp", "mp_cloth_wall", 0);
	tmpobjid = CreateDynamicObject(19437, 1569.033, -1685.547, 62.941, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.934, -1692.696, 60.351, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1569.034, -1692.716, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6340, "rodeo05_law2", "citywall6", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.944, -1692.716, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.942, -1692.696, 66.211, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1572.453, -1693.297, 66.211, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1572.433, -1693.297, 60.351, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1567.730, -1698.119, 66.221, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1567.700, -1698.039, 60.351, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1565.531, -1694.208, 65.891, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18880, 1567.526, -1694.202, 64.561, 90.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1561.706, -1693.316, 62.951, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(14401, 1585.198, -1682.219, 61.501, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19445, 1561.883, -1694.277, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19355, 1560.127, -1693.293, 62.941, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	SetDynamicObjectMaterial(tmpobjid, 9, 14666, "genintintsex", "mp_porn_wall", 0);
	tmpobjid = CreateDynamicObject(19328, 1568.619, -1680.060, 62.851, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 17511, "stadium_lae2", "ticketsnprice_lae2", 0);
	tmpobjid = CreateDynamicObject(19328, 1568.620, -1673.721, 62.621, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 11631, "mp_ranchcut", "CJ_PAINTING20", 0);
	tmpobjid = CreateDynamicObject(2161, 1560.018, -1682.641, 61.191, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19445, 1563.260, -1698.039, 60.351, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.736, -1693.306, 60.351, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.784, -1694.946, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.794, -1688.587, 59.591, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.793, -1688.123, 60.431, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.795, -1688.123, 65.581, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.785, -1681.285, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19174, 1557.741, -1682.631, 63.831, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1689.129, 65.621, 180.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1555.473, -1693.275, 59.591, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.726, -1693.306, 66.221, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1563.247, -1694.847, 66.221, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.893, -1694.266, 60.351, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.773, -1694.266, 59.591, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.893, -1694.266, 66.231, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.795, -1694.316, 62.931, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.773, -1694.266, 65.971, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(2161, 1560.018, -1682.641, 62.531, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.234, -1676.319, 62.581, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1555.484, -1682.544, 65.971, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19355, 1557.405, -1682.554, 65.971, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.709, 63.451, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.038, 63.451, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.038, 63.361, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.699, 63.361, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1560.106, -1693.275, 59.591, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.699, 63.271, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.069, 63.271, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.069, 63.171, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.709, 63.171, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.709, 63.061, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.049, 63.061, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.029, 62.951, 360.000, 270.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.669, 62.951, 360.000, 270.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1687.048, 65.621, 180.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1555.475, -1682.534, 62.941, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	SetDynamicObjectMaterial(tmpobjid, 9, 14666, "genintintsex", "mp_porn_wall", 0);
	tmpobjid = CreateDynamicObject(19355, 1560.135, -1682.534, 62.941, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	SetDynamicObjectMaterial(tmpobjid, 9, 14666, "genintintsex", "mp_porn_wall", 0);
	tmpobjid = CreateDynamicObject(19355, 1556.926, -1682.524, 62.941, 0.000, 0.000, 1170.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	SetDynamicObjectMaterial(tmpobjid, 9, 14666, "genintintsex", "mp_porn_wall", 0);
	tmpobjid = CreateDynamicObject(19355, 1556.917, -1693.293, 62.941, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	SetDynamicObjectMaterial(tmpobjid, 9, 14666, "genintintsex", "mp_porn_wall", 0);
	tmpobjid = CreateDynamicObject(19355, 1555.416, -1693.303, 62.941, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	SetDynamicObjectMaterial(tmpobjid, 9, 14666, "genintintsex", "mp_porn_wall", 0);
	tmpobjid = CreateDynamicObject(19355, 1557.533, -1693.255, 59.591, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1555.484, -1693.287, 65.971, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1690.120, 62.181, 360.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1560.095, -1693.287, 65.971, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19355, 1557.894, -1693.277, 65.971, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(18981, 1566.182, -1682.075, 60.691, 180.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", -1);
	tmpobjid = CreateDynamicObject(19355, 1553.823, -1692.646, 65.971, 0.000, 0.000, 720.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.120, 62.181, 360.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1553.824, -1695.866, 59.591, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(18981, 1565.933, -1682.075, 65.191, 180.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", -1);
	tmpobjid = CreateDynamicObject(2165, 1557.278, -1683.082, 61.191, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2164, 1554.899, -1682.653, 61.191, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.070, 62.181, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(14455, 1555.591, -1693.260, 62.841, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2608, 1555.529, -1682.761, 62.641, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1561.902, -1687.115, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.802, -1687.115, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.905, -1684.735, 60.421, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.897, -1684.735, 65.581, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.797, -1684.735, 65.581, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.795, -1684.735, 60.421, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.916, -1686.316, 66.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.906, -1683.505, 66.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.837, -1684.836, 60.431, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.837, -1684.836, 65.551, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.832, -1687.095, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.832, -1682.724, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.902, -1682.715, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19437, 1561.792, -1682.715, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.571, 62.191, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.920, 62.191, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.920, 63.781, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.781, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.681, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.591, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.501, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.411, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.321, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.231, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.141, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 63.041, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1682.229, 63.041, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.141, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.231, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.321, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.411, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.501, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.591, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 63.681, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.841, -1686.291, 61.771, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.841, -1683.550, 61.771, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1684.590, 62.941, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.840, -1681.939, 62.941, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.841, -1685.380, 62.931, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1561.841, -1684.479, 62.931, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1568.943, -1685.547, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(2180, 1556.303, -1690.711, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.069, 63.721, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.101, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1563.587, -1682.566, 60.321, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.925, -1686.324, 60.311, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.935, -1683.494, 60.311, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(1721, 1562.159, -1692.282, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19355, 1560.125, -1682.544, 59.591, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1557.645, -1682.554, 59.591, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1553.824, -1683.645, 59.591, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1560.094, -1682.544, 65.971, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19355, 1560.096, -1682.534, 66.001, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1558.715, -1682.534, 66.001, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.775, -1683.583, 59.591, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1561.785, -1686.313, 59.591, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1573.665, -1684.796, 62.941, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1692.880, 61.191, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1692.220, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1691.560, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1690.899, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1690.239, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1689.569, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1688.898, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1569.395, -1688.238, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 62.191, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1564.716, -1682.565, 60.421, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6340, "rodeo05_law2", "citywall6", -1);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1688.228, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(19437, 1561.892, -1681.495, 62.921, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6340, "rodeo05_law2", "citywall6", -1);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1692.869, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1692.199, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1691.529, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1690.869, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1690.199, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1689.549, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(11729, 1572.465, -1688.878, 61.191, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "gun_door1", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1688.005, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1688.675, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1689.345, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1690.006, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1690.676, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1691.347, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1692.007, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1569.707, -1692.647, 62.331, 0.000, 90.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1564.426, -1682.565, 65.571, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1688.435, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1572.806, -1692.046, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(19373, 1574.425, -1687.322, 62.941, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1689.026, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1689.736, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1690.417, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1691.088, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1691.758, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1692.378, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19921, 1572.148, -1693.059, 62.331, 0.000, 90.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19387, 1575.954, -1686.087, 62.941, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(19387, 1567.874, -1682.507, 62.951, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1564.525, -1682.545, 60.431, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19387, 1567.884, -1682.477, 62.961, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19982, 1567.853, -1676.319, 62.581, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1564.566, -1682.545, 65.551, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1568.936, -1683.506, 62.921, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19355, 1568.916, -1684.746, 60.331, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1568.906, -1683.495, 60.331, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1568.916, -1684.745, 66.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1568.906, -1683.505, 66.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1562.613, -1682.546, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.273, -1682.546, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1565.498, -1682.586, 60.321, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19982, 1563.421, -1682.550, 61.771, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1570.228, -1682.586, 60.331, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1570.228, -1682.586, 66.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19355, 1563.608, -1682.596, 66.201, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.781, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19437, 1566.293, -1682.556, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19437, 1569.433, -1682.556, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19437, 1562.603, -1682.556, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12944, "ce_bankalley2", "sw_brick04", -1);
	tmpobjid = CreateDynamicObject(19174, 1561.985, -1691.429, 63.301, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14842, "genintintpolicea", "cop_notice", 0);
	tmpobjid = CreateDynamicObject(1721, 1562.159, -1690.441, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1562.139, -1687.140, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1562.139, -1686.500, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1568.669, -1691.052, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1568.669, -1692.251, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1568.669, -1691.651, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1568.669, -1688.740, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1568.669, -1689.340, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19445, 1573.747, -1693.267, 62.941, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.671, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.561, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.441, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.331, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 63.211, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1564.442, -1682.550, 62.981, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19445, 1575.997, -1692.426, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "sw_floor1", -1);
	tmpobjid = CreateDynamicObject(19982, 1565.472, -1682.550, 61.771, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1563.462, -1682.550, 61.771, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1565.499, -1682.606, 66.201, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19387, 1567.884, -1682.477, 62.961, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19387, 1568.965, -1687.098, 62.961, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19174, 1568.609, -1677.884, 63.141, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(1721, 1565.818, -1682.859, 61.191, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1565.208, -1682.859, 61.191, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(14532, 1568.233, -1678.892, 62.161, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 2, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(1721, 1562.977, -1682.859, 61.191, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1721, 1563.607, -1682.859, 61.191, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.880, -1682.530, 62.991, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.432, -1682.550, 61.771, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18762, 1562.353, -1691.168, 60.701, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1562.353, -1686.177, 60.701, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1562.353, -1685.176, 60.701, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1565.286, -1683.035, 60.701, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1566.477, -1683.035, 60.701, 90.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1568.498, -1685.907, 60.701, 90.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1568.498, -1690.848, 60.701, 90.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1567.518, -1695.019, 60.701, 90.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1563.347, -1695.019, 60.701, 90.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(18762, 1564.628, -1693.828, 60.701, 90.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18646, "matcolours", "grey-50-percent", -1);
	tmpobjid = CreateDynamicObject(19445, 1563.024, -1687.940, 66.421, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1562.453, -1687.940, 66.421, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1567.805, -1687.940, 66.421, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1568.446, -1687.940, 66.421, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1563.924, -1683.949, 69.471, 270.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1566.966, -1683.949, 69.481, 270.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1563.924, -1683.399, 69.471, 270.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1566.965, -1683.399, 69.481, 270.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1566.965, -1692.490, 69.481, 270.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1563.894, -1692.490, 69.471, 450.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1562.545, -1677.716, 62.931, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1558.585, -1682.466, 62.941, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.056, -1682.456, 60.421, 180.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1561.056, -1682.446, 65.571, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.736, -1677.615, 62.941, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1565.636, -1669.595, 62.931, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.293, -1682.486, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_cloth_wall", -1);
	tmpobjid = CreateDynamicObject(19437, 1566.283, -1682.446, 62.921, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1562.285, -1682.445, 59.581, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.706, -1677.603, 59.601, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1562.575, -1677.603, 59.591, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1564.365, -1669.601, 59.601, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1564.856, -1669.609, 65.971, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.696, -1677.622, 65.961, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1562.554, -1677.622, 65.961, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(2180, 1559.054, -1690.711, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2180, 1556.323, -1687.860, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2165, 1566.073, -1672.214, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 5, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19994, 1564.347, -1681.164, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19387, 1575.984, -1686.077, 62.951, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "sw_floor1", -1);
	tmpobjid = CreateDynamicObject(19445, 1580.497, -1688.896, 62.941, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "sw_floor1", -1);
	tmpobjid = CreateDynamicObject(19445, 1562.535, -1671.465, 62.931, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.716, -1671.465, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1580.897, -1693.186, 62.941, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "sw_floor1", -1);
	tmpobjid = CreateDynamicObject(19445, 1580.887, -1684.825, 62.941, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 12853, "cunte_gas01", "sw_floor1", -1);
	tmpobjid = CreateDynamicObject(1999, 1563.147, -1681.848, 61.191, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(1999, 1564.158, -1679.838, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19387, 1569.005, -1687.088, 62.951, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 6095, "shops01_law", "GB_chatwall03b", -1);
	tmpobjid = CreateDynamicObject(14532, 1566.226, -1682.003, 62.161, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 2, 15040, "cuntcuts", "csnewspaper02", 0);
	tmpobjid = CreateDynamicObject(19994, 1563.467, -1678.623, 61.201, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19994, 1563.467, -1678.613, 61.191, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19808, 1563.478, -1679.965, 62.011, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19808, 1562.937, -1681.176, 62.011, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19610, 1563.482, -1680.034, 62.081, 270.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19610, 1562.912, -1681.155, 62.081, 270.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2263, 1563.500, -1679.537, 62.241, -15.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(2263, 1563.460, -1680.490, 61.975, 15.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2263, 1563.408, -1681.190, 62.210, -15.000, 0.000, 810.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(2263, 1562.453, -1681.150, 61.954, 15.000, 0.000, 990.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2855, 1562.979, -1680.617, 61.981, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(2855, 1564.269, -1679.887, 61.981, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(19174, 1562.649, -1680.804, 63.141, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14853, "gen_pol_vegas", "mp_cop_pinboard", 0);
	tmpobjid = CreateDynamicObject(18880, 1562.736, -1676.320, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1568.508, -1676.320, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1568.363, -1676.319, 61.011, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1568.363, -1676.319, 63.671, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1566.806, -1676.324, 60.431, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(18880, 1565.098, -1676.320, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1566.806, -1676.344, 65.651, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19982, 1565.243, -1676.319, 62.161, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.243, -1676.319, 62.191, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.903, -1676.319, 62.191, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.212, -1676.319, 63.881, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.832, -1676.319, 63.881, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.392, -1676.319, 62.571, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1566.241, -1676.319, 62.571, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.212, -1676.319, 63.791, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.852, -1676.319, 63.791, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.211, -1676.319, 63.701, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.851, -1676.319, 63.701, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.851, -1676.319, 63.601, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.230, -1676.319, 63.601, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.230, -1676.319, 63.501, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.860, -1676.319, 63.501, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.230, -1676.319, 63.401, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.850, -1676.319, 63.401, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.218, -1676.319, 63.301, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.878, -1676.319, 63.301, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.878, -1676.319, 63.191, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.197, -1676.319, 63.191, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.197, -1676.319, 63.081, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.838, -1676.319, 63.081, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.838, -1676.319, 62.971, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.157, -1676.319, 62.971, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.157, -1676.319, 62.871, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.827, -1676.319, 62.871, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.215, -1676.319, 62.771, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.875, -1676.319, 62.771, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1567.875, -1676.319, 62.671, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1565.234, -1676.319, 62.671, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19994, 1566.967, -1677.663, 61.191, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(2855, 1568.129, -1676.827, 61.981, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 15040, "cuntcuts", "csnewspaper", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 15040, "cuntcuts", "csnewspaper", 0);
	SetDynamicObjectMaterial(tmpobjid, 4, 15040, "cuntcuts", "csnewspaper", 0);
	tmpobjid = CreateDynamicObject(1499, 1568.977, -1686.362, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 18031, "cj_exp", "mp_cloth_wall", 0);
	tmpobjid = CreateDynamicObject(2270, 1565.812, -1693.574, 64.341, 0.000, 90.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19808, 1568.248, -1677.635, 62.021, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19610, 1568.242, -1677.644, 62.081, 270.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2263, 1567.730, -1677.607, 62.227, -15.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(2263, 1568.679, -1677.647, 61.983, 15.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(3383, 1558.041, -1682.559, 66.611, 180.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -1);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	SetDynamicObjectMaterial(tmpobjid, 3, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19445, 1562.575, -1667.983, 59.591, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1562.554, -1668.012, 65.961, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.714, -1667.992, 65.961, 0.000, 0.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19445, 1568.706, -1667.983, 59.601, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.804, -1680.406, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19445, 1553.813, -1680.417, 65.981, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19610, 1565.422, -1672.354, 62.081, 270.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19445, 1553.804, -1695.866, 62.941, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14666, "genintintsex", "mp_porn_wall", -1);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.730, 63.811, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.069, 63.811, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2180, 1559.053, -1687.860, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.720, 63.721, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.710, 63.631, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.039, 63.631, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1686.039, 63.541, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1555.475, -1682.544, 59.591, 0.000, 0.000, 450.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.709, 63.541, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19174, 1570.936, -1693.191, 62.971, 360.000, 90.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "barbersmir1", 0);
	tmpobjid = CreateDynamicObject(1499, 1563.466, -1676.327, 61.191, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 18031, "cj_exp", "mp_cloth_wall", 0);
	tmpobjid = CreateDynamicObject(18880, 1564.977, -1676.320, 63.821, 180.000, 90.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(18880, 1564.977, -1676.320, 64.571, 180.000, 90.000, 540.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 2, 14471, "carls_kit1", "kit_table", -1);
	SetDynamicObjectMaterial(tmpobjid, 3, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19355, 1561.865, -1676.324, 61.951, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14471, "carls_kit1", "kit_table", -1);
	tmpobjid = CreateDynamicObject(19994, 1558.971, -1689.218, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1558.211, -1689.198, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1556.220, -1689.218, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1555.390, -1689.218, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1555.390, -1691.948, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1556.181, -1691.958, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1558.191, -1691.958, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1559.031, -1691.958, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1557.961, -1684.128, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(19994, 1557.961, -1684.118, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1558.211, -1689.188, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1558.191, -1691.948, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1559.031, -1691.948, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1556.181, -1691.948, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1555.390, -1691.928, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1555.390, -1689.208, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1556.221, -1689.208, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19994, 1558.971, -1689.208, 61.201, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19476, 1565.464, -1694.058, 64.341, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "|2|", 120, "Ariel", 170, 1, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(19476, 1561.973, -1688.696, 64.211, 0.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "CONFERENCE HALL", 120, "Ariel", 55, 1, -16777216, -1, 1);
	tmpobjid = CreateDynamicObject(2161, 1568.610, -1672.012, 61.161, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(2161, 1568.610, -1672.012, 62.511, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", 0);
	tmpobjid = CreateDynamicObject(11685, 1567.437, -1675.779, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(19476, 1567.864, -1682.615, 64.211, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "CHIEF OF POLICE", 120, "Ariel", 55, 1, -16777216, -1, 1);
	tmpobjid = CreateDynamicObject(14455, 1567.732, -1669.690, 62.841, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(11685, 1566.137, -1675.779, 61.191, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10101, "2notherbuildsfe", "ferry_build14", 0);
	tmpobjid = CreateDynamicObject(14455, 1562.591, -1670.470, 62.841, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(2263, 1565.430, -1671.863, 62.269, -15.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19808, 1565.427, -1672.325, 62.011, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(19982, 1553.788, -1688.690, 62.181, 90.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(2263, 1565.400, -1672.818, 62.012, 15.000, 0.000, 360.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "black", 0);
	tmpobjid = CreateDynamicObject(2263, 1565.440, -1671.863, 62.269, -15.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 3899, "hospital2", "black", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.684, -1676.319, 63.961, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.684, -1676.319, 64.421, 0.000, 90.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1562.864, -1676.319, 63.841, 180.000, 180.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19982, 1564.955, -1676.319, 63.841, 180.000, 180.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	SetDynamicObjectMaterial(tmpobjid, 1, 14471, "carls_kit1", "kit_table", -9868951);
	SetDynamicObjectMaterial(tmpobjid, 2, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19994, 1566.278, -1673.394, 61.191, 0.000, 0.000, -161.100, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(19994, 1565.158, -1673.394, 61.191, 0.000, 0.000, 160.199, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 1, 14479, "skuzzy_motelmain", "mp_CJ_Laminate1", 0);
	tmpobjid = CreateDynamicObject(1499, 1575.947, -1685.312, 61.191, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -983041);
	SetDynamicObjectMaterial(tmpobjid, 1, 18031, "cj_exp", "mp_cloth_wall", 0);
	tmpobjid = CreateDynamicObject(18075, 1557.724, -1687.871, 64.721, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", -1);
	tmpobjid = CreateDynamicObject(14793, 1580.785, -1689.942, 64.591, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 19297, "matlights", "invisible", 0);
	tmpobjid = CreateDynamicObject(19432, 1580.482, -1688.341, 62.927, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "barbersmir1", 0);
	tmpobjid = CreateDynamicObject(18075, 1565.438, -1687.938, 64.731, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", -1);
	tmpobjid = CreateDynamicObject(19445, 1563.894, -1691.909, 69.471, 450.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19445, 1566.965, -1691.909, 69.481, 270.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0);
	tmpobjid = CreateDynamicObject(19476, 1568.855, -1687.116, 64.211, 0.000, 0.000, 900.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "UNDRESSED", 120, "Ariel", 55, 1, -16777216, -1, 1);
	tmpobjid = CreateDynamicObject(19476, 1565.424, -1672.644, 62.041, 0.000, 0.000, 630.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterialText(tmpobjid, 0, "CHIEF OF POLICE", 120, "Ariel", 33, 1, -16777216, 0, 1);
	tmpobjid = CreateDynamicObject(19475, 1565.398, -1672.633, 61.911, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	tmpobjid = CreateDynamicObject(19475, 1565.468, -1672.633, 61.911, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(1714, 1565.402, -1670.735, 61.191, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(2704, 1572.174, -1689.734, 61.891, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(2386, 1572.475, -1691.520, 63.342, 0.000, 0.000, -42.600, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1561.829, -1679.673, 61.191, 0.000, 0.000, 135.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1553.795, -1688.583, 61.191, 0.000, 0.000, 135.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1558.387, -1682.553, 61.191, 0.000, 0.000, 45.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(14842, 1577.643, -1692.213, 63.241, 0.000, 0.000, 90.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19808, 1563.478, -1679.665, 62.021, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19808, 1563.380, -1681.165, 62.021, 0.000, 0.000, 92.099, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19807, 1562.939, -1679.995, 62.081, 0.000, 0.000, -172.100, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19807, 1563.121, -1681.906, 62.081, 0.000, 0.000, 86.900, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(14842, 1579.523, -1691.543, 63.241, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19835, 1567.986, -1677.147, 62.091, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19808, 1567.878, -1677.635, 62.021, 0.000, 0.000, 270.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19807, 1568.019, -1678.156, 62.081, 0.000, 0.000, -90.300, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(11745, 1572.452, -1688.678, 63.411, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(11745, 1569.461, -1688.678, 63.411, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(2386, 1570.895, -1692.812, 61.922, 0.000, 0.000, -158.499, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(2844, 1570.794, -1691.414, 61.192, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(2844, 1570.014, -1689.564, 61.192, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1553.801, -1688.768, 61.191, 0.000, 0.000, 135.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1558.419, -1682.539, 61.191, 0.000, 0.000, 225.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1572.421, -1676.315, 61.191, 0.000, 0.000, 225.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(19808, 1565.428, -1671.975, 62.021, 0.000, 0.000, 180.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(3858, 1557.758, -1676.340, 66.861, 0.000, 0.000, 45.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(16779, 1570.894, -1690.979, 65.151, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(16779, 1570.894, -1686.346, 65.151, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(16779, 1565.903, -1679.286, 65.151, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	tmpobjid = CreateDynamicObject(16779, 1565.803, -1673.243, 65.151, 0.000, 0.000, 0.000, 1, -1, -1, 150.000, 150.000);
	//police interior - close

	//news interior - open
	tmpobjid = CreateObject(19377, 3193.722167, -1759.692626, 3000.000000, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 3922, "bistro", "DinerFloor", 0x00000000);
	tmpobjid = CreateObject(19461, 3188.558593, -1759.696289, 3001.836181, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateObject(19461, 3193.459228, -1764.424804, 3001.836181, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateObject(19461, 3198.181152, -1759.518310, 3001.836181, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateObject(19461, 3193.285888, -1754.953857, 3001.836181, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateObject(19461, 3198.388916, -1759.531127, 3001.836181, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "bridge_walls2_sfw", 0x00000000);
	tmpobjid = CreateObject(1747, 3196.243652, -1754.666381, 3002.479248, 0.000000, 359.250000, 1.500000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(19372, 3191.189697, -1760.833496, 3000.015869, 180.000000, 90.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 14577, "casinovault01", "carp04S", 0x00000000);
	tmpobjid = CreateObject(1502, 3193.727050, -1759.448730, 3000.085937, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 14653, "ab_trukstpb", "mustard", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateObject(1806, 3189.731445, -1757.865966, 3000.085937, 0.000000, 0.000000, 322.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10778, "airportcpark_sfse", "ws_boothpanel", 0x00000000);
	tmpobjid = CreateObject(1502, 3193.705566, -1761.147216, 3000.085937, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 14653, "ab_trukstpb", "mustard", 0x00000000);
	SetObjectMaterial(tmpobjid, 1, 14650, "ab_trukstpc", "mp_CJ_WOOD5", 0x00000000);
	tmpobjid = CreateObject(19369, 3196.161865, -1759.393554, 3002.650390, 0.000000, 0.000000, 90.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 14415, "carter_block_2", "ws_doormat", 0x00000000);
	tmpobjid = CreateObject(14391, 3189.988281, -1755.899414, 3001.047851, 0.000000, 0.000000, 270.000000, 300.00);
	SetObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(1897, 3188.713623, -1756.129394, 3001.167724, 0.000000, 77.749938, 89.749969, 300.00);
	SetObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateObject(1505, 3190.163818, -1764.376342, 3000.123046, 0.000000, 0.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 4830, "airport2", "sjmpostbar3", 0x00000000);
	tmpobjid = CreateObject(19377, 3193.721679, -1759.692382, 3003.651367, 0.000000, 90.000000, 0.000000, 300.00);
	SetObjectMaterial(tmpobjid, 0, 4828, "airport3_las", "brwall_128", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateObject(1751, 3189.355712, -1754.610839, 3002.901611, 20.091918, 359.363433, 0.441130, 300.00);
	tmpobjid = CreateObject(1751, 3190.076416, -1754.605712, 3002.910156, 20.088499, 359.362792, 0.439453, 300.00);
	tmpobjid = CreateObject(1751, 3190.800537, -1754.608398, 3002.915283, 20.088499, 359.362792, 0.439453, 300.00);
	tmpobjid = CreateObject(1751, 3191.523925, -1754.614746, 3002.918701, 20.088499, 359.362792, 0.439453, 300.00);
	tmpobjid = CreateObject(1750, 3189.379150, -1754.682128, 3002.246337, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1750, 3190.091064, -1754.683715, 3002.246337, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1750, 3190.799072, -1754.741088, 3002.246337, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1750, 3191.505615, -1754.796264, 3002.246337, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1649, 3193.687255, -1755.719482, 3001.838867, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(1649, 3193.623046, -1755.720336, 3001.838867, 0.000000, 0.000000, 269.994506, 300.00);
	tmpobjid = CreateObject(19157, 3195.849609, -1757.290039, 3000.996582, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2637, 3196.191406, -1757.656250, 3000.490722, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(2309, 3197.029785, -1758.972900, 3000.085937, 0.000000, 0.000000, 18.000000, 300.00);
	tmpobjid = CreateObject(2309, 3195.488281, -1759.111328, 3000.085937, 0.000000, 0.000000, 338.000000, 300.00);
	tmpobjid = CreateObject(19610, 3196.679443, -1758.143188, 3000.945312, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(19610, 3195.518310, -1758.142578, 3000.945312, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1649, 3193.624755, -1757.222778, 3004.263671, 0.000000, 0.000000, 90.005493, 300.00);
	tmpobjid = CreateObject(1649, 3193.624023, -1757.222656, 3004.263671, 0.000000, 0.000000, 269.994506, 300.00);
	tmpobjid = CreateObject(1897, 3193.644042, -1756.807617, 3002.708496, 270.000000, 180.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1897, 3193.642089, -1754.586547, 3002.520507, 90.000000, 179.994506, 0.000000, 300.00);
	tmpobjid = CreateObject(19609, 3196.533447, -1761.020385, 3000.085937, 0.000000, 0.000000, 272.000000, 300.00);
	tmpobjid = CreateObject(19614, 3194.369628, -1761.955444, 3000.085937, 0.000000, 0.000000, 302.000000, 300.00);
	tmpobjid = CreateObject(1716, 3197.848388, -1760.472045, 3000.085937, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(19317, 3194.289794, -1762.276245, 3000.850830, 0.000000, 359.000000, 333.750000, 300.00);
	tmpobjid = CreateObject(19319, 3198.072265, -1762.105468, 3001.717041, 0.000000, 0.000000, 269.494628, 300.00);
	tmpobjid = CreateObject(19318, 3194.473144, -1763.050903, 3000.791503, 0.000000, 0.000000, 235.500000, 300.00);
	tmpobjid = CreateObject(19614, 3194.545654, -1763.382324, 3000.085937, 0.000000, 0.000000, 239.997680, 300.00);
	tmpobjid = CreateObject(1516, 3197.365234, -1763.781616, 3000.085937, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1516, 3196.170654, -1763.792724, 3000.085937, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1958, 3195.877441, -1763.614257, 3000.596923, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1958, 3196.289550, -1763.637207, 3000.596923, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1958, 3197.117675, -1763.635253, 3000.596923, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1958, 3197.646240, -1763.642578, 3000.596923, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(2231, 3195.882568, -1764.391601, 3000.600585, 0.000000, 0.000000, 180.000000, 300.00);
	tmpobjid = CreateObject(2231, 3197.136718, -1764.397094, 3000.600585, 0.000000, 0.000000, 179.994506, 300.00);
	tmpobjid = CreateObject(19157, 3195.871337, -1763.260009, 3000.996582, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(1649, 3193.678955, -1761.772338, 3004.263671, 0.000000, 0.000000, 90.005493, 300.00);
	tmpobjid = CreateObject(1649, 3193.687011, -1763.310302, 3001.838867, 0.000000, 0.000000, 90.005493, 300.00);
	tmpobjid = CreateObject(1649, 3193.678710, -1761.771484, 3004.263671, 0.000000, 0.000000, 269.994506, 300.00);
	tmpobjid = CreateObject(1649, 3193.647460, -1763.280273, 3001.838867, 0.000000, 0.000000, 269.989013, 300.00);
	tmpobjid = CreateObject(1897, 3193.720214, -1762.142089, 3002.520507, 90.000000, 180.005493, 359.983520, 300.00);
	tmpobjid = CreateObject(1897, 3193.694091, -1764.371704, 3002.520507, 90.000000, 179.994506, 179.994506, 300.00);
	tmpobjid = CreateObject(1897, 3193.695556, -1764.063476, 3003.701660, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1897, 3193.729980, -1760.612060, 3002.520507, 90.000000, 180.005493, 359.994506, 300.00);
	tmpobjid = CreateObject(1897, 3193.698730, -1760.613769, 3003.455566, 90.000000, 180.000000, 359.989074, 300.00);
	tmpobjid = CreateObject(1886, 3197.980468, -1755.113037, 3002.781738, 0.000000, 0.500000, 329.499969, 300.00);
	tmpobjid = CreateObject(1886, 3196.011718, -1755.139892, 3002.781738, 0.000000, 0.499877, 352.746459, 300.00);
	tmpobjid = CreateObject(1886, 3193.741455, -1755.072753, 3002.781738, 0.000000, 0.499877, 30.243530, 300.00);
	tmpobjid = CreateObject(2647, 3196.937011, -1758.007202, 3001.056640, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(2647, 3195.711669, -1758.042968, 3001.056640, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.608886, -1763.918334, 3000.683837, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.608398, -1763.917968, 3001.839843, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.608398, -1763.917968, 3002.936767, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1763.287475, 3000.683837, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.609619, -1763.285156, 3001.839843, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.605224, -1763.285522, 3002.936767, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1759.453125, 3000.683837, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1760.118896, 3000.688964, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1760.118164, 3001.868896, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1759.461547, 3001.868896, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1759.460937, 3002.990234, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(2232, 3188.624023, -1760.115722, 3002.990234, 0.000000, 0.000000, 90.000000, 300.00);
	tmpobjid = CreateObject(19319, 3188.675292, -1761.668212, 3001.717041, 0.000000, 0.000000, 90.505371, 300.00);
	tmpobjid = CreateObject(2233, 3196.808105, -1755.137817, 3000.254394, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(2233, 3195.841064, -1755.139160, 3000.254394, 0.000000, 0.000000, 0.000000, 300.00);
	tmpobjid = CreateObject(1828, 3195.964111, -1757.071044, 3000.095947, 0.000000, 0.000000, 274.000000, 300.00);
	//news interior - close
	//police cameras - open (radar)
	tmpobjid = CreateDynamicObject(18880, -198.926849, 947.135559, 14.810990, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18880, -187.646759, 947.135559, 14.810990, 0.000000, 0.000000, -179.499938, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18880, 94.517295, 1203.664306, 17.699777, 0.000000, 0.000000, -97.199981, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18880, 93.232658, 1193.495361, 17.699777, 0.000000, 0.000000, 92.200035, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18880, -123.134742, 1238.189086, 17.115497, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00);
	tmpobjid = CreateDynamicObject(18880, -111.634719, 1238.189086, 17.115497, 0.000000, 0.000000, -176.199966, -1, -1, -1, 300.00, 300.00);
	CreateDynamicObject(18880, 1841.67566, -1332.81030, 12.42326, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18880, 1476.90369, -1586.84070, 11.96082, 0.00000, 0.00000, -84.00000);
	CreateDynamicObject(18880, 1145.76001, -1566.81946, 12.20486, 0.00000, 0.00000, -87.00000);
	CreateDynamicObject(18880, 1066.31921, -1135.38037, 22.30401, 0.00000, 0.00000, -84.00000);
	CreateDynamicObject(18880, 1622.61157, -1166.33142, 23.06120, 0.00000, 0.00000, 92.00000);
	CreateDynamicObject(18880, 1709.48230, -1408.97510, 12.52891, 0.00000, 0.00000, 0.00000);
	//police cameras - close (radar)

	//atms - open
	CreateDynamicObject(19324, 1458.71545, -1749.91138, 13.09340, 0.00000, 0.00000, 179.00000);
	CreateDynamicObject(19324, 1657.65051, -1722.25598, 13.15729, 0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19324, 1810.79114, -1875.65393, 13.11213, 0.00000, 0.00000, 88.00000);
	CreateDynamicObject(19324, 1928.57300, -1782.82910, 13.06317, 0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19324, 2233.23438, -1162.01892, 25.44419, 0.00000, 0.00000, 271.00000);
	CreateDynamicObject(19324, 2479.99731, -1758.04346, 13.06336, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19324, 1944.45129, -2062.05420, 13.13845, 0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19324, 1746.62891, -1460.95679, 13.09532, 0.00000, 0.00000, 179.00000);
	CreateDynamicObject(19324, 1742.49707, -1272.31335, 13.09977, 0.00000, 0.00000, -45.00000);
	CreateDynamicObject(19324, 1014.66711, -928.68799, 41.91920, 0.00000, 0.00000, 8.00000);
	CreateDynamicObject(19324, 787.69751, -1105.32739, 23.48933, 0.00000, 0.00000, 94.00000);
	//atms - close
	//hospital - open
	tmpobjid = CreateDynamicObject(1649, 1404.309448, -27.373491, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 15055, "svlamid", "AH_flroortile3", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1397.645385, -27.373292, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 15055, "svlamid", "AH_flroortile3", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(19381, 1402.732788, -34.017120, 1007.366088, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1396.169555, -28.200950, 1005.163635, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(1649, 1400.976318, -27.373491, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 15055, "svlamid", "AH_flroortile3", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1407.640502, -27.373491, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 15055, "svlamid", "AH_flroortile3", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(19377, 1404.488891, -25.240951, 1005.163635, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1394.859130, -25.240951, 1005.163635, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(1649, 1397.645385, -31.813295, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 15055, "svlamid", "AH_flroortile3", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1400.975830, -31.813295, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14758, "sfmansion1", "AH_flroortile6", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1404.306274, -31.813295, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14758, "sfmansion1", "AH_flroortile6", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1407.635742, -31.813295, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 15055, "svlamid", "AH_flroortile3", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1407.635742, -36.253280, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 15055, "svlamid", "AH_flroortile3", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1404.305786, -36.253280, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14758, "sfmansion1", "AH_flroortile6", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1400.975830, -36.253280, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14758, "sfmansion1", "AH_flroortile6", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1397.647094, -36.253280, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 15055, "svlamid", "AH_flroortile3", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1397.651000, -40.696590, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 15055, "svlamid", "AH_flroortile3", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1400.983032, -40.696590, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 15055, "svlamid", "AH_flroortile3", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1404.315063, -40.696590, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 15055, "svlamid", "AH_flroortile3", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(1649, 1407.646240, -40.696590, 999.864013, 270.000000, 270.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 15055, "svlamid", "AH_flroortile3", 0xB4FFFFFF);
	tmpobjid = CreateDynamicObject(19360, 1396.164916, -34.610271, 1004.925048, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1396.169555, -41.020984, 1005.163635, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1409.279907, -41.020984, 1005.163635, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1409.274902, -34.610271, 1004.925048, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1409.279296, -28.190950, 1005.163635, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19376, 1390.857543, -34.373466, 999.938903, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_furn_floor", 0x00000000);
	tmpobjid = CreateDynamicObject(19376, 1380.375610, -34.373466, 999.938903, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_furn_floor", 0x00000000);
	tmpobjid = CreateDynamicObject(18809, 1402.669555, -44.951599, 1031.034545, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(19376, 1425.009887, -34.373466, 999.938903, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_furn_floor", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1404.478881, -42.620971, 1005.163635, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1400.907104, -42.630970, 1005.163635, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1392.412719, -38.067108, 1006.465515, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1397.568481, -34.020980, 1011.633422, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2423, "cj_ff_counters", "CJ_Laminate1", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1407.898071, -34.020980, 1011.633422, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2423, "cj_ff_counters", "CJ_Laminate1", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1403.168457, -38.750949, 1011.633422, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2423, "cj_ff_counters", "CJ_Laminate1", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1402.307617, -38.760948, 1011.633422, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2423, "cj_ff_counters", "CJ_Laminate1", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1402.297607, -29.280946, 1011.633422, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2423, "cj_ff_counters", "CJ_Laminate1", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1403.167968, -29.270946, 1011.633422, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 2423, "cj_ff_counters", "CJ_Laminate1", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1392.412719, -28.447111, 1006.465515, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1413.043701, -28.447111, 1006.465515, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1413.043701, -38.057125, 1006.465515, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1402.554077, -43.477142, 1006.465393, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1402.554077, -24.557146, 1006.465393, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1403.973144, -47.327140, 999.985290, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1393.473510, -47.327140, 999.985290, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1391.033691, -41.007144, 999.975280, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1391.033691, -28.207153, 999.985290, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1401.463867, -20.527153, 999.985290, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1411.933349, -20.527153, 999.985290, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1424.922485, -28.197170, 999.985290, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "casino_carp", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1414.432983, -40.997192, 999.985290, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(19376, 1414.516845, -34.373466, 999.938903, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18031, "cj_exp", "mp_furn_floor", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1414.158203, -44.094821, 1005.225097, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1381.658081, -44.094821, 1005.225097, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1391.309326, -25.354824, 1005.225097, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1380.532836, -28.207153, 999.985290, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "casino_carp", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1380.543579, -41.007144, 999.985290, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "casino_carp", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1381.670654, -25.354824, 1005.225097, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1414.432983, -28.197170, 999.985290, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1424.914184, -40.997192, 999.985290, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "casino_carp", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1376.839111, -39.224811, 1005.225097, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1376.839111, -29.594829, 1005.225097, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1381.427124, -25.394859, 1006.954833, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1423.788940, -44.094821, 1005.225097, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1414.139404, -25.354824, 1005.225097, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1423.760498, -25.354824, 1005.225097, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1428.571044, -30.174802, 1005.225097, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1428.571044, -39.804821, 1005.225097, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1413.043701, -39.257106, 1006.435485, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1413.033691, -38.057117, 1006.455505, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9514, "711_sfw", "ws_carpark2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1425.005004, -29.627101, 1006.435485, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1414.524047, -39.257106, 1006.415466, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1390.845703, -39.257106, 1006.435485, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1390.845703, -29.637132, 1006.435485, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1380.356933, -29.637132, 1006.435485, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1380.356933, -39.267131, 1006.435485, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1418.281860, -28.204809, 1005.225097, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1418.281860, -41.004840, 1005.225097, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.458007, -28.214809, 1005.225097, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.458007, -41.004806, 1005.225097, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(14793, 1402.967163, -28.154233, 1007.144775, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1414.623046, -28.197170, 999.995300, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "casino_carp", 0x00000000);
	tmpobjid = CreateDynamicObject(644, 1427.372924, -34.577136, 1000.344482, 0.000000, 0.000000, -39.900005, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4003, "cityhall_tr_lan", "foliage256", 0xFFFFFF66);
	tmpobjid = CreateDynamicObject(1897, 1409.225097, -36.259738, 1001.014587, 0.000000, 0.000007, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1409.225097, -36.259738, 1002.064514, 0.000000, 0.000007, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1409.325195, -36.259738, 1001.014587, 0.000000, 0.000007, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1409.325195, -36.259738, 1002.064636, 0.000000, 0.000007, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.103271, -36.259738, 1001.014587, 0.000000, 0.000014, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.103271, -36.259738, 1002.064514, 0.000000, 0.000014, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.203369, -36.259738, 1001.014587, 0.000000, 0.000014, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.203369, -36.259738, 1002.064636, 0.000000, 0.000014, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.223388, -32.949741, 1001.014587, 0.000000, 0.000014, 179.999893, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.223388, -32.949741, 1002.064514, 0.000000, 0.000014, 179.999893, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.123291, -32.949741, 1001.014587, 0.000000, 0.000014, 179.999893, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.123291, -32.949741, 1002.064636, 0.000000, 0.000014, 179.999893, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.123291, -32.949741, 1002.064636, 0.000000, 0.000014, 179.999893, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1409.334472, -32.949741, 1001.014587, 0.000000, 0.000007, 179.999847, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1409.334472, -32.949741, 1002.064514, 0.000000, 0.000007, 179.999847, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1409.234375, -32.949741, 1001.014587, 0.000000, 0.000007, 179.999847, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1409.234375, -32.949741, 1002.064636, 0.000000, 0.000007, 179.999847, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1409.334106, -34.084712, 1003.250610, -89.999992, -424.263793, 115.736152, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1409.334106, -35.134639, 1003.250610, -89.999992, -424.263793, 115.736152, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1409.234008, -34.114711, 1003.250610, -89.999992, -424.263793, 115.736152, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1409.234008, -35.094760, 1003.250610, -89.999992, -424.263793, 115.736152, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.228881, -34.124710, 1003.250610, -89.999992, -436.513366, 103.486541, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.228881, -35.084640, 1003.250610, -89.999992, -436.513366, 103.486541, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.128784, -34.084712, 1003.250610, -89.999992, -436.513366, 103.486541, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(1897, 1396.128784, -35.084762, 1003.250610, -89.999992, -436.513366, 103.486541, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "ws_runwaytarmac", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1391.287841, -44.094821, 1005.225097, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1381.427124, -44.064933, 1006.954833, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1391.297119, -44.064933, 1006.954833, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(18075, 1402.866699, -24.739551, 1006.293823, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14786, "ab_sfgymbeams", "knot_wood128", 0x00000000);
	tmpobjid = CreateDynamicObject(18809, 1402.669555, -44.961597, 1028.945190, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18065, "ab_sfammumain", "shelf_glas", 0xFFCCFFFF);
	tmpobjid = CreateDynamicObject(19377, 1396.147216, -40.964931, 1006.954833, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.297241, -28.214809, 1005.225097, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.287841, -41.004806, 1005.225097, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.466552, -40.964931, 1006.954833, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.286376, -40.964931, 1006.954833, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.286376, -28.214942, 1006.954833, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.476562, -28.214942, 1006.954833, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.426513, -28.234943, 1006.954833, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1376.846435, -30.264940, 1006.954833, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1376.846435, -39.894962, 1006.954833, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1381.578247, -44.054821, 1011.195129, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1391.267944, -44.054821, 1011.195129, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1391.267944, -25.424825, 1011.195129, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1381.419067, -25.424825, 1011.195129, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1376.848022, -30.214836, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1396.127563, -28.184843, 1006.965393, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1376.848022, -39.714836, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1396.147583, -34.364868, 1008.385864, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.477050, -40.964843, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.306884, -40.964843, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.276855, -40.964843, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1391.256591, -25.394859, 1006.954833, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.276855, -28.224836, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.487060, -28.244836, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1386.416992, -28.244836, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1414.534545, -29.627101, 1006.415466, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1424.993408, -39.257106, 1006.415466, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_laglasswall2", 0x00000000);
	tmpobjid = CreateDynamicObject(2184, 1403.783935, -39.854305, 999.864013, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(2184, 1406.133178, -41.593799, 999.864013, 0.000000, 0.000000, 137.599960, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(2184, 1400.871093, -40.164043, 999.864013, 0.000000, 0.000000, -137.199996, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 14652, "ab_trukstpa", "CJ_WOOD6", 0x00000000);
	tmpobjid = CreateDynamicObject(631, 1408.669799, -41.977016, 1000.803955, 0.000000, 0.000000, -32.099994, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObject(631, 1396.751342, -41.985996, 1000.803955, 0.000000, 0.000000, -32.099994, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObject(1722, 1409.109863, -36.651313, 999.864013, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19426, "all_walls", "vgsn_scrollsgn256", 0x00000000);
	tmpobjid = CreateDynamicObject(1722, 1409.109863, -37.281314, 999.864013, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19426, "all_walls", "vgsn_scrollsgn256", 0x00000000);
	tmpobjid = CreateDynamicObject(1722, 1409.109863, -37.911300, 999.864013, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19426, "all_walls", "vgsn_scrollsgn256", 0x00000000);
	tmpobjid = CreateDynamicObject(1722, 1409.109863, -38.531288, 999.864013, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19426, "all_walls", "vgsn_scrollsgn256", 0x00000000);
	tmpobjid = CreateDynamicObject(1722, 1409.109863, -39.161273, 999.864013, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19426, "all_walls", "vgsn_scrollsgn256", 0x00000000);
	tmpobjid = CreateDynamicObject(1722, 1396.379638, -36.581264, 999.864013, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19426, "all_walls", "vgsn_scrollsgn256", 0x00000000);
	tmpobjid = CreateDynamicObject(1722, 1396.379638, -37.211257, 999.864013, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19426, "all_walls", "vgsn_scrollsgn256", 0x00000000);
	tmpobjid = CreateDynamicObject(1722, 1396.379638, -37.841243, 999.864013, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19426, "all_walls", "vgsn_scrollsgn256", 0x00000000);
	tmpobjid = CreateDynamicObject(1722, 1396.379638, -38.461242, 999.864013, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19426, "all_walls", "vgsn_scrollsgn256", 0x00000000);
	tmpobjid = CreateDynamicObject(1722, 1396.379638, -39.091236, 999.864013, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 18996, "mattextures", "sampwhite", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 19426, "all_walls", "vgsn_scrollsgn256", 0x00000000);
	tmpobjid = CreateDynamicObject(638, 1407.083496, -25.834327, 1000.584472, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16136, "des_telescopestuff", "stoneclad1", 0x00000000);
	tmpobjid = CreateDynamicObject(638, 1398.364379, -25.834327, 1000.584472, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 16136, "des_telescopestuff", "stoneclad1", 0x00000000);
	tmpobjid = CreateDynamicObject(19538, 1384.041259, -54.108524, 999.864013, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, -1, "none", "none", 0x00FFFFFF);
	tmpobjid = CreateDynamicObject(19377, 1396.107421, -30.264833, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1396.107421, -39.884849, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1409.287597, -28.184843, 1006.965393, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1409.287597, -37.784854, 1008.415893, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1409.287597, -41.004837, 1006.965637, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1418.268188, -40.994827, 1006.965637, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1418.288208, -40.994842, 1006.965637, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1428.559326, -39.204826, 1006.965637, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1428.559326, -29.584835, 1006.965637, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1418.269409, -28.214839, 1006.965637, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1418.309448, -28.214839, 1006.965637, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1414.079589, -25.364812, 1006.965637, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1423.699462, -25.364812, 1006.965637, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1414.179565, -44.084785, 1006.965637, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1423.789184, -44.084785, 1006.965637, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14581, "ab_mafiasuitea", "walp45S", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1414.157836, -25.374824, 1011.195129, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1423.758300, -25.374824, 1011.195129, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1414.150024, -44.064823, 1011.195129, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1423.770141, -44.064823, 1011.195129, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1428.541503, -39.284839, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1428.541503, -29.654846, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1418.241333, -28.224853, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1418.331420, -28.224853, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1418.331420, -40.984893, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1418.261352, -40.984889, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1409.321044, -39.174877, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19377, 1409.321044, -29.604871, 1011.195129, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(631, 1396.748291, -26.681325, 1000.803955, 0.000000, 0.000000, -92.499992, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObject(631, 1408.747314, -26.776283, 1000.803955, 0.000000, 0.000000, -48.200031, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObject(2266, 1408.690429, -32.152095, 1002.214294, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 3899, "hospital2", "hospitalboard_128a", 0x00000000);
	tmpobjid = CreateDynamicObject(1649, 1409.257690, -32.123214, 1002.124206, 360.000000, 90.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 8496, "lowbuild03_lvs", "vgshopwall03_64", 0xAAFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1414.623779, -40.997192, 999.995300, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "casino_carp", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1390.903564, -41.007144, 999.995300, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "casino_carp", 0x00000000);
	tmpobjid = CreateDynamicObject(19381, 1390.963623, -28.207153, 999.995300, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14623, "mafcasmain", "casino_carp", 0x00000000);
	tmpobjid = CreateDynamicObject(1649, 1409.257690, -37.073215, 1002.124206, 360.000000, 90.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 8496, "lowbuild03_lvs", "vgshopwall03_64", 0xAAFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", 0x00000000);
	tmpobjid = CreateDynamicObject(1649, 1409.257690, -37.073215, 1002.124206, 360.000000, 90.000000, 450.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 8496, "lowbuild03_lvs", "vgshopwall03_64", 0xAAFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", 0x00000000);
	tmpobjid = CreateDynamicObject(1649, 1409.257690, -32.123214, 1002.124206, 360.000000, 90.000000, 450.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 8496, "lowbuild03_lvs", "vgshopwall03_64", 0xAAFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", 0x00000000);
	tmpobjid = CreateDynamicObject(1649, 1396.157714, -32.123214, 1002.124206, 360.000000, 90.000000, 450.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 8496, "lowbuild03_lvs", "vgshopwall03_64", 0xAAFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", 0x00000000);
	tmpobjid = CreateDynamicObject(1649, 1396.157714, -37.133262, 1002.124206, 360.000000, 90.000000, 450.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 8496, "lowbuild03_lvs", "vgshopwall03_64", 0xAAFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", 0x00000000);
	tmpobjid = CreateDynamicObject(1649, 1396.157714, -37.133262, 1002.124206, 360.000000, 90.000000, 630.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 8496, "lowbuild03_lvs", "vgshopwall03_64", 0xAAFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", 0x00000000);
	tmpobjid = CreateDynamicObject(1649, 1396.157714, -32.123214, 1002.124206, 360.000000, 90.000000, 630.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 8496, "lowbuild03_lvs", "vgshopwall03_64", 0xAAFFFFFF);
	SetDynamicObjectMaterial(tmpobjid, 1, 8396, "sphinx01", "luxorceiling02_128", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1409.265136, -33.781269, 1002.294494, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1409.265136, -33.781269, 1003.244995, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1409.265136, -35.421241, 1003.244995, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1409.265136, -35.421241, 1002.294494, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1396.145385, -35.451240, 1002.294494, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1396.145385, -35.451240, 1003.504577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1396.145385, -33.781246, 1003.504577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1396.145385, -33.781246, 1002.304138, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19172, 1402.670288, -42.516544, 1002.884460, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 19962, "samproadsigns", "streetsign", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "white", 0x00000000);
	tmpobjid = CreateDynamicObject(19329, 1402.715820, -42.495586, 1003.164428, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{ffffff} San Andreas", 80, "Ariel", 45, 1, 0x00000000, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(19329, 1402.715820, -42.495586, 1002.633911, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterialText(tmpobjid, 0, "{ffffff} Central Hospital", 80, "Ariel", 39, 1, 0x00000000, 0x00000000, 1);
	tmpobjid = CreateDynamicObject(19325, 1424.206787, -33.043136, 1002.011718, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1412.677734, -33.043136, 1006.151489, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1412.677734, -33.043136, 1002.031494, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1419.316772, -33.043136, 1006.131469, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1425.957519, -33.043136, 1006.131469, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1430.847045, -33.043136, 1002.011718, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19087, 1416.002563, -33.040210, 1002.424987, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1416.002563, -33.040210, 1004.105285, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1416.002563, -33.040210, 1004.085266, 0.000000, 90.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1418.443847, -33.040210, 1004.085266, 0.000000, 90.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1420.894042, -33.040210, 1001.634948, 0.000000, 180.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1420.894042, -33.040210, 999.824401, 0.000000, 180.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1428.471923, -33.043037, 1007.007507, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1428.451782, -33.043037, 1013.307434, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1409.421020, -33.043037, 1013.307434, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1409.390991, -33.043037, 1007.326965, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1416.732543, -33.043037, 1006.316589, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1423.981323, -33.043037, 1006.316589, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1430.603637, -33.043037, 1006.316589, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1412.677734, -36.163082, 1002.031494, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1424.329345, -36.163082, 1002.031494, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1430.958618, -36.163082, 1002.031494, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1412.677734, -36.163082, 1006.151672, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1419.313964, -36.163082, 1006.151672, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1425.954467, -36.163082, 1006.151672, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19087, 1416.002563, -36.170200, 1004.105285, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1416.002563, -36.170200, 1002.424987, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1421.023437, -36.170200, 1002.424987, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1421.023437, -36.170200, 1004.104797, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1421.033447, -36.170200, 1004.104797, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1418.441894, -36.170200, 1004.104797, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1419.772460, -36.170200, 1004.104797, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1409.421020, -36.163032, 1013.307434, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1409.390991, -36.163032, 1007.296997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1428.462524, -36.163032, 1007.296997, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1428.623046, -36.163032, 1006.317260, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1421.382568, -36.163032, 1006.317260, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1416.621704, -36.163032, 1006.317260, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19325, 1392.757080, -33.063129, 1002.061462, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1380.047607, -33.063129, 1002.061462, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1380.036499, -36.143123, 1002.061462, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1392.775634, -36.143123, 1002.061462, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1392.757080, -33.063129, 1006.181396, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1386.118164, -33.063129, 1006.181396, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1379.477905, -33.063129, 1006.181396, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1392.775634, -36.143123, 1006.181884, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1386.136474, -36.143123, 1006.181884, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19325, 1379.497192, -36.143123, 1006.181884, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 9583, "bigshap_sfw", "boatfunnel1_128", 0xC8FFFFFF);
	tmpobjid = CreateDynamicObject(19087, 1389.452270, -33.060207, 1002.424987, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1389.452270, -33.060207, 1004.165405, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1383.371093, -33.060207, 1004.165405, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1383.371093, -33.060207, 1002.484924, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1383.371093, -36.160194, 1002.484924, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1383.371093, -36.160194, 1004.144958, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1385.822021, -33.060207, 1004.135375, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1388.193115, -33.060207, 1004.135375, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1389.464233, -33.060207, 1004.135375, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1389.464233, -36.150199, 1004.135375, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1387.054199, -36.150199, 1004.135375, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1385.833251, -36.150199, 1004.135375, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1389.451293, -36.160194, 1002.484924, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1389.451293, -36.160194, 1004.155395, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1376.948120, -33.073032, 1007.195983, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1376.948120, -36.143013, 1007.195983, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1396.020263, -36.143013, 1013.295166, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1396.050292, -36.143013, 1007.194702, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1396.050292, -33.062984, 1007.194702, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1396.010253, -33.062984, 1013.295410, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1396.230346, -33.062984, 1006.324584, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1389.339355, -33.062984, 1006.324584, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1382.101318, -33.062984, 1006.324584, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1384.151000, -36.142951, 1006.324584, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1391.251586, -36.142951, 1006.324584, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(19089, 1396.083007, -36.142951, 1006.324584, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(644, 1378.202392, -34.656024, 1000.344482, 0.000000, 0.000000, -39.900005, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4003, "cityhall_tr_lan", "planta256", 0xFFFFFF66);
	tmpobjid = CreateDynamicObject(19087, 1396.145385, -31.341234, 1002.774475, 0.000000, 90.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1396.145385, -35.451274, 1002.774475, 0.000000, 90.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1396.145385, -35.451274, 1000.244079, 0.000000, 90.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1396.145385, -31.321271, 1000.244079, 0.000000, 90.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1409.244262, -31.321271, 1002.764770, 0.000000, 90.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1409.244262, -35.421295, 1002.764770, 0.000000, 90.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1409.246582, -35.411277, 1000.244079, 0.000000, 90.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1409.246582, -31.321277, 1000.244079, 0.000000, 90.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1396.145385, -35.451274, 1002.634399, 0.000000, 90.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1396.145385, -31.321279, 1002.634399, 0.000000, 90.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1409.254638, -31.321279, 1002.634033, 0.000000, 90.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19087, 1409.254638, -35.411296, 1002.634033, 0.000000, 90.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 13816, "lahills_safe1", "gry_roof", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1413.622192, -25.410261, 1003.734863, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_dwntwnshpfrnt1", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1423.142700, -25.410261, 1003.734863, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_dwntwnshpfrnt1", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1391.141845, -25.410261, 1003.734863, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_dwntwnshpfrnt1", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1381.522827, -25.410261, 1003.734863, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_dwntwnshpfrnt1", 0x00000000);
	tmpobjid = CreateDynamicObject(1797, 1394.264892, -39.992561, 1000.104919, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1797, 1389.365600, -39.992561, 1000.104919, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1797, 1384.773193, -39.992561, 1000.104919, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1797, 1379.723876, -39.992561, 1000.104919, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1797, 1378.733886, -29.292543, 1000.104919, 0.000000, 0.000000, 1800.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1797, 1383.464721, -29.292543, 1000.104919, 0.000000, 0.000000, 1800.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1797, 1388.085693, -29.292543, 1000.104919, 0.000000, 0.000000, 1800.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1797, 1393.226074, -29.292543, 1000.104919, 0.000000, 0.000000, 1800.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(631, 1395.609497, -36.793190, 1001.031982, 0.000000, 0.000000, -82.600006, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14832, "lee_stripclub", "Strip_plant", 0xFFCCFF33);
	tmpobjid = CreateDynamicObject(631, 1395.419311, -32.563217, 1001.031982, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObject(631, 1377.729248, -32.563217, 1001.031982, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14832, "lee_stripclub", "Strip_plant", 0xFFCCFF33);
	tmpobjid = CreateDynamicObject(631, 1377.729248, -36.743232, 1001.031982, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 17958, "burnsalpha", "plantb256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObject(19360, 1391.332031, -44.000278, 1003.734863, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_dwntwnshpfrnt1", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1381.622192, -44.000278, 1003.734863, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_dwntwnshpfrnt1", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1413.782348, -43.940338, 1003.734863, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_dwntwnshpfrnt1", 0x00000000);
	tmpobjid = CreateDynamicObject(19360, 1423.593139, -43.940338, 1003.734863, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 3979, "civic01_lan", "sl_dwntwnshpfrnt1", 0x00000000);
	tmpobjid = CreateDynamicObject(1797, 1412.256469, -39.992561, 1000.104919, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1797, 1421.017700, -39.992561, 1000.104919, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1797, 1420.017822, -29.222560, 1000.104919, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(1797, 1411.077880, -29.222560, 1000.104919, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 1, 10765, "airportgnd_sfse", "black64", 0x00000000);
	tmpobjid = CreateDynamicObject(631, 1409.883666, -36.949317, 1001.001464, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4003, "cityhall_tr_lan", "foliage256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObject(631, 1409.883666, -32.529312, 1001.001464, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4003, "cityhall_tr_lan", "foliage256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObject(631, 1427.964477, -32.529312, 1001.001464, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 14832, "lee_stripclub", "Strip_plant", 0xFFCCFF33);
	tmpobjid = CreateDynamicObject(631, 1427.964477, -36.779304, 1001.001464, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 0, 4003, "cityhall_tr_lan", "planta256", 0xFFCCFF33);
	tmpobjid = CreateDynamicObject(948, 1424.987670, -25.878849, 1000.071228, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 4003, "cityhall_tr_lan", "foliage256", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 3881, "apsecurity_sfxrf", "lostonclad1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(948, 1417.799072, -29.308860, 1000.071228, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "bevflower2", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 3881, "apsecurity_sfxrf", "lostonclad1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(948, 1413.447998, -43.448860, 1000.071228, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 4830, "airport2", "kbplanter_plants1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 3881, "apsecurity_sfxrf", "lostonclad1", 0xFFFFFFFF);
	tmpobjid = CreateDynamicObject(948, 1418.688720, -39.968872, 1000.071228, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(tmpobjid, 2, 4992, "airportdetail", "bevflower1", 0x00000000);
	SetDynamicObjectMaterial(tmpobjid, 3, 3881, "apsecurity_sfxrf", "lostonclad1", 0xFFFFFFFF);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	tmpobjid = CreateDynamicObject(19376, 1390.857543, -44.013446, 999.938903, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19376, 1380.375610, -44.003425, 999.938903, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19376, 1414.586914, -44.003471, 999.938903, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19376, 1425.079956, -44.003486, 999.938903, 0.000000, 90.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(14793, 1402.967163, -39.804264, 1007.144775, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1569, 1401.232299, -25.364088, 999.864013, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1569, 1404.221923, -25.354087, 999.864013, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2161, 1409.175415, -27.706626, 999.864013, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2161, 1409.175415, -29.036640, 999.864013, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2161, 1409.175415, -29.036640, 1001.203735, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2161, 1396.305419, -28.046623, 999.864013, 0.000000, 0.000000, 450.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2161, 1396.305419, -29.386631, 999.864013, 0.000000, 0.000000, 450.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1396.307739, -30.502950, 999.873657, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2163, 1396.316894, -28.935007, 1001.214721, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19807, 1404.318603, -40.470829, 1000.704406, 0.000000, 0.000000, -19.200002, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2686, 1407.021240, -42.504325, 1002.144409, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2164, 1401.938964, -42.508110, 999.864013, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2162, 1403.731933, -42.535083, 999.864013, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1387.250854, -43.800529, 1000.054870, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1395.460815, -43.800529, 1000.054870, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1385.640869, -43.800529, 1000.054870, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1377.590209, -43.800529, 1000.054870, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1377.590209, -25.560518, 1000.054870, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1385.579711, -25.560518, 1000.054870, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1387.120239, -25.560518, 1000.054870, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1395.321411, -25.560518, 1000.054870, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1823, 1391.613281, -26.638280, 1000.081237, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1823, 1381.883056, -26.638280, 1000.081237, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1823, 1389.692504, -26.638280, 1000.081237, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1823, 1380.332641, -26.638280, 1000.081237, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1823, 1380.282592, -43.818264, 1000.081237, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1823, 1382.092163, -43.818264, 1000.081237, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1823, 1389.902832, -43.818264, 1000.081237, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1823, 1391.683105, -43.818264, 1000.081237, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2162, 1396.027343, -29.851703, 1000.081237, 0.000000, 0.000000, 630.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2161, 1396.054565, -39.429363, 1000.081237, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2161, 1386.154052, -39.429363, 1000.081237, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2161, 1386.154052, -39.429363, 1001.421264, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2163, 1386.227050, -30.034534, 1000.084899, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1410.010375, -43.800529, 1000.054870, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1418.969726, -43.800529, 1000.054870, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1418.969726, -25.773492, 1000.054870, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2167, 1410.008666, -25.673492, 1000.054870, 0.000000, 0.000000, 360.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2166, 1417.675292, -26.133188, 1000.081237, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2166, 1427.845581, -26.133188, 1000.081237, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2166, 1427.845581, -42.333206, 1000.081237, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2166, 1417.614990, -42.333206, 1000.081237, 0.000000, 0.000000, 180.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1714, 1417.112182, -42.155689, 1000.081237, 0.000000, 0.000000, -32.599998, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1714, 1427.328369, -42.102752, 1000.081237, 0.000000, 0.000000, -32.599998, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1714, 1427.271850, -25.893779, 1000.081237, 0.000000, 0.000000, -20.999998, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(1714, 1416.914672, -25.772701, 1000.081237, 0.000000, 0.000000, -2.799996, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2164, 1409.554809, -39.153884, 1000.081237, 0.000000, 0.000000, 810.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2191, 1409.999023, -30.975894, 1000.024841, 0.000000, 0.000000, 90.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2191, 1427.809936, -30.445892, 1000.024841, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2161, 1428.324707, -38.208457, 1000.071228, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2161, 1418.194824, -39.118453, 1000.071228, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2161, 1418.194824, -39.118453, 1001.401184, 0.000000, 0.000000, 270.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19563, 1390.276367, -26.280147, 1000.581604, 0.000000, 0.000000, -11.399998, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19563, 1389.990356, -25.926689, 1000.581604, 0.000000, 0.000000, 8.100002, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19578, 1389.782958, -26.177251, 1000.631774, 0.000000, 0.000000, -75.999992, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19578, 1389.901611, -26.198293, 1000.611755, 0.000000, 0.000000, -40.199996, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19564, 1380.847167, -26.058771, 1000.601440, 0.000000, 0.000000, 170.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19576, 1380.722045, -26.248014, 1000.621520, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19576, 1380.621948, -26.098011, 1000.621520, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19576, 1380.661987, -26.458019, 1000.621520, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2831, 1382.515869, -26.176662, 1000.601440, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2832, 1382.587402, -43.437129, 1000.591674, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19563, 1380.709594, -43.432155, 1000.561645, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19575, 1380.481689, -43.294483, 1000.641662, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19575, 1380.621826, -43.104496, 1000.641662, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19578, 1381.005737, -43.288299, 1000.591552, 0.000000, 0.000000, 116.200004, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(2830, 1390.302490, -43.356319, 1000.571533, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19564, 1392.163330, -43.368152, 1000.631713, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	tmpobjid = CreateDynamicObject(19564, 1392.461669, -43.251449, 1000.631713, 0.000000, 0.000000, -28.700002, -1, -1, -1, 200.00, 200.00);
	//hospital - close
}

stock ToggleEngine(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, toggle, lights, alarm, doors, bonnet, boot, objective);
}

stock ToggleAlarm(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, toggle, doors, bonnet, boot, objective);
}

stock ToggleBonnet(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, toggle, boot, objective);
}

stock ToggleLights(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, toggle, alarm, doors, bonnet, boot, objective);
}

stock ToggleBoot(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, toggle, objective);
}

EditScreenTexts()
{
	//new string115[115];
}

EditPlayerScreenTexts(playerid)
{
	new hours;
	new minutes;
	new seconds;
	gettime(hours, minutes, seconds);
	new year, mounth, day;
	getdate(year, mounth, day);
	new string115[115];
	format(string115, sizeof string115, "%s%d:%s%d:%s%d", (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes, (seconds < 10) ? ("0") : (""), seconds, day, ((mounth < 10) ? ("0") : ("")), mounth, (year < 10) ? ("0") : (""), year);
	TextDrawSetString(Clock[playerid], string115);
}

public CorVehDetector(Float: radi, playerid, targetid)
{
	new Float: posx, Float: posy, Float: posz;
	new Float: oldposx, Float: oldposy, Float: oldposz;
	new Float: tempposx, Float: tempposy, Float: tempposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	//radi = 2.0;	//Trigger Radius
	GetVehiclePos(targetid, posx, posy, posz);
	tempposx = (oldposx - posx);
	tempposy = (oldposy - posy);
	tempposz = (oldposz - posz);
	if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
	{
		return 1;
	}

	return 0;
}

public CorDetector(Float: radi, playerid, targetid)
{
	if (IsPlayerConnected(playerid) && IsPlayerConnected(targetid))
	{
		new Float: posx, Float: posy, Float: posz;
		new Float: oldposx, Float: oldposy, Float: oldposz;
		new Float: tempposx, Float: tempposy, Float: tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0;	//Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx - posx);
		tempposy = (oldposy - posy);
		tempposz = (oldposz - posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}

	return 0;
}

public GeneralTimerms()
{
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (turfAttacker[i] == true)
		{
			if (!IsPlayerInTurf(i, TurfInfo[turfAttacked][zMinX], TurfInfo[turfAttacked][zMinY], TurfInfo[turfAttacked][zMaxX], TurfInfo[turfAttacked][zMaxY]))
			{
				new string256[256];
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(i, playeridNickname, 25);
				new Faction = PlayerInfo[i][pFaction];
				format(string256, 256, "[FACTION TURF] %s излезе от територията и отпадна от атаката.", playeridNickname);
				SendFactionMessage(Faction, COLOR_TURF, string256);
				LeaveTurfAttacker(i);
			}
		}
	}

	for (new i; i < MAX_PLAYERS; i++)
	{
		CheckForSpeed(i, 120, 1841.67566, -1332.81030, 12.42326);
		CheckForSpeed(i, 120, 1476.90369, -1586.84070, 11.96082);
		CheckForSpeed(i, 120, 1145.76001, -1566.81946, 12.20486);
		CheckForSpeed(i, 110, 1066.31921, -1135.38037, 22.30401);
		CheckForSpeed(i, 110, 1622.61157, -1166.33142, 23.06120);
		CheckForSpeed(i, 110, 1709.48230, -1408.97510, 12.52891);

		CheckForSpeed(i, 120, -193.1795, 948.1841, 16.0578);
		CheckForSpeed(i, 120, -117.2377, 1237.5996, 17.8028);
		CheckForSpeed(i, 120, 91.3815, 1198.7338, 18.5156);

		if (PlayerTimerInfo[i][ptTurnEngine] > 0)
		{
			PlayerTimerInfo[i][ptTurnEngine]--;
		}

		if (playerAfkMinutes[i] >= 1)	// if(playerAfkMinutes[i] >= 1) NetStats_MessagesRecvPerSecond
		{
			if (AFKDetect[i] == gettime() && isLogged[i] == true)
			{
				new string256[256];
				if (PlayerInfo[i][pAFK] == 0)
				{
					format(string256, 256, "Вие бяхте извън играта за {50B200}%d мин. и %d сек.", playerAfkMinutes[i], playerAfkSeconds[i]);
					SendClientMessage(i, COLOR_WHITE, string256);
				}

				playerAfkSeconds[i] = 0;
				playerAfkMinutes[i] = 0;
			}
		}

		if (playerAfkMinutes[i] >= 35 && PlayerInfo[i][pAFK] == 0 && isLogged[i] == true)
		{
			if (PlayerInfo[i][pAdminDuty] == 0 && PlayerInfo[i][pJailed] == 0 && PlayerInfo[i][pPoliceJail] == 0 && PlayerInfo[i][pIdentifyCard] == 1 && PlayerTimerInfo[i][ptRevieveTimer] == 0)
			{
				new string256[256];
				new accountNickname[MAX_PLAYER_NAME];
				GetPlayerName(i, accountNickname, 25);
				format(string256, 256, "SERVER: %s беше сложен в AFK залата [Reason: Твърде дълго време извън играта]", accountNickname);
				SendClientMessageToAll(COLOR_AFK, string256);
				SendClientMessage(i, COLOR_AFK, "AFK: Използвай /back за да се върнеш в играта!");
				SetPlayerInterior(i, 15);
				SetPlayerVirtualWorld(i, i + 1);
				SetPlayerPos(i, 2215.454833, -1147.475585, 1025.796875);
				PlayerInfo[i][pAFK] = 1;
			}
		}

		if (PlayerTimerInfo[i][ptWorkingVeh] > 0)
		{
			if (PlayerTimerInfo[i][ptWorkingVeh] > 0)
			{
				PlayerTimerInfo[i][ptWorkingVeh]--;
			}

			if (PlayerTimerInfo[i][ptWorkingVeh] <= 0)
			{
				RepairVehicle(workingOnVeh[i]);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
			}
		}

		if (PlayerTimerInfo[i][ptThirstyTimer] > 0)
		{
			if (PlayerTimerInfo[i][ptThirstyTimer] > 0)
			{
				PlayerTimerInfo[i][ptThirstyTimer]--;
			}

			if (PlayerTimerInfo[i][ptThirstyTimer] <= 0)
			{
				PlayerTimerInfo[i][ptThirstyTimer] = 5 * 60;
				if (PlayerInfo[i][pAFK] == 0 && inPaintBall[i] == false)
				{
					PlayerInfo[i][pThirsty]--;
				}

				if (PlayerInfo[i][pAFK] == 0)
				{
					if (PlayerInfo[i][pThirsty] == 60)
					{
						SendClientMessage(i, COLOR_TYPICAL_BLUE, "[Жажда] Вие ожадняхте, трябва да пиете вода! Можете да видите вашата жажда, чрез /thirsty");
					}

					if (PlayerInfo[i][pThirsty] == 30)
					{
						SendClientMessage(i, COLOR_TYPICAL_BLUE, "[Жажда] Вие ожадняхте много, трябва да пиете вода! Можете да видите вашата жажда, чрез /thirsty");
					}

					if (PlayerInfo[i][pThirsty] == 10)
					{
						SendClientMessage(i, COLOR_TYPICAL_BLUE, "[Жажда] Важно е да пиете вода, защото след малко може да припаднете! Можете да видите вашата жажда, чрез /thirsty");
					}

					if (PlayerInfo[i][pThirsty] <= 0)
					{
						SendClientMessage(i, COLOR_TYPICAL_BLUE, "[Жажда] Вие припаднахте от жажда.");
						SetPlayerHealth(i, 0);
						PlayerInfo[i][pThirsty] = 100;
					}
				}
			}
		}

		if (PlayerTimerInfo[i][ptHungryTimer] > 0)
		{
			if (PlayerTimerInfo[i][ptHungryTimer] > 0)
			{
				PlayerTimerInfo[i][ptHungryTimer]--;
			}

			if (PlayerTimerInfo[i][ptHungryTimer] <= 0)
			{
				PlayerTimerInfo[i][ptHungryTimer] = 3 * 60;
				if (PlayerInfo[i][pAFK] == 0 && inPaintBall[i] == false)
				{
					PlayerInfo[i][pHungry]--;
				}

				if (PlayerInfo[i][pAFK] == 0)
				{
					if (PlayerInfo[i][pHungry] == 60)
					{
						SendClientMessage(i, COLOR_TYPICAL_BLUE, "[Глад] Вие огладняхте, намерете магазин за храна! Можете да проверите своя глад, чрез /hungry");
					}

					if (PlayerInfo[i][pHungry] == 30)
					{
						SendClientMessage(i, COLOR_TYPICAL_BLUE, "[Глад] Вие огладняхте много, намерете магазин за храна! Можете да проверите своя глад, чрез /hungry");
					}

					if (PlayerInfo[i][pHungry] == 10)
					{
						SendClientMessage(i, COLOR_TYPICAL_BLUE, "[Глад] Важно е да ядете, защото след малко може да припаднете! Можете да проверите своя глад, чрез /hungry");
					}

					if (PlayerInfo[i][pHungry] <= 0)
					{
						SendClientMessage(i, COLOR_TYPICAL_BLUE, "[Глад] Вие припаднахте от глад!");
						SetPlayerHealth(i, 0);
						PlayerInfo[i][pHungry] = 100;
					}
				}
			}
		}

		if (PlayerTimerInfo[i][ptHideGiveCash] > 0)
		{
			if (PlayerTimerInfo[i][ptHideGiveCash] > 0)
			{
				PlayerTimerInfo[i][ptHideGiveCash]--;
			}

			if (PlayerTimerInfo[i][ptHideGiveCash] <= 0)
			{
				TextDrawHideForPlayer(i, GiveCashText[i]);
			}
		}

		if (PlayerTimerInfo[i][ptRinging] > 0)
		{
			if (PlayerTimerInfo[i][ptRinging] > 0)
			{
				PlayerTimerInfo[i][ptRinging]--;
			}

			if (PlayerTimerInfo[i][ptRinging] <= 0)
			{
				SendClientMessage(i, COLOR_PHONE, "Времето за изчакване на телефона свърши.");
				ringing[i] = -1;
			}
		}

		if (PlayerTimerInfo[i][ptPark] > 0)
		{
			if (PlayerTimerInfo[i][ptPark] > 0)
			{
				PlayerTimerInfo[i][ptPark]--;
			}

			if (PlayerTimerInfo[i][ptPark] <= 0)
			{
				new hisVehID = PlayerInfo[i][pPrivateVeh][GetPlayerPrivateVehID(i)];
				new vehicleid = PrivateVehInfo[hisVehID][vVeh];
				new Float: vehHealth;
				GetVehicleHealth(vehicleid, vehHealth);
				DestroyVehicle(vehicleid);
				PrivateVehInfo[hisVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[hisVehID][vVehID], PrivateVehInfo[hisVehID][vVehX], PrivateVehInfo[hisVehID][vVehY], PrivateVehInfo[hisVehID][vVehZ], PrivateVehInfo[hisVehID][vVehA], PrivateVehInfo[hisVehID][vVehC1], PrivateVehInfo[hisVehID][vVehC2], RESPAWN_VEHS_SECONDS);
				new newVeh = PrivateVehInfo[hisVehID][vVeh];
				PutPlayerInVehicle(i, newVeh, 0);
				VehicleInfo[newVeh][vIsPrivate] = 1;
				SetPrivateVehicleTune(newVeh);
				SetVehicleHealth(newVeh, vehHealth);
			}
		}

		if (PlayerTimerInfo[i][ptInteractActor] > 0)
		{
			PlayerTimerInfo[i][ptInteractActor]--;
		}
		
		if (PlayerTimerInfo[i][ptLastPickup] > 0)
		{
			PlayerTimerInfo[i][ptLastPickup]--;
		}

		if (PlayerTimerInfo[i][ptHideInteractiveActor] > 0)
		{
			if (PlayerTimerInfo[i][ptHideInteractiveActor] > 0)
			{
				PlayerTimerInfo[i][ptHideInteractiveActor]--;
			}

			if (PlayerTimerInfo[i][ptHideInteractiveActor] <= 0)
			{
				HideInteractiveActorTexts(i);
			}
		}


		if (PlayerTimerInfo[i][ptSpawn] > 0)
		{
			if (PlayerTimerInfo[i][ptSpawn] > 0)
			{
				PlayerTimerInfo[i][ptSpawn]--;
			}

			if (PlayerTimerInfo[i][ptSpawn] <= 0)
			{
				SpawnPlayer(i);
			}
		}
	}
}

stock LevelUpLoop(playerid)
{
	if (PlayerInfo[playerid][pExp] > 0)
	{
		new expToLevelUp = PlayerInfo[playerid][pLevel] + EXP_PLUS;
		while (PlayerInfo[playerid][pExp] >= expToLevelUp)
		{
			PlayerInfo[playerid][pLevel] += 1;
			PlayerInfo[playerid][pExp] -= expToLevelUp;
			expToLevelUp = PlayerInfo[playerid][pLevel] + EXP_PLUS;
		}

		new string256[256];
		format(string256, 256, "* Твоето ниво се вдигна, поздравления! Новото ти ниво е %d *", PlayerInfo[playerid][pLevel]);
		SendClientMessage(playerid, COLOR_TYPICAL_BLUE, string256);
	}
}

stock GivePlayerExp(playerid, exp)
{
	new expToLevelUp = PlayerInfo[playerid][pLevel] + EXP_PLUS;
	PlayerInfo[playerid][pExp] += exp;
	if (PlayerInfo[playerid][pExp] >= expToLevelUp)
	{
		LevelUpLoop(playerid);
	}
}

stock GivePlayerLevel(playerid, level)
{
	PlayerInfo[playerid][pLevel] += level;
	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	//ShowPlayerLevelExp(playerid);
}

stock GetFactionOnlinePlayers(factionID)
{
	new count = 0;
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pAFK] == 0)
		{
			if (PlayerInfo[i][pFaction] == factionID) count++;
		}
	}

	return count;
}

stock FactionPayday()
{
	new string256[256];
	for (new f = 0; f < MAX_FACTIONS; f++)
	{
		if (IsGangFaction(f) == 1)
		{
			if (GetFactionOnlinePlayers(f) >= 1)
			{
				new turfsCount = FactionInfo[f][fTurfs];
				if (turfsCount > 1)
				{
					new moneyEarned = 0;
					if (turfsCount >= 1 && turfsCount <= 4)
					{
						moneyEarned = 500;
					}
					else if (turfsCount >= 5 && turfsCount <= 9)
					{
						moneyEarned = 900;
					}
					else if (turfsCount >= 10 && turfsCount <= 15)
					{
						moneyEarned = 1300;
					}
					else if (turfsCount >= 16)
					{
						moneyEarned = 1800;
					}

					FactionInfo[f][fBankAccount] += moneyEarned;
				}
			}
		}
	}
}

stock PayDay()
{
	new string256[256];
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (isLogged[i])
		{
			new playedMinutes = PlayerInfo[i][pPlayedSeconds] / 60;
			new addMoney;
			if (playedMinutes >= 20)
			{
				if (PlayerInfo[i][pBizO] >= 0)
				{
					new hisBiz = PlayerInfo[i][pBizO];
					addMoney += BizInfo[hisBiz][bPayOut];
				}

				if (PlayerInfo[i][pFaction] == FACTION_NEWS)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 1600;
							}

						case 2:
							{
								GivePlayerExp(i, 3);
								addMoney += 1800;
							}

						case 3:
							{
								GivePlayerExp(i, 3);
								addMoney += 2500;
							}

						case 4:
							{
								GivePlayerExp(i, 4);
								addMoney += 2700;
							}

						case 5:
							{
								GivePlayerExp(i, 5);
								addMoney += 3800;
							}

						case 6:
							{
								GivePlayerExp(i, 6);
								addMoney += 3800;
							}
					}
				}

				if (PlayerInfo[i][pFaction] == FACTION_GOVERNMENT)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2600;
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3500;
							}

						case 4:
							{
								GivePlayerExp(i, 10);
								addMoney += 4700;
							}

						case 5:
							{
								GivePlayerExp(i, 11);
								addMoney += 5800;
							}

						case 6:
							{
								GivePlayerExp(i, 12);
								addMoney += 6800;
							}
					}
				}

				if (PlayerInfo[i][pFaction] == FACTION_MEDIC)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2600;
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3500;
							}

						case 4:
							{
								GivePlayerExp(i, 10);
								addMoney += 4700;
							}

						case 5:
							{
								GivePlayerExp(i, 11);
								addMoney += 5800;
							}

						case 6:
							{
								GivePlayerExp(i, 12);
								addMoney += 6800;
							}
					}
				}

				if (PlayerInfo[i][pFaction] == FACTION_LV_ARMY)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2600;
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3500;
							}

						case 4:
							{
								GivePlayerExp(i, 10);
								addMoney += 4700;
							}

						case 5:
							{
								GivePlayerExp(i, 11);
								addMoney += 5800;
							}

						case 6:
							{
								GivePlayerExp(i, 12);
								addMoney += 6800;
							}
					}
				}

				if (PlayerInfo[i][pFaction] == FACTION_LS_ARMY)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2600;
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3500;
							}

						case 4:
							{
								GivePlayerExp(i, 10);
								addMoney += 4700;
							}

						case 5:
							{
								GivePlayerExp(i, 11);
								addMoney += 5800;
							}

						case 6:
							{
								GivePlayerExp(i, 12);
								addMoney += 6800;
							}
					}
				}

				if (PlayerInfo[i][pFaction] == FACTION_FBI)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2400;
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3100;
							}

						case 4:
							{
								GivePlayerExp(i, 6);
								addMoney += 4100;
							}

						case 5:
							{
								GivePlayerExp(i, 7);
								addMoney += 5100;
							}

						case 6:
							{
								GivePlayerExp(i, 8);
								addMoney += 6100;
							}
					}
				}

				if (PlayerInfo[i][pFaction] == FACTION_LVPD)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2400;
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3100;
							}

						case 4:
							{
								GivePlayerExp(i, 6);
								addMoney += 4100;
							}

						case 5:
							{
								GivePlayerExp(i, 7);
								addMoney += 5100;
							}

						case 6:
							{
								GivePlayerExp(i, 8);
								addMoney += 6100;
							}
					}
				}

				if (PlayerInfo[i][pFaction] == FACTION_LSPD)
				{
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							{
								GivePlayerExp(i, 3);
								addMoney += 2400;
							}

						case 2:
							{
								GivePlayerExp(i, 4);
								addMoney += 2800;
							}

						case 3:
							{
								GivePlayerExp(i, 5);
								addMoney += 3100;
							}

						case 4:
							{
								GivePlayerExp(i, 6);
								addMoney += 4100;
							}

						case 5:
							{
								GivePlayerExp(i, 7);
								addMoney += 5100;
							}

						case 6:
							{
								GivePlayerExp(i, 8);
								addMoney += 6100;
							}
					}
				}

				GivePlayerExp(i, 3);
				if (PlayerInfo[i][pJob] == JOB_BANKER)
				{
					GivePlayerExp(i, 2);
					addMoney += 1300;
				}

				if (PlayerInfo[i][pJob] == JOB_TAXI)
				{
					GivePlayerExp(i, 2);
					addMoney += 1250;
				}

				if (PlayerInfo[i][pJob] == JOB_MECHANIC)
				{
					GivePlayerExp(i, 2);
					addMoney += 1450;
				}

				if (PlayerInfo[i][pVip] == 1)
				{
					GivePlayerExp(i, 3);
					addMoney += 1350;
				}

				if (PlayerInfo[i][pVip] == 2)
				{
					GivePlayerExp(i, 5);
					addMoney += 1550;
				}

				if (PlayerInfo[i][pVip] == 3)
				{
					GivePlayerExp(i, 7);
					addMoney += 1750;
				}

				format(string256, 256, "Вие получихте банков чек в размер на {5F63F0}$%d {FFFFFF}и допълнителни Exp точки", addMoney);
				SendClientMessage(i, COLOR_WHITE, string256);
				PlayerInfo[i][pBank] += addMoney;
				format(string256, 256, "Новият баланс във вашата сметка е {5F63F0}$%d", PlayerInfo[i][pBank]);
				SendClientMessage(i, COLOR_WHITE, string256);
				format(string256, 256, "~y~PayDay~n~~w~PayCheck~n~~g~$%d", addMoney);
				GameTextForPlayer(i, string256, 5000, 1);
				PlayerInfo[i][pPlayedSeconds] = 0;
				PlayerInfo[i][pGiftPaydays]++;
			}
			else
			{
				SendClientMessage(i, COLOR_WHITE, "За да получиш PayDay чек, трябва да си играл поне {5F63F0}20 минути");
			}
		}
	}

	FactionPayday();
}

stock LotteryEveryHour()
{
	new wonNum = randomex(1, 64);
	new bool: someoneWon = false;
	new string256[256];
	format(string256, 256, "San Andreas Lottery: Време е за лотарията, печелившото число е %d", wonNum);
	SendClientMessageToAll(COLOR_LOTTO2, string256);
	for (new i; i < MAX_PLAYERS; i++)
	{
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(i, accountNickname, 25);
		if (lottoNumber[i] > 0)
		{
			if (lottoNumber[i] != wonNum)
			{
				format(string256, 256, "San Andreas Lottery: Вашето число е %d, то се оказа непечелившо.", lottoNumber[i]);
				SendClientMessage(i, COLOR_LOTTO2, string256);
			}
			else if (lottoNumber[i] == wonNum)
			{
				format(string256, 256, "* *San Andreas Lottery: Поздравления, вашето число се оказа печелившо и печелите $%d в банката", lottoNumber[i], lottoReward);
				SendClientMessage(i, COLOR_LOTTO2, string256);
				format(string256, 256, "* *San Andreas Lottery: Имаме победител, %s спечели от лотарията $%d", accountNickname, lottoReward);
				SendClientMessageToAll(COLOR_LOTTO2, string256);
				PlayerInfo[i][pBank] += lottoReward;
				someoneWon = true;
			}
		}

		lottoNumber[i] = 0;
	}

	if (someoneWon == true)
	{
		lottoReward = 1000;
		format(string256, 256, "San Andreas Lottery: Понеже имаме победител в лотарията, печалбата се рестартира и сега тя е $1000");
		SendClientMessageToAll(COLOR_LOTTO, string256);
	}
	else if (someoneWon == false)
	{
		if (lottoReward < 100000)
		{
			lottoReward += 100;
			format(string256, 256, "San Andreas Lottery: Понеже няма победител, печалбата се увеличи и сега тя е $%d", lottoReward);
			SendClientMessageToAll(COLOR_LOTTO, string256);
		}
	}
}

public GeneralTimer1s()
{
	EditScreenTexts();
	new hours, minutes, seconds;
	gettime(hours, minutes, seconds);

	if (turfStartTimer > 0)
	{
		turfStartTimer--;
	}

	if (turfFinishTimer > 0)
	{
		if (turfFinishTimer > 0)
		{
			turfFinishTimer--;
		}

		if (turfFinishTimer == 0)
		{
			FinishTurfSuccess();
		}
	}

	if (respawnVehsTimer > 0)
	{
		if (respawnVehsTimer > 0)
		{
			respawnVehsTimer--;
		}

		if (respawnVehsTimer == 0) {}
	}

	if (paintBallEndTimer > 0)
	{
		if (paintBallEndTimer > 0)
		{
			paintBallEndTimer--;
			new string115[115];
			if (paintBallEndTimer >= 60)
			{
				format(string115, sizeof string115, "~r~PaintBall: ~w~%d Min", paintBallEndTimer / 60);
				TextDrawSetString(PaintBallTimerText, string115);
			}
			else if (paintBallEndTimer < 60)
			{
				format(string115, sizeof string115, "~r~PaintBall: ~y~%d Sec", paintBallEndTimer);
				TextDrawSetString(PaintBallTimerText, string115);
			}
		}

		if (paintBallEndTimer == 0)
		{
			ClosePaintBall();
		}
	}

	for (new trashCanID = 0; trashCanID < MAX_TRASHCANS; trashCanID++)
	{
		if (trashCanTimer[trashCanID] > 0)
		{
			if (trashCanTimer[trashCanID] > 0)
			{
				trashCanTimer[trashCanID]--;
			}

			if (trashCanTimer[trashCanID] == 0)
			{
				new randomItem = randomex(0, 5);
				TrashCanInfo[trashCanID][trashID] = randomItem;
			}
		}
	}

	if (normalVoteTimer > 0)
	{
		if (normalVoteTimer > 0)
		{
			normalVoteTimer--;
		}

		if (normalVoteTimer == 0)
		{
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				didVote[i] = false;
			}
			new string256[256];
			format(string256, 256, "VOTE: Запитването на всички играчи свърши! Въпрос: {ff0000}%s", normalVoteQuestion);
			SendClientMessageToAll(COLOR_MAXLIGHTGREEN, string256);
			format(string256, 256, "VOTE: Резултатите от гласуването са ДА: %d, НЕ: %d", normalVoteYES, normalVoteNO);
			SendClientMessageToAll(COLOR_MAXLIGHTGREEN, string256);
			if (normalVoteYES > normalVoteNO)
			{
				SendClientMessageToAll(COLOR_WHITE, "Повечето играчи гласуваха 'ДА' на зададения въпрос!");
			}
			else if (normalVoteYES < normalVoteNO)
			{
				SendClientMessageToAll(COLOR_WHITE, "Повечето играчи гласуваха 'НЕ' на зададения въпрос!");
			}
			else if (normalVoteYES == normalVoteNO)
			{
				SendClientMessageToAll(COLOR_WHITE, "Запитването завърши с равни резултати!");
			}

			normalVoteYES = 0;
			normalVoteNO = 0;
		}
	}

	if (respawnVehsVoteTimer > 0)
	{
		if (respawnVehsVoteTimer > 0)
		{
			respawnVehsVoteTimer--;
		}

		if (respawnVehsVoteTimer == 0)
		{
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				didVote[i] = false;
			}
			new string256[256];
			SendClientMessageToAll(COLOR_ADMIN_RED, "Преброяването за Respawn на превозите свърши, резултатите са:");
			format(string256, 256, "ДА: %d, НЕ: %d", respawnVehsVoteYES, respawnVehsVoteNO);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			if (respawnVehsVoteYES >= respawnVehsVoteNO)
			{
				SendClientMessageToAll(COLOR_WHITE, "Превозите ще се Respawn-нат след 10 секунди!");
				respawnVehsTimer = 10;
			}
			else
			{
				SendClientMessageToAll(COLOR_WHITE, "Превозите няма да се Respawn-нат!");
			}

			respawnVehsVoteYES = 0;
			respawnVehsVoteNO = 0;
		}
	}

	if (robberyTimeToRob > 0)
	{
		if (robberyTimeToRob > 0)
		{
			robberyTimeToRob--;
		}
	}

	if (robberyTime > 0)
	{
		if (robberyTime > 0)
		{
			robberyTime--;
		}
	}

	if (normalRobberyWaitingTimer > 0)
	{
		normalRobberyWaitingTimer--;
	}

	if (atmRobberyWaitingTimer > 0)
	{
		atmRobberyWaitingTimer--;
	}

	//atm robberygettingmoneytimer - open
	if (atmRobberyGettingMoneyTimer > 0)
	{
		if (atmRobberyGettingMoneyTimer > 0)
		{
			atmRobberyGettingMoneyTimer--;
		}

		if (atmRobberyGettingMoneyTimer == 0)
		{
			new bool: inAtmRobPlace = false;
			if (GetPlayerNearATM(atmRobberID) == atmRobberyPlaceIndex)	// in position
			{
				CollectAtmRobberyCash();
				atmRobberyCollectTimeCheck = 0;
				inAtmRobPlace = true;
			}

			if (inAtmRobPlace == false)
			{
				if (atmRobberyCollectTimeCheck == 0)
				{
					SendClientMessage(atmRobberID, COLOR_ORANGE, "ATM Robbery: Ако не се върнеш до 3 минути на банкомата, обирът ще приключи!");
					atmRobberyCollectTimeCheck = 3 * 60;
				}
			}

			atmRobberyGettingMoneyTimer = 2;
			if (atmRobberyMoney >= 32500)
			{
			 	//goto
				new string256[256];
				format(string256, 256, "ATM Robbery: Ти получи $%d след края на обира!", atmRobberyMoney);
				SendClientMessage(atmRobberID, COLOR_ORANGE, string256);
				SendClientMessageToAll(COLOR_ORANGE, "Police - ATM Robbery Alert: Органите на реда не успяха да спрат крадеца!");
				GivePlayerCash(atmRobberID, atmRobberyMoney);
				StopAtmRobbery();
			}
		}
	}

	//other timer - open
	if (atmRobberyCollectTimeCheck > 0)
	{
		if (atmRobberyCollectTimeCheck > 0)
		{
			atmRobberyCollectTimeCheck--;
		}

		if (atmRobberyCollectTimeCheck == 0)
		{
			new string256[256];
			format(string256, 256, "ATM Robbery: Ти получи $%d след края на обира!", atmRobberyMoney);
			SendClientMessage(atmRobberID, COLOR_ORANGE, string256);
			SendClientMessageToAll(COLOR_ORANGE, "Police - ATM Robbery Alert: Органите на реда успяха да спрат крадеца!");
			GivePlayerCash(atmRobberID, atmRobberyMoney);
			StopAtmRobbery();
		}
	}

	//other timer - close

	//atm robberygettingmoneytimer - close

	if (robberyGettingMoneyTimer > 0)
	{
		if (robberyGettingMoneyTimer > 0)
		{
			robberyGettingMoneyTimer--;
		}

		if (robberyGettingMoneyTimer == 0)
		{
			//goto
			new bool: inRobPlace = false;
			for (new i; i < MAX_PLAYERS; i++)
			{
				if (isNormalRobberyLeaderPlayer[i] == true)
				{
					if (IsPlayerInRangeOfPoint(i, 17, 2144.2419, 1639.6534, 993.5761) && GetPlayerVirtualWorld(i) == normalRobberyVirtualWorld)
					{
						if (normalRobPlace == 1)
						{
							CollectRobberyCash();
							robberyCollectTimeCheck = 0;
							inRobPlace = true;
						}
					}
				}
			}

			if (inRobPlace == false)
			{
				if (robberyCollectTimeCheck == 0)
				{
					SendNormalRobberyMessage(COLOR_ORANGE, "Robbery: Лидерът на обира трябва да се върне, иначе до 3 минути обирът се спира.");
					robberyCollectTimeCheck = 3 * 60;
				}
			}

			robberyGettingMoneyTimer = 2;
			if (normalRobberyMoney >= 32500)
			{
			 	//goto
				SendNormalRobberyMessage(COLOR_ORANGE, "Robbery: *Обирът е напълно успешен. Поздравления *");
				new dividedMoney = normalRobberyMoney / normalRobberyMembers;
				new string256[256];
				format(string256, 256, "Robbery: Всеки получава по $%d, след раздялата на печалбата.", dividedMoney);
				SendNormalRobberyMessage(COLOR_ORANGE, string256);
				SendClientMessageToAll(COLOR_ORANGE, "Police - Robbery Alert: Органите на реда не успяха да спрат крадците.");
				GiveAllRobbersMoney();
				StopRobbery();
			}
		}
	}

	if (robberyCollectTimeCheck > 0)
	{
		if (robberyCollectTimeCheck > 0)
		{
			robberyCollectTimeCheck--;
		}

		if (robberyCollectTimeCheck == 0)
		{
			SendNormalRobberyMessage(COLOR_ORANGE, "Robbery: *Обирът приключи, защото лидерът напусна обира *");
			new dividedMoney = normalRobberyMoney / normalRobberyMembers;
			new string256[256];
			format(string256, 256, "Robbery: Всеки получава по $%d, след раздялата на печалбата.", dividedMoney);
			SendNormalRobberyMessage(COLOR_ORANGE, string256);
			SendClientMessageToAll(COLOR_ORANGE, "Police - Robbery Alert: Органите на реда не успяха да спрат крадците.");
			GiveAllRobbersMoney();
			StopRobbery();
		}
	}

	if (robberyTimerToStart > 0)
	{
		if (robberyTimerToStart > 0)
		{
			robberyTimerToStart--;
		}

		if (robberyTimerToStart == 0)
		{
			if (startedNormalRobGettingMoney == false)
			{
				isNormalRobberyLeaderPlayer[normalRobberyLeaderID] = false;
				normalRobberyLeaderID = -1;
				startedNormalRobbery = false;
				StopRobbery();
				SendClientMessageToAll(COLOR_ORANGE, "Robbery: Обирът се провали, защото лидерът не започна да краде навреме.");
			}
		}
	}

	if (lspdGateDoorTimer > 0)
	{
		if (lspdGateDoorTimer > 0)
		{
			lspdGateDoorTimer--;
		}

		if (lspdGateDoorTimer == 0)
		{
			MoveDynamicObject(lspdGateDoor, 1581.93713, -1637.98376, 13.92183, 2, 0.00000, 0.00000, -87.09998);
		}
	}

	if (armyLvPort1Timer > 0)
	{
		if (armyLvPort1Timer > 0)
		{
			armyLvPort1Timer--;
		}

		if (armyLvPort1Timer == 0)
		{
			MoveDynamicObject(armyLvPort1, 135.142593, 1941.479492, 21.597537, 5.00, 0, 0, 0);
		}
	}

	if (armyLvPort2Timer > 0)
	{
		if (armyLvPort2Timer > 0)
		{
			armyLvPort2Timer--;
		}

		if (armyLvPort2Timer == 0)
		{
			MoveDynamicObject(armyLvPort2, 285.723236, 1820.534057, 19.915033, 5.00, 0, 0, 89.800071);
		}
	}

	if (armyLsPort1Timer > 0)
	{
		if (armyLsPort1Timer > 0)
		{
			armyLsPort1Timer--;
		}

		if (armyLsPort1Timer == 0)
		{
			MoveDynamicObject(armyLsPort1, 836.487792, -2069.757812, 14.618954, 5.00, 0, 0, 0);
		}
	}

	if (armyLsPort2Timer > 0)
	{
		if (armyLsPort2Timer > 0)
		{
			armyLsPort2Timer--;
		}

		if (armyLsPort2Timer == 0)
		{
			MoveDynamicObject(armyLsPort2, 836.365417, -2027.369750, 14.646684, 5.00, 0, 0, 0);
		}
	}

	if (lspdPortTimer > 0)
	{
		if (lspdPortTimer > 0)
		{
			lspdPortTimer--;
		}

		if (lspdPortTimer == 0)
		{
			MoveDynamicObject(lspdPort, 1544.74634, -1630.74500, 13.01674, 6, 1.00000, -89.50008, -89.20010);
		}
	}

	if (lspdGateTimer > 0)
	{
		if (lspdGateTimer > 0)
		{
			lspdGateTimer--;
		}

		if (lspdGateTimer == 0)
		{
			MoveDynamicObject(lspdGate, 1588.66833, -1638.39941, 14.45710, 2, 0.00000, 0.00000, -90.60007);
		}
	}

	if (serverGmxTimer > 0)
	{
		if (serverGmxTimer > 0)
		{
			serverGmxTimer--;
		}

		if (serverGmxTimer == 0)
		{
			GMXStart2();
		}
	}

	if (serverrestarttimer > 0)
	{
		if (serverrestarttimer > 0)
		{
			serverrestarttimer--;
		}

		if (serverrestarttimer >= 2)
		{
			new string256[256];
			format(string256, 256, "~r~~h~Restart after %d seconds", serverrestarttimer);
			TextDrawSetString(RESTARTText, string256);
		}
		else if (serverrestarttimer == 1)
		{
			GMXStart1();
		}
	}

	if (minutes == 5 && seconds == 0)
	{
		SendClientMessageToAll(COLOR_LOTTO, "San Andreas Lottery: Лотарията ще се състои след 4 минути! Побързайте да си купите билетче!");
	}

	if (minutes == 9 && seconds == 0)
	{
		LotteryEveryHour();
	}
	
	gettime(hours, minutes, seconds);
	if (minutes == 0 && seconds == 0)
	{
		ChangeHours();
		SetWeatherForPlayers();
		PayDay();
	}

/*
	if (minutes == 7 && seconds == 0 ||
		minutes == 15 && seconds == 0 ||
		minutes == 25 && seconds == 0)
	{
		AutoMessage();
	}
*/

	for (new i; i < MAX_VEHICLES; i++)
	{
		if (VehicleTimerInfo[i][vtTaxiFareTimer] > 0)
		{
			if (VehicleTimerInfo[i][vtTaxiFareTimer] > 0)
			{
				VehicleTimerInfo[i][vtTaxiFareTimer]--;
			}

			if (VehicleTimerInfo[i][vtTaxiFareTimer] == 0)
			{
				VehicleTimerInfo[i][vtTaxiFareTimer] = 6;
				VehicleInfo[i][vTaxiFare] += 1;
				for (new allPlayers; allPlayers < MAX_PLAYERS; allPlayers++)
				{
					if (GetPlayerVehicleID(allPlayers) == i)
					{
						UpdateFareText(allPlayers);
					}
				}
			}
		}

		if (VehicleTimerInfo[i][vtRadioChange] > 0)
		{
			if (VehicleTimerInfo[i][vtRadioChange] > 0)
			{
				VehicleTimerInfo[i][vtRadioChange]--;
			}

			if (VehicleTimerInfo[i][vtRadioChange] == 0)
			{
			 	//>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<
				new stringRadio[50];
				format(stringRadio, 50, "~b~~h~RADIO %s", radioAudioStreamNames[radioveh[i]]);
				for (new allPlayersInVeh = 0; allPlayersInVeh < MAX_PLAYERS; allPlayersInVeh++)
				{
					if (IsPlayerInVehicle(allPlayersInVeh, i))
					{
						GameTextForPlayer(allPlayersInVeh, stringRadio, 650, 1);
						if (radioveh[i] > 0)
						{
							if (PlayerInfo[allPlayersInVeh][pDisableCarRadio] == 0)
							{
								PlayAudioStreamForPlayer(allPlayersInVeh, radioAudioStream[radioveh[i]]);
							}
						}
						else if (radioveh[i] == 0)
						{
							if (PlayerInfo[allPlayersInVeh][pDisableCarRadio] == 0)
							{
								StopAudioStreamForPlayer(allPlayersInVeh);
							}
						}
					}
				}
			}

			//>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<
		}

		if (VehicleTimerInfo[i][vtRespawn] > 0)
		{
			if (VehicleTimerInfo[i][vtRespawn] > 0)
			{
				VehicleTimerInfo[i][vtRespawn]--;
			}

			if (VehicleTimerInfo[i][vtRespawn] <= 0)
			{
				SetVehicleToRespawn(i);
			}
		}
	}

	for (new i; i < MAX_PLAYERS; i++)
	{
		EditPlayerScreenTexts(i);

		if (gettime() - AFKDetect[i] > 5)
		{
			GivePlayerAfkTimerSecond(i);
		}

		if (isLogged[i] == true && PlayerInfo[i][pAFK] == 0)
		{
			PlayerInfo[i][pPlayedSeconds]++;
		}

		if (PlayerTimerInfo[i][ptLastOverSpeed] > 0)
		{
			PlayerTimerInfo[i][ptLastOverSpeed]--;
		}

		if (changeGunTimer[i] > 0)
		{
			changeGunTimer[i]--;
		}

		if (PlayerTimerInfo[i][ptHospitalCmd] > 0)
		{
			if (PlayerTimerInfo[i][ptHospitalCmd] > 0)
			{
				PlayerTimerInfo[i][ptHospitalCmd]--;
			}

			if (PlayerTimerInfo[i][ptHospitalCmd] == 0)
			{
				SetPlayerHealth(i, 100);
				SendClientMessage(i, COLOR_MEDIC, "Вие бяхте възстановен, такса: $35 !");
				TogglePlayerControllable(i, 1);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				SetPlayerSpecialAction(i, SPECIAL_ACTION_NONE);
			}
		}

		if (PlayerTimerInfo[i][ptHealingAfterDeath] > 0)
		{
			if (PlayerTimerInfo[i][ptHealingAfterDeath] > 0)
			{
				PlayerTimerInfo[i][ptHealingAfterDeath]--;
			}

			if (PlayerTimerInfo[i][ptHealingAfterDeath] == 0)
			{
				new Float: hisHealth;
				GetPlayerHealth(i, hisHealth);
				if (hisHealth >= 100)
				{
					SetPlayerHealth(i, 100);
					PlayerInfo[i][pInHospital] = 0;
					SendClientMessage(i, COLOR_MEDIC, "San Andreas Hospital: Вие сте излекуван и можете да напуснете сградата!");
					SendClientMessage(i, COLOR_MEDIC, "San Andreas Hospital: {ffffff}Такса: $230");
					GivePlayerCash(i, -230);
				}
				else if (hisHealth < 100)
				{
					SetPlayerHealth(i, hisHealth + 10);
					PlayerTimerInfo[i][ptHealingAfterDeath] = 15;
					GameTextForPlayer(i, "~w~+ ~g~10 HP", 2500, 3);
				}
			}
		}

		if (PlayerTimerInfo[i][ptVehicleTurnEngineOn] > 0)
		{
			if (PlayerTimerInfo[i][ptVehicleTurnEngineOn] > 0)
			{
				PlayerTimerInfo[i][ptVehicleTurnEngineOn]--;
			}

			if (PlayerTimerInfo[i][ptVehicleTurnEngineOn] <= 0)
			{
				if (IsPlayerInAnyVehicle(i))
				{
					new string256[256];
					format(string256, 256, "> Двигателят е {40BF00}Включен");
					SendInCarMessage(i, COLOR_WHITE, string256);
					//SendMessageScreenText(i, "~w~You ~g~started ~w~the engine");
					new vehicleID = GetPlayerVehicleID(i);
					ToggleEngine(vehicleID, VEHICLE_PARAMS_ON);
					vehEngineStatusON[vehicleID] = true;
				}
			}
		}

		if (busTeleportTimer[i] > 0)
		{
			if (busTeleportTimer[i] > 0)
			{
				busTeleportTimer[i]--;
			}

			if (busTeleportTimer[i] <= 0)
			{
				SendClientMessage(i, COLOR_BUS, "[Bus] Вие пристигнахте до дестинацията ви. Можете да напуснете автобуса.");
			}
		}

		if (calledTaxiTimer[i] > 0)
		{
			if (calledTaxiTimer[i] > 0)
			{
				calledTaxiTimer[i]--;
			}

			if (calledTaxiTimer[i] <= 0)
			{
				SendClientMessage(i, COLOR_YELLOW, "[Taxi number] Можете да наберете номера на таксито отново.");
			}
		}

		if (calledMechanicTimer[i] > 0)
		{
			if (calledMechanicTimer[i] > 0)
			{
				calledMechanicTimer[i]--;
			}

			if (calledMechanicTimer[i] <= 0)
			{
				SendClientMessage(i, COLOR_YELLOW, "[Mechanic number] Можете да наберете номера на механиците отново.");
			}
		}

		if (calledPoliceTimer[i] > 0)
		{
			if (calledPoliceTimer[i] > 0)
			{
				calledPoliceTimer[i]--;
			}

			if (calledPoliceTimer[i] <= 0)
			{
				SendClientMessage(i, COLOR_YELLOW, "[Police number] Можете да наберете номера на полицията отново.");
			}
		}

		if (PlayerTimerInfo[i][ptJoinCameraMoving] > 0)
		{
			if (PlayerTimerInfo[i][ptJoinCameraMoving] > 0)
			{
				PlayerTimerInfo[i][ptJoinCameraMoving]--;
			}

			if (PlayerTimerInfo[i][ptJoinCameraMoving] <= 0)
			{
				CameraMovingOnJoin(i);
			}
		}

		if (PlayerTimerInfo[i][ptHideMessageInfo] > 0)
		{
			if (PlayerTimerInfo[i][ptHideMessageInfo] > 0)
			{
				PlayerTimerInfo[i][ptHideMessageInfo]--;
			}

			if (PlayerTimerInfo[i][ptHideMessageInfo] <= 0)
			{
				TextDrawHideForPlayer(i, MessageInfo[i]);
			}
		}

		if (PlayerTimerInfo[i][ptHideCommandInfo] > 0)
		{
			if (PlayerTimerInfo[i][ptHideCommandInfo] > 0)
			{
				PlayerTimerInfo[i][ptHideCommandInfo]--;
			}

			if (PlayerTimerInfo[i][ptHideCommandInfo] <= 0)
			{
				TextDrawHideForPlayer(i, CommandInfo[i]);
			}
		}

		if (PlayerTimerInfo[i][ptAlreadyFallen] > 0)
		{
			if (PlayerTimerInfo[i][ptAlreadyFallen] > 0)
			{
				PlayerTimerInfo[i][ptAlreadyFallen]--;
			}

			if (PlayerTimerInfo[i][ptAlreadyFallen] <= 0)
			{
				alreadyFallen[i] = false;
				UpdateDynamic3DTextLabelText(DeathPlayerLabel[i], COLOR_DARKRED2, "");
			}
		}

		if (PlayerTimerInfo[i][ptFinishDrugEffect] > 0)
		{
			if (PlayerTimerInfo[i][ptFinishDrugEffect] > 0)
			{
				PlayerTimerInfo[i][ptFinishDrugEffect]--;
			}

			if (PlayerTimerInfo[i][ptFinishDrugEffect] <= 0)
			{
				SetPlayerDrunkLevel(i, 0);
				SetPlayerWeather(i, serverWeather);
				SendClientMessage(i, COLOR_WHITE, "Ефектът на наркотика вече свърши!");
			}
		}

		if (PlayerTimerInfo[i][ptMedicHelpSpawn] > 0)
		{
			if (PlayerTimerInfo[i][ptMedicHelpSpawn] > 0)
			{
				PlayerTimerInfo[i][ptMedicHelpSpawn]--;
			}

			if (PlayerTimerInfo[i][ptMedicHelpSpawn] <= 0)
			{
				if (recoveringFromDeath[i] == true)
				{
					SetPlayerHealth(i, 40);
					SetPlayerPos(i, -204.2457, -1782.2678, 675.7687);
					SetPlayerInterior(i, 1);
					SetPlayerVirtualWorld(i, i + 3);
					FreezeAntiDropOnSpawn(i);
					gettime(hours, minutes, seconds);
					new string256[256];
					format(string256, 256, "San Andreas Medical Service: Пациент:{FFFFFF} %s", RealName(i));
					SendClientMessage(i, COLOR_MEDIC, string256);
					format(string256, 256, "Време на пристигане:{FFFFFF} %d:%d", hours, minutes);
					SendClientMessage(i, COLOR_MEDIC, string256);
					PlayerTimerInfo[i][ptHealingAfterDeath] = 9;
					PlayerInfo[i][pInHospital] = 1;
					recoveringFromDeath[i] = false;
				}
			}
		}

		if (PlayerTimerInfo[i][ptClearChatAnimation] > 0)
		{
			if (PlayerTimerInfo[i][ptClearChatAnimation] > 0)
			{
				PlayerTimerInfo[i][ptClearChatAnimation]--;
			}

			if (PlayerTimerInfo[i][ptClearChatAnimation] <= 0)
			{
				if (GetPVarInt(i, "UseAnim") == 0 && IsPlayerInAnyVehicle(i) == 0 && GetPlayerSpecialAction(i) == SPECIAL_ACTION_NONE)
				{
					ClearAnimations(i);
					ClearAnimations(i);
					ClearAnimations(i);
					ClearAnimations(i);
					ClearAnimations(i);
					SetPlayerSpecialAction(i, SPECIAL_ACTION_NONE);
				}
			}
		}

		if (PlayerInfo[i][pPoliceJail] > 0)
		{
			if (PlayerInfo[i][pPoliceJail] > 0)
			{
				PlayerInfo[i][pPoliceJail]--;
			}

			if (PlayerInfo[i][pPoliceJail] <= 0)
			{
				SendClientMessage(i, COLOR_POLICE_2, "Вие вече сте на свобода, бъдете по-внимателен!");
				SetToSpawn(i);
			}
		}

		if (PlayerInfo[i][pMuted] > 0)
		{
			if (PlayerInfo[i][pMuted] > 0)
			{
				PlayerInfo[i][pMuted]--;
			}

			if (PlayerInfo[i][pMuted] <= 0)
			{
				SendClientMessage(i, COLOR_ADMIN_RED, "Изтече наказанието ти и вече си отглушен в чата!");
			}
		}

		if (PlayerInfo[i][pJailed] > 0)
		{
			if (PlayerInfo[i][pJailed] > 0)
			{
				PlayerInfo[i][pJailed]--;
			}

			if (PlayerInfo[i][pJailed] <= 0)
			{
				SendClientMessage(i, COLOR_ADMIN_RED, "Вие вече излязохте от админ затвора, бъдете по-внимателен!");
				SetToSpawn(i);
			}
		}

		if (PlayerInfo[i][pLastVRepair] > 0)
		{
			PlayerInfo[i][pLastVRepair]--;
		}

		if (PlayerInfo[i][pBusTimer] > 0)
		{
			if (PlayerInfo[i][pBusTimer] > 0)
			{
				PlayerInfo[i][pBusTimer]--;
			}

			if (PlayerInfo[i][pBusTimer] <= 0)
			{
			 	//SendClientMessage(i,COLOR_JOB,"Можете отново да шофирате буса из Las Venturas.");
			}
		}

		if (PlayerInfo[i][pBankLoanTimer] > 0)
		{
			if (PlayerInfo[i][pBankLoanTimer] > 0)
			{
				PlayerInfo[i][pBankLoanTimer]--;
			}

			if (PlayerInfo[i][pBankLoanTimer] == 1 *(60 *60))
			{
				SendClientMessage(i, COLOR_WHITE, "Банка: Имате още един час да си изплатите заема!");
			}

			if (PlayerInfo[i][pBankLoanTimer] == 30 *60)
			{
				SendClientMessage(i, COLOR_WHITE, "Банка: Имате още половин час да си изплатите заема!");
			}

			if (PlayerInfo[i][pBankLoanTimer] <= 0) {}
		}

		if (PlayerInfo[i][pDeliverTimer] > 0)
		{
			if (PlayerInfo[i][pDeliverTimer] > 0)
			{
				PlayerInfo[i][pDeliverTimer]--;
			}

			if (PlayerInfo[i][pDeliverTimer] <= 0)
			{
			 	//SendClientMessage(i,COLOR_JOB,"Можете отново да работите Deliver.");
			}
		}

		if (PlayerInfo[i][pCoalmineTimer] > 0)
		{
			if (PlayerInfo[i][pCoalmineTimer] > 0)
			{
				PlayerInfo[i][pCoalmineTimer]--;
			}

			if (PlayerInfo[i][pCoalmineTimer] <= 0)
			{
			 	//SendClientMessage(i,COLOR_JOB,"Можете отново да работите Coalmine.");
			}
		}

		if (PlayerInfo[i][pPizzaTimer] > 0)
		{
			if (PlayerInfo[i][pPizzaTimer] > 0)
			{
				PlayerInfo[i][pPizzaTimer]--;
			}

			if (PlayerInfo[i][pPizzaTimer] <= 0)
			{
			 	//SendClientMessage(i,COLOR_JOB,"Можете отново да разнасяте пица.");
			}
		}

		if (PlayerInfo[i][pKingRingTimer] > 0)
		{
			if (PlayerInfo[i][pKingRingTimer] > 0)
			{
				PlayerInfo[i][pKingRingTimer]--;
			}

			if (PlayerInfo[i][pKingRingTimer] <= 0)
			{
			 	//SendClientMessage(i,COLOR_JOB,"Можете отново да работите без договор към King Ring.");
			}
		}

		if (PlayerInfo[i][pSweeperTimer] > 0)
		{
			if (PlayerInfo[i][pSweeperTimer] > 0)
			{
				PlayerInfo[i][pSweeperTimer]--;
			}

			if (PlayerInfo[i][pSweeperTimer] <= 0)
			{
			 	//SendClientMessage(i,COLOR_JOB,"Можете отново да почиствате улиците на Las Venturas.");
			}
		}

		if (PlayerTimerInfo[i][ptDriverSchoolTimer] > 0)
		{
			if (PlayerTimerInfo[i][ptDriverSchoolTimer] > 0)
			{
				PlayerTimerInfo[i][ptDriverSchoolTimer]--;
				new stringvehicle[256];
				new Float: health;
				GetVehicleHealth(driverStudyVeh[i], health);
				new area = MaxAllowedSpeedArea(i);
				new maxSpeed;
				if (area != -1)
				{
					maxSpeed = MaxSpeedAreaInfo[area][MaxSpeed];
				}
				else if (area == -1)
				{
					maxSpeed = 120;
				}

				format(stringvehicle, 256, "~w~Health: ~g~%.0f~n~~w~Max Speed: ~g~%d~n~~w~Time Taken: ~b~%d seconds", health, maxSpeed, PlayerTimerInfo[i][ptDriverSchoolTaken]);
				TextDrawSetString(driverCourseText[i], stringvehicle);
				PlayerTimerInfo[i][ptDriverSchoolTimer] = 1;
				PlayerTimerInfo[i][ptDriverSchoolTaken] += 1;
			}
		}

		if (PlayerTimerInfo[i][ptSetToSpawnVar] > 0)
		{
			if (PlayerTimerInfo[i][ptSetToSpawnVar] > 0)
			{
				PlayerTimerInfo[i][ptSetToSpawnVar]--;
			}

			if (PlayerTimerInfo[i][ptSetToSpawnVar] <= 0)
			{
				noHospital[i] = false;
				setToSpawn[i] = false;
			}
		}

		if (PlayerTimerInfo[i][ptAFKBack] > 0)
		{
			PlayerTimerInfo[i][ptAFKBack]--;
		}

		if (PlayerTimerInfo[i][ptFishTimer] > 0)
		{
			if (PlayerTimerInfo[i][ptFishTimer] > 0)
			{
				PlayerTimerInfo[i][ptFishTimer]--;
			}

			if (PlayerTimerInfo[i][ptFishTimer] <= 0)
			{
				new fishID = random(5);
				if (fishID == 0)
				{
					SendClientMessage(i, COLOR_FISH, "Вие не хванахте нищо! На въдицата ви се закачи боклук.");
				}

				if (fishID == 1)
				{
					new fishWeight = randomex(5, 15);
					new string256[256];
					new freeSlot = GetPlayerFreeFishSlot(i);
					PlayerInfo[i][pFishSlot][freeSlot] = fishID;
					PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
					format(string256, 256, "На въдицата ти се закачи Шаран %d Kg. Рибата беше вкарана в слот %d", fishWeight, freeSlot);
					SendClientMessage(i, COLOR_FISH, string256);
					SendClientMessage(i, COLOR_FISH, "За достъп до твоите риби, използвай /myfish");
				}

				if (fishID == 2)
				{
					new fishWeight = randomex(5, 15);
					new string256[256];
					new freeSlot = GetPlayerFreeFishSlot(i);
					PlayerInfo[i][pFishSlot][freeSlot] = fishID;
					PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
					format(string256, 256, "На въдицата ти се закачи Скумрия %d Kg. Рибата беше вкарана в слот %d", fishWeight, freeSlot);
					SendClientMessage(i, COLOR_FISH, string256);
					SendClientMessage(i, COLOR_FISH, "За достъп до твоите риби, използвай /myfish");
				}

				if (fishID == 3)
				{
					new fishWeight = randomex(5, 15);
					new string256[256];
					new freeSlot = GetPlayerFreeFishSlot(i);
					PlayerInfo[i][pFishSlot][freeSlot] = fishID;
					PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
					format(string256, 256, "На въдицата ти се закачи Цаца %d Kg. Рибата беше вкарана в слот %d", fishWeight, freeSlot);
					SendClientMessage(i, COLOR_FISH, string256);
					SendClientMessage(i, COLOR_FISH, "За достъп до твоите риби, използвай /myfish");
				}

				if (fishID == 4)
				{
					new fishWeight = randomex(15, 44);
					new string256[256];
					new freeSlot = GetPlayerFreeFishSlot(i);
					PlayerInfo[i][pFishSlot][freeSlot] = fishID;
					PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
					format(string256, 256, "На въдицата ти се закачи Скат %d Kg. Рибата беше вкарана в слот %d", fishWeight, freeSlot);
					SendClientMessage(i, COLOR_FISH, string256);
					SendClientMessage(i, COLOR_FISH, "За достъп до твоите риби, използвай /myfish");
				}

				if (fishID == 5)
				{
					new fishWeight = randomex(5, 15);
					new string256[256];
					new freeSlot = GetPlayerFreeFishSlot(i);
					PlayerInfo[i][pFishSlot][freeSlot] = fishID;
					PlayerInfo[i][pFishWeight][freeSlot] = fishWeight;
					format(string256, 256, "На въдицата ти се закачи Омар %d Kg. Рибата беше вкарана в слот %d", fishWeight, freeSlot);
					SendClientMessage(i, COLOR_FISH, string256);
					SendClientMessage(i, COLOR_FISH, "За достъп до твоите риби, използвай /myfish");
				}

				TogglePlayerControllable(i, 1);
				ClearAnimations(i);
				RemovePlayerAttachedObject(i, 2);
			}
		}

		if (PlayerTimerInfo[i][pResetPlayerLabel] > 0)
		{
			if (PlayerTimerInfo[i][pResetPlayerLabel] > 0)
			{
				PlayerTimerInfo[i][pResetPlayerLabel]--;
			}

			if (PlayerTimerInfo[i][pResetPlayerLabel] <= 0)
			{
				UpdateDynamic3DTextLabelText(PlayerLabel[i], COLOR_RED, "");
			}
		}

		if (PlayerTimerInfo[i][ptPoliceStunned] > 0)
		{
			if (PlayerTimerInfo[i][ptPoliceStunned] > 0)
			{
				PlayerTimerInfo[i][ptPoliceStunned]--;
			}

			if (PlayerTimerInfo[i][ptPoliceStunned] <= 0)
			{
				ClearAnimations(i);
			}
		}

		if (PlayerTimerInfo[i][ptRevieveTimer] > 0)
		{
			if (PlayerTimerInfo[i][ptRevieveTimer] > 0)
			{
				PlayerTimerInfo[i][ptRevieveTimer]--;
				new string256[256];
				format(string256, 256, "~y~Death Timer: ~w~%d", PlayerTimerInfo[i][ptRevieveTimer]);
				TextDrawSetString(DeathTimerText[i], string256);
			}

			if (PlayerTimerInfo[i][ptRevieveTimer] <= 0)
			{
				SetPlayerHealth(i, 0);
				TextDrawHideForPlayer(i, DeathTimerText[i]);
			}
		}

		if (PlayerTimerInfo[i][ptClearAnimation] > 0)
		{
			if (PlayerTimerInfo[i][ptClearAnimation] > 0)
			{
				PlayerTimerInfo[i][ptClearAnimation]--;
			}

			if (PlayerTimerInfo[i][ptClearAnimation] <= 0)
			{
				TogglePlayerControllable(i, 1);
				SetPlayerSpecialAction(i, SPECIAL_ACTION_NONE);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
				ClearAnimations(i);
			}
		}

		if (PlayerTimerInfo[i][ptFreeze] > 0)
		{
			if (PlayerTimerInfo[i][ptFreeze] > 0)
			{
				PlayerTimerInfo[i][ptFreeze]--;
			}

			if (PlayerTimerInfo[i][ptFreeze] <= 0)
			{
				TogglePlayerControllable(i, 0);
			}
		}

		if (PlayerTimerInfo[i][ptApplyFallenAnim] > 0)
		{
			if (PlayerTimerInfo[i][ptApplyFallenAnim] > 0)
			{
				PlayerTimerInfo[i][ptApplyFallenAnim]--;
			}

			if (PlayerTimerInfo[i][ptApplyFallenAnim] <= 0)
			{
				ApplyAnimation(i, "CRACK", "crckidle2", 4.1, 1, 1, 1, 1, 1);
			}
		}

		if (PlayerTimerInfo[i][ptUnfreeze] > 0)
		{
			if (PlayerTimerInfo[i][ptUnfreeze] > 0)
			{
				PlayerTimerInfo[i][ptUnfreeze]--;
			}

			if (PlayerTimerInfo[i][ptUnfreeze] <= 0)
			{
				TogglePlayerControllable(i, 1);
			}
		}
		
		if (PlayerTimerInfo[i][ptShowIntro] > 0)
		{
			if (PlayerTimerInfo[i][ptShowIntro] > 0)
			{
				PlayerTimerInfo[i][ptShowIntro]--;
			}

			if (PlayerTimerInfo[i][ptShowIntro] <= 0)
			{
				ShowPlayerIntro(i);
			}
		}
		
		if (PlayerTimerInfo[i][ptEndIntro] > 0)
		{
			if (PlayerTimerInfo[i][ptEndIntro] > 0)
			{
				PlayerTimerInfo[i][ptEndIntro]--;
			}

			if (PlayerTimerInfo[i][ptEndIntro] <= 0)
			{
				ShowLoginOrRegister(i);
			}
		}

		if (PlayerTimerInfo[i][ptBan] > 0)
		{
			if (PlayerTimerInfo[i][ptBan] > 0)
			{
				PlayerTimerInfo[i][ptBan]--;
			}

			if (PlayerTimerInfo[i][ptBan] <= 0)
			{
			 	//Ban(i);
				new stringBan[256];
				new hisIP[35];
				GetPlayerIp(i, hisIP, 35);
				format(stringBan, 256, "banip %s", hisIP);
				SendRconCommand(stringBan);
				SendRconCommand("reloadbans");
			}
		}

		if (PlayerTimerInfo[i][ptKick] > 0)
		{
			if (PlayerTimerInfo[i][ptKick] > 0)
			{
				PlayerTimerInfo[i][ptKick]--;
			}

			if (PlayerTimerInfo[i][ptKick] <= 0)
			{
				Kick(i);
			}
		}

		if (PlayerTimerInfo[i][ptFuel] > 0)
		{
			if (PlayerTimerInfo[i][ptFuel] > 0)
			{
				PlayerTimerInfo[i][ptFuel]--;
			}

			if (PlayerTimerInfo[i][ptFuel] <= 0)
			{
				if (IsPlayerInAnyVehicle(i) && IsPlayerDriver(i))
				{
					new vehModel;
					vehModel = GetVehicleModel(GetPlayerVehicleID(i));
					if (IsNoFuelVehicle(vehModel) == 0)
					{
						PlayerTimerInfo[i][ptFuel] = 50;
						if (vehFuel[GetPlayerVehicleID(i)] <= 0)
						{
							ToggleEngine(GetPlayerVehicleID(i), VEHICLE_PARAMS_OFF);
							vehFuel[GetPlayerVehicleID(i)] = 0;
							SendClientMessage(i, COLOR_LIGHTPURPLE, "Превозното средство няма бензин, заредете го от бензиностанция.");
						}
						else
						{
							if (vehEngineStatusON[GetPlayerVehicleID(i)] == true)
							{
								vehFuel[GetPlayerVehicleID(i)] -= 1;
							}
						}

						UpdateSpeedoText(i);
					}
				}
			}
		}
	}
}

Float: GetPlayerDefaultSpeedCap(playerid)
{
	new Float: result;
	new area = MaxAllowedSpeedArea(playerid);
	if (area != -1)
	{
		if (MaxSpeedAreaInfo[area][MaxSpeed] >= 120)
		{
			result = 0.62;
		}
		else if (MaxSpeedAreaInfo[area][MaxSpeed] >= 90 && MaxSpeedAreaInfo[area][MaxSpeed] < 120)
		{
			result = 0.57;
		}
	}

	result = 0.59;
	return result;
}

stock SetPlayerDefaultSpeedCap(playerid)
{
	currentPlayerSpeedLimit[playerid] = GetPlayerDefaultSpeedCap(playerid);
}

stock UpdateMaxAllowedSpeedText(playerid)
{
	new stringvehicle[256];
	new area = MaxAllowedSpeedArea(playerid);
	if (area != -1)
	{
		new vehicleSpeed = MaxSpeedAreaInfo[area][MaxSpeed];
		if (currentPlayerSpeedLimit[playerid] != GetPlayerDefaultSpeedCap(playerid))
		{
			SetPlayerDefaultSpeedCap(playerid);
		}
	}
	else
	{
		if (currentPlayerSpeedLimit[playerid] != GetPlayerDefaultSpeedCap(playerid))
		{
			SetPlayerDefaultSpeedCap(playerid);
		}
	}
}

stock UpdateFareText(playerid)
{
	new stringvehicle[256];
	format(stringvehicle, 256, "Fare: ~y~~h~$%d", VehicleInfo[GetPlayerVehicleID(playerid)][vTaxiFare]);
	TextDrawSetString(FareStatus[playerid], stringvehicle);
}

stock UpdateSpeedoText(playerid)
{
	new stringvehicle[256];
	new vehModel;
	vehModel = GetVehicleModel(GetPlayerVehicleID(playerid));
	if (IsNoFuelVehicle(vehModel) == 0)
	{
		//TODO Veh Text
		format(stringvehicle, 256, "%d Km/H", GetVehicleKmh(GetPlayerVehicleID(playerid)));
		TextDrawSetString(SpeedStatus[playerid], stringvehicle);

		format(stringvehicle, 256, "%d L", vehFuel[GetPlayerVehicleID(playerid)]);
		TextDrawSetString(FuelStatus[playerid], stringvehicle);
	}
	else if (IsNoFuelVehicle(vehModel) == 1)
	{
		format(stringvehicle, 256, "%d Km/H", GetVehicleKmh(GetPlayerVehicleID(playerid)));
		TextDrawSetString(SpeedStatus[playerid], stringvehicle);
	}
}

stock SaveServer()
{
	for (new playerid; playerid < MAX_PLAYERS; playerid++)
	{
		SaveAccount(playerid);
	}

	for (new veh; veh < ReturnNextUnusedPrivateVehID(); veh++)	//TO GO
	{
		if (PrivateVehInfo[veh][vVehID] != 0)
		{
			SavePrivateVehicle(veh);
		}
	}

	for (new turf; turf < MAX_TURFS; turf++)
	{
		SaveTurf(turf);
	}

	for (new graffiti; graffiti < MAX_GRAFFITI; graffiti++)
	{
		SaveGraffiti(graffiti);
	}
}

public OnGameModeExit()
{
	//SaveServer();
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	return 1;
}

stock ShowPlayerBank(playerid)
{
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	new string2230[512];
	new string2230result[2230];
	format(string2230, 512, "{55A2F9}Банковата карта на %s\n\n", accountNickname);
	strcat(string2230result, string2230);
	format(string2230, 512, "{55A2F9}Сума в банката: $%d\n", PlayerInfo[playerid][pBank]);
	strcat(string2230result, string2230);
	ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{EBEBEB}Документи:", string2230result, "Затвори", "");
}

stock ShowPlayerDocs(geterid, playerid)
{
	new genderName[25];
	switch (PlayerInfo[playerid][pGender])
	{
		case 0:
			format(genderName, 25, "Мъж");
		case 1:
			format(genderName, 25, "Жена");
	}

	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	new string2230[512];
	new string2230result[2230];
	format(string2230, 512, "{FFFFFF}Документите на {5EF403}%s\n\n", GetPlayerRpName(playerid));
	strcat(string2230result, string2230);
	if (PlayerInfo[playerid][pIdentifyCard] == 1)
	{
		format(string2230, 512, "{FFFFFF}Лична карта:\n", GetPlayerRpName(playerid));
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}- Пол: {03D3F4}%s\n", genderName);
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}- Възраст: {03D3F4}%d г.\n", PlayerInfo[playerid][pAge]);
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}- ЕГН: {03D3F4}%d\n\n", PlayerInfo[playerid][pEGN]);
		strcat(string2230result, string2230);
	}
	
	if (PlayerInfo[playerid][pPhone] == 1)
	{
		format(string2230, 512, "{FFFFFF}- Тел. номер: {03D3F4}%d\n\n", PlayerInfo[playerid][pPhoneNum]);
		strcat(string2230result, string2230);
	}
	
	format(string2230, 512, "{C1C1C1}_______________________________________\n");
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Лична собственост:\n");
	strcat(string2230result, string2230);
	if (PlayerInfo[playerid][pHouseO] > -1)
	{
		format(string2230, 512, "{FFFFFF}- Къща: {03D3F4}Да\n");
		strcat(string2230result, string2230);
	}
	else
	{
		format(string2230, 512, "{FFFFFF}- Къща: {03D3F4}Не\n");
		strcat(string2230result, string2230);
	}

	if (PlayerInfo[playerid][pBizO] > -1)
	{
		format(string2230, 512, "{FFFFFF}- Бизнес: {03D3F4}Да\n");
		strcat(string2230result, string2230);
	}
	else
	{
		format(string2230, 512, "{FFFFFF}- Бизнес: {03D3F4}Не\n");
		strcat(string2230result, string2230);
	}

	format(string2230, 512, "{FFFFFF}- Брой лични транспорти: {03D3F4}%d\n\n", GetPrivateVehsNumber(playerid));
	strcat(string2230result, string2230);
	
	format(string2230, 512, "{C1C1C1}_______________________________________\n");
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Лицензи от United States:\n");
	strcat(string2230result, string2230);
	if (PlayerInfo[playerid][pCarLicense] == 0)
	{
		format(string2230, 512, "{FFFFFF}- Шофьорска книжка за кола: {03D3F4}Не\n");
		strcat(string2230result, string2230);
	}
	else if (PlayerInfo[playerid][pCarLicense] == 1)
	{
		format(string2230, 512, "{FFFFFF}- Шофьорска книжка за кола: {03D3F4}Да\n");
		strcat(string2230result, string2230);
	}

	if (PlayerInfo[playerid][pPlaneLicense] == 0)
	{
		format(string2230, 512, "{FFFFFF}- Шофьорска книжка за въздушни превозни средства: {03D3F4}Не\n");
		strcat(string2230result, string2230);
	}
	else if (PlayerInfo[playerid][pPlaneLicense] == 1)
	{
		format(string2230, 512, "{FFFFFF}- Шофьорска книжка за въздушни превозни средства: {03D3F4}Да\n");
		strcat(string2230result, string2230);
	}

	if (PlayerInfo[playerid][pWepLic] == 0)
	{
		format(string2230, 512, "{FFFFFF}- Лиценз за оръжия: {03D3F4}Не\n");
		strcat(string2230result, string2230);
	}
	else if (PlayerInfo[playerid][pWepLic] == 1)
	{
		format(string2230, 512, "{FFFFFF}- Лиценз за оръжия: {03D3F4}Да\n");
		strcat(string2230result, string2230);
	}

	ShowPlayerDialog(geterid, closeddialog, DIALOG_STYLE_MSGBOX, "{EBEBEB}Документи:", string2230result, "Затвори", "");
}

stock ShowPlayerStatsPage2(giveplayerID, playerid)
{
	new string2230[512];
	new string2230result[2230];
	format(string2230, 512, "{FFFFFF}Кокаин: {40BF00}%d гр.\n", PlayerInfo[playerid][pCocaine]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Марихуана: {40BF00}%d гр.\n", PlayerInfo[playerid][pMarijuana]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Хероин: {40BF00}%d гр.\n\n", PlayerInfo[playerid][pHeroin]);
	strcat(string2230result, string2230);
	if (PlayerInfo[playerid][pMask] == 0)
	{
		strcat(string2230result, "{FFFFFF}Маска за скриване на лицето: {40BF00}Няма\n");
	}
	else if (PlayerInfo[playerid][pMask] == 1)
	{
		strcat(string2230result, "{FFFFFF}Маска за скриване на лицето: {40BF00}Има \n");
	}

	if (PlayerInfo[playerid][pMoneyBag] == 0)
	{
		strcat(string2230result, "{FFFFFF}Чанта за обир (Money Bag): {40BF00}Няма\n");
	}
	else if (PlayerInfo[playerid][pMoneyBag] == 1)
	{
		strcat(string2230result, "{FFFFFF}Чанта за обир (Money Bag): {40BF00}Има \n");
	}

	if (PlayerInfo[playerid][pVudica] == 0)
	{
		strcat(string2230result, "{FFFFFF}Въдица за ловене на риба: {40BF00}Няма\n");
	}
	else if (PlayerInfo[playerid][pVudica] == 1)
	{
		strcat(string2230result, "{FFFFFF}Въдица за ловене на риба: {40BF00}Има \n");
	}

	format(string2230, 512, "{FFFFFF}Стръв: {40BF00}%d бр.\n", PlayerInfo[playerid][pStruv]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Цигари: {40BF00}%d бр.\n", PlayerInfo[playerid][pCiggs]);
	strcat(string2230result, string2230);
	if (PlayerInfo[playerid][pTracker] == 0)
	{
		strcat(string2230result, "{FFFFFF}Тракер за коли: {40BF00}Няма\n\n");
	}
	else if (PlayerInfo[playerid][pTracker] == 1)
	{
		strcat(string2230result, "{FFFFFF}Тракер за коли: {40BF00}Има \n\n");
	}

	if (PlayerInfo[playerid][pCarLicense] == 0)
	{
		strcat(string2230result, "{FFFFFF}Шофьорска книжка за пътни превозни средства: {40BF00}Няма\n");
	}
	else if (PlayerInfo[playerid][pCarLicense] == 1)
	{
		strcat(string2230result, "{FFFFFF}Шофьорска книжка за пътни превозни средства: {40BF00}Има \n");
	}

	if (PlayerInfo[playerid][pPlaneLicense] == 0)
	{
		strcat(string2230result, "{FFFFFF}Шофьорска книжка за въздушни превозни средства: {40BF00}Няма \n");
	}
	else if (PlayerInfo[playerid][pPlaneLicense] == 1)
	{
		strcat(string2230result, "{FFFFFF}Шофьорска книжка за въздушни превозни средства: {40BF00}Има \n");
	}

	if (PlayerInfo[playerid][pWepLic] == 1)
	{
		strcat(string2230result, "{FFFFFF}Лиценз за използване оръжия: {40BF00}Има\n");
	}
	else if (PlayerInfo[playerid][pWepLic] == 0)
	{
		strcat(string2230result, "{FFFFFF}Лиценз за използване оръжия: {40BF00}Няма\n\n");
	}

	if (PlayerInfo[playerid][pGPS] == 1)
	{
		strcat(string2230result, "{FFFFFF}GPS Навигатор: {40BF00}Има\n");
	}
	else if (PlayerInfo[playerid][pGPS] == 0)
	{
		strcat(string2230result, "{FFFFFF}GPS Навигатор: {40BF00}Няма\n\n");
	}

	format(string2230, 512, "{FFFFFF}Статус на глад: {40BF00}%d от 100 \n", PlayerInfo[playerid][pHungry]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Статус на жажда: {40BF00}%d от 100 \n\n", PlayerInfo[playerid][pThirsty]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Предупреждения: {40BF00}%d от 5 \n", PlayerInfo[playerid][pWarns]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Admin Предупреждения: {40BF00}%d от 3 \n\n", PlayerInfo[playerid][pAdminWarns]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Mute Time: {40BF00}%d мин. \n", PlayerInfo[playerid][pMuted]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Jail Time: {40BF00}%d мин. \n", PlayerInfo[playerid][pJailed]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Police Jail Time: {40BF00}%d мин.\n\n", PlayerInfo[playerid][pPoliceJail]);
	strcat(string2230result, string2230);
	ShowPlayerDialog(giveplayerID, closeddialog, DIALOG_STYLE_MSGBOX, "{40BF00}Статистика на персонажа:", string2230result, "Затвори", "");
}

stock ShowPlayerStats(giveplayerID, playerid)
{
	seeingStats[playerid] = giveplayerID;
	new genderName[25];
	switch (PlayerInfo[playerid][pGender])
	{
		case 0:
			format(genderName, 25, "{96E7FF}Мъж");
		case 1:
			format(genderName, 25, "{DF96FF}Жена");
	}

	new string2230[512];
	new string2230result[2230];
	format(string2230, 512, "{FFFFFF}Име на профила: {40BF00}%s\n", GetAccountNickname(playerid));
	strcat(string2230result, string2230);
	if (PlayerInfo[playerid][pIdentifyCard] == 1)
	{
		format(string2230, 512, "{FFFFFF}Пол на персонажа: {40BF00}%s \n", genderName);
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}Възраст на персожана: {FF0000}%d г. \n", PlayerInfo[playerid][pAge]);
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}ЕГН (Единен граждански номер): {FF0000}%d\n", PlayerInfo[playerid][pEGN]);
		strcat(string2230result, string2230);
	}
	
	format(string2230, 512, "{FFFFFF}\nСтатус на глада: {FFFF00}%d от 100\n", PlayerInfo[playerid][pHungry]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Статус на жаждата: {FFFF00}%d от 100\n\n", PlayerInfo[playerid][pThirsty]);
	strcat(string2230result, string2230);

	format(string2230, 512, "{FFFFFF}Налични пари в кеш: {40BF00}$%d \n", PlayerInfo[playerid][pCash]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Налични пари в банката: {40BF00}$%d \n\n", PlayerInfo[playerid][pBank]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Ваучери: {40BF00}%d лева \n\n", PlayerInfo[playerid][pVoucherBGN]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Level (Ниво) на персонажа: {40BF00}%d \n", PlayerInfo[playerid][pLevel]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Exp (Точки) на персонажа: {40BF00}%d \n\n", PlayerInfo[playerid][pExp]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Vip Level (Vip Ниво): {40BF00}%d \n", PlayerInfo[playerid][pVip]);
	strcat(string2230result, string2230);
	if (PlayerInfo[playerid][pPhone] == 0)
	{
		strcat(string2230result, "{FFFFFF}Телефонен номер: {40BF00}Няма\n");
	}
	else
	{
		format(string2230, 512, "{FFFFFF}Телефонен номер: {40BF00}%d\n", PlayerInfo[playerid][pPhoneNum]);
		strcat(string2230result, string2230);
	}

	format(string2230, 512, "{FFFFFF}Мобилен интернет: {40BF00}%d MB Telenor\n\n", PlayerInfo[playerid][pTelenorMB]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Faction: {40BF00}%s\n", FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Faction Rank: {40BF00}%d\n", PlayerInfo[playerid][pRank]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Job (Постоянна работа): {40BF00}%s\n", JobInfo[PlayerInfo[playerid][pJob]][jName]);
	strcat(string2230result, string2230);
	if (PlayerInfo[playerid][pJobBoss] == 0)
	{
		strcat(string2230result, "{FFFFFF}Шеф на Job: {40BF00}Не\n\n");
	}
	else
	{
		strcat(string2230result, "{FFFFFF}Шеф на Job: {40BF00}Да\n\n");
	}

	format(string2230, 512, "{FFFFFF}Ниво на издирване: {40BF00}%d\n", PlayerInfo[playerid][pWantedLevel]);
	strcat(string2230result, string2230);
	format(string2230, 512, "{FFFFFF}Глоби в полицията: {40BF00}$%d\n\n", PlayerInfo[playerid][pFine]);
	strcat(string2230result, string2230);
	if (PlayerInfo[playerid][pHouseO] == -1)
	{
		strcat(string2230result, "{FFFFFF}Собствена Къща: {40BF00}Няма\n");
	}
	else
	{
		strcat(string2230result, "{FFFFFF}Собствена Къща: {40BF00}Има\n");
	}

	if (PlayerInfo[playerid][pBizO] == -1)
	{
		strcat(string2230result, "{FFFFFF}Собствен Бизнес: {40BF00}Няма\n");
	}
	else
	{
		strcat(string2230result, "{FFFFFF}Собствен Бизнес: {40BF00}Има\n");
	}

	ShowPlayerDialog(giveplayerID, DIALOG_MORE_STATS, DIALOG_STYLE_MSGBOX, "{40BF00}Статистика на персонажа:", string2230result, "Покажи още", "Затвори");
}

stock ShowLoginOrRegister(playerid)
{
	new accountFileNickname[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(accountFileNickname, 256, "%s.ini", accountNickname);
	if (!dini_Exists(accountFileNickname))
	{
		new string256[256];
		format(string256, 256, "{FFFFFF}Добре дошли в LawLess Roleplay\n\n{FFFFFF}Профил: {33AA33}%s\n{FFFFFF}Статус на профила: {FF0000}Нерегистриран\n\n{FFFFFF}Въведете паролата си отдолу и натиснете 'Регистрирай'", accountNickname);
		ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Регистрация:", string256, "Регистрирай", "Излез");
	}
	else
	{
		new string256[256];
		format(string256, 256, "{FFFFFF}Добре дошли в LawLess Roleplay\n\n{FFFFFF}Профил: {33AA33}%s\n{FFFFFF}Статус на профила: {5EF403}Регистриран\n\n{FFFFFF}Въведете паролата си отдолу и натиснете 'Влез'", accountNickname);
		ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Вход в сървъра", string256, "Влез", "Излез");
	}

	CameraMovingOnJoin(playerid);
}

stock CameraMovingOnJoin(playerid)
{
	/*
		InterpolateCameraPos(playerid,2995.4114,-1630.6260,108.6881,1477.3516, -1557.2410, 61.636,40000,CAMERA_MOVE);
		InterpolateCameraLookAt(playerid,2897.1233,-1633.1787,109.1490,-99.3358,-1710.9866,123.1997,40000,CAMERA_MOVE);
	*/

	InterpolateCameraPos(playerid, 1476.2715, -1558.9209, 63.2761, 1477.1284, -1618.8477, 61.77561, 10000, CAMERA_MOVE);
	InterpolateCameraLookAt(playerid, 1476.2858, -1559.9197, 63.2511, 1477.1427, -1619.8464, 61.7505, 10000, CAMERA_MOVE);

	/*
	SetPlayerCameraPos(playerid, 1477.1284, -1618.8477, 61.7756);

	SetPlayerCameraLookAt(playerid, 1477.1427, -1619.8464, 61.7505);

	*/

}

stock GivePlayerAllGuns(playerid)
{
	for (new i = 0; i < 13; i++)
	{
		if (PlayerInfo[playerid][pWeapon][i] != 0)
		{
			GivePlayerWeapon(playerid, PlayerInfo[playerid][pWeapon][i], PlayerInfo[playerid][pWeaponAmmo][i]);
		}
	}

	changeGunTimer[playerid] = 4;
}

stock GetPlayerAllGuns(playerid)
{
	ResetPlayerWeapons(playerid);
}

stock SavePlayerAllGuns(playerid)
{
	for (new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(playerid, i, PlayerInfo[playerid][pWeapon][i], PlayerInfo[playerid][pWeaponAmmo][i]);
	}
}

stock SavePlayerLastLogin(playerid)
{
	new hours, minutes, seconds;
	gettime(hours, minutes, seconds);
	new year, mounth, day;
	getdate(year, mounth, day);
	PlayerInfo[playerid][pLastMonth] = mounth;
	PlayerInfo[playerid][pLastYear] = year;
	PlayerInfo[playerid][pLastDay] = day;
	PlayerInfo[playerid][pLastHour] = hours;
	PlayerInfo[playerid][pLastMinute] = minutes;
	PlayerInfo[playerid][pLastSecond] = seconds;
}

stock SaveAccount(playerid)
{
	if (isLogged[playerid] == true)
	{
		new accountFileNickname[256];
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, accountNickname, 25);
		format(accountFileNickname, 256, "%s.ini", accountNickname);
		if (inPaintBall[playerid] == false)
		{
			SavePlayerAllGuns(playerid);
		}

		SaveInventory(playerid);
		for (new i; i < 13; i++)
		{
			new string256[256];
			format(string256, 256, "pWeapon[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pWeapon][i]);
			format(string256, 256, "pWeaponAmmo[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pWeaponAmmo][i]);
		}

		for (new i; i < 11; i++)
		{
			new string256[256];
			format(string256, 256, "pWeaponSkill[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pWeaponSkill][i]);
		}

		for (new i; i < 11; i++)
		{
			new string256[256];
			format(string256, 256, "pWeaponSkillPoints[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pWeaponSkillPoints][i]);
		}

		for (new i; i < 11; i++)
		{
			new string256[256];
			format(string256, 256, "pAchievement[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pAchievement][i]);
		}

		for (new i; i < 3; i++)
		{
			new string256[256];
			format(string256, 256, "pPrivateVeh[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pPrivateVeh][i]);
		}

		for (new i = 1; i < 11; i++)
		{
			new string256[256];
			format(string256, 256, "pFishSlot[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pFishSlot][i]);
		}

		for (new i = 1; i < 11; i++)
		{
			new string256[256];
			format(string256, 256, "pFishWeight[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pFishWeight][i]);
		}

		for (new i; i < 4; i++)
		{
			new string256[256];
			format(string256, 256, "pFood[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pFood][i]);
		}

		for (new i; i < 3; i++)
		{
			new string256[256];
			format(string256, 256, "pDrink[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pDrink][i]);
		}

		for (new i = 0; i < MAX_PLAYER_CLOTHES; i++)
		{
			new string256[256];
			format(string256, 256, "pClothes[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pClothes][i]);
		}

		for (new i = 0; i < MAX_BUYITEMS; i++)
		{
			new string256[256];
			format(string256, 256, "pItems[%d]", i);
			dini_IntSet(accountFileNickname, string256, PlayerInfo[playerid][pItems][i]);
		}

		dini_Set(accountFileNickname, "pPassword", PlayerInfo[playerid][pPassword]);
		dini_IntSet(accountFileNickname, "pAdmin", PlayerInfo[playerid][pAdmin]);
		dini_IntSet(accountFileNickname, "pPrivateVehFreeSlot", PlayerInfo[playerid][pPrivateVehFreeSlot]);
		dini_IntSet(accountFileNickname, "pGPS", PlayerInfo[playerid][pGPS]);
		dini_IntSet(accountFileNickname, "pVudica", PlayerInfo[playerid][pVudica]);
		dini_IntSet(accountFileNickname, "pHungry", PlayerInfo[playerid][pHungry]);
		dini_IntSet(accountFileNickname, "pThirsty", PlayerInfo[playerid][pThirsty]);
		dini_IntSet(accountFileNickname, "pGiftPaydays", PlayerInfo[playerid][pGiftPaydays]);
		dini_IntSet(accountFileNickname, "pMuted", PlayerInfo[playerid][pMuted]);
		dini_IntSet(accountFileNickname, "pJailed", PlayerInfo[playerid][pJailed]);
		dini_IntSet(accountFileNickname, "pTips", PlayerInfo[playerid][pTips]);
		dini_IntSet(accountFileNickname, "pStyleTexts", PlayerInfo[playerid][pStyleTexts]);
		dini_IntSet(accountFileNickname, "pFightStyle", PlayerInfo[playerid][pFightStyle]);
		dini_IntSet(accountFileNickname, "pLastYear", PlayerInfo[playerid][pLastYear]);
		dini_IntSet(accountFileNickname, "pLastMonth", PlayerInfo[playerid][pLastMonth]);
		dini_IntSet(accountFileNickname, "pLastDay", PlayerInfo[playerid][pLastDay]);
		dini_IntSet(accountFileNickname, "pLastMinute", PlayerInfo[playerid][pLastMinute]);
		dini_IntSet(accountFileNickname, "pLastSecond", PlayerInfo[playerid][pLastSecond]);
		dini_IntSet(accountFileNickname, "pLastHour", PlayerInfo[playerid][pLastHour]);
		dini_IntSet(accountFileNickname, "pDrugsAddict", PlayerInfo[playerid][pDrugsAddict]);
		dini_IntSet(accountFileNickname, "pVotedGov", PlayerInfo[playerid][pVotedGov]);
		dini_IntSet(accountFileNickname, "pSpawn", PlayerInfo[playerid][pSpawn]);
		dini_IntSet(accountFileNickname, "pMask", PlayerInfo[playerid][pMask]);
		dini_IntSet(accountFileNickname, "pSweeperPast", PlayerInfo[playerid][pSweeperPast]);
		dini_IntSet(accountFileNickname, "pCarGetPast", PlayerInfo[playerid][pCarGetPast]);
		dini_IntSet(accountFileNickname, "pInvCapacity", PlayerInfo[playerid][pInvCapacity]);
		dini_IntSet(accountFileNickname, "pPrivateVehs", PlayerInfo[playerid][pPrivateVehs]);
		dini_IntSet(accountFileNickname, "pEvent", PlayerInfo[playerid][pEvent]);
		dini_IntSet(accountFileNickname, "pCiggs", PlayerInfo[playerid][pCiggs]);
		dini_IntSet(accountFileNickname, "pMoneyBag", PlayerInfo[playerid][pMoneyBag]);
		dini_IntSet(accountFileNickname, "pInHospital", PlayerInfo[playerid][pInHospital]);
		dini_IntSet(accountFileNickname, "pTelenorMB", PlayerInfo[playerid][pTelenorMB]);
		dini_IntSet(accountFileNickname, "pVoucherBGN", PlayerInfo[playerid][pVoucherBGN]);
		dini_IntSet(accountFileNickname, "pWarns", PlayerInfo[playerid][pWarns]);
		dini_IntSet(accountFileNickname, "pAdminWarns", PlayerInfo[playerid][pAdminWarns]);
		dini_IntSet(accountFileNickname, "pTracker", PlayerInfo[playerid][pTracker]);
		dini_IntSet(accountFileNickname, "pVip", PlayerInfo[playerid][pVip]);
		dini_IntSet(accountFileNickname, "pStruv", PlayerInfo[playerid][pStruv]);
		dini_IntSet(accountFileNickname, "pAge", PlayerInfo[playerid][pAge]);
		dini_IntSet(accountFileNickname, "pPlayerNum", PlayerInfo[playerid][pPlayerNum]);
		dini_IntSet(accountFileNickname, "pMission", PlayerInfo[playerid][pMission]);
		dini_IntSet(accountFileNickname, "pEGN", PlayerInfo[playerid][pEGN]);
		dini_IntSet(accountFileNickname, "pBankAccount", PlayerInfo[playerid][pBankAccount]);
		dini_IntSet(accountFileNickname, "pBankPin", PlayerInfo[playerid][pBankPin]);
		dini_IntSet(accountFileNickname, "pHeroin", PlayerInfo[playerid][pHeroin]);
		dini_IntSet(accountFileNickname, "pMarijuana", PlayerInfo[playerid][pMarijuana]);
		dini_IntSet(accountFileNickname, "pBitcoinCourse", PlayerInfo[playerid][pBitcoinCourse]);
		dini_IntSet(accountFileNickname, "pBitcoin", PlayerInfo[playerid][pBitcoin]);
		dini_IntSet(accountFileNickname, "pCocaine", PlayerInfo[playerid][pCocaine]);
		dini_IntSet(accountFileNickname, "pHats", PlayerInfo[playerid][pHats]);
		dini_IntSet(accountFileNickname, "pWatches", PlayerInfo[playerid][pWatches]);
		dini_IntSet(accountFileNickname, "pMasks", PlayerInfo[playerid][pMasks]);
		dini_IntSet(accountFileNickname, "pGlasses", PlayerInfo[playerid][pGlasses]);
		dini_IntSet(accountFileNickname, "pPhoneNum", PlayerInfo[playerid][pPhoneNum]);
		dini_IntSet(accountFileNickname, "pPhoneStatusOFF", PlayerInfo[playerid][pPhoneStatusOFF]);
		dini_IntSet(accountFileNickname, "pPhoneHide", PlayerInfo[playerid][pPhoneHide]);
		dini_IntSet(accountFileNickname, "pWepLic", PlayerInfo[playerid][pWepLic]);
		dini_IntSet(accountFileNickname, "pPhone", PlayerInfo[playerid][pPhone]);
		dini_IntSet(accountFileNickname, "pJob", PlayerInfo[playerid][pJob]);
		dini_IntSet(accountFileNickname, "pJobBoss", PlayerInfo[playerid][pJobBoss]);
		dini_IntSet(accountFileNickname, "pPoliceJail", PlayerInfo[playerid][pPoliceJail]);
		dini_IntSet(accountFileNickname, "pWantedLevel", PlayerInfo[playerid][pWantedLevel]);
		dini_IntSet(accountFileNickname, "pPoliceDuty", PlayerInfo[playerid][pPoliceDuty]);
		dini_IntSet(accountFileNickname, "pPlayedSeconds", PlayerInfo[playerid][pPlayedSeconds]);
		dini_IntSet(accountFileNickname, "pArmyDuty", PlayerInfo[playerid][pArmyDuty]);
		dini_IntSet(accountFileNickname, "pTaxiDuty", PlayerInfo[playerid][pTaxiDuty]);
		dini_IntSet(accountFileNickname, "pFuelCoDuty", PlayerInfo[playerid][pFuelCoDuty]);
		dini_IntSet(accountFileNickname, "pHelmetObject", PlayerInfo[playerid][pHelmetObject]);
		dini_IntSet(accountFileNickname, "pFbiDuty", PlayerInfo[playerid][pFbiDuty]);
		dini_IntSet(accountFileNickname, "pMedicDuty", PlayerInfo[playerid][pMedicDuty]);
		dini_IntSet(accountFileNickname, "pVehText", PlayerInfo[playerid][pVehText]);
		dini_IntSet(accountFileNickname, "pLaser", PlayerInfo[playerid][pLaser]);
		dini_IntSet(accountFileNickname, "pFlashLight", PlayerInfo[playerid][pFlashLight]);
		dini_IntSet(accountFileNickname, "pDisableCarRadio", PlayerInfo[playerid][pDisableCarRadio]);
		dini_IntSet(accountFileNickname, "pDisableNews", PlayerInfo[playerid][pDisableNews]);
		dini_IntSet(accountFileNickname, "pHouseO", PlayerInfo[playerid][pHouseO]);
		dini_IntSet(accountFileNickname, "pBizO", PlayerInfo[playerid][pBizO]);
		dini_IntSet(accountFileNickname, "pAdminDuty", PlayerInfo[playerid][pAdminDuty]);
		dini_IntSet(accountFileNickname, "pFaction", PlayerInfo[playerid][pFaction]);
		dini_IntSet(accountFileNickname, "pRank", PlayerInfo[playerid][pRank]);
		dini_IntSet(accountFileNickname, "pGender", PlayerInfo[playerid][pGender]);
		dini_IntSet(accountFileNickname, "pFine", PlayerInfo[playerid][pFine]);
		dini_IntSet(accountFileNickname, "pCash", PlayerInfo[playerid][pCash]);
		dini_IntSet(accountFileNickname, "pNormalSkin", PlayerInfo[playerid][pNormalSkin]);
		dini_IntSet(accountFileNickname, "pBank", PlayerInfo[playerid][pBank]);
		dini_IntSet(accountFileNickname, "pPlaneLicense", PlayerInfo[playerid][pPlaneLicense]);
		dini_IntSet(accountFileNickname, "pAFK", PlayerInfo[playerid][pAFK]);
		dini_IntSet(accountFileNickname, "pCarLicense", PlayerInfo[playerid][pCarLicense]);
		dini_IntSet(accountFileNickname, "pLevel", PlayerInfo[playerid][pLevel]);
		dini_IntSet(accountFileNickname, "pExp", PlayerInfo[playerid][pExp]);
		dini_IntSet(accountFileNickname, "pSweeperTimer", PlayerInfo[playerid][pSweeperTimer]);
		dini_IntSet(accountFileNickname, "pPizzaPassed", PlayerInfo[playerid][pPizzaPassed]);
		dini_IntSet(accountFileNickname, "pDeliverPassed", PlayerInfo[playerid][pDeliverPassed]);
		dini_IntSet(accountFileNickname, "pBusPassed", PlayerInfo[playerid][pBusPassed]);
		dini_IntSet(accountFileNickname, "pCoalminePassed", PlayerInfo[playerid][pCoalminePassed]);
		dini_IntSet(accountFileNickname, "pSweeperPassed", PlayerInfo[playerid][pSweeperPassed]);
		dini_IntSet(accountFileNickname, "pKingRingTimer", PlayerInfo[playerid][pKingRingTimer]);
		dini_IntSet(accountFileNickname, "pSweeperLevel", PlayerInfo[playerid][pSweeperLevel]);
		dini_IntSet(accountFileNickname, "pBusLevel", PlayerInfo[playerid][pBusLevel]);
		dini_IntSet(accountFileNickname, "pPizzaLevel", PlayerInfo[playerid][pPizzaLevel]);
		dini_IntSet(accountFileNickname, "pDeliverLevel", PlayerInfo[playerid][pDeliverLevel]);
		dini_IntSet(accountFileNickname, "pCoalmineLevel", PlayerInfo[playerid][pCoalmineLevel]);
		dini_IntSet(accountFileNickname, "pPizzaTimer", PlayerInfo[playerid][pPizzaTimer]);
		dini_IntSet(accountFileNickname, "pDeliverTimer", PlayerInfo[playerid][pDeliverTimer]);
		dini_IntSet(accountFileNickname, "pCoalmineTimer", PlayerInfo[playerid][pCoalmineTimer]);
		dini_IntSet(accountFileNickname, "pBankLoanTimer", PlayerInfo[playerid][pBankLoanTimer]);
		dini_IntSet(accountFileNickname, "pBusTimer", PlayerInfo[playerid][pBusTimer]);
		dini_IntSet(accountFileNickname, "pLastVRepair", PlayerInfo[playerid][pLastVRepair]);
		dini_IntSet(accountFileNickname, "pIdentifyCard", PlayerInfo[playerid][pIdentifyCard]);
		if (spawned[playerid] == true)
		{
			new Float: X, Float: Y, Float: Z;
			new Float: Angle;
			GetPlayerPos(playerid, X, Y, Z);
			GetPlayerFacingAngle(playerid, Angle);
			new Float: health, Float: armour;
			GetPlayerHealth(playerid, health);
			GetPlayerArmour(playerid, armour);
			dini_IntSet(accountFileNickname, "pSkin", GetPlayerSkin(playerid));
			dini_FloatSet(accountFileNickname, "pHealth", health);
			if (inPaintBall[playerid] == false)
			{
				dini_FloatSet(accountFileNickname, "pArmour", armour);
			}
			else if (inPaintBall[playerid] == true)
			{
				dini_FloatSet(accountFileNickname, "pArmour", beforePaintBallArmour[playerid]);
			}

			dini_FloatSet(accountFileNickname, "pX", X);
			dini_FloatSet(accountFileNickname, "pY", Y);
			dini_FloatSet(accountFileNickname, "pZ", Z);
			dini_FloatSet(accountFileNickname, "pAngle", Angle);
			SavePlayerAccountVirtualWorld(playerid, accountFileNickname);
			dini_IntSet(accountFileNickname, "pInterior", GetPlayerInterior(playerid));
		}
	}
}

stock SavePlayerArmour(playerid)
{
	new accountFileNickname[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(accountFileNickname, 256, "%s.ini", accountNickname);
	new Float: armour;
	GetPlayerArmour(playerid, armour);
	dini_FloatSet(accountFileNickname, "pArmour", armour);
}

stock SavePlayerAccountVirtualWorld(playerid, accountFileNickname[])
{
	if (inBuyVehVW[playerid] == -1)
	{
		dini_IntSet(accountFileNickname, "pVWorld", GetPlayerVirtualWorld(playerid));
	}
	else if (inBuyVehVW[playerid] != -1)
	{
		new virtualWorld = inBuyVehVW[playerid];
		dini_IntSet(accountFileNickname, "pVWorld", virtualWorld);
	}
}

stock SaveInventory(playerid)
{
	new accountFileNickname[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(accountFileNickname, 256, "/Inventory/%s.ini", accountNickname);
	if (!dini_Exists(accountFileNickname))
	{
		dini_Create(accountFileNickname);
	}

	new string256[256];
	for (new i = 0; i != MAX_INVENTORY; i++)
	{
		format(string256, 256, "invExists[%d]", i);
		dini_IntSet(accountFileNickname, string256, InventoryInfo[playerid] [i][invExists]);
		format(string256, 256, "invItem[%d]", i);
		dini_Set(accountFileNickname, string256, InventoryInfo[playerid] [i][invItem]);
		format(string256, 256, "invModel[%d]", i);
		dini_IntSet(accountFileNickname, string256, InventoryInfo[playerid] [i][invModel]);
		format(string256, 256, "invQuantity[%d]", i);
		dini_IntSet(accountFileNickname, string256, InventoryInfo[playerid] [i][invQuantity]);
	}
}

stock LoadInventory(playerid)
{
	new accountFileNickname[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(accountFileNickname, 256, "/Inventory/%s.ini", accountNickname);
	if (!dini_Exists(accountFileNickname))
	{
		dini_Create(accountFileNickname);
	}

	new string256[256];
	for (new i; i < MAX_INVENTORY; i++)
	{
		format(string256, 256, "invExists[%d]", i);
		InventoryInfo[playerid] [i][invExists] = dini_Int(accountFileNickname, string256);
		if (InventoryInfo[playerid] [i][invExists] == 1)
		{
			//InventoryInfo[playerid] [itemid][invExists]
			format(string256, 256, "invItem[%d]", i);
			format(InventoryInfo[playerid] [i][invItem], 32, dini_Get(accountFileNickname, string256));
			format(string256, 256, "invModel[%d]", i);
			InventoryInfo[playerid] [i][invModel] = dini_Int(accountFileNickname, string256);
			format(string256, 256, "invQuantity[%d]", i);
			InventoryInfo[playerid] [i][invQuantity] = dini_Int(accountFileNickname, string256);
		}
	}
}

stock LoadAccount(playerid)
{
	new accountFileNickname[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(accountFileNickname, 256, "%s.ini", accountNickname);

	format(PlayerInfo[playerid][pPassword], 256, "%s", dini_Get(accountFileNickname, "pPassword"));
	LoadInventory(playerid);
	for (new i; i < 13; i++)
	{
		new string256[256];
		format(string256, 256, "pWeapon[%d]", i);
		PlayerInfo[playerid][pWeapon][i] = dini_Int(accountFileNickname, string256);
		format(string256, 256, "pWeaponAmmo[%d]", i);
		PlayerInfo[playerid][pWeaponAmmo][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i; i < 11; i++)
	{
		new string256[256];
		format(string256, 256, "pWeaponSkill[%d]", i);
		PlayerInfo[playerid][pWeaponSkill][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i; i < 11; i++)
	{
		new string256[256];
		format(string256, 256, "pWeaponSkillPoints[%d]", i);
		PlayerInfo[playerid][pWeaponSkillPoints][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i; i < 11; i++)
	{
		new string256[256];
		format(string256, 256, "pAchievement[%d]", i);
		PlayerInfo[playerid][pAchievement][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i; i < 3; i++)
	{
		new string256[256];
		format(string256, 256, "pPrivateVeh[%d]", i);
		PlayerInfo[playerid][pPrivateVeh][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i = 1; i < 11; i++)
	{
		new string256[256];
		format(string256, 256, "pFishSlot[%d]", i);
		PlayerInfo[playerid][pFishSlot][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i = 1; i < 11; i++)
	{
		new string256[256];
		format(string256, 256, "pFishWeight[%d]", i);
		PlayerInfo[playerid][pFishWeight][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i; i < 3; i++)
	{
		new string256[256];
		format(string256, 256, "pDrink[%d]", i);
		PlayerInfo[playerid][pDrink][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i; i < 4; i++)
	{
		new string256[256];
		format(string256, 256, "pFood[%d]", i);
		PlayerInfo[playerid][pFood][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i = 0; i < MAX_PLAYER_CLOTHES; i++)
	{
		new string256[256];
		format(string256, 256, "pClothes[%d]", i);
		PlayerInfo[playerid][pClothes][i] = dini_Int(accountFileNickname, string256);
	}

	for (new i = 0; i < MAX_BUYITEMS; i++)
	{
		new string256[256];
		format(string256, 256, "pItems[%d]", i);
		PlayerInfo[playerid][pItems][i] = dini_Int(accountFileNickname, string256);
	}

	PlayerInfo[playerid][pAdmin] = dini_Int(accountFileNickname, "pAdmin");
	PlayerInfo[playerid][pJob] = dini_Int(accountFileNickname, "pJob");
	PlayerInfo[playerid][pGPS] = dini_Int(accountFileNickname, "pGPS");
	PlayerInfo[playerid][pVudica] = dini_Int(accountFileNickname, "pVudica");
	PlayerInfo[playerid][pHungry] = dini_Int(accountFileNickname, "pHungry");
	PlayerInfo[playerid][pThirsty] = dini_Int(accountFileNickname, "pThirsty");
	PlayerInfo[playerid][pStruv] = dini_Int(accountFileNickname, "pStruv");
	PlayerInfo[playerid][pGiftPaydays] = dini_Int(accountFileNickname, "pGiftPaydays");
	PlayerInfo[playerid][pMuted] = dini_Int(accountFileNickname, "pMuted");
	PlayerInfo[playerid][pJailed] = dini_Int(accountFileNickname, "pJailed");
	PlayerInfo[playerid][pCarGetPast] = dini_Int(accountFileNickname, "pCarGetPast");
	PlayerInfo[playerid][pSweeperPast] = dini_Int(accountFileNickname, "pSweeperPast");
	PlayerInfo[playerid][pSpawn] = dini_Int(accountFileNickname, "pSpawn");
	PlayerInfo[playerid][pMask] = dini_Int(accountFileNickname, "pMask");
	PlayerInfo[playerid][pTips] = dini_Int(accountFileNickname, "pTips");
	PlayerInfo[playerid][pFightStyle] = dini_Int(accountFileNickname, "pFightStyle");
	PlayerInfo[playerid][pStyleTexts] = dini_Int(accountFileNickname, "pStyleTexts");
	PlayerInfo[playerid][pLastYear] = dini_Int(accountFileNickname, "pLastYear");
	PlayerInfo[playerid][pLastMonth] = dini_Int(accountFileNickname, "pLastMonth");
	PlayerInfo[playerid][pLastDay] = dini_Int(accountFileNickname, "pLastDay");
	PlayerInfo[playerid][pLastMinute] = dini_Int(accountFileNickname, "pLastMinute");
	PlayerInfo[playerid][pLastSecond] = dini_Int(accountFileNickname, "pLastSecond");
	PlayerInfo[playerid][pLastHour] = dini_Int(accountFileNickname, "pLastHour");
	PlayerInfo[playerid][pDrugsAddict] = dini_Int(accountFileNickname, "pDrugsAddict");
	PlayerInfo[playerid][pVotedGov] = dini_Int(accountFileNickname, "pVotedGov");
	PlayerInfo[playerid][pInvCapacity] = dini_Int(accountFileNickname, "pInvCapacity");
	PlayerInfo[playerid][pPrivateVehs] = dini_Int(accountFileNickname, "pPrivateVehs");
	PlayerInfo[playerid][pEvent] = dini_Int(accountFileNickname, "pEvent");
	PlayerInfo[playerid][pPrivateVehFreeSlot] = dini_Int(accountFileNickname, "pPrivateVehFreeSlot");
	PlayerInfo[playerid][pCiggs] = dini_Int(accountFileNickname, "pCiggs");
	PlayerInfo[playerid][pMoneyBag] = dini_Int(accountFileNickname, "pMoneyBag");
	PlayerInfo[playerid][pInHospital] = dini_Int(accountFileNickname, "pInHospital");
	PlayerInfo[playerid][pTelenorMB] = dini_Int(accountFileNickname, "pTelenorMB");
	PlayerInfo[playerid][pVoucherBGN] = dini_Int(accountFileNickname, "pVoucherBGN");
	PlayerInfo[playerid][pWarns] = dini_Int(accountFileNickname, "pWarns");
	PlayerInfo[playerid][pAdminWarns] = dini_Int(accountFileNickname, "pAdminWarns");
	PlayerInfo[playerid][pTracker] = dini_Int(accountFileNickname, "pTracker");
	PlayerInfo[playerid][pVip] = dini_Int(accountFileNickname, "pVip");
	PlayerInfo[playerid][pAge] = dini_Int(accountFileNickname, "pAge");
	PlayerInfo[playerid][pEGN] = dini_Int(accountFileNickname, "pEGN");
	PlayerInfo[playerid][pBitcoin] = dini_Int(accountFileNickname, "pBitcoin");
	PlayerInfo[playerid][pMarijuana] = dini_Int(accountFileNickname, "pMarijuana");
	PlayerInfo[playerid][pHeroin] = dini_Int(accountFileNickname, "pHeroin");
	PlayerInfo[playerid][pBankAccount] = dini_Int(accountFileNickname, "pBankAccount");
	PlayerInfo[playerid][pBankPin] = dini_Int(accountFileNickname, "pBankPin");
	PlayerInfo[playerid][pBitcoinCourse] = dini_Int(accountFileNickname, "pBitcoinCourse");
	PlayerInfo[playerid][pCocaine] = dini_Int(accountFileNickname, "pCocaine");
	PlayerInfo[playerid][pHats] = dini_Int(accountFileNickname, "pHats");
	PlayerInfo[playerid][pWatches] = dini_Int(accountFileNickname, "pWatches");
	PlayerInfo[playerid][pMasks] = dini_Int(accountFileNickname, "pMasks");
	PlayerInfo[playerid][pGlasses] = dini_Int(accountFileNickname, "pGlasses");
	PlayerInfo[playerid][pPhoneNum] = dini_Int(accountFileNickname, "pPhoneNum");
	PlayerInfo[playerid][pPhoneStatusOFF] = dini_Int(accountFileNickname, "pPhoneStatusOFF");
	PlayerInfo[playerid][pPhoneHide] = dini_Int(accountFileNickname, "pPhoneHide");
	PlayerInfo[playerid][pPlayerNum] = dini_Int(accountFileNickname, "pPlayerNum");
	PlayerInfo[playerid][pMission] = dini_Int(accountFileNickname, "pMission");
	PlayerInfo[playerid][pWepLic] = dini_Int(accountFileNickname, "pWepLic");
	PlayerInfo[playerid][pPhone] = dini_Int(accountFileNickname, "pPhone");
	PlayerInfo[playerid][pJobBoss] = dini_Int(accountFileNickname, "pJobBoss");
	PlayerInfo[playerid][pPoliceJail] = dini_Int(accountFileNickname, "pPoliceJail");
	PlayerInfo[playerid][pWantedLevel] = dini_Int(accountFileNickname, "pWantedLevel");
	PlayerInfo[playerid][pIdentifyCard] = dini_Int(accountFileNickname, "pIdentifyCard");
	PlayerInfo[playerid][pFaction] = dini_Int(accountFileNickname, "pFaction");
	PlayerInfo[playerid][pNormalSkin] = dini_Int(accountFileNickname, "pNormalSkin");
	PlayerInfo[playerid][pPoliceDuty] = dini_Int(accountFileNickname, "pPoliceDuty");
	PlayerInfo[playerid][pPlayedSeconds] = dini_Int(accountFileNickname, "pPlayedSeconds");
	PlayerInfo[playerid][pArmyDuty] = dini_Int(accountFileNickname, "pArmyDuty");
	PlayerInfo[playerid][pTaxiDuty] = dini_Int(accountFileNickname, "pTaxiDuty");
	PlayerInfo[playerid][pFuelCoDuty] = dini_Int(accountFileNickname, "pFuelCoDuty");
	PlayerInfo[playerid][pHelmetObject] = dini_Int(accountFileNickname, "pHelmetObject");
	PlayerInfo[playerid][pFbiDuty] = dini_Int(accountFileNickname, "pFbiDuty");
	PlayerInfo[playerid][pMedicDuty] = dini_Int(accountFileNickname, "pMedicDuty");
	PlayerInfo[playerid][pVehText] = dini_Int(accountFileNickname, "pVehText");
	PlayerInfo[playerid][pLaser] = dini_Int(accountFileNickname, "pLaser");
	PlayerInfo[playerid][pFlashLight] = dini_Int(accountFileNickname, "pFlashLight");
	PlayerInfo[playerid][pDisableCarRadio] = dini_Int(accountFileNickname, "pDisableCarRadio");
	PlayerInfo[playerid][pDisableNews] = dini_Int(accountFileNickname, "pDisableNews");
	PlayerInfo[playerid][pHouseO] = dini_Int(accountFileNickname, "pHouseO");
	PlayerInfo[playerid][pBizO] = dini_Int(accountFileNickname, "pBizO");
	PlayerInfo[playerid][pAdminDuty] = dini_Int(accountFileNickname, "pAdminDuty");
	PlayerInfo[playerid][pRank] = dini_Int(accountFileNickname, "pRank");
	PlayerInfo[playerid][pGender] = dini_Int(accountFileNickname, "pGender");
	PlayerInfo[playerid][pCash] = dini_Int(accountFileNickname, "pCash");
	PlayerInfo[playerid][pBank] = dini_Int(accountFileNickname, "pBank");
	PlayerInfo[playerid][pAFK] = dini_Int(accountFileNickname, "pAFK");
	PlayerInfo[playerid][pPlaneLicense] = dini_Int(accountFileNickname, "pPlaneLicense");
	PlayerInfo[playerid][pCarLicense] = dini_Int(accountFileNickname, "pCarLicense");
	PlayerInfo[playerid][pLevel] = dini_Int(accountFileNickname, "pLevel");
	PlayerInfo[playerid][pExp] = dini_Int(accountFileNickname, "pExp");
	PlayerInfo[playerid][pSweeperLevel] = dini_Int(accountFileNickname, "pSweeperLevel");
	PlayerInfo[playerid][pBusLevel] = dini_Int(accountFileNickname, "pBusLevel");
	PlayerInfo[playerid][pDeliverLevel] = dini_Int(accountFileNickname, "pDeliverLevel");
	PlayerInfo[playerid][pPizzaLevel] = dini_Int(accountFileNickname, "pPizzaLevel");
	PlayerInfo[playerid][pCoalmineLevel] = dini_Int(accountFileNickname, "pCoalmineLevel");
	PlayerInfo[playerid][pSweeperTimer] = dini_Int(accountFileNickname, "pSweeperTimer");
	PlayerInfo[playerid][pSweeperPassed] = dini_Int(accountFileNickname, "pSweeperPassed");
	PlayerInfo[playerid][pBusPassed] = dini_Int(accountFileNickname, "pBusPassed");
	PlayerInfo[playerid][pPizzaPassed] = dini_Int(accountFileNickname, "pPizzaPassed");
	PlayerInfo[playerid][pCoalminePassed] = dini_Int(accountFileNickname, "pCoalminePassed");
	PlayerInfo[playerid][pBusPassed] = dini_Int(accountFileNickname, "pBusPassed");
	PlayerInfo[playerid][pKingRingTimer] = dini_Int(accountFileNickname, "pKingRingTimer");
	PlayerInfo[playerid][pPizzaTimer] = dini_Int(accountFileNickname, "pPizzaTimer");
	PlayerInfo[playerid][pDeliverTimer] = dini_Int(accountFileNickname, "pDeliverTimer");
	PlayerInfo[playerid][pCoalmineTimer] = dini_Int(accountFileNickname, "pCoalmineTimer");
	PlayerInfo[playerid][pBankLoanTimer] = dini_Int(accountFileNickname, "pBankLoanTimer");
	PlayerInfo[playerid][pBusTimer] = dini_Int(accountFileNickname, "pBusTimer");
	PlayerInfo[playerid][pLastVRepair] = dini_Int(accountFileNickname, "pLastVRepair");
	PlayerInfo[playerid][pSkin] = dini_Int(accountFileNickname, "pSkin");
	PlayerInfo[playerid][pFine] = dini_Int(accountFileNickname, "pFine");
	PlayerInfo[playerid][pX] = dini_Float(accountFileNickname, "pX");
	PlayerInfo[playerid][pY] = dini_Float(accountFileNickname, "pY");
	PlayerInfo[playerid][pZ] = dini_Float(accountFileNickname, "pZ");
	PlayerInfo[playerid][pZ] = dini_Float(accountFileNickname, "pZ");
	PlayerInfo[playerid][pHealth] = dini_Float(accountFileNickname, "pHealth");
	PlayerInfo[playerid][pArmour] = dini_Float(accountFileNickname, "pArmour");
	PlayerInfo[playerid][pAngle] = dini_Int(accountFileNickname, "pAngle");
	PlayerInfo[playerid][pInterior] = dini_Int(accountFileNickname, "pInterior");
	PlayerInfo[playerid][pVWorld] = dini_Int(accountFileNickname, "pVWorld");

	GivePlayerCash(playerid, 0);
	FixPlayerInfoNullValues(playerid);
	UpdatePlayerWantedStars(playerid);
	AddScreenTexts(playerid);
}

stock GivePlayerCash(playerid, money)
{
	PlayerInfo[playerid][pCash] += money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	return PlayerInfo[playerid][pCash];
}

stock GivePlayerCashWithText(playerid, money)
{
	new string256[256];
	if (money >= 0)
	{
		format(string256, 256, "~g~~h~+ %d", money);
		TextDrawSetString(GiveCashText[playerid], string256);
	}
	else if (money <= -1)
	{
		format(string256, 256, "~r~~h~- %d", money);
		TextDrawSetString(GiveCashText[playerid], string256);
	}

	TextDrawShowForPlayer(playerid, GiveCashText[playerid]);
	PlayerTimerInfo[playerid][ptHideGiveCash] = 5;
	PlayerInfo[playerid][pCash] += money;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	return PlayerInfo[playerid][pCash];
}

stock ClearChatBig(playerid)
{
	for (new i; i < 125; i++)
	{
		SendClientMessage(playerid, COLOR_WHITE, "");
	}
}

stock ClearChatSmall(playerid)
{
	for (new i; i < 25; i++)
	{
		SendClientMessage(playerid, COLOR_WHITE, "");
	}
}

stock RestartPlayerSkin(playerid)
{
	if (IsPlayerInAnyVehicle(playerid))
	{
		return 1;
	}

	if (PlayerInfo[playerid][pNormalSkin] >= 1)
	{
		SetPlayerSkin(playerid, PlayerInfo[playerid][pNormalSkin]);
	}
	else
	{
		SetPlayerSkin(playerid, 217);
	}

	if (PlayerInfo[playerid][pPoliceDuty] == 1)
	{
		if (PlayerInfo[playerid][pGender] == 0)
		{
			if (PlayerInfo[playerid][pFaction] == FACTION_LSPD)
			{
				switch (PlayerInfo[playerid][pRank])
				{
					case 1:
						SetPlayerSkin(playerid, 280);
					case 2:
						SetPlayerSkin(playerid, 281);
					case 3:
						SetPlayerSkin(playerid, 282);
					case 4:
						SetPlayerSkin(playerid, 265);
					case 5:
						SetPlayerSkin(playerid, 17);
					case 6:
						SetPlayerSkin(playerid, 120);
				}
			}

			if (PlayerInfo[playerid][pFaction] == FACTION_LVPD)
			{
				switch (PlayerInfo[playerid][pRank])
				{
					case 1:
						SetPlayerSkin(playerid, 282);
					case 2:
						SetPlayerSkin(playerid, 282);
					case 3:
						SetPlayerSkin(playerid, 283);
					case 4:
						SetPlayerSkin(playerid, 283);
					case 5:
						SetPlayerSkin(playerid, 17);
					case 6:
						SetPlayerSkin(playerid, 120);
				}
			}
		}
		else if (PlayerInfo[playerid][pGender] == 1)
		{
			SetPlayerSkin(playerid, 308);
		}
	}

	if (PlayerInfo[playerid][pArmyDuty] == 1)
	{
		if (PlayerInfo[playerid][pGender] == 0)
		{
			switch (PlayerInfo[playerid][pRank])
			{
				case 1:
					SetPlayerSkin(playerid, 287);
				case 2:
					SetPlayerSkin(playerid, 287);
				case 3:
					SetPlayerSkin(playerid, 287);
				case 4:
					SetPlayerSkin(playerid, 287);
				case 5:
					SetPlayerSkin(playerid, 287);
				case 6:
					SetPlayerSkin(playerid, 61);
			}
		}
		else if (PlayerInfo[playerid][pGender] == 1)
		{
			SetPlayerSkin(playerid, 308);
		}
	}

	if (PlayerInfo[playerid][pFbiDuty] == 1)
	{
		if (PlayerInfo[playerid][pGender] == 0)
		{
			switch (PlayerInfo[playerid][pRank])
			{
				case 1:
					SetPlayerSkin(playerid, 286);
				case 2:
					SetPlayerSkin(playerid, 163);
				case 3:
					SetPlayerSkin(playerid, 164);
				case 4:
					SetPlayerSkin(playerid, 164);
				case 5:
					SetPlayerSkin(playerid, 165);
				case 6:
					SetPlayerSkin(playerid, 295);
			}
		}
		else if (PlayerInfo[playerid][pGender] == 1)
		{
			SetPlayerSkin(playerid, 306);
		}
	}

	if (PlayerInfo[playerid][pMedicDuty] == 1)
	{
		if (PlayerInfo[playerid][pGender] == 0)
		{
			SetPlayerSkin(playerid, 274);
		}
		else if (PlayerInfo[playerid][pGender] == 1)
		{
			SetPlayerSkin(playerid, 308);
		}
	}

	if (PlayerInfo[playerid][pGender] == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_CRIP)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 177);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 176);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 156);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 176);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 21);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 21);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_GROVE)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 105);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 149);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 86);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 106);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 107);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 107);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_TRIADS)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 117);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 117);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 118);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 117);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 120);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 120);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_AZTECAS)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 114);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 116);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 114);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 116);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 116);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 115);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_ITALIAN_MAFIA)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 111);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 112);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 112);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 125);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 124);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 126);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_WCW)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 73);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 291);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 247);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 100);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 248);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 248);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_BALLAS)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 103);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 103);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 102);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 102);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 104);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 104);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_VAGOS)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 108);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 109);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 109);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 110);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 110);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 108);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_RUSSIAN_MAFIA)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 112);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 112);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 111);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 111);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 120);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 120);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_GOVERNMENT)
		{
			if (PlayerInfo[playerid][pRank] == 1)
			{
				SetPlayerSkin(playerid, 227);
			}

			if (PlayerInfo[playerid][pRank] == 2)
			{
				SetPlayerSkin(playerid, 228);
			}

			if (PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 228);
			}

			if (PlayerInfo[playerid][pRank] == 4)
			{
				SetPlayerSkin(playerid, 295);
			}

			if (PlayerInfo[playerid][pRank] == 5)
			{
				SetPlayerSkin(playerid, 295);
			}

			if (PlayerInfo[playerid][pRank] == 6)
			{
				SetPlayerSkin(playerid, 240);
			}
		}
	}

	if (PlayerInfo[playerid][pAdminDuty] == 1)
	{
		if (PlayerInfo[playerid][pGender] == 0)
		{
			SetPlayerSkin(playerid, 217);
		}
		else if (PlayerInfo[playerid][pGender] == 1)
		{
			SetPlayerSkin(playerid, 211);
		}
	}

	return 1;
}

stock SetToOrganisationPos(playerid)
{
	if (PlayerInfo[playerid][pInHospital] == 1)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Вие се още се лекувате в болницата! Когато оздравеете ще можете да излезете!");
		SetPlayerInterior(playerid, 1);
		SetPlayerVirtualWorld(playerid, 3);
		SetPlayerPos(playerid, -204.2457, -1782.2678, 675.7687);
		SetCameraBehindPlayer(playerid);
		FreezeAntiDropOnSpawn(playerid);
		PlayerTimerInfo[playerid][ptHealingAfterDeath] = 9;
		return 1;
	}

	if (inPaintBall[playerid] == true)
	{
		SetPlayerPosToPaintBall(playerid);
		return 1;
	}

	if (PlayerInfo[playerid][pSpawn] == HOUSE_SPAWN)
	{
		if (PlayerInfo[playerid][pHouseO] == -1 || PlayerInfo[playerid][pHouseO] > maxhouses + 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_CIVILIAN)
			{
				PlayerInfo[playerid][pSpawn] = FACTION_SPAWN;
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Понеже нямаш къща, твоят Spawn беше променен на Faction Spawn!");
			}
			else if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN)
			{
				PlayerInfo[playerid][pSpawn] = CIVIL_LS_SPAWN;
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Понеже нямаш къща, твоят Spawn беше променен на Civilian Spawn!");
			}

			SetToSpawn(playerid);
			return 1;
		}

		new hisHouse = PlayerInfo[playerid][pHouseO];
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, HouseInfo[hisHouse][hX], HouseInfo[hisHouse][hY], HouseInfo[hisHouse][hZ]);
	}
	else if (PlayerInfo[playerid][pSpawn] == BIZ_SPAWN)
	{
		if (PlayerInfo[playerid][pBizO] == -1 || PlayerInfo[playerid][pBizO] > maxbiz + 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_CIVILIAN)
			{
				PlayerInfo[playerid][pSpawn] = FACTION_SPAWN;
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Понеже нямаш бизнес, твоят Spawn беше променен на Faction Spawn!");
			}
			else if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN)
			{
				PlayerInfo[playerid][pSpawn] = CIVIL_LS_SPAWN;
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Понеже нямаш бизнес, твоят Spawn беше променен на Civilian Spawn!");
			}

			SetToSpawn(playerid);
			return 1;
		}

		new hisBiz = PlayerInfo[playerid][pBizO];
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, BizInfo[hisBiz][bX], BizInfo[hisBiz][bY], BizInfo[hisBiz][bZ]);
	}
	else if (PlayerInfo[playerid][pSpawn] == CIVIL_LS_SPAWN)
	{
		new randSpawn = randomex(0, 2);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
		switch (randSpawn)
		{
			case 0:
				{
					SetPlayerPos(playerid, 1154.1002, -1768.0070, 16.5938);
					SetPlayerFacingAngle(playerid, 1.2317);
				}
			case 1:
				{
					SetPlayerPos(playerid, 1716.7551,-1895.5365,13.5661);
					SetPlayerFacingAngle(playerid, 1.6995);
				}
		}

		SetCameraBehindPlayer(playerid);
		SetSpawnRandomAnim(playerid);
	}
	else if (PlayerInfo[playerid][pSpawn] == FACTION_SPAWN)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN)
		{
			PlayerInfo[playerid][pSpawn] = CIVIL_LS_SPAWN;
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: Понеже нямаш Faction, твоят Spawn беше променен на Civilian Spawn!");
			SetToSpawn(playerid);
			return 1;
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_GOVERNMENT)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 1411.2448, -1790.1387, 14.4521);
				SetPlayerFacingAngle(playerid, 88.0676);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 1411.3462, -1800.6154, 14.5376);
				SetPlayerFacingAngle(playerid, 89.0076);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_NEWS)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 1650.2314, -1661.9192, 22.5156);
				SetPlayerFacingAngle(playerid, 174.9872);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 1659.3577, -1660.4266, 22.5156);
				SetPlayerFacingAngle(playerid, 188.4606);
			}
		}

		//LS Army
		if (PlayerInfo[playerid][pFaction] == FACTION_LS_ARMY)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 831.5905, -2157.5793, 12.8527);
			SetCameraBehindPlayer(playerid);
		}

		//LV Army
		if (PlayerInfo[playerid][pFaction] == FACTION_LV_ARMY)
		{
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 211.4815, 1810.5336, 21.8672);
				SetPlayerFacingAngle(playerid, 6.4513);
			}

			if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 207.2556, 1814.8164, 21.8672);
				SetPlayerFacingAngle(playerid, 356.1112);
			}

			if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 216.4520, 1814.0637, 21.86723);
				SetPlayerFacingAngle(playerid, 269.0037);
			}

			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetCameraBehindPlayer(playerid);
		}

		//LVPD - Open
		if (PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 1591.7196, -1679.6591, 2982.2700);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 1589.6692, -1668.6022, 2982.2700);
			}

			SetCameraBehindPlayer(playerid);
			FreezeAntiDropOnSpawn(playerid);
		}

		//LVPD - Close
		//LSPD - Open
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 1572.3789, -1668.0842, 2113.0349);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 1558.9648, -1686.2794, 2113.0349);
			}

			SetCameraBehindPlayer(playerid);
			FreezeAntiDropOnSpawn(playerid);
		}

		//LSPD - Close
		if (PlayerInfo[playerid][pFaction] == FACTION_RUSSIAN_MAFIA)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 7);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 225.9312, 1026.9286, 1084.0114);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 234.2712, 1029.0930, 1084.0154);
			}
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_BALLAS)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 5);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 317.6528, 1121.1263, 1083.8828);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 321.3961, 1121.6896, 1083.8828);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_MEDIC)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, 1185.5867, -1322.1373, 13.5713);
			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_VAGOS)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 5);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 142.0186, 1369.6454, 1083.8643);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 139.3100, 1379.4185, 1088.3672);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_WCW)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 671.6198, -458.3946, 16.5363);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 672.3406, -471.3957, 16.5363);
			}
			else if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 655.7034, -469.8148, 16.3359);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_TRIADS)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 2191.0217, -1202.4036, 1049.0234);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 2193.2202, -1211.8517, 1049.0234);
			}
			else if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 2184.1042, -1206.2347, 1049.0234);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_AZTECAS)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 2);
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 2237.5654, -1076.6680, 1049.0234);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 2237.6440, -1072.9741, 1049.0234);
			}
			else if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 2243.5703, -1074.0305, 1049.0310);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_ITALIAN_MAFIA)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 2);
			new randomSpawn = randomex(0, 3);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 447.4254, 1401.6086, 1084.3120);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 446.5664, 1406.0546, 1084.3047);
			}
			else if (randomSpawn == 2)
			{
				SetPlayerPos(playerid, 450.2023, 1407.4314, 1084.3080);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_GROVE)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 3);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 2496.0024, -1709.4805, 1014.7422);
				SetPlayerFacingAngle(playerid, 2.1533);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 2496.0024, -1709.4805, 1014.7422);
				SetPlayerFacingAngle(playerid, 2.1533);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_CRIP)
		{
			SetPlayerVirtualWorld(playerid, 2);
			SetPlayerInterior(playerid, 5);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 142.0186, 1369.6454, 1083.8643);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 139.3100, 1379.4185, 1088.3672);
			}

			SetCameraBehindPlayer(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_FBI)
		{
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 5);
			new randomSpawn = randomex(0, 2);
			if (randomSpawn == 0)
			{
				SetPlayerPos(playerid, 1565.2728, -1688.5635, 62.1910);
			}
			else if (randomSpawn == 1)
			{
				SetPlayerPos(playerid, 1571.5658, -1686.5858, 62.1910);
			}

			SetCameraBehindPlayer(playerid);
			FreezeAntiDropOnSpawn(playerid);
		}
	}

	return 1;
}

stock SetToLastPos(playerid)
{
	SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVWorld]);
	SetPlayerInterior(playerid, PlayerInfo[playerid][pInterior]);
	SetPlayerPos(playerid, PlayerInfo[playerid][pX], PlayerInfo[playerid][pY], PlayerInfo[playerid][pZ]);
	SetPlayerFacingAngle(playerid, PlayerInfo[playerid][pAngle]);
	if (GetPlayerInterior(playerid) != 0)
	{
		PlayerTimerInfo[playerid][ptUnfreeze] = 2;
		TogglePlayerControllable(playerid, 0);
		SetCameraBehindPlayer(playerid);
	}
}

stock ResetPlayerInfo(playerid)
{
	for (new i = 0; i < 13; i++)
	{
		PlayerInfo[playerid][pWeapon][i] = 0;
	}

	for (new i = 0; i < 13; i++)
	{
		PlayerInfo[playerid][pWeaponAmmo][i] = 0;
	}

	for (new i = 0; i < 11; i++)
	{
		PlayerInfo[playerid][pWeaponSkill][i] = 1;
	}

	for (new i; i < 11; i++)
	{
		PlayerInfo[playerid][pWeaponSkillPoints][i] = 0;
	}

	for (new i; i < 11; i++)
	{
		PlayerInfo[playerid][pAchievement][i] = 0;
	}

	for (new i = 1; i < 11; i++)
	{
		PlayerInfo[playerid][pFishSlot][i] = 0;
	}

	for (new i = 1; i < 11; i++)
	{
		PlayerInfo[playerid][pFishWeight][i] = 0;
	}

	for (new i; i < 4; i++)
	{
		PlayerInfo[playerid][pFood][i] = -1;
	}

	for (new i; i < 3; i++)
	{
		PlayerInfo[playerid][pDrink][i] = -1;
	}

	for (new i = 0; i < MAX_PLAYER_CLOTHES; i++)
	{
		PlayerInfo[playerid][pClothes][i] = 0;
	}

	for (new i = 0; i < MAX_BUYITEMS; i++)
	{
		PlayerInfo[playerid][pItems][i] = 0;
	}

	for (new i = 0; i < 3; i++)
	{
		PlayerInfo[playerid][pPrivateVeh][i] = -1;
	}

	PlayerInfo[playerid][pHats] = 0;
	PlayerInfo[playerid][pWatches] = 0;
	PlayerInfo[playerid][pMasks] = 0;
	PlayerInfo[playerid][pGlasses] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pCocaine] = 0;
	PlayerInfo[playerid][pHeroin] = 0;
	PlayerInfo[playerid][pMarijuana] = 0;
	PlayerInfo[playerid][pBankAccount] = 0;
	PlayerInfo[playerid][pBankPin] = 0;
	PlayerInfo[playerid][pBitcoinCourse] = 0;
	PlayerInfo[playerid][pBitcoin] = 0;
	PlayerInfo[playerid][pGPS] = 0;
	PlayerInfo[playerid][pPhoneNum] = 0;
	PlayerInfo[playerid][pVudica] = 0;
	PlayerInfo[playerid][pPhoneStatusOFF] = 0;
	PlayerInfo[playerid][pPhoneHide] = 0;
	PlayerInfo[playerid][pMission] = 0;
	PlayerInfo[playerid][pHungry] = 100;
	PlayerInfo[playerid][pThirsty] = 100;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pStruv] = 0;
	PlayerInfo[playerid][pGiftPaydays] = 0;
	PlayerInfo[playerid][pMuted] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pDrugsAddict] = 0;
	PlayerInfo[playerid][pTips] = 0;
	PlayerInfo[playerid][pStyleTexts] = 0;
	PlayerInfo[playerid][pFightStyle] = 0;
	PlayerInfo[playerid][pLastYear] = 0;
	PlayerInfo[playerid][pLastMonth] = 0;
	PlayerInfo[playerid][pLastDay] = 0;
	PlayerInfo[playerid][pLastMinute] = 0;
	PlayerInfo[playerid][pLastSecond] = 0;
	PlayerInfo[playerid][pLastHour] = 0;
	PlayerInfo[playerid][pVotedGov] = 0;
	PlayerInfo[playerid][pSweeperPast] = 0;
	PlayerInfo[playerid][pSpawn] = CIVIL_LS_SPAWN;
	PlayerInfo[playerid][pMask] = 0;
	PlayerInfo[playerid][pCarGetPast] = 0;
	PlayerInfo[playerid][pInvCapacity] = 0;
	PlayerInfo[playerid][pPrivateVehs] = 0;
	PlayerInfo[playerid][pPrivateVehFreeSlot] = 0;
	PlayerInfo[playerid][pEvent] = 0;
	PlayerInfo[playerid][pCiggs] = 0;
	PlayerInfo[playerid][pMoneyBag] = 0;
	PlayerInfo[playerid][pInHospital] = 0;
	PlayerInfo[playerid][pTelenorMB] = 0;
	PlayerInfo[playerid][pVoucherBGN] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pAdminWarns] = 0;
	PlayerInfo[playerid][pTracker] = 0;
	PlayerInfo[playerid][pVip] = 0;
	PlayerInfo[playerid][pWepLic] = 0;
	PlayerInfo[playerid][pPhone] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pJobBoss] = 0;
	PlayerInfo[playerid][pPoliceJail] = 0;
	PlayerInfo[playerid][pFine] = 0;
	PlayerInfo[playerid][pFaction] = 0;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pSkin] = 0;
	PlayerInfo[playerid][pWantedLevel] = 0;
	PlayerTimerInfo[playerid][ptLastOverSpeed] = 0;
	PlayerInfo[playerid][pPlayedSeconds] = 0;
	PlayerTimerInfo[playerid][ptRinging] = 0;
	PlayerInfo[playerid][pPoliceDuty] = 0;
	PlayerInfo[playerid][pArmyDuty] = 0;
	PlayerInfo[playerid][pTaxiDuty] = 0;
	PlayerInfo[playerid][pFuelCoDuty] = 0;
	PlayerInfo[playerid][pHelmetObject] = 0;
	PlayerInfo[playerid][pFbiDuty] = 0;
	PlayerInfo[playerid][pLaser] = 0;
	PlayerInfo[playerid][pFlashLight] = 0;
	PlayerInfo[playerid][pVehText] = 0;
	PlayerInfo[playerid][pDisableCarRadio] = 0;
	PlayerInfo[playerid][pDisableNews] = 0;
	PlayerInfo[playerid][pHouseO] = -1;
	PlayerInfo[playerid][pBizO] = -1;
	PlayerInfo[playerid][pAdminDuty] = 0;
	PlayerInfo[playerid][pGender] = 0;
	PlayerInfo[playerid][pIdentifyCard] = 0;
	PlayerInfo[playerid][pHealth] = 100;
	PlayerInfo[playerid][pArmour] = 0;
	PlayerInfo[playerid][pCash] = 0;
	PlayerInfo[playerid][pBankLoanTimer] = 0;
	PlayerInfo[playerid][pPizzaTimer] = 0;
	PlayerInfo[playerid][pDeliverTimer] = 0;
	PlayerInfo[playerid][pCoalmineTimer] = 0;
	PlayerInfo[playerid][pKingRingTimer] = 0;
	PlayerInfo[playerid][pSweeperTimer] = 0;
	PlayerInfo[playerid][pPizzaPassed] = 0;
	PlayerInfo[playerid][pDeliverPassed] = 0;
	PlayerInfo[playerid][pCoalminePassed] = 0;
	PlayerInfo[playerid][pBusPassed] = 0;
	PlayerInfo[playerid][pSweeperPassed] = 0;
	PlayerInfo[playerid][pSweeperLevel] = 1;
	PlayerInfo[playerid][pBusLevel] = 1;
	PlayerInfo[playerid][pDeliverLevel] = 1;
	PlayerInfo[playerid][pCoalmineLevel] = 1;
	PlayerInfo[playerid][pPizzaLevel] = 1;
	PlayerInfo[playerid][pBusTimer] = 0;
	PlayerInfo[playerid][pLastVRepair] = 0;
	PlayerInfo[playerid][pBank] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pAFK] = 0;
	PlayerInfo[playerid][pPlaneLicense] = 0;
	PlayerInfo[playerid][pCarLicense] = 0;
	PlayerTimerInfo[playerid][ptFishTimer] = 0;
	PlayerTimerInfo[playerid][ptAFKBack] = 0;
	PlayerTimerInfo[playerid][ptSetToSpawnVar] = 0;
	PlayerTimerInfo[playerid][ptDriverSchoolTaken] = 0;
	PlayerTimerInfo[playerid][ptDriverSchoolTimer] = 0;
	PlayerTimerInfo[playerid][ptHideGiveCash] = 0;
	PlayerTimerInfo[playerid][ptBan] = 0;
	PlayerTimerInfo[playerid][ptHospitalCmd] = 0;
	PlayerTimerInfo[playerid][ptHealingAfterDeath] = 0;
	PlayerTimerInfo[playerid][ptFinishDrugEffect] = 0;
	PlayerTimerInfo[playerid][ptRevieveTimer] = 0;
	PlayerTimerInfo[playerid][ptFreeze] = 0;
	PlayerTimerInfo[playerid][ptHideCommandInfo] = 0;
	PlayerTimerInfo[playerid][ptHideMessageInfo] = 0;
	PlayerTimerInfo[playerid][ptVehicleTurnEngineOn] = 0;
	PlayerTimerInfo[playerid][ptApplyFallenAnim] = 0;
	PlayerTimerInfo[playerid][ptJoinCameraMoving] = 0;
	PlayerTimerInfo[playerid][ptInteractActor] = 0;
	PlayerTimerInfo[playerid][ptHideInteractiveActor] = 0;
}

stock ResetDriverSchoolForPlayer(playerid)
{
	if (IsValidVehicle(driverStudyVeh[playerid]))
	{
		DestroyVehicle(driverStudyVeh[playerid]);
	}
}

stock ResetPlayerVariables(playerid)
{
	for (new i = 0; i < 20; i++)
	{
		policeBarricade[playerid] [i] = -1;
	}

	inHouse[playerid]=-1;
	inBiz[playerid]=-1;
	lastEnterPickupHOUSE[playerid]=-1;
	lastEnterPickupBIZ[playerid]=-1;
	vehRented[playerid] = -1;
	AFKDetect[playerid] = 0;
	changeGunTimer[playerid] = 0;
	playerCurrentGun[playerid] = 0;
	playerAfkSeconds[playerid] = 0;
	playerAfkMinutes[playerid] = 0;
	LastPos[playerid] [lpUsed] = 0;
	buyItemWithBGNIndex[playerid] = -1;
	RemovePlayerSiren(playerid);
	policeSiren[playerid] = -1;
	RemoveTmpVehApplyObject(playerid);
	addVehObjectID[playerid] = -1;
	addVehObjectIDType[playerid] = -1;
	hisLastVeh[playerid] = -1;
	vehLocker[playerid] = -1;
	noHospital[playerid] = false;
	didVote[playerid] = false;
	rentorVeh[playerid] = false;
	parrot[playerid] = false;
	PhoneShow[playerid] = false;
	maskOn[playerid] = false;
	inPaintBall[playerid] = false;
	alreadyFallen[playerid] = false;
	serverLogoEnabled[playerid] = true;
	timeTextEnabled[playerid] = true;
	setToSpawn[playerid] = false;
	buyingVehStoreIndex[playerid] = -1;
	playerVehToBuy[playerid] = -1;
	isStudyingDriveType[playerid] = 0;
	inBuyVehVW[playerid] = -1;
	isNormalRobberyLeaderPlayer[playerid] = false;
	isAtmRobber[playerid] = false;
	inNormalRobbery[playerid] = false;
	currentPlayerSpeedLimit[playerid] = 0;
	busTeleportTimer[playerid] = 0;
	buyFoodSelect[playerid] = 0;
	buyDrinkSelect[playerid] = 0;
	cuffed[playerid] = false;
	isRobber[playerid] = false;
	inEvent[playerid] = false;
	calledTaxiTimer[playerid] = 0;
	calledMechanicTimer[playerid] = 0;
	calledPoliceTimer[playerid] = 0;
	vehOffererOfferTo[playerid] = -1;
	vehOfferPrivateVehIndex[playerid] = -1;
	vehBuyerBuyFrom[playerid] = -1;
	houseOffererOfferTo[playerid] = -1;
	houseOfferPrice[playerid] = 0;
	houseBuyerBuyFrom[playerid] = -1;
	bizOffererOfferTo[playerid] = -1;
	bizOfferPrice[playerid] = 0;
	bizBuyerBuyFrom[playerid] = -1;
	turfAttacker[playerid] = false;
	recoveringFromDeath[playerid] = false;
	isStudyingDrive[playerid] = false;
	gpsOn[playerid] = false;
	phoneConnected[playerid] = -1;
	isTeachingDriving[playerid] = false;
	lottoNumber[playerid] = 0;
	gateopening[playerid] = false;
	ringing[playerid] = -1;
	ResetDriverSchoolForPlayer(playerid);
	phoneTaling[playerid] = -1;
	scripterMode[playerid] = false;
	inTaxiVeh[playerid] = false;
	isWorkingBus[playerid] = false;
	isWorkingSweep[playerid] = false;
	isWorkingKingRing[playerid] = false;
	isWorkingDeliver[playerid] = false;
	isWorkingCoalmine[playerid] = false;
	isWorkingPizza[playerid] = false;
	newProfile[playerid] = false;
	firstTryGetDocuments[playerid] = false;
	spec[playerid] = false;
	spawned[playerid] = false;
	firstSpawn[playerid] = true;
	isLogged[playerid] = false;
	withBelt[playerid] = false;
	isOnFoot[playerid] = false;
	deliverCarrying[playerid] = false;
	TeamInvite[playerid] = -1;
	RepairInvite[playerid] = -1;
	DocsOffer[playerid] = -1;
	DrugsOffer[playerid] = -1;
	DrugsBuying[playerid] = -1;
	vehicleStickerPlayer[playerid] = -1;
	JobInvite[playerid] = -1;
	passwordChances[playerid] = 3;
}

stock ShowPlayerIntro(playerid)
{
	ClearChatSmall(playerid);
	TogglePlayerSpectating(playerid, true);
	PlayerTimerInfo[playerid][ptEndIntro] = 1;
	SendClientMessage(playerid, COLOR_WHITE, "Добре дошли в {5EF403}LawLess Roleplay");
}

stock RemoveBuildingsForPlayer(playerid)
{
	//LV Army - open
	RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
	//LV Army - close
	//beach objects - open
	RemoveBuildingForPlayer(playerid, 1266, 400.0938, -1753.1016, 17.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3778, 337.4531, -1875.0000, 3.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3778, 289.2266, -1875.0000, 3.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3778, 245.5391, -1875.0000, 2.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3615, 245.5391, -1875.0000, 2.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3615, 289.2266, -1875.0000, 3.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3615, 337.4531, -1875.0000, 3.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 400.0938, -1753.1094, 17.1406, 0.25);
	//beach objects - close
	//army - open
	RemoveBuildingForPlayer(playerid, 986, 2497.409, 2769.110, 11.531, 0.250);
	RemoveBuildingForPlayer(playerid, 985, 2497.409, 2777.070, 11.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 2497.909, 2823.850, 24.007, 0.250);
	RemoveBuildingForPlayer(playerid, 7102, 2514.590, 2822.949, 13.250, 0.250);
	RemoveBuildingForPlayer(playerid, 7169, 2514.590, 2822.949, 13.250, 0.250);
	//army - close
	//mechanic - open
	RemoveBuildingForPlayer(playerid, 5397, 1866.329, -1789.780, 20.945, 0.250);
    RemoveBuildingForPlayer(playerid, 5536, 1866.329, -1789.780, 20.945, 0.250);
    RemoveBuildingForPlayer(playerid, 1308, 1867.719, -1798.199, 12.703, 0.250);
	//mechanic - close
	//Los Santos Parking - open
	RemoveBuildingForPlayer(playerid, 4025, 1777.8359, -1773.9063, 12.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 4215, 1777.5547, -1775.0391, 36.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1791.1797, -1816.6328, 14.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1788.5078, -1816.5703, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1796.9609, -1817.3906, 14.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1801.8828, -1817.3047, 13.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 4019, 1777.8359, -1773.9063, 12.5234, 0.25);
	//Los Santos Parking - close
	//police ls
	RemoveBuildingForPlayer(playerid, 1266, 1565.4141, -1722.3125, 25.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 4229, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 4230, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1565.4141, -1722.3125, 25.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1545.5234, -1678.8438, 14.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 646, 1545.5625, -1672.2188, 14.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1541.4766, -1648.4531, 14.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1541.4531, -1642.0313, 13.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1266, 1538.5234, -1609.8047, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 4229, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 4230, 1597.9063, -1699.7500, 30.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 4192, 1591.6953, -1674.8516, 20.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1260, 1538.5234, -1609.8047, 19.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1530, 1118.9063, -2008.2422, 75.0234, 0.25);
	//police ls
	//Los Santos Park near Police - open
	RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1430.1719, -1719.4688, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.6250, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1713.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1505.1797, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1702.3594, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1676.6875, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1656.2500, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1636.2344, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1619.0547, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1443.2031, -1592.9453, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1704.6406, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1694.0469, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1682.7188, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1477.9375, -1652.7266, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.6094, -1653.2500, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.8516, -1646.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.8984, -1651.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1465.9375, -1639.8203, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.7109, -1632.8906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.6641, -1627.8828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.4688, -1626.0234, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1466.4844, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.3359, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1471.3516, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.4063, -1651.3906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.3672, -1646.3828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1493.1328, -1639.4531, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.1797, -1627.7656, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.2188, -1632.6797, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1488.5313, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1498.0547, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1287, 1504.7500, -1704.4688, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1285, 1504.7500, -1694.0391, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1504.8906, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1721.6328, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1705.2734, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1693.9688, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1546.6016, -1693.3906, 14.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1688.0859, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1546.8672, -1687.1016, 14.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1673.7109, 14.1094, 0.25);

	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1668.0781, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1546.6016, -1664.6250, 14.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1546.8672, -1658.3438, 14.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1647.6406, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1621.9609, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1525.3828, -1611.1563, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1528.9531, -1605.8594, 15.6250, 0.25);
	//
	RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);

	//Los Santos park near Police - close
}

stock AddScreenTexts(playerid)
{
	TextDrawShowForPlayer(playerid, Clock[playerid]);
	TextDrawShowForPlayer(playerid, ServerLogo[playerid]);
}

stock AddPlayerMapIcons(playerid)
{
	SetPlayerMapIcon(playerid, 1, LOC_FUELSTATION_1, 56, 0);
	SetPlayerMapIcon(playerid, 2, LOC_FUELSTATION_2, 56, 0);
	SetPlayerMapIcon(playerid, 3, LOC_FUELSTATION_3, 56, 0);
	SetPlayerMapIcon(playerid, 4, LOC_FUELSTATION_4, 56, 0);
	SetPlayerMapIcon(playerid, 5, LOC_FUELSTATION_5, 56, 0);
	SetPlayerMapIcon(playerid, 6, LOC_FUELSTATION_6, 56, 0);
	SetPlayerMapIcon(playerid, 7, LOC_FUELSTATION_7, 56, 0);
	SetPlayerMapIcon(playerid, 8, LOC_FUELSTATION_8, 56, 0);
	SetPlayerMapIcon(playerid, 9, LOC_FUELSTATION_9, 56, 0);
	SetPlayerMapIcon(playerid, 10, LOC_FUELSTATION_10, 56, 0);
	SetPlayerMapIcon(playerid, 11, LOC_FUELSTATION_11, 56, 0);
	SetPlayerMapIcon(playerid, 12, LOC_FUELSTATION_12, 56, 0);
	SetPlayerMapIcon(playerid, 13, LOC_FUELSTATION_13, 56, 0);
	SetPlayerMapIcon(playerid, 14, LOC_FUELSTATION_14, 56, 0);
	SetPlayerMapIcon(playerid, 15, LOC_FUELSTATION_15, 56, 0);
	SetPlayerMapIcon(playerid, 16, LOC_FUELSTATION_16, 56, 0);
	//Locations
	CreateDynamicMapIconEx(PaintBall, 23, 0, MAPICON_LOCAL, 105.0);

	CreateDynamicMapIconEx(Police, 30, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(RobPoint, 36, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(RobPointBC, 36, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(Hospital, 21, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(Kmetstvo, 44, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(Bank, 52, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(Autosallon, 55, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(DMV_LOCATION, 55, 0, MAPICON_LOCAL, 105.0);
	//CreateDynamicMapIconEx(DrugPoint, 20, 0,MAPICON_LOCAL,105.0);

	CreateDynamicMapIconEx(FishingPlace, 19, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(PizzaJob, 19, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(TaxiJob, 19, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(SweepJob, 19, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(MechanicJob, 19, 0, MAPICON_LOCAL, 105.0);
	//CreateDynamicMapIconEx(KingRingJob, 19, 0,MAPICON_LOCAL,105.0);
	CreateDynamicMapIconEx(DeliverJob, 19, 0, MAPICON_LOCAL, 105.0);
	CreateDynamicMapIconEx(CoalmineJob, 19, 0, MAPICON_LOCAL, 105.0);
	//ATMS
	CreateDynamicMapIconEx(LOC_ATM_1, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_2, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_3, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_4, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_5, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_6, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_7, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_8, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_9, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_10, 52, 0, MAPICON_LOCAL, 25.0);
	CreateDynamicMapIconEx(LOC_ATM_11, 52, 0, MAPICON_LOCAL, 25.0);
}

stock ShowPlayerBoxesTextDraws(playerid)
{
	TextDrawShowForPlayer(playerid, Box[0]);
	TextDrawShowForPlayer(playerid, Box[1]);
}

stock HidePlayerBoxesTextDraws(playerid)
{
	TextDrawHideForPlayer(playerid, Box[0]);
	TextDrawHideForPlayer(playerid, Box[1]);
}

stock getFactionName(faction)
{
	new name[60];
	format(name, 60, "%s", FactionInfo[faction][fName]);
	return name;
}

stock SaveGraffiti(graffitiID)
{
	new stringGraffiti[180];
	format(stringGraffiti, 180, "/Graffiti/%d.ini", graffitiID);
	if (dini_Exists(stringGraffiti))
	{
		dini_IntSet(stringGraffiti, "GraffitiOwner", GraffitiInfo[graffitiID][GraffitiOwner]);
		dini_FloatSet(stringGraffiti, "gX", GraffitiInfo[graffitiID][gX]);
		dini_FloatSet(stringGraffiti, "gY", GraffitiInfo[graffitiID][gY]);
		dini_FloatSet(stringGraffiti, "gZ", GraffitiInfo[graffitiID][gZ]);
		dini_FloatSet(stringGraffiti, "gXY", GraffitiInfo[graffitiID][gXY]);
		dini_FloatSet(stringGraffiti, "gYY", GraffitiInfo[graffitiID][gYY]);
		dini_FloatSet(stringGraffiti, "gZY", GraffitiInfo[graffitiID][gZY]);
	}
}

stock LoadGraffiti()
{
	new stringGraffiti[180];
	for (new g = 0; g < MAX_GRAFFITI; g++)
	{
		format(stringGraffiti, 180, "/Graffiti/%d.ini", g);
		if (dini_Exists(stringGraffiti))
		{
			GraffitiInfo[g][GraffitiOwner] = dini_Int(stringGraffiti, "GraffitiOwner");
			GraffitiInfo[g][gX] = dini_Float(stringGraffiti, "gX");
			GraffitiInfo[g][gY] = dini_Float(stringGraffiti, "gY");
			GraffitiInfo[g][gZ] = dini_Float(stringGraffiti, "gZ");
			GraffitiInfo[g][gXY] = dini_Float(stringGraffiti, "gXY");
			GraffitiInfo[g][gYY] = dini_Float(stringGraffiti, "gYY");
			GraffitiInfo[g][gZY] = dini_Float(stringGraffiti, "gZY");
			new gangName[60];
			format(gangName, 60, "%s", getFactionName(GraffitiInfo[g][GraffitiOwner]));
			new gangColor = FactionInfo[GraffitiInfo[g][GraffitiOwner]][fGrColor];
			GraffitiInfo[g][gObjectID] = CreateDynamicObject(19482, GraffitiInfo[g][gX], GraffitiInfo[g][gY], GraffitiInfo[g][gZ], GraffitiInfo[g][gXY], GraffitiInfo[g][gYY], GraffitiInfo[g][gZY], -1, 0, -1, 200);
			SetDynamicObjectMaterialText(GraffitiInfo[g][gObjectID], 0, gangName, OBJECT_MATERIAL_SIZE_512x512, "Diploma", 100, 0, gangColor, 0, 1);
			CreateDynamicMapIconEx(GraffitiInfo[g][gX], GraffitiInfo[g][gY], GraffitiInfo[g][gZ], 53, 0, MAPICON_LOCAL, 145.0);
			maxGraffiti++;
		}
	}

	printf("LawLess Roleplay SERVER - System: Графитите бяха заредени. %d графити", maxGraffiti);
}

stock LoadTurfs()
{
	new stringTurf[180];
	for (new t = 0; t < MAX_TURFS; t++)
	{
		format(stringTurf, 180, "/Turfs/%d.ini", t);
		if (dini_Exists(stringTurf))
		{
			format(stringTurf, 180, "/Turfs/%d.ini", t);
			TurfInfo[t][TurfOwner] = dini_Int(stringTurf, "TurfOwner");
		}

		GangZoneCreate(TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]);
	}

	printf("LawLess Roleplay SERVER - System: Териториите бяха заредени");
}

stock LoadPlayerTurfs(playerid)
{
	for (new t = 0; t < MAX_TURFS; t++)
	{
		GangZoneShowForPlayer(playerid, t, FactionInfo[TurfInfo[t][TurfOwner]][fColor]);
	}
}

stock ShowRestartTimer(playerid)
{
	if (serverrestarttimer > 0)
	{
		//TextDrawShowForPlayer(playerid, RESTARTText);
	}
}

stock ResetPlayerInventory(playerid)
{
	for (new i = 0; i != MAX_INVENTORY; i++)
	{
		InventoryInfo[playerid] [i][invExists] = false;
		InventoryInfo[playerid] [i][invModel] = 0;
		InventoryInfo[playerid] [i][invQuantity] = 0;
	}
}

public OnPlayerConnect(playerid)
{
	if (serverGmxTimer > 0)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "SERVER: Сървърът се рестартира в момента!");
		PlayerTimerInfo[playerid][ptKick] = 1;
	}
	PlayerLabel[playerid] = CreateDynamic3DTextLabel("", 0xFFFFFFFF, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, -1, -1, -1, 15.0);
	DeathPlayerLabel[playerid] = CreateDynamic3DTextLabel("", COLOR_DARKRED2, 0.0, 0.0, 0.0, 15.0, playerid, INVALID_VEHICLE_ID, 0, -1, -1, -1, 15.0);
	RemoveBuildingsForPlayer(playerid);
	ShowRestartTimer(playerid);
	DefinePlayerScreenTexts(playerid);
	AddPlayerMapIcons(playerid);
	LoadPlayerTurfs(playerid);
	ResetPlayerInventory(playerid);
	PhoneModeInit(playerid);
	new accountFileNickname[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(accountFileNickname, 256, "%s.ini", accountNickname);
	if (dini_Exists(accountFileNickname))
	{
		new warns = dini_Int(accountFileNickname, "pWarns");
		if (warns >= 5)
		{
			SendClientMessage(playerid, COLOR_DARKRED2, "SERVER: Акаунтът ти е блокиран!");
			ForceClassSelection(playerid);
			TogglePlayerSpectating(playerid, true);
			PlayerTimerInfo[playerid][ptKick] = 1;
			return 1;
		}
	}

	if (strfind(accountNickname, "_", true) == -1)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "SERVER: За да играеш в Roleplay, името ти трябва да е в този формат Name_Family");
		ForceClassSelection(playerid);
		TogglePlayerSpectating(playerid, true);
		PlayerTimerInfo[playerid][ptKick] = 1;
		return 1;
	}

	new string256[256];
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (playerid != i)
		{
			format(string256, 256, "* %s влезе в сървъра!", GetAccountNickname(playerid));
			SendClientMessage(i, COLOR_LIGHTGREEN4, string256);
		}
	}

	ResetPlayerVariables(playerid);
	ResetPlayerInfo(playerid);
	SetPlayerDefaultColor(playerid);
	PlayerTimerInfo[playerid][ptShowIntro] = 1;
	return 1;
}

stock GetRentedVehicleID(playerid)
{
	for (new i = 0; i < MAX_VEHICLES; i++)
	{
		if (VehicleInfo[i][vRentedBy] == playerid)
		{
			VehicleTimerInfo[i][vtRespawn] = 5 * 60;
			VehicleInfo[i][vRentedBy] = -1;
		}
	}
}

stock ClosePhoneOnDisconnect(playerid)
{
	if (phoneConnected[playerid] >= 0 && isLogged[playerid] == true)
	{
		new connected = phoneConnected[playerid];
		SendClientMessage(connected, COLOR_PHONE, "Човекът с когото разговаряхте по телефона излезе от сървъра.");
		phoneConnected[connected] = -1;
	}
}

stock DestroyBuyVehicle(playerid)
{
	if (playerVehToBuy[playerid] != -1 && isLogged[playerid] == true)
	{
		DestroyVehicle(playerVehToBuy[playerid]);
	}
}

stock LeaveAllWorkingJobs(playerid)
{
	inTaxiVeh[playerid] = false;
	isTaxiVehWorking[playerid] = false;
	isWorkingSweep[playerid] = false;
	isWorkingBus[playerid] = false;
	isWorkingPizza[playerid] = false;
	isBusVehWorking[playerid] = false;
	isWorkingKingRing[playerid] = false;
	isWorkingDeliver[playerid] = false;
	isWorkingCoalmine[playerid] = false;
}

public OnPlayerDisconnect(playerid, reason)
{
	new string256[256];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	format(string256, 256, "* %s излезе от сървъра!", GetAccountNickname(playerid));
	SendClientMessageToAll(COLOR_LIGHTRED2, string256);
	SaveAccount(playerid);
	UnlockOLockedVeh(playerid);
	GetRentedVehicleID(playerid);
	ClosePhoneOnDisconnect(playerid);
	DestroyBuyVehicle(playerid);
	LeaveAllWorkingJobs(playerid);
	RemovePlayerSiren(playerid);
	RemoveTmpVehApplyObject(playerid);
	RemovePoliceBarricade(playerid);
	HideInteractiveActorTexts(playerid);
	for (new i = 0; i < 44; i++ && IsPlayerConnected(i))
	{
		PlayerTextDrawDestroy(playerid, PhoneGUI[playerid] [i]);
	}

	if(rentorVeh[playerid])
	{
		UnRentPlayerVeh(playerid);
	}

	if (isAtmRobber[playerid] == true)
	{
		SendClientMessageToAll(COLOR_ORANGE, "Police - ATM Robbery Alert: Органите на реда успяха да спрат крадеца!");
		StopAtmRobbery();
	}

	if (isNormalRobberyLeaderPlayer[playerid] == true && isLogged[playerid] == true)
	{
		SendNormalRobberyMessage(COLOR_ORANGE, "Robbery: *Обирът приключи, защото лидерът напусна сървъра *");
		SendClientMessageToAll(COLOR_ORANGE, "Police - Robbery Alert: Органите на реда успяха да спрат крадците!");
		StopRobbery();
	}

	if (inNormalRobbery[playerid] == true && isNormalRobberyLeaderPlayer[playerid] == false && isLogged[playerid] == true)
	{
		format(string256, 256, "Robbery: %s напусна сървъра и отпадна от обира.", GetPlayerRpName(playerid));
		SendNormalRobberyMessage(COLOR_ORANGE, string256);
		normalRobberyMembers -= 1;
	}

	if (vehOffererOfferTo[playerid] != -1 && isLogged[playerid] == true)
	{
		new vehBuyer = vehOffererOfferTo[playerid];
		SendClientMessage(vehBuyer, COLOR_WHITE, "SERVER: Човекът, на който предложи продажба излезе от сървъра!");
		vehBuyerBuyFrom[vehBuyer] = -1;
	}

	if (vehBuyerBuyFrom[playerid] != -1 && isLogged[playerid] == true)
	{
		new vehOfferer = vehOffererOfferTo[playerid];
		SendClientMessage(vehOfferer, COLOR_WHITE, "SERVER: Човекът, който ти предложи продажба излезе от сървъра!");
		vehOffererOfferTo[vehOfferer] = -1;
	}

	if (houseOffererOfferTo[playerid] != -1 && isLogged[playerid] == true)
	{
		new houseBuyer = houseOffererOfferTo[playerid];
		SendClientMessage(houseBuyer, COLOR_WHITE, "SERVER: Човекът, на който предложи продажба на къща излезе от сървъра!");
		houseBuyerBuyFrom[houseBuyer] = -1;
	}

	if (houseBuyerBuyFrom[playerid] != -1 && isLogged[playerid] == true)
	{
		new houseOfferer = houseOffererOfferTo[playerid];
		SendClientMessage(houseOfferer, COLOR_WHITE, "SERVER: Човекът, който ти предложи продажба на къща излезе от сървъра!");
		houseOffererOfferTo[houseOfferer] = -1;
	}

	if (bizOffererOfferTo[playerid] != -1 && isLogged[playerid] == true)
	{
		new bizBuyer = bizOffererOfferTo[playerid];
		SendClientMessage(bizBuyer, COLOR_WHITE, "SERVER: Човекът, на който предложи продажба на бизнес излезе от сървъра!");
		bizBuyerBuyFrom[bizBuyer] = -1;
	}

	if (bizBuyerBuyFrom[playerid] != -1 && isLogged[playerid] == true)
	{
		new bizOfferer = bizOffererOfferTo[playerid];
		SendClientMessage(bizOfferer, COLOR_WHITE, "SERVER: Човекът, който ти предложи продажба на бизнес излезе от сървъра!");
		bizOffererOfferTo[bizOfferer] = -1;
	}

	if (turfAttacker[playerid] == true && isLogged[playerid] == true)
	{
		new playeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playeridNickname, 25);
		new Faction = PlayerInfo[playerid][pFaction];
		format(string256, 256, "[FACTION TURF] %s излезе от сървъра и отпадна от атаката на територията.", playeridNickname);
		SendFactionMessage(Faction, COLOR_TURF, string256);
		LeaveTurfAttacker(playerid);
	}

	return 1;
}

stock ResetInteriorAndWorld(playerid)
{
	SetPlayerVirtualWorld(playerid, 0);
	SetPlayerInterior(playerid, 0);
}

stock RestVwAndInterior(playerid)
{
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
}

stock SetPlayerWeaponSkillByLevel(playerid)
{
	for (new wepId = 0; wepId < 11; wepId++)
	{
		if (wepId != 2)
		{
			SetPlayerSkillLevel(playerid, wepId, PlayerInfo[playerid][pWeaponSkill]);
		}
	}
}

stock SetPlayerFightStyle(playerid)
{
	if (PlayerInfo[playerid][pFightStyle] == 0)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
	}

	if (PlayerInfo[playerid][pFightStyle] == 1)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
	}

	if (PlayerInfo[playerid][pFightStyle] == 2)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
	}

	if (PlayerInfo[playerid][pFightStyle] == 3)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
	}

	if (PlayerInfo[playerid][pFightStyle] == 4)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
	}

	if (PlayerInfo[playerid][pFightStyle] == 5)
	{
		SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
	}
}

public OnPlayerSpawn(playerid)
{
	PlayerTimerInfo[playerid][ptRevieveTimer] = 0;
	TextDrawHideForPlayer(playerid, DeathTimerText[playerid]);
	GivePlayerLaser(playerid);
	SetPlayerWeaponSkillByLevel(playerid);
	StopAudioStreamForPlayer(playerid);
	SetPlayerFightStyle(playerid);
	LoadPlayerTurfs(playerid);
	StartFlashing(turfAttacked);
	if (inPaintBall[playerid] == false)
	{
		GivePlayerAllGuns(playerid);
	}

	if (inPaintBall[playerid] == true)
	{
		SetPlayerArmour(playerid, 100);
		GivePlayerPaintBallGuns(playerid);
	}

	SetCameraBehindPlayer(playerid);
	spawned[playerid] = true;
	noHospital[playerid] = false;
	if (firstSpawn[playerid] == true && newProfile[playerid] == false)
	{
		if (PlayerInfo[playerid][pIdentifyCard] == 1)
		{
			//Spawn - loc
			//SetToLastPos(playerid);
			SetToOrganisationPos(playerid);
			//Spawn - loc
			// MAYBE TODO - OPEN
			if (PlayerInfo[playerid][pInHospital] == 1)
			{
				if (PlayerInfo[playerid][pHealth] > 0)
				{
					SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
				}
				else if (PlayerInfo[playerid][pHealth] < 0)
				{
					SetPlayerHealth(playerid, 1);
				}
			}

			// MAYBE TODO - CLOSE
		}
	}

	if (setToSpawn[playerid] == true || inPaintBall[playerid] == true)
	{
		if (PlayerInfo[playerid][pIdentifyCard] == 1)
		{
			SetToOrganisationPos(playerid);
		}
	}

	if (PlayerInfo[playerid][pIdentifyCard] == 0 && firstTryGetDocuments[playerid] == false)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "Вие все още нямате лична карта, вземете си я от жълтата иконка.");
		SetPlayerPos(playerid, 231.5891, 2348.4021, 1017.1257);
		SetPlayerFacingAngle(playerid, 89.9059);
		SetPlayerInterior(playerid, 3);
		SetPlayerVirtualWorld(playerid, 2);
	}

	if (firstSpawn[playerid] == true && newProfile[playerid] == true)
	{
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "SERVER: Сега трябва да си изкарате лична карта от жълтата иконка.");
		GameTextForPlayer(playerid, "~w~Welcome to~n~~y~Our Server", 3100, 1);
		SetPlayerPos(playerid, 231.5891, 2348.4021, 1017.1257);
		SetPlayerFacingAngle(playerid, 89.9059);
		SetPlayerInterior(playerid, 3);
		SetPlayerVirtualWorld(playerid, 2);
		firstTryGetDocuments[playerid] = false;
	}

	if (newProfile[playerid] == false)
	{
		RestartPlayerSkin(playerid);
	}
	
	if(!newProfile[playerid] && firstSpawn[playerid])
	{
		new string256[256];
		format(string256, 256, "~w~Welcome~n~~b~~h~%s",GetAccountNickname(playerid));
		GameTextForPlayer(playerid, string256, 3100, 1);
	}

	if (PlayerInfo[playerid][pAFK] == 1)
	{
		SetPlayerInterior(playerid, 15);
		SetPlayerVirtualWorld(playerid, playerid + 1);
		SetPlayerPos(playerid, 2215.454833, -1147.475585, 1025.796875);
		SendClientMessage(playerid, COLOR_AFK, "AFK: Все още си в AFK! Използвай /back, когато си тук!");
		noHospital[playerid] = true;
	}

	if (PlayerInfo[playerid][pPoliceJail] > 0)
	{
		SendClientMessage(playerid, COLOR_POLICE_2, "Вие все още сте в полицейския затвор!");
		SetPlayerPos(playerid, 1579.2612, -1677.0515, 2982.2800);
		SetPlayerInterior(playerid, 6);
		SetPlayerVirtualWorld(playerid, 1);
		FreezeAntiDropOnSpawn(playerid);
		SetPlayerAttachedObject(playerid, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
		noHospital[playerid] = true;
	}

	if (PlayerInfo[playerid][pJailed] > 0)
	{
		SendClientMessage(playerid, COLOR_ADMIN_RED, "Вие все още сте в ADMIN затвора!");
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerInterior(playerid, 4);
		SetPlayerPos(playerid, 299.7077, 303.4193, 999.1484);
		SetPlayerAttachedObject(playerid, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
		noHospital[playerid] = true;
	}

	if (noHospital[playerid] == false && inPaintBall[playerid] == false)
	{
		if (PlayerInfo[playerid][pIdentifyCard] == 1 && newProfile[playerid] == false)	//hospital
		{
			PlayerTimerInfo[playerid][ptMedicHelpSpawn] = 1;
		}
	}

	firstSpawn[playerid] = false;
	SetPlayerDefaultColor(playerid);
	SetPlayerArmour(playerid, PlayerInfo[playerid][pArmour]);
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	/*
	    if(PlayerInfo[killerid][pAchievement][ACHIEVEMENT_FIRSTKILL]==0)
	     {
	     new string256[256];
		 format(string256,256,"Постижение: Първо убийство\n\nНаграда: 3 Exp");
		 ShowPlayerDialog(killerid,closeddialog,DIALOG_STYLE_MSGBOX,"Achievement Unlocked",string256,"OK","");
	     PlayerInfo[killerid][pAchievement][ACHIEVEMENT_FIRSTKILL]=1;
	     GivePlayerExp(killerid,3);
	     }

	*/
	/*
		if(PlayerTimerInfo[playerid][ptRevieveTimer]==0)
		{
		SendClientMessage(playerid, COLOR_WHITE, "Ти беше {e60000}свален на земята{ffffff}! Можеш да избереш да припаднеш, чрез {40BF00}/acceptdeath {ffffff}или да изчакаш да те съживят!");
	    TextDrawShowForPlayer(playerid, DeathTimerText[playerid]);
	    PlayerTimerInfo[playerid][ptRevieveTimer]=60;
	    ApplyAnimation(playerid,"CRACK","crckidle2", 4.1, 0, 1, 1, 0,60000,1);
	    PlayerTimerInfo[playerid][ptFreeze]=2;
	    SetPlayerHealth(playerid, 20);
	   	//LoopingAnim(playerid, "BEACH", "SitnWait_loop_W", 4.1, 0, 1, 1, 1, 1);
	   	//MEDIC_CPR - revieve
		}

	*/
	if (LastPos[playerid] [lpUsed] == 1)
	{
		LastPos[playerid] [lpUsed] = 0;
	}

	PlayerInfo[playerid][pArmour] = 0;
	UpdateDynamic3DTextLabelText(DeathPlayerLabel[playerid], COLOR_DARKRED2, "");
	if (killerid != INVALID_PLAYER_ID)
	{
		new stringDeath[256];
		new gunname[32];
		GetWeaponName(reason, gunname, sizeof(gunname));
		format(stringDeath, 256, "%s has been killed by %s (%s)", RealName(playerid), RealName(killerid), gunname);
		SendLocalMessage(16.0, playerid, COLOR_DARKRED2, stringDeath);
	}

	if (PlayerTimerInfo[playerid][ptApplyFallenAnim] > 0)
	{
		PlayerTimerInfo[playerid][ptApplyFallenAnim] = 0;
	}

	PlayerTimerInfo[playerid][ptRevieveTimer] = 0;
	TextDrawHideForPlayer(playerid, DeathTimerText[playerid]);
	UnlockOLockedVeh(playerid);
	PlayerTimerInfo[playerid][ptAlreadyFallen] = 2;
	if (inPaintBall[playerid] == true && inPaintBall[killerid] == true)
	{
		paintBallKills[killerid] += 1;
	}

	if (IsPlayerAttachedObjectSlotUsed(playerid, 7))
	{
		RemoveArmourObject(playerid);
	}

	if (inPaintBall[playerid] == false)
	{
		new stringDeath[256];
		format(stringDeath, 256, "%s е мъртъв!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringDeath);
	}

	if (isAtmRobber[playerid] == true)
	{
		SendClientMessageToAll(COLOR_ORANGE, "Police - ATM Robbery Alert: Органите на реда успяха да спрат крадеца!");
		StopAtmRobbery();
	}

	if (inNormalRobbery[playerid] == true && isNormalRobberyLeaderPlayer[playerid] == false)
	{
		new string256[256];
		format(string256, 256, "Robbery: %s припадна и отпадна от обира.", GetPlayerRpName(playerid));
		SendNormalRobberyMessage(COLOR_ORANGE, string256);
		normalRobberyMembers -= 1;
		inNormalRobbery[playerid] = false;
	}

	if (isNormalRobberyLeaderPlayer[playerid] == true)
	{
		new string256[256];
		format(string256, 256, "Robbery: Лидерът на обира %s припадна и заради това обирът се прекратява.", GetPlayerRpName(playerid));
		SendNormalRobberyMessage(COLOR_ORANGE, string256);
		SendClientMessageToAll(COLOR_ORANGE, "Police - Robbery Alert: Органите на реда успяха да спрат крадците.");
		inNormalRobbery[playerid] = false;
		isNormalRobberyLeaderPlayer[playerid] = true;
		StopRobbery();
	}

	if (isPlayerWorkingNow(playerid) == 1)
	{
		DisablePlayerCheckpoint(playerid);
		SendClientMessage(playerid, COLOR_WHITE, "Вие умряхте и не успяхте да завършите работата си!");
		LeavePlayerWork(playerid);
	}

	recoveringFromDeath[playerid] = true;
	cuffed[playerid] = false;
	spawned[playerid] = false;
	if (inPaintBall[playerid] == false)
	{
		SavePlayerAllGuns(playerid);
	}

	if (inPaintBall[killerid] == false)
	{
		if (PlayerInfo[killerid][pVip] == 1)
		{
			GivePlayerCash(killerid, 20);
		}

		if (PlayerInfo[killerid][pVip] == 1)
		{
			GivePlayerCash(killerid, 30);
		}

		if (PlayerInfo[killerid][pVip] == 1)
		{
			GivePlayerCash(killerid, 40);
		}
	}

	if (PlayerInfo[killerid][pPoliceDuty] == 1 || PlayerInfo[killerid][pFbiDuty] == 1 || PlayerInfo[killerid][pArmyDuty] == 1)
	{
		if (PlayerInfo[playerid][pWantedLevel] > 0)
		{
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new killeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, killeridNickname, 25);
			new string256[256];
			format(string256, 256, "%s нарани %s почти до смърт и той вече е в затвора!", killeridNickname, playeridNickname);
			SendLocalMessage(12.0, killerid, COLOR_LIGHTPURPLE4, string256);
			format(string256, 256, "%s нарани %s почти до смърт и той вече е в затвора!", killeridNickname, playeridNickname);
			SendFactionMessage(PlayerInfo[killerid][pFaction], COLOR_POLICE_2, string256);
			PlayerInfo[playerid][pPoliceJail] = JailTimeByWanted(PlayerInfo[playerid][pWantedLevel]);
			GetPlayerAllGuns(playerid);
			format(string256, 256, "{ff0000}[WASTED] {0040FF}Вие бяхте подложен на арест за %d минути!", JailTimeByWanted(PlayerInfo[playerid][pWantedLevel]) / 60);
			SendClientMessage(playerid, COLOR_POLICE_2, string256);
			if (PlayerInfo[playerid][pFine] > 0)
			{
				format(string256, 256, "Вие бяхте хванат с глоби, заради това те бяха изплатени! Вие изгубихте {ff0000}$%d{ffffff}!", PlayerInfo[playerid][pFine]);
				SendClientMessage(playerid, COLOR_WHITE, string256);
				GivePlayerCash(playerid, -PlayerInfo[playerid][pFine]);
			}

			GetPlayerAllWanted(playerid);
			PlayerInfo[playerid][pFine] = 0;
		}
	}

	if (turfAttacker[playerid] == true)
	{
		new string256[256];
		new playeridNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playeridNickname, 25);
		new Faction = PlayerInfo[playerid][pFaction];
		format(string256, 256, "[FACTION TURF] %s умря и отпадна от атаката на територията.", playeridNickname);
		SendFactionMessage(Faction, COLOR_TURF, string256);
		LeaveTurfAttacker(playerid);
	}

	return 1;
}

stock SavePrivateVehTune(vehicleid)
{
	if (VehicleInfo[vehicleid][vIsPrivate] == 1)
	{
		new specialIndex = VehicleInfo[vehicleid][vPrivateID];
		PrivateVehInfo[specialIndex][vVehSpoiler] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SPOILER);
		PrivateVehInfo[specialIndex][vVehHood] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HOOD);
		PrivateVehInfo[specialIndex][vVehRoof] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_ROOF);
		PrivateVehInfo[specialIndex][vVehNitro] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_NITRO);
		PrivateVehInfo[specialIndex][vVehSideskirt] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SIDESKIRT);
		PrivateVehInfo[specialIndex][vVehLights] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_LAMPS);
		PrivateVehInfo[specialIndex][vVehExhaust] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_EXHAUST);
		PrivateVehInfo[specialIndex][vVehStereo] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_STEREO);
		PrivateVehInfo[specialIndex][vVehWheels] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_WHEELS);
		PrivateVehInfo[specialIndex][vVehHyd] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HYDRAULICS);
		PrivateVehInfo[specialIndex][vVehBumperF] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_FRONT_BUMPER);
		PrivateVehInfo[specialIndex][vVehBumperR] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_REAR_BUMPER);
		PrivateVehInfo[specialIndex][vVehVentsR] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_RIGHT);
		PrivateVehInfo[specialIndex][vVehVentsL] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_LEFT);
	}
}

stock SetPrivateVehicleTune(vehicleid)
{
	if (VehicleInfo[vehicleid][vIsPrivate] == 1)
	{
		new specialIndex = VehicleInfo[vehicleid][vPrivateID];
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehSpoiler]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehHood]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehRoof]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehNitro]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehSideskirt]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehLights]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehExhaust]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehWheels]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehHyd]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehBumperF]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehBumperR]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehVentsR]);
		AddVehicleComponent(vehicleid, PrivateVehInfo[specialIndex][vVehVentsL]);
		if (PrivateVehInfo[specialIndex][vVehPaintJob] != -1)
		{
			ChangeVehiclePaintjob(vehicleid, PrivateVehInfo[specialIndex][vVehPaintJob]);
		}

		for (new i = 0; i < 2; i++)
		{
			if (strcmp(GetVehicleStickerName(specialIndex, i), "", true) != 0)	//goto
			{
				if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehSticker][i]))
				{
					DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehSticker][i]);
				}

				new vehStickerText[256];
				format(vehStickerText, 256, "%s", GetVehicleStickerName(specialIndex, i));
				new vehSticker = PrivateVehInfo[specialIndex][vVehSticker][i];
				new Float: vehStickerX = PrivateVehInfo[specialIndex][vVehStickerX][i];
				new Float: vehStickerY = PrivateVehInfo[specialIndex][vVehStickerY][i];
				new Float: vehStickerZ = PrivateVehInfo[specialIndex][vVehStickerZ][i];
				new Float: vehStickerXY = PrivateVehInfo[specialIndex][vVehStickerXY][i];
				new Float: vehStickerYY = PrivateVehInfo[specialIndex][vVehStickerYY][i];
				new Float: vehStickerZY = PrivateVehInfo[specialIndex][vVehStickerZY][i];
				vehSticker = CreateDynamicObject(19482, vehStickerX, vehStickerY, vehStickerZ, vehStickerXY, vehStickerYY, vehStickerZY, -1, 0, -1, 200);
				SetDynamicObjectMaterialText(vehSticker, 0, vehStickerText, OBJECT_MATERIAL_SIZE_512x512, "Diploma", 100, 0, 0xFFFFFFFF, 0, 1);
				AttachDynamicObjectToVehicle(vehSticker, vehicleid, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
			}
		}

		//Veh Objects - open
		for (new i = 0; i < 20; i++)
		{
			if (PrivateVehInfo[specialIndex][vVehObject][i] != 0)
			{
				if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehObjID][i]))
				{
					DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehObjID][i]);
				}

				//Apply Objects - open
				new vehObjID = PrivateVehInfo[specialIndex][vVehObject][i];
				new Float: vehObjX = PrivateVehInfo[specialIndex][vVehObjectX][i];
				new Float: vehObjY = PrivateVehInfo[specialIndex][vVehObjectY][i];
				new Float: vehObjZ = PrivateVehInfo[specialIndex][vVehObjectZ][i];
				new Float: vehObjRX = PrivateVehInfo[specialIndex][vVehObjectRX][i];
				new Float: vehObjRY = PrivateVehInfo[specialIndex][vVehObjectRY][i];
				new Float: vehObjRZ = PrivateVehInfo[specialIndex][vVehObjectRZ][i];
				new Float: X, Float: Y, Float: Z;
				GetVehiclePos(vehicleid, X, Y, Z);
				PrivateVehInfo[specialIndex][vVehObjID][i] = CreateDynamicObject(vehObjID, X, Y, Z, 0, 0, 0);
				new vehObjectToApply = PrivateVehInfo[specialIndex][vVehObjID][i];
				AttachDynamicObjectToVehicle(vehObjectToApply, vehicleid, vehObjX, vehObjY, vehObjZ, vehObjRX, vehObjRY, vehObjRZ);
				//Apply Objects - close
			}
		}

		//Veh Objects - close

		if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
		{
			new neonObjectID = PrivateVehInfo[specialIndex][vVehNeonColor];
			if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][0]))
			{
				DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][0]);
			}

			if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][1]))
			{
				DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][1]);
			}

			PrivateVehInfo[specialIndex][vVehNeon][0] = CreateDynamicObject(neonObjectID, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
			AttachDynamicObjectToVehicle(PrivateVehInfo[specialIndex][vVehNeon][0], vehicleid, -1.040, 0.000, -0.610, 0.000, 0.000, 0.000);
			PrivateVehInfo[specialIndex][vVehNeon][1] = CreateDynamicObject(neonObjectID, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
			AttachDynamicObjectToVehicle(PrivateVehInfo[specialIndex][vVehNeon][1], vehicleid, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
		}
	}
}

public OnVehicleSpawn(vehicleid)
{
	SetPrivateVehicleTune(vehicleid);
	SetJobVehLocked(vehicleid);
	SetVehicloEngineOff(vehicleid);
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	return 1;
}

public OnPlayerText(playerid, text[])
{
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	printf("[say] %s(id:%d): %s", accountNickname, playerid, text);
	if (PlayerInfo[playerid][pMuted] > 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да пишеш в чата сега, защото си заглушен!");
		return 0;
	}

	new string256[256];
	if (phoneConnected[playerid] > -1)
	{
		format(string256, 256, "* [Телефон] {FFFFFF}%s {B7AFAF}каза: %s", GetPlayerRpName(playerid), text);
		SendPhoneMessage(phoneConnected[playerid], COLOR_PHONE, string256);

		format(string256, 256, "(Телефон) {FFFFFF}%s {B7AFAF}казва %s", RealName(playerid), text);
		SendLocalMessageExceptPlayerid(16.0, playerid, COLOR_PHONE, string256);

		UpdateDynamic3DTextLabelText(PlayerLabel[playerid], COLOR_PHONE, text);
		PlayerTimerInfo[playerid][pResetPlayerLabel] = 8;
		return 0;
	}

	if (strcmp(text, ":(", true) == 0)
	{
		format(string256, 256, "* %s е тъжен", RealName(playerid));
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		return 0;
	}

	if (strcmp(text, ":D", true) == 0)
	{
		format(string256, 256, "* %s се смее", RealName(playerid));
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		return 0;
	}

	if (strcmp(text, ":)", true) == 0)
	{
		format(string256, 256, "* %s се усмихва", RealName(playerid));
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		return 0;
	}

	format(string256, 256, "%s {FFFFFF}казва: {B7AFAF}%s", RealName(playerid), text);
	SendLocalMessage(12.0, playerid, GetPlayerColor(playerid), string256);
	UpdateDynamic3DTextLabelText(PlayerLabel[playerid], COLOR_WHITE, text);
	PlayerTimerInfo[playerid][pResetPlayerLabel] = 8;
	if (GetPVarInt(playerid, "UseAnim") == 0 && IsPlayerInAnyVehicle(playerid) == 0 && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
	{
		ApplyAnimationWithCondition(playerid, "PED", "IDLE_CHAT", 4.1, 0, 1, 1, 0, 1000, 1);
		//ApplyAnimationWithCondition(playerid, "PED", "IDLE_CHAT",4.1,0,1,1,1,1,1);
		PlayerTimerInfo[playerid][ptClearChatAnimation] = 2;
	}

	return 0;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
	new cmd[256];
	new tmp[256];
	new idx;
	cmd = strtok(cmdtext, idx);
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	printf("[cmd] %s(id: %d): %s", accountNickname, playerid, cmdtext);
	if (isLogged[playerid] == false)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Трябва първо да влезеш в профила си!");
		return 1;
	}

	if (strcmp(cmd, "/inventory", true) == 0)
	{
		OpenInventory(playerid);
		return 1;
	}

	if (strcmp(cmd, "/exit", true) == 0)
	{
		for (new alb = 0; alb < maxbiz + 2; alb++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, -27.3025, -57.6649, 1003.5469) ||
				IsPlayerInRangeOfPoint(playerid, 3, 501.980987, -69.150199, 998.757812) ||
				IsPlayerInRangeOfPoint(playerid, 3, -2026.9447, -103.6024, 1035.1832) ||
				IsPlayerInRangeOfPoint(playerid, 3, 296.8089, -112.0065, 1001.5156) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1260.6464, -785.4418, 1091.9063) ||
				IsPlayerInRangeOfPoint(playerid, 3, -27.3512, -31.7518, 1003.5573) ||
				IsPlayerInRangeOfPoint(playerid, 3, 207.054992, -138.804992, 1003.507812) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1494.4723, 1303.5813, 1093.2891) ||
				IsPlayerInRangeOfPoint(playerid, 3, 362.8670, -75.1642, 1001.5078) ||
				IsPlayerInRangeOfPoint(playerid, 3, 834.6642, 7.5311, 1004.1870) ||
				IsPlayerInRangeOfPoint(playerid, 3, -25.9455, -141.5480, 1003.5469) ||
				IsPlayerInRangeOfPoint(playerid, 3, 203.7447, -50.6649, 1001.8047) ||
				IsPlayerInRangeOfPoint(playerid, 3, 285.9084, -86.7750, 1001.5229) ||
				IsPlayerInRangeOfPoint(playerid, 3, 315.7523, -143.6341, 999.6016) ||
				IsPlayerInRangeOfPoint(playerid, 3, 493.4793, -24.9576, 1000.6719) ||
				IsPlayerInRangeOfPoint(playerid, 3, 744.6210, 1436.3411, 1102.7031) ||
				IsPlayerInRangeOfPoint(playerid, 3, 773.9693, -78.8193, 1000.6628) ||
				IsPlayerInRangeOfPoint(playerid, 3, 774.1560, -50.4766, 1000.5859) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1133.2222, -15.8171, 1000.6797) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1204.7975, -13.8216, 1000.9219) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1306.8253, 3.2698, 1001.0272) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2018.6144, 1017.7792, 996.8750) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2234.1011, 1714.4489, 1012.3828) ||
				IsPlayerInRangeOfPoint(playerid, 3, -229.1534, 1401.3180, 27.7656) ||
				IsPlayerInRangeOfPoint(playerid, 3, 377.0852, -193.3047, 1000.6328) ||
				IsPlayerInRangeOfPoint(playerid, 3, 364.9964, -11.8438, 1001.8516) ||
				IsPlayerInRangeOfPoint(playerid, 3, 460.5563, -88.6419, 999.5547) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1727.7561, -1638.0088, 20.2230) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2541.9399, -1304.0100, 1025.0703) ||
				IsPlayerInRangeOfPoint(playerid, 3, -1395.4200, 1245.6000, 1039.8672) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1781.7737, 1650.2898, -12.8729))
			{
				if (GetPlayerVirtualWorld(playerid) == alb + 500)
				{
					if (BizInfo[alb][bLocked] == 1)
					{
						return SendClientMessage(playerid, COLOR_WHITE, "Бизнесът е заключен и не можеш да излезеш !");
					}
					inBiz[playerid] = -1;
					SetPlayerPos(playerid, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]);
					SetPlayerInterior(playerid, 0);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
		}

		for (new alh = 0; alh < maxhouses + 2; alh++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, 2324.5479, -1149.5146, 1050.7101) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2270.3855, -1210.4730, 1047.5625) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2196.8506, -1204.2477, 1049.0234) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2468.8413, -1698.4177, 1013.5078) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1260.6464, -785.4418, 1091.9063) ||
				IsPlayerInRangeOfPoint(playerid, 3, 327.9635, 1477.7430, 1084.4375) ||
				IsPlayerInRangeOfPoint(playerid, 3, 318.5932, 1114.4792, 1083.8828) ||
				IsPlayerInRangeOfPoint(playerid, 3, 309.0916, 313.6412, 1003.3047) ||
				IsPlayerInRangeOfPoint(playerid, 3, 261.0904, 1284.2944, 1080.2578) ||
				IsPlayerInRangeOfPoint(playerid, 3, 226.2984, 1114.3319, 1080.9929) ||
				IsPlayerInRangeOfPoint(playerid, 3, 225.8726, 1021.4523, 1084.0177) ||
				IsPlayerInRangeOfPoint(playerid, 3, 223.1015, 1287.0764, 1082.1406) ||
				IsPlayerInRangeOfPoint(playerid, 3, 140.2254, 1365.9796, 1083.8594) ||
				IsPlayerInRangeOfPoint(playerid, 3, 83.0758, 1322.2808, 1083.8662) ||
				IsPlayerInRangeOfPoint(playerid, 3, -68.7704, 1352.9250, 1080.2109) ||
				IsPlayerInRangeOfPoint(playerid, 3, -42.5628, 1405.5011, 1084.4297) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2495.98, -1692.08, 1014.74) ||
				IsPlayerInRangeOfPoint(playerid, 3, 83.03, 1322.28, 1083.87) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2807.48, -1174.76, 1025.57) ||
				IsPlayerInRangeOfPoint(playerid, 3, 260.85, 1237.24, 1084.26) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2237.59, -1081.64, 1049.02) ||
				IsPlayerInRangeOfPoint(playerid, 3, 446.99, 1397.07, 1084.30) ||
				IsPlayerInRangeOfPoint(playerid, 3, 377.15, 1417.41, 1081.33) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2308.77, -1212.94, 1049.02) ||
				IsPlayerInRangeOfPoint(playerid, 3, 243.72, 304.91, 999.15) || IsPlayerInRangeOfPoint(playerid, 3, 2283.04, -1140.28, 1050.90))
			{
				if (GetPlayerVirtualWorld(playerid) == alh + 50)
				{
					if (HouseInfo[alh][hLocked] == 1)
					{
						return SendClientMessage(playerid, COLOR_HOUSE, "Къщата е заключена и не можеш да излезеш !");
					}
					inHouse[playerid]=-1;
					SetPlayerPos(playerid, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]);
					SetPlayerInterior(playerid, 0);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/enter", true) == 0)
	{
		for (new alb = 0; alb < maxbiz; alb++)	// Dynamic Houses
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
			{
				if (BizInfo[alb][bLocked] == 1)
				{
					return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът е заключен и не можете да влезете !");
				}
				inBiz[playerid] = alb;
				new string256[256];
				if (BizInfo[alb][bType] == 1)	// 24/7 Business
				{
					SetPlayerPos(playerid, -27.3025, -57.6649, 1003.5469);
					SetPlayerFacingAngle(playerid, 357.5915);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 2)	// Bar Business
				{
					SetPlayerPos(playerid, 501.980987, -69.150199, 998.757812);
					SetPlayerFacingAngle(playerid, 179.826400);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 11);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 3)	// Ammunation Business
				{
					SetPlayerPos(playerid, 296.8089, -112.0065, 1001.5156);
					SetPlayerFacingAngle(playerid, 76.7251);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 4)	// Advertisement Agency
				{
					SetPlayerPos(playerid, -27.3512, -31.7518, 1003.5573);
					SetPlayerFacingAngle(playerid, 86.7239);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 5)	// Fast Food
				{
					SetPlayerPos(playerid, 207.054992, -138.804992, 1003.507812);
					SetPlayerFacingAngle(playerid, 182.1137);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 3);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 6)	// Casino
				{
					SetPlayerPos(playerid, 362.8670, -75.1642, 1001.5078);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 10);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 7)	// 24/7
				{
					SetPlayerPos(playerid, -25.9455, -141.5480, 1003.5469);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 16);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 8)	// 24/7
				{
					SetPlayerPos(playerid, 203.7447, -50.6649, 1001.8047);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 9)	// 24/7
				{
					SetPlayerPos(playerid, 285.9084, -86.7750, 1001.5229);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 10)	// ammo
				{
					SetPlayerPos(playerid, 315.7523, -143.6341, 999.6016);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 7);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 11)	// ammo
				{
					SetPlayerPos(playerid, 493.4793, -24.9576, 1000.6719);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 17);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 12)	// ammo
				{
					SetPlayerPos(playerid, 744.6210, 1436.3411, 1102.7031);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 13)	// ammo
				{
					SetPlayerPos(playerid, 773.9693, -78.8193, 1000.6628);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 7);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 14)	// ammo
				{
					SetPlayerPos(playerid, 774.1560, -50.4766, 1000.5859);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 15)	// ammo
				{
					SetPlayerPos(playerid, 1133.2222, -15.8171, 1000.6797);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 12);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 16)	// ammo
				{
					SetPlayerPos(playerid, 1204.7975, -13.8216, 1000.9219);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 2);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 17)	// ammo
				{
					SetPlayerPos(playerid, 2018.6144, 1017.7792, 996.8750);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 10);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 18)	// ammo
				{
					SetPlayerPos(playerid, 2234.1011, 1714.4489, 1012.3828);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 19)	// ammo
				{
					SetPlayerPos(playerid, -229.1534, 1401.3180, 27.7656);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 18);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 20)	// ammo
				{
					SetPlayerPos(playerid, 364.9964, -11.8438, 1001.8516);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 9);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 21)	// ammo
				{
					SetPlayerPos(playerid, 460.5563, -88.6419, 999.5547);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 22)	// ammo
				{
					PlayerTimerInfo[playerid][ptUnfreeze] = 2;
					TogglePlayerControllable(playerid, 0);
					SetPlayerInterior(playerid, 1);
					SetPlayerPos(playerid, 1781.7737, 1650.2898, -12.8729);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}
			}
		}

		for (new alh = 0; alh < maxhouses + 2; alh++)	// Dynamic Houses
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
			{
				if (HouseInfo[alh][hLocked] == 1)
				{
					return SendClientMessage(playerid, COLOR_HOUSE, "Къщата е заключена и не можеш да влезеш!");
				}
				inHouse[playerid]=alh;
				SetPlayerVirtualWorld(playerid, alh + 50);
				if (HouseInfo[alh][hInterior] == 1)
				{
					SetPlayerPos(playerid, 2283.04, -1140.28, 1050.90);
					SetPlayerFacingAngle(playerid, 267.0980);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 11);
				}

				if (HouseInfo[alh][hInterior] == 2)
				{
					SetPlayerPos(playerid, 243.72, 304.91, 999.15);
					SetPlayerFacingAngle(playerid, 267.3974);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
				}

				if (HouseInfo[alh][hInterior] == 3)
				{
					SetPlayerPos(playerid, 2308.77, -1212.94, 1049.02);
					SetPlayerFacingAngle(playerid, 359.8550);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
				}

				if (HouseInfo[alh][hInterior] == 4)
				{
					SetPlayerPos(playerid, 377.15, 1417.41, 1081.33);
					SetPlayerFacingAngle(playerid, 1.6415);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 15);
				}

				if (HouseInfo[alh][hInterior] == 5)
				{
					SetPlayerPos(playerid, 446.99, 1397.07, 1084.30);
					SetPlayerFacingAngle(playerid, 359.1347);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 2);
				}

				if (HouseInfo[alh][hInterior] == 6)
				{
					SetPlayerPos(playerid, 2237.59, -1081.64, 1049.02);
					SetPlayerFacingAngle(playerid, 89.1791);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 2);
				}

				if (HouseInfo[alh][hInterior] == 7)
				{
					SetPlayerPos(playerid, 260.85, 1237.24, 1084.26);
					SetPlayerFacingAngle(playerid, 359.8550);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 9);
				}

				if (HouseInfo[alh][hInterior] == 8)
				{
					SetPlayerPos(playerid, 2807.48, -1174.76, 1025.57);
					SetPlayerFacingAngle(playerid, 89.4224);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 8);
				}

				if (HouseInfo[alh][hInterior] == 9)
				{
					SetPlayerPos(playerid, 83.03, 1322.28, 1083.87);
					SetPlayerFacingAngle(playerid, 0.7248);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 9);
				}

				if (HouseInfo[alh][hInterior] == 10)
				{
					SetPlayerPos(playerid, 2495.98, -1692.08, 1014.74);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 3);
				}

				if (HouseInfo[alh][hInterior] == 11)
				{
					SetPlayerPos(playerid, -42.5628, 1405.5011, 1084.4297);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 8);
				}

				if (HouseInfo[alh][hInterior] == 12)
				{
					SetPlayerPos(playerid, -68.7704, 1352.9250, 1080.2109);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
				}

				if (HouseInfo[alh][hInterior] == 13)
				{
					SetPlayerPos(playerid, 83.0758, 1322.2808, 1083.8662);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 9);
				}

				if (HouseInfo[alh][hInterior] == 14)
				{
					SetPlayerPos(playerid, 140.2254, 1365.9796, 1083.8594);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
				}

				if (HouseInfo[alh][hInterior] == 15)
				{
					SetPlayerPos(playerid, 223.1015, 1287.0764, 1082.1406);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
				}

				if (HouseInfo[alh][hInterior] == 16)
				{
					SetPlayerPos(playerid, 225.8726, 1021.4523, 1084.0177);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 7);
				}

				if (HouseInfo[alh][hInterior] == 17)
				{
					SetPlayerPos(playerid, 226.2984, 1114.3319, 1080.9929);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
				}

				if (HouseInfo[alh][hInterior] == 18)
				{
					SetPlayerPos(playerid, 261.0904, 1284.2944, 1080.2578);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
				}

				if (HouseInfo[alh][hInterior] == 19)
				{
					SetPlayerPos(playerid, 309.0916, 313.6412, 1003.3047);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
				}

				if (HouseInfo[alh][hInterior] == 20)
				{
					SetPlayerPos(playerid, 318.5932, 1114.4792, 1083.8828);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
				}

				if (HouseInfo[alh][hInterior] == 21)
				{
					SetPlayerPos(playerid, 327.9635, 1477.7430, 1084.4375);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 15);
				}

				if (HouseInfo[alh][hInterior] == 22)
				{
					SetPlayerPos(playerid, 1260.6464, -785.4418, 1091.9063);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
				}

				if (HouseInfo[alh][hInterior] == 23)
				{
					SetPlayerPos(playerid, 2468.8413, -1698.4177, 1013.5078);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 2);
				}

				if (HouseInfo[alh][hInterior] == 24)
				{
					SetPlayerPos(playerid, 2196.8506, -1204.2477, 1049.0234);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
				}

				if (HouseInfo[alh][hInterior] == 25)
				{
					SetPlayerPos(playerid, 2270.3855, -1210.4730, 1047.5625);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 10);
				}

				if (HouseInfo[alh][hInterior] == 26)
				{
					SetPlayerPos(playerid, 2324.5479, -1149.5146, 1050.7101);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 12);
				}
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/searchtrash", true) == 0)
	{
		if (GetTrashCan(playerid) == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си до кофа за боклук!");
		new trashCanID = GetTrashCan(playerid);
		if (TrashCanInfo[trashCanID][trashID] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Кофата за боклук е празна!");
		new trashCanItemID = TrashCanInfo[trashCanID][trashID];
		new string256[256];
		format(string256, 256, "Ти откри {40BF00}%s {ffffff}в кофата за боклук!", GetTrashItemName(trashCanItemID));
		SendClientMessage(playerid, COLOR_WHITE, string256);
		GiveTrashItem(playerid, trashCanItemID);
		TrashCanInfo[trashCanID][trashID] = 0;
		trashCanTimer[trashCanID] = 20 * 60;
		return 1;
	}

	if (strcmp(cmd, "/fish", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 2102.1777, -104.5141, 2.2685) ||
			IsPlayerInRangeOfVehicle(playerid, boatFish[0], 10) ||
			IsPlayerInRangeOfVehicle(playerid, boatFish[1], 10))
		{
			if (PlayerTimerInfo[playerid][ptRevieveTimer] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да те вдигнат, за да метнеш въдицата!");
			if (PlayerInfo[playerid][pVudica] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате въдица.");
			if (PlayerInfo[playerid][pStruv] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате стръв.");
			if (GetPlayerFreeFishSlot(playerid) == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш свободно място в слотовете за риба!");
			TogglePlayerControllable(playerid, 0);
			SetPlayerAttachedObject(playerid, 2, 18632, 1, -0.091109, 0.255484, 0.018155, 94.362060, 312.328125, 190.418655, 1.000000, 1.000000, 1.000000);
			ApplyAnimationWithCondition(playerid, "SAMP", "FishingIdle", 3.0, 1, 1, 0, 0, 0);
			ApplyAnimationWithCondition(playerid, "SAMP", "FishingIdle", 3.0, 1, 1, 0, 0, 0);
			SendClientMessage(playerid, COLOR_FISH, "Вие хвърлихте въдицата, нека видим какво ще хванете.");
			new string256[256];
			format(string256, 256, "%s взе въдицата и я хвърли.", accountNickname);
			SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
			PlayerInfo[playerid][pStruv] -= 1;
			PlayerTimerInfo[playerid][ptFishTimer] = 6;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте на мястото за риболов");
		}

		return 1;
	}

	if (strcmp(cmd, "/destroyprivateveh", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/destroyprivateveh [private veh id]");
			return 1;
		}

		new privateID;
		privateID = strval(tmp);
		if (privateID < 0) return SendClientMessage(playerid, COLOR_GRAD1, "ID-тата на личните превозни средства започват от 0 нагоре!");
		if (PrivateVehInfo[privateID][vVehID] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Грешно ID на лично превозно средство!");
		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете превозното средство в този Virtual World!");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете превозното средство в този Interior!");
		new string256[256];
		format(string256, 256, "Вие унищожихте %d ID Лично превозно средство!", privateID);
		SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
		new hisVehID = privateID;
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		PrivateVehInfo[hisVehID][vVehID] = 0;
		if (IsValidVehicle(vehicleid))
		{
			DestroyVehicle(vehicleid);
		}

		RestartPrivateTuneInfo(hisVehID);
		format(string256, 256, "/PrivateVehs/%d.ini", hisVehID);
		dini_Remove(string256);
		return 1;
	}

	if (strcmp(cmd, "/spawnprivate", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/spawnprivate [private veh id]");
			return 1;
		}

		new privateID;
		privateID = strval(tmp);
		if (privateID < 0) return SendClientMessage(playerid, COLOR_GRAD1, "ID-тата на личните превозни средства започват от 0 нагоре!");
		if (PrivateVehInfo[privateID][vVehID] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Грешно ID на лично превозно средство!");
		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете превозното средство в този Virtual World!");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете превозното средство в този Interior!");
		new string256[256];
		format(string256, 256, "Вие телепортирахте %d ID Лично превозно средство до себе си!", privateID);
		SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
		new hisVehID = privateID;
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		SetVehiclePos(vehicleid, X, Y, Z);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		return 1;
	}

	if (strcmp(cmd, "/vehobjects", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		new isPrivate = VehicleInfo[vehicleid][vIsPrivate];
		if (isPrivate == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в лично превозно средство!");
		new string2230[512];
		new string2230result[1500];
		for (new i = 0; i < 20; i++)
		{
			new specialIndex = VehicleInfo[vehicleid][vPrivateID];
			new fakeSlot = i + 1;
			if (PrivateVehInfo[specialIndex][vVehObject][i] != 0)
			{
				new objID = PrivateVehInfo[specialIndex][vVehObject][i];
				format(string2230, 512, "{FFFFFF}Слот %d {FF0000}[Зает] | Премахни (ID: %d)\n", fakeSlot, objID);
				strcat(string2230result, string2230);
			}
			else
			{
				format(string2230, 512, "{FFFFFF}Слот %d {40BF00}[Свободен] | Добави\n", fakeSlot);
				strcat(string2230result, string2230);
			}
		}

		ShowPlayerDialog(playerid, DIALOG_VEHOBJECTS, DIALOG_STYLE_LIST, "Vehicle Objects:", string2230result, "Избери", "Излез");
		return 1;
	}

	if (strcmp(cmd, "/documents", true) == 0 || strcmp(cmd, "/docs", true) == 0)
	{
		new string2230[512];
		new string2230result[1500];
		format(string2230, 512, "Напиши документ\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "Виж своите документи\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "Подай копие документ\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "Изхвърли документ");
		strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, DIALOG_DOCUMENTS, DIALOG_STYLE_LIST, "Documents:", string2230result, "Избери", "Излез");
		return 1;
	}

	if (strcmp(cmd, "/myfish", true) == 0)
	{
		new string2230[512];
		new string2230result[1500];
		for (new i = 1; i < 11; i++)
		{
			new fishSlotID = PlayerInfo[playerid][pFishSlot][i];
			new fishWeight = PlayerInfo[playerid][pFishWeight][i];
			if (fishSlotID == 0)
			{
				format(string2230, 512, "{FFFFFF}Слот %d {FFFF00}[Empty]\n", i);
				strcat(string2230result, string2230);
			}
			else if (fishSlotID != 0)
			{
				format(string2230, 512, "{FFFFFF}Слот %d {FFFF00}[%s - %d Kg]\n", i, GetFishName(fishSlotID), fishWeight);
				strcat(string2230result, string2230);
			}
		}

		ShowPlayerDialog(playerid, DIALOG_MYFISH, DIALOG_STYLE_LIST, "Fish:", string2230result, "Избери", "Излез");
		return 1;
	}

	if (strcmp(cmd, "/myclothes", true) == 0)
	{
		if (isPlayerInHisHouse(playerid) == 0 && !IsPlayerInClothingShop(playerid))
		{
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Clothes", "{FF0000}Трябва да си в твоя къща или в магазин за дрехи за да си смениш облеклото!", "Излез", "");
			return 1;
		}

		new string256[256];
		format(string256, 256, "{FFFFFF}Смени си дрехите\nИзхвърли дрехи");
		ShowPlayerDialog(playerid, DIALOG_MY_CLOTHES, DIALOG_STYLE_LIST, "Clothes", string256, "Напред", "Излез");
		return 1;
	}

	if (strcmp(cmd, "/myitems", true) == 0)
	{
		new string256[256];
		format(string256, 256, "{FFFFFF}Шапки\n{FFFFFF}Часовници\n{FFFFFF}Маски\n{FFFFFF}Очила\n{ff0000}Премахни всички");
		ShowPlayerDialog(playerid, DIALOG_MY_ITEMS, DIALOG_STYLE_LIST, "ITEMS", string256, "Напред", "Излез");
		return 1;
	}

	if (strcmp(cmd, "/buyfood", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 377.3176, -67.4344, 1001.5078) || IsPlayerInRangeOfPoint(playerid, 4, 369.6004, -6.0170, 1001.8589) ||
			IsPlayerInRangeOfPoint(playerid, 4, 450.4710, -83.6515, 999.5547))
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Храни\nНапитки");
			ShowPlayerDialog(playerid, DIALOG_BUYFOODORDRINK, DIALOG_STYLE_LIST, "STORE", string256, "Напред", "Излез");
		}
		else if (IsPlayerInRangeOfPoint(playerid, 4, 2434.4692, 1005.0504, 10.8203) || IsPlayerInRangeOfPoint(playerid, 4, 2153.7478, 981.3260, 10.8125) ||
			IsPlayerInRangeOfPoint(playerid, 4, 2034.2792, 1526.3484, 10.8203))
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Храни\nНапитки");
			ShowPlayerDialog(playerid, DIALOG_BUYFOODORDRINK, DIALOG_STYLE_LIST, "STORE", string256, "Напред", "Излез");
		}

		return 1;
	}

	if (strcmp(cmd, "/buyitem", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 203.9277, -43.2615, 1001.8047) || IsPlayerInRangeOfPoint(playerid, 4, 207.1997, -129.1777, 1003.5078))
		{
			OpenBuyItems(playerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в магазин за дрехи!");
		}

		return 1;
	}

	if (strcmp(cmd, "/buyclothes", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 203.9277, -43.2615, 1001.8047) || IsPlayerInRangeOfPoint(playerid, 4, 207.1997, -129.1777, 1003.5078))
		{
			OpenBuyClothes(playerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в магазин за дрехи!");
		}

		return 1;
	}

	if (strcmp(cmd, "/smoke", true) == 0)
	{
		if (PlayerInfo[playerid][pCiggs] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате цигари в себе си.");
		PlayerInfo[playerid][pCiggs] -= 1;
		new string256[256];
		format(string256, 256, "* %s запали цигара и започна да пуши", RealName(playerid));
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		SpecialActionWithCondition(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
		return 1;
	}

	if (strcmp(cmd, "/sellfish", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 1782.3506, 1665.1987, -12.8913) && GetPlayerInterior(playerid) == 1)
		{
			new string2230[512];
			new string2230result[1500];
			new bool: haveFish = false;
			format(string2230, 512, "{FFFFFF}Fish\t{FFFFFF}Weight\t{FFFFFF}Price\n");
			strcat(string2230result, string2230);
			for (new i = 1; i < 11; i++)
			{
				new fishSlotID = PlayerInfo[playerid][pFishSlot][i];
				new fishWeight = PlayerInfo[playerid][pFishWeight][i];
				new fishPrice = GetPlayerFishPrice(playerid, i);
				if (fishSlotID != 0)
				{
					format(string2230, 512, "{FFFFFF}%s\t{FFFFFF}%d Кг\t{FFFFFF}$%d\n", GetFishName(fishSlotID), fishWeight, fishPrice);
					strcat(string2230result, string2230);
					haveFish = true;
				}
			}

			if (haveFish == false)
			{
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Fishing Store", "Ти нямаш риба, която да продадеш!", "Излез", "");
				return 1;
			}

			ShowPlayerDialog(playerid, DIALOG_SELL_FISH, DIALOG_STYLE_TABLIST_HEADERS, "Fishing Store", string2230result, "Избери", "Излез");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте в риболовен магазин!");
		}

		return 1;
	}

	if (strcmp(cmd, "/sellcrate", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 1782.3506, 1665.1987, -12.8913) && GetPlayerInterior(playerid) == 1)
		{
			new totalFishPrice;
			for (new i = 1; i < 11; i++)
			{
				totalFishPrice += GetPlayerFishPrice(playerid, i);
			}

			if (totalFishPrice == 0)
			{
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Fishing Store", "Вие нямате риба, която да продадете!", "Излез", "");
				return 1;
			}

			new string556[556];
			format(string556, 556, "{FFFFFF}Можете да продадете всичката си риба за {40BF00}$%d\n{FFFFFF}Ако наистина искате да продадете рибата си, натиснете 'Продай' отдолу!", totalFishPrice);
			ShowPlayerDialog(playerid, DIALOG_SELL_FISHCRATE, DIALOG_STYLE_MSGBOX, "Fishing Store", string556, "Продвай", "Излез");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте в риболовен магазин!");
		}

		return 1;
	}

	/*
    		if(strcmp(cmd, "/sticker", true) == 0)
    		{
    		if(IsPlayerInRangeOfPoint(playerid, 6, 1929.0383,-1861.0433,15.4305))
    		{
    		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в превозно средство!");
    		if(IsPlayerInHisPrivateVeh(playerid)==0) return SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в твое лично превозно средство!");
    		if(vehicleStickerPlayer[playerid]!=-1) return SendClientMessage(playerid,COLOR_GRAD1,"В момента намествате друг стикер!");
      		if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 481
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 509
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 510
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 481
			//motors
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 462
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 463
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 521
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 423
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 522
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 581
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 586
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 461
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 448
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 468
			//flying
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 476
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 448
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 497
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 501
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 511
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 519
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 520
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 548
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 553
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 465
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 464
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 469
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 563
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 577
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 592
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 593
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 417
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 447
			|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 425)
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Това превозно средство не може да има стикер!");
			return 1;
			}

    		new string556[556];
    		format(string556,556,"{FFFFFF}Добре дошли в гаража за {FFFF00}стикери{FFFFFF}!\nНапишете текста на стикера, който искате да поставите!\n\nЦена: {40BF00}$1930");
			ShowPlayerDialog(playerid,DIALOG_BUYSTICKER,DIALOG_STYLE_INPUT,"Sticker Store",string556,"Next","Close");
    		}
    		else
    		{
    		SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в гаража за стикери!");
    		}

    		return 1;
    		}

    		*/
	/*
    		if(strcmp(cmd, "/hospital", true) == 0)
    		{
    		if(IsPlayerInRangeOfPoint(playerid, 3, 1388.7371,-42.2511,1001.6016) && GetPlayerVirtualWorld(playerid) == 1
		 	|| IsPlayerInRangeOfPoint(playerid, 3, 1388.6643,-27.3326,1001.6016) && GetPlayerVirtualWorld(playerid) == 1)
    		{
    		if(PlayerTimerInfo[playerid][ptRevieveTimer]>0) return SendClientMessage(playerid,COLOR_GRAD1,"В момента си пред припадък, трябва първо някой да те вдигне!");
    		new Float:hisHealth;
    		GetPlayerHealth(playerid,hisHealth);
    		if(hisHealth>=100.0) return SendClientMessage(playerid,COLOR_GRAD1,"Вие в момента сте напълно здрав!");
    		if(PlayerTimerInfo[playerid][ptHospitalCmd]>0) return SendClientMessage(playerid,COLOR_GRAD1,"В момента ви лекуват!");
    		if(PlayerInfo[playerid][pCash] < 35) return SendClientMessage(playerid,COLOR_GRAD1,"Трябват ви $35 за да бъдете излекуван!");
    		PlayerTimerInfo[playerid][ptHospitalCmd] = 9;
    		TogglePlayerControllable(playerid, 0);
    		GivePlayerCash(playerid,-35);
    		SendClientMessage(playerid,COLOR_MEDIC,"Вие бяхте приет в болницата! Изчакайте малко за да ви излекуват!");
    		if(IsPlayerInRangeOfPoint(playerid, 3, 1388.7371,-42.2511,1001.6016))
    		{
    		SetPlayerPos(playerid,1388.7371,-42.2511,1001.6016);
    		}
    		else if(IsPlayerInRangeOfPoint(playerid, 3, 1388.6643,-27.3326,1001.6016))
    		{
    		SetPlayerPos(playerid,1388.6643,-27.3326,1001.6016);
    		}

    		ApplyAnimationWithCondition(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
    		}
    		else
    		{
    		SendClientMessage(playerid,COLOR_GRAD1,"Трябва да сте на леглото в болницата!");
    		}

    		return 1;
    		}

    		*/
	if (strcmp(cmd, "/neon", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 11.0, 1880.8676, -1793.3455, 13.8777))
		{
			if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в превозно средство!");
			if (IsPlayerInHisPrivateVeh(playerid) == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в твое лично превозно средство!");
			if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 510 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 481
				//motors
				||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 462 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 463 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 521 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 423 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 522 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 581 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 586 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 461 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 448 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 468
				//flying
				||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 476 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 448 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 497 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 501 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 511 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 519 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 520 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 548 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 553 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 465 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 464 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 469 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 563 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 577 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 592 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 593 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 417 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 447 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 425)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не може да има неон!");
				return 1;
			}

			new string556[556];
			format(string556, 556, "{FFFFFF}Червен неон: {40BF00}$14230\n{FFFFFF}Син неон: {40BF00}$14430\n{FFFFFF}Зелен неон: {40BF00}$14630\n{FFFFFF}Жълт неон: {40BF00}$14830\n{FFFFFF}Розов неон: {40BF00}$141230\n{FFFFFF}Бял неон: {40BF00}$141430");
			ShowPlayerDialog(playerid, DIALOG_BUYNEON, DIALOG_STYLE_LIST, "Neon Store", string556, "Buy", "Close");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в гаража за неон!");
		}

		return 1;
	}

	if (strcmp(cmd, "/buyveh", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3, 703.5286, -514.7781, -5.6289) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 501)
		{
			buyingVehStoreIndex[playerid] = 0;
			inBuyVehVW[playerid] = 501;
			new newVirtualWorld = playerid + 1;
			SetPlayerVirtualWorld(playerid, newVirtualWorld);
			SetPlayerPos(playerid, 705.1166, -518.0377, -5.6684);
			SetPlayerCameraPos(playerid, 701.0486, -514.7349, -5.6289);
			SetPlayerCameraLookAt(playerid, 697.3192, -514.7677, -5.6300);
			new string556[556];
			new vehName[70];
			new vehID = 0;
			new vehModelID = sellBikeFromStoreInfo[vehID][sbVehModel];
			format(vehName, 70, "%s", sellBikeFromStoreInfo[vehID][sbVehName]);
			CreateVehicleForBuying(playerid, vehModelID);
			new vehPrice = sellBikeFromStoreInfo[vehID][sbVehPrice];
			new vehLevel = sellBikeFromStoreInfo[vehID][sbVehLevel];
			format(string556, 556, "{FFFFFF}Vehicle Name: %s\nPrice: {40BF00}$%d\n{FFFFFF}Level: {FFFF00}%d", vehName, vehPrice, vehLevel);
			ShowPlayerDialog(playerid, DIALOG_BUYBIKE, DIALOG_STYLE_MSGBOX, "Bike Store", string556, "Buy", "Next");
			buyVehFromStoreIndex[playerid] = 0;
		}
		else if (IsPlayerInRangeOfPoint(playerid, 3, 2131.8313, -1150.7656, 24.1215) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			buyingVehStoreIndex[playerid] = 1;
			inBuyVehVW[playerid] = 0;
			new newVirtualWorld = playerid + 1;
			SetPlayerVirtualWorld(playerid, newVirtualWorld);
			SetPlayerPos(playerid, 2122.3015, -1135.6859, 25.3364);
			SetPlayerCameraPos(playerid, 2122.3015, -1135.6859, 25.3364);
			SetPlayerCameraLookAt(playerid, 2124.2815, -1128.2109, 25.2091);
			new string556[556];
			new vehName[70];
			new vehID = 0;
			new vehModelID = sellCarFromStoreInfo[vehID][sbVehModel];
			format(vehName, 70, "%s", sellCarFromStoreInfo[vehID][sbVehName]);
			CreateVehicleForBuying(playerid, vehModelID);
			new vehPrice = sellCarFromStoreInfo[vehID][sbVehPrice];
			new vehLevel = sellBikeFromStoreInfo[vehID][sbVehLevel];
			format(string556, 556, "{FFFFFF}Vehicle Name: %s\nPrice: {40BF00}$%d\n{FFFFFF}Level: {FFFF00}%d", vehName, vehPrice, vehLevel);
			ShowPlayerDialog(playerid, DIALOG_BUYCAR, DIALOG_STYLE_MSGBOX, "Veh Store", string556, "Buy", "Next");
			buyVehFromStoreIndex[playerid] = 0;
		}

		return 1;
	}

	if (strcmp(cmd, "/barrier", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 2.0, 1583.2211, -1637.3295, 13.3905))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LSPD!");
			lspdGateDoorTimer = 10;
			MoveDynamicObject(lspdGateDoor, 1581.937133, -1637.983764, 9.981795, 2.0, 0.000000, 0.000000, -87.099975);
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
		}

		if (IsPlayerInRangeOfPoint(playerid, 10.0, 1542.8047, -1627.7461, 13.3828))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LSPD!");
			lspdPortTimer = 10;
			MoveDynamicObject(lspdPort, 1544.74634, -1630.74500, 13.01674, 2, 1.00000, 11.0000, -89.20010);
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
		}

		//LV Army - open
		if (IsPlayerInRangeOfPoint(playerid, 10.0, 136.5198, 1941.1293, 19.3139))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Las Venturas Army!");
			armyLvPort1Timer = 10;
			MoveDynamicObject(armyLvPort1, 135.142593, 1941.479492, 15.087491, 5.00, 0, 0, 0);
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
		}

		if (IsPlayerInRangeOfPoint(playerid, 10.0, 285.2253, 1820.8843, 17.6406))

		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Las Venturas Army!");
			armyLvPort2Timer = 10;
			MoveDynamicObject(armyLvPort2, 285.723236, 1820.534057, 13.034932, 5.00, 0, 0, 89.800071);
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
		}

		//LV Army - close

		//LS Army - open
		if (IsPlayerInRangeOfPoint(playerid, 10.0, 837.3369, -2074.3181, 12.8527))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Los Santos Army!");
			armyLsPort1Timer = 10;
			MoveDynamicObject(armyLsPort1, 836.487792, -2069.757812, 6.618954, 5.00, 0, 0, 0);
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
		}

		if (IsPlayerInRangeOfPoint(playerid, 10.0, 837.2773, -2030.8582, 12.8672))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Los Santos Army!");
			armyLsPort2Timer = 10;
			MoveDynamicObject(armyLsPort2, 836.365417, -2027.369750, 6.646684, 5.00, 0, 0, 0);
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
		}

		//LS Army - close

		if (IsPlayerInRangeOfPoint(playerid, 10.0, 1588.2328, -1635.5154, 13.3828))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LSPD!");
			lspdGateTimer = 10;
			MoveDynamicObject(lspdGate, 1588.6683, -1638.3994, 10.2556, 2, 0.0000, 0.0000, -90.6001);
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
		}

		return 1;
	}

	if (strcmp(cmd, "/getgun", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 5.0, 1556.4564, -1688.1058, 2113.0349) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 6)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на LSPD и нямате право на тези оръжия!");
			ShowPlayerDialog(playerid, DIALOG_GUNMACHINE_POLICE, DIALOG_STYLE_LIST, "{B37D57}Police's Guns:", "M4 (автомат)\nDeagle (пистолет)\nБухалка", "Избери", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 5.0, 1590.1691, -1682.0958, 2982.2700) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 6)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_LVPD) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на LVPD и нямате право на тези оръжия!");
			ShowPlayerDialog(playerid, DIALOG_GUNMACHINE_POLICE, DIALOG_STYLE_LIST, "{B37D57}Police's Guns:", "M4 (автомат)\nDeagle (пистолет)\nБухалка", "Избери", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 5.0, 880.5675, -2255.6067, 12.8527) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на LS Army и нямате право на тези оръжия!");
			ShowPlayerDialog(playerid, DIALOG_GUNMACHINE_ARMY, DIALOG_STYLE_LIST, "{B37D57}Army's Guns:", "M4 (автомат)\nDeagle (пистолет)\nБухалка", "Избери", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 5.0, 213.2412, 1806.7898, 17.6406) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на LV Army и нямате право на тези оръжия!");
			ShowPlayerDialog(playerid, DIALOG_GUNMACHINE_ARMY, DIALOG_STYLE_LIST, "{B37D57}Army's Guns:", "M4 (автомат)\nDeagle (пистолет)\nБухалка", "Избери", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 5.0, 1570.0121, -1691.7775, 62.1910) && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_FBI) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на FBI и нямате право на тези оръжия!");
			ShowPlayerDialog(playerid, DIALOG_GUNMACHINE_FBI, DIALOG_STYLE_LIST, "{B37D57}FBI's Guns:", "M4 (автомат)\nDeagle (пистолет)\nБухалка", "Избери", "Излез");
		}

		return 1;
	}

	if (strcmp(cmd, "/buy", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 1839.7419, -1842.2269, 34.9082) && GetPlayerInterior(playerid) == 1)
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Телефон ($2000)\n{FFFFFF}35 MB Internet ($1000)\n{FFFFFF}135 MB Internet ($2200)");
			ShowPlayerDialog(playerid, DIALOG_BUYTELENOR, DIALOG_STYLE_LIST, "TELENOR", string256, "Вземи", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 4, 1782.3506, 1665.1987, -12.8913) && GetPlayerInterior(playerid) == 1)
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Въдица ($50)\nСтръв, 10 червея ($31)");
			ShowPlayerDialog(playerid, DIALOG_BUYFISH, DIALOG_STYLE_LIST, "FISH STORE", string256, "Вземи", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 4, -22.9671, -55.6587, 1003.5469) ||
			IsPlayerInRangeOfPoint(playerid, 4, -30.7964, -29.0106, 1003.5573) ||
			IsPlayerInRangeOfPoint(playerid, 4, -22.0741, -138.6289, 1003.5469))
		{
			new string556[556];
			format(string556, 556, "{FFFFFF}Нож ($10)\n{FFFFFF}Бухалка ($15)\n{FFFFFF}Камера ($25)\n{FFFFFF}GPS ($350)\n{FFFFFF}Телефон ($2000)\nЦигари 10x ($6)\nТракер за лични коли 3x ($900)\nБилетче от лотарията\nХрани и напитки\nПърва помощ ($70)\nИнструменти за поправка на кола ($170)\nСпрей за графити ($3000)");
			ShowPlayerDialog(playerid, DIALOG_GENERALSTORE, DIALOG_STYLE_LIST, "GENERAL STORE", string556, "Вземи", "Излез");
		}

		if (IsPlayerInRangeOfPoint(playerid, 2, 1857.1810, -1874.2731, 13.4829))
		{
			new string556[556];
			format(string556, 556, "{FFFFFF}Маска за лице ($5000)\n{FFFFFF}Money Bag ($10000)\n{FFFFFF}AK-47 ($15000)\n{FFFFFF}Combat Shotgun ($16000)\n{FFFFFF}M4 ($18000)");
			ShowPlayerDialog(playerid, DIALOG_BLACKMARKET, DIALOG_STYLE_LIST, "BLACK MARKET", string556, "Вземи", "Излез");
		}

		return 1;
	}

	if (strcmp(cmd, "/epaintball", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 4) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (paintBallOpen == false)
		{
			new string256[256];
			format(string256, 256, "PaintBall: Admin %s отвори арената! Има 20 минути до края на играта!", accountNickname);
			SendClientMessageToAll(COLOR_PAINTBALL, string256);
			paintBallOpen = true;
			paintBallEndTimer = 20 * 60;
		}
		else if (paintBallOpen == true)
		{
			new string256[256];
			format(string256, 256, "PaintBall: Admin %s затвори арената!", accountNickname);
			SendClientMessageToAll(COLOR_PAINTBALL, string256);
			ClosePaintBall();
		}

		return 1;
	}

	if (strcmp(cmd, "/joinpaintball", true) == 0)
	{
		if (paintBallOpen == false) return SendClientMessage(playerid, COLOR_GRAD1, "Играта PaintBall не е отворена в момента!");
		if (!IsPlayerInRangeOfPoint(playerid, 4, PaintBall)) return SendClientMessage(playerid, COLOR_GRAD1, "Не си до входа на сградата!");
		if (inPaintBall[playerid] == true) SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си в играта PaintBall!");
		if (PlayerInfo[playerid][pPoliceDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Police смяна първо!");
		if (PlayerInfo[playerid][pFbiDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fbi смяна първо!");
		if (PlayerInfo[playerid][pTaxiDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Taxi смяна първо!");
		if (PlayerInfo[playerid][pFuelCoDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
		if (PlayerInfo[playerid][pArmyDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Army смяна първо!");
		if (PlayerInfo[playerid][pMedicDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Medic смяна първо!");
		if (PlayerInfo[playerid][pAdminDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Admin смяна първо!");
		if (PlayerInfo[playerid][pAFK] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от AFK първо!");
		if (PlayerTimerInfo[playerid][ptRevieveTimer] >= 1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти си пред припадане и не можеш да влзеш в Paintball!");
		GetPlayerHealth(playerid, beforePaintBallHealth[playerid]);
		GetPlayerArmour(playerid, beforePaintBallArmour[playerid]);
		SavePlayerAllGuns(playerid);
		GetPlayerAllGuns(playerid);
		GivePlayerPaintBallGuns(playerid);
		SetPlayerPosToPaintBall(playerid);
		SetPlayerArmour(playerid, 100);
		SetPlayerHealth(playerid, 100);
		if (IsPlayerAttachedObjectSlotUsed(playerid, 7))
		{
			RemoveArmourObject(playerid);
		}

		paintBallKills[playerid] = 0;
		TextDrawShowForPlayer(playerid, PaintBallTimerText);
		SendClientMessage(playerid, COLOR_PAINTBALL, "PaintBall: Ти влезе в играта! Използвай /leavepaintball за да излезеш!");
		new string256[256];
		format(string256, 256, "PaintBall: %s влезе в PaintBall!", GetPlayerRpName(playerid));
		SendClientMessageToAll(COLOR_PAINTBALL, string256);
		inPaintBall[playerid] = true;
		return 1;
	}

	if (strcmp(cmd, "/leavepaintball", true) == 0)
	{
		if (inPaintBall[playerid] == false) SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в играта PaintBall!");
		LeaveFromPaintBall(playerid);
		new string256[256];
		format(string256, 256, "PaintBall: %s напусна PaintBall!", GetPlayerRpName(playerid));
		SendClientMessageToAll(COLOR_PAINTBALL, string256);
		return 1;
	}

	if (strcmp(cmd, "/buyarmour", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 291.3295, -106.2229, 1001.5156) ||
			IsPlayerInRangeOfPoint(playerid, 4, 296.3936, -80.8117, 1001.5156) ||
			IsPlayerInRangeOfPoint(playerid, 4, 308.2184, -141.4642, 999.6016))
		{
			new Float: hisArmour;
			GetPlayerArmour(playerid, hisArmour);
			if (hisArmour >= 100) return SendClientMessage(playerid, COLOR_GRAD1, "Жилетката ти е заредена напълно!");
			if (PlayerInfo[playerid][pCash] < 450) return SendClientMessage(playerid, COLOR_GRAD1, "Бронята струва $450, а ти нямаш толкова!");
			SetPlayerArmour(playerid, 100);
			GivePlayerCash(playerid, -450);
			SendClientMessage(playerid, COLOR_WEAPONS, "Вие си купихте жилетка за $450!");
		}

		return 1;
	}

	if (strcmp(cmd, "/buygun", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 291.3295, -106.2229, 1001.5156) ||
			IsPlayerInRangeOfPoint(playerid, 4, 296.3936, -80.8117, 1001.5156) ||
			IsPlayerInRangeOfPoint(playerid, 4, 308.2184, -141.4642, 999.6016))
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Пистолет със заглушител, 300 патрона ($5250)\n{FFFFFF}MP5, 500 патрона ($7420)");
			ShowPlayerDialog(playerid, DIALOG_AMMUSTORE, DIALOG_STYLE_LIST, "AMMUNATION", string256, "Вземи", "Излез");
		}

		return 1;
	}

	//Fighting styles - open
	if (strcmp(cmd, "/train", true) == 0)
	{
		new level[32];
		if (!IsPlayerInRangeOfPoint(playerid, 4, 773.6641, -72.9778, 1000.6484) && !IsPlayerInRangeOfPoint(playerid, 4, 773.0745, -39.3959, 1000.6865))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в салон за да тренираш!");
			return 1;
		}

		if (IsPlayerInRangeOfPoint(playerid, 4, 773.6641, -72.9778, 1000.6484))
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/train [fighting style]");
				SendClientMessage(playerid, 0xFF8040FF, "Fighting Styles: normal $2300, grabkick $3300, boxing $4300");
				return 1;
			}

			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			if (strcmp(level, "normal", false) == 0)
			{
				if (PlayerInfo[playerid][pFightStyle] == 0)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
					return 1;
				}

				if (PlayerInfo[playerid][pCash] < 2300)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
					return 1;
				}

				SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Normal и това ти струваше $2300!");
				PlayerInfo[playerid][pFightStyle] = 0;
				GivePlayerCash(playerid, -2300);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
			}

			if (strcmp(level, "grabkick", false) == 0)
			{
				if (PlayerInfo[playerid][pFightStyle] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
					return 1;
				}

				if (PlayerInfo[playerid][pCash] < 3300)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
					return 1;
				}

				SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Grab Kick и това ти струваше $3300!");
				PlayerInfo[playerid][pFightStyle] = 1;
				GivePlayerCash(playerid, -3300);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
			}

			if (strcmp(level, "boxing", false) == 0)
			{
				if (PlayerInfo[playerid][pFightStyle] == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
					return 1;
				}

				if (PlayerInfo[playerid][pCash] < 4300)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
					return 1;
				}

				SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Boxing и това ти струваше $4300!");
				PlayerInfo[playerid][pFightStyle] = 2;
				GivePlayerCash(playerid, -4300);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
			}
		}

		if (IsPlayerInRangeOfPoint(playerid, 4, 773.0745, -39.3959, 1000.6865))
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/train [fighting style]");
				SendClientMessage(playerid, 0xFF8040FF, "Fighting Styles: kungfu $3400, elbow $5400, kneehead $6400");
				return 1;
			}

			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			if (strcmp(level, "kungfu", false) == 0)
			{
				if (PlayerInfo[playerid][pFightStyle] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
					return 1;
				}

				if (PlayerInfo[playerid][pCash] < 3400)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
					return 1;
				}

				SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Kungfu и това ти струваше $3400!");
				PlayerInfo[playerid][pFightStyle] = 3;
				GivePlayerCash(playerid, -3400);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
			}

			if (strcmp(level, "elbow", false) == 0)
			{
				if (PlayerInfo[playerid][pFightStyle] == 4)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
					return 1;
				}

				if (PlayerInfo[playerid][pCash] < 5400)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
					return 1;
				}

				SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Elbow и това ти струваше $5400!");
				PlayerInfo[playerid][pFightStyle] = 4;
				GivePlayerCash(playerid, -5400);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
			}

			if (strcmp(level, "kneehead", false) == 0)
			{
				if (PlayerInfo[playerid][pFightStyle] == 5)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти вече владееш този боен стил!");
					return 1;
				}

				if (PlayerInfo[playerid][pCash] < 6400)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари за да научиш този боен стил!");
					return 1;
				}

				SendClientMessage(playerid, 0xFF8040FF, "Ти научи боен стил Kneehead и това ти струваше $6400!");
				PlayerInfo[playerid][pFightStyle] = 5;
				GivePlayerCash(playerid, -6400);
				SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
			}
		}

		return 1;
	}

	//Fighting styles - close
	if (strcmp(cmd, "/drink", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4, 496.7184, -76.0349, 998.7578) || IsPlayerInRangeOfPoint(playerid, 4, -224.7806, 1403.9601, 27.7734))
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Бира ($5)\n{FFFFFF}Вино ($10)\n{FFFFFF}Водка ($10)");
			ShowPlayerDialog(playerid, DIALOG_DRINKSSTORE, DIALOG_STYLE_LIST, "DRINKS STORE", string256, "Вземи", "Излез");
		}

		return 1;
	}

	if (strcmp(cmd, "/logo", true) == 0)
	{
		if (serverLogoEnabled[playerid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "* Вие премахнахте логото на сървъра от екрана *");
			TextDrawHideForPlayer(playerid, ServerLogo[playerid]);
			serverLogoEnabled[playerid] = false;
		}
		else if (serverLogoEnabled[playerid] == false)
		{
			SendClientMessage(playerid, COLOR_WHITE, "* Вие сложихте логото на сървъра на екрана *");
			TextDrawShowForPlayer(playerid, ServerLogo[playerid]);
			serverLogoEnabled[playerid] = true;
		}

		return 1;
	}

	if (strcmp(cmd, "/time", true) == 0)
	{
		if (timeTextEnabled[playerid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "* Вие премахнахте вашия часовника и дата от екрана *");
			TextDrawHideForPlayer(playerid, Clock[playerid]);
			timeTextEnabled[playerid] = false;
		}
		else if (timeTextEnabled[playerid] == false)
		{
			SendClientMessage(playerid, COLOR_WHITE, "* Вие сложихте вашия часовник и дата на екрана *");
			TextDrawShowForPlayer(playerid, Clock[playerid]);
			timeTextEnabled[playerid] = true;
		}

		return 1;
	}

	if (strcmp(cmd, "/givekeys", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givekeys [playerid] [vehid] [color1] [color2]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givekeys [playerid] [vehid] [color1] [color2]");
			return 1;
		}

		new car;
		car = strval(tmp);
		if (car < 400 || car > 611)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Номерата на превозните средства трябва да са от 400 до 612!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givekeys [playerid] [vehid] [color1] [color2]");
			return 1;
		}

		new color1;
		color1 = strval(tmp);
		if (color1 < 0 || color1 > 255)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Номерата на цветовете трябва да са от 0 до 255!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givekeys [playerid] [vehid] [color1] [color2]");
			return 1;
		}

		new color2;
		color2 = strval(tmp);
		if (color2 < 0 || color2 > 255)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Номерата на цветовете трябва да са от 0 до 255!");
			return 1;
		}

		if (GetPrivateVehsNumber(giveplayerID) >= 3) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът няма свободен слот за лични превози!");
		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		new string256[256];
		format(string256, 256, "Ти даде личен превоз на %s!", giveplayerIDNickname);
		SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
		format(string256, 256, "Ти получи личен превоз от %s!", accountNickname);
		SendClientMessage(giveplayerID, COLOR_PRIVATEVEH, string256);
		//create and give veh - open
		new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
		format(PrivateVehInfo[unusedPrivateVehID][vOwnerName], 256, giveplayerIDNickname);
		new freeSlot = GetPlayerPrivateVehFreeSlot(giveplayerID);
		new realFreeSlot = (freeSlot + 1);
		format(string256, 256, "Превозното ви средство е в слот {ffffff}%d.", realFreeSlot);
		SendClientMessage(giveplayerID, COLOR_PRIVATEVEH, string256);
		PlayerInfo[giveplayerID][pPrivateVeh][freeSlot] = unusedPrivateVehID;
		PrivateVehInfo[unusedPrivateVehID][vOwner] = 1;
		PrivateVehInfo[unusedPrivateVehID][vVehID] = car;	//goto
		PrivateVehInfo[unusedPrivateVehID][vVehC1] = color1;
		PrivateVehInfo[unusedPrivateVehID][vVehC2] = color2;
		PrivateVehInfo[unusedPrivateVehID][vVehPaintJob] = -1;
		PrivateVehInfo[unusedPrivateVehID][vLocked] = 1;
		DestroyVehicle(PrivateVehInfo[unusedPrivateVehID][vVeh]);
		PrivateVehInfo[unusedPrivateVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[unusedPrivateVehID][vVehID], PrivateVehInfo[unusedPrivateVehID][vVehX], PrivateVehInfo[unusedPrivateVehID][vVehY], PrivateVehInfo[unusedPrivateVehID][vVehZ], PrivateVehInfo[unusedPrivateVehID][vVehA], PrivateVehInfo[unusedPrivateVehID][vVehC1], PrivateVehInfo[unusedPrivateVehID][vVehC2], RESPAWN_VEHS_SECONDS);
		new vehicle = PrivateVehInfo[unusedPrivateVehID][vVeh];
		VehicleInfo[vehicle][vPrivateID] = unusedPrivateVehID;
		VehicleInfo[vehicle][vIsPrivate] = 1;
		SavePrivateVehicle(unusedPrivateVehID);
		unusedPrivateVehID++;
		//PlayerInfo[giveplayerID][pPrivateVehs]+=1;
		Inventory_Add(giveplayerID, "Ключове за кола", 11746, 1);
		PlayerInfo[giveplayerID][pPrivateVehFreeSlot] += 1;
		if (PlayerInfo[giveplayerID][pCarGetPast] == 0) PlayerInfo[giveplayerID][pCarGetPast] = 1;
		SendClientMessage(giveplayerID, COLOR_PRIVATEVEH, "Използвайте {ffffff}/getmycar {BFFF80}за да пуснете превозното си средство до автосалона!");
		SendClientMessage(giveplayerID, COLOR_PRIVATEVEH, "За да видите всички команди, отворете /help >[Превозни средства]");
		//create and give veh - close

		LinkVehicleToInterior(vehicle, GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(vehicle, GetPlayerVirtualWorld(playerid));
		SetVehiclePos(vehicle, X, Y, Z);
		PutPlayerInVehicle(playerid, vehicle, 0);
		new vehModel = GetVehicleModel(vehicle);
		if (IsNoFuelVehicle(vehModel) == 0)
		{
			ToggleEngine(vehicle, VEHICLE_PARAMS_OFF);
		}

		return 1;
	}

	if (strcmp(cmd, "/veh", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 4)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/veh [vehid] [color1] [color2]");
			return 1;
		}

		new car;
		car = strval(tmp);
		if (car < 400 || car > 611)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Номерата на превозните средства трябва да са от 400 до 612!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/veh [carid] [color1] [color2]");
			return 1;
		}

		new color1;
		color1 = strval(tmp);
		if (color1 < 0 || color1 > 255)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Номерата на цветовете трябва да са от 0 до 255!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/veh[carid] [color1] [color2]");
			return 1;
		}

		new color2;
		color2 = strval(tmp);
		if (color2 < 0 || color2 > 255)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Номерата на цветовете трябва да са от 0 до 255!");
			return 1;
		}

		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		new carid = CreateVehicle(car, X, Y, Z, 0.0, color1, color2, RESPAWN_VEHS_SECONDS);
		LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
		PutPlayerInVehicle(playerid, carid, 0);
		adminVeh[carid] = true;
		new vehModel = GetVehicleModel(carid);
		if (IsNoFuelVehicle(vehModel) == 0)
		{
			ToggleEngine(carid, VEHICLE_PARAMS_OFF);
		}

		new string256[256];
		format(string256, 256, "Вие създадохте превозно средство с ID %d", GetPlayerVehicleID(playerid));
		SendClientMessage(playerid, COLOR_LIGHTPURPLE, string256);
		return 1;
	}

	if (strcmp(cmd, "/givelevel", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givelevel [ID на играч] [level]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new level = strval(tmp);
			if (level < 1 || level > 1000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Можеш да дадеш между 1 и 1000 Levels наведнъж.");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти получи %d Level от %s", level, playeridNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN, string256);
			format(string256, 256, "Ти даде %d Level на %s", level, giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_ADMIN, string256);
			GivePlayerLevel(giveplayerID, level);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/giveexp", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/giveexp [ID на играч] [exp]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/giveexp [ID на играч] [exp]");
				return 1;
			}

			new exp = strval(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти получи %d Exp от %s", exp, playeridNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN, string256);
			format(string256, 256, "Ти даде %d Exp на %s", exp, giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_ADMIN, string256);
			GivePlayerExp(giveplayerID, exp);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/settospawn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/settospawn [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти беше RESPAWN-нат от администратор %s", playeridNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN, string256);
			format(string256, 256, "Ти RESPAWN-на %s", giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_ADMIN, string256);
			SetToSpawn(giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/akill", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/akill [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти беше убит от администратор %s", playeridNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN, string256);
			format(string256, 256, "Ти уби %s", giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_ADMIN, string256);
			SetPlayerHealth(giveplayerID, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/clearchat", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				ClearChatBig(i);
			}

			GetPlayerName(playerid, accountNickname, 25);
			new string256[256];
			format(string256, 256, "Чатът на сървъра беше изтрит от %s", accountNickname);
			SendClientMessageToAll(COLOR_WHITE, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setworld", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setworld [ID на играч] [world]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new world = strval(tmp);
			if (world < 0 || world > 10000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Virtual Worlds са между 0 и 10000.");
				return 1;
			}

			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти беше сложен в Virtual World ID %d от %s", world, playeridNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN, string256);
			format(string256, 256, "Ти сложи Virtual World ID %d на %s", world, giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_ADMIN, string256);
			SetPlayerVirtualWorld(giveplayerID, world);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setint", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setint [ID на играч] [interior]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new interior = strval(tmp);
			if (interior < 0 || interior > 10000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Interiors са между 0 и 10000.");
				return 1;
			}

			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти беше сложен в Interior ID %d от %s", interior, playeridNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN, string256);
			format(string256, 256, "Ти сложи Interior ID %d на %s", interior, giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_ADMIN, string256);
			SetPlayerInterior(giveplayerID, interior);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	//
	if (strcmp(cmd, "/disarm", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/disarm [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new string256[256];
				ResetPlayerWeapons(giveplayerID);
				format(string256, 256, "%s взе твоите оръжия!", GetAccountNickname(playerid));
				SendClientMessage(giveplayerID, COLOR_ADMIN, string256);
				format(string256, 256, "Ти взе оръжията на %s !", GetAccountNickname(giveplayerID));
				SendClientMessage(playerid, COLOR_ADMIN, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givegun", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givegun [playerid] [weaponid] [ammount]");
				SendClientMessage(playerid, 0x40BF00FF, "____________________________________________");
				SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
				SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
				SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
				SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
				SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
				SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
				SendClientMessage(playerid, 0x40BF00FF, "____________________________________________");
				return 1;
			}

			new level;
			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (!strlen(tmp) || level == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givegun [playerid] [weaponid] [ammount]");
				SendClientMessage(playerid, 0x40BF00FF, "____________________________________________");
				SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
				SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
				SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
				SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
				SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
				SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
				SendClientMessage(playerid, 0x40BF00FF, "____________________________________________");
				return 1;
			}

			if (level > 46)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Посоченото ID оръжие не съществува!");
				return 1;
			}

			tmp = strtok(cmdtext, idx);
			new ammount = strval(tmp);
			if (!strlen(tmp) || ammount == 0)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givegun [playerid] [weaponid] [ammount]");
				SendClientMessage(playerid, 0x40BF00FF, "____________________________________________");
				SendClientMessage(playerid, 0xBFC0C2FF, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
				SendClientMessage(playerid, 0xBFC0C2FF, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
				SendClientMessage(playerid, 0xBFC0C2FF, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
				SendClientMessage(playerid, 0xBFC0C2FF, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9 33: Country Rifle");
				SendClientMessage(playerid, 0xBFC0C2FF, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
				SendClientMessage(playerid, 0xBFC0C2FF, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
				SendClientMessage(playerid, 0x40BF00FF, "____________________________________________");
				return 1;
			}

			if (ammount < 1)
			{
				SendClientMessage(playerid, 0xB4B5B7FF, "Не можеш да дадеш толкова амуниции!");
				return 1;
			}

			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new weaponname[32];
				GetWeaponName(level, weaponname, 32);
				new string256[256];
				format(string256, 256, "Ти даде на %s оръжие %s с %d амуниции!", GetAccountNickname(giveplayerID), weaponname, ammount);
				SendClientMessage(playerid, COLOR_ADMIN, string256);
				format(string256, 256, "%s ти даде %s с %d амуниции!", GetAccountNickname(playerid), weaponname, ammount);
				SendClientMessage(giveplayerID, COLOR_ADMIN, string256);
				if (level == 21)
				{
					SetPlayerArmedWeapon(giveplayerID, 0);
					SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_USEJETPACK);
					SetPlayerArmedWeapon(giveplayerID, 0);
					SetPlayerArmedWeapon(giveplayerID, 0);
					SetPlayerArmedWeapon(giveplayerID, 0);
				}

				GivePlayerWeapon(giveplayerID, level, ammount);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/golastpos", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			if (LastPos[playerid] [lpUsed] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма как да използваш тази команда!");
			SetPlayerPos(playerid, LastPos[playerid] [lpPx], LastPos[playerid] [lpPy], LastPos[playerid] [lpPz]);
			SetPlayerInterior(playerid, LastPos[playerid] [lpInterior]);
			SetPlayerVirtualWorld(playerid, LastPos[playerid] [lpVWorld]);
			SendClientMessage(playerid, COLOR_WHITE, "Ти се върна на предходната си позиция!");
			LastPos[playerid] [lpUsed] = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/checkhouseinterior", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/checkhouseinterior [interior 1-26]");
				return 1;
			}

			new interiorID = strval(tmp);
			if (interiorID < 1 || interiorID > 26) return SendClientMessage(playerid, COLOR_GRAD1, "Невалиден Interior ID!");
			new string256[256];
			format(string256, 256, "Ти провери House Interior ID: %d", interiorID);
			SendClientMessageToAll(COLOR_HOUSE, string256);
			SendClientMessageToAll(COLOR_HOUSE, "За да излезеш от Interior-а, напиши /golastpos");

			if (LastPos[playerid] [lpUsed] == 0)
			{
				GetPlayerPos(playerid, LastPos[playerid] [lpPx], LastPos[playerid] [lpPy], LastPos[playerid] [lpPz]);
				LastPos[playerid] [lpInterior] = GetPlayerInterior(playerid);
				LastPos[playerid] [lpVWorld] = GetPlayerVirtualWorld(playerid);
				LastPos[playerid] [lpUsed] = 1;
			}

			//House Interiors - open
			if (interiorID == 1)
			{
				SetPlayerPos(playerid, 2283.04, -1140.28, 1050.90);
				SetPlayerFacingAngle(playerid, 267.0980);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 11);
			}

			if (interiorID == 2)
			{
				SetPlayerPos(playerid, 243.72, 304.91, 999.15);
				SetPlayerFacingAngle(playerid, 267.3974);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 1);
			}

			if (interiorID == 3)
			{
				SetPlayerPos(playerid, 2308.77, -1212.94, 1049.02);
				SetPlayerFacingAngle(playerid, 359.8550);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 6);
			}

			if (interiorID == 4)
			{
				SetPlayerPos(playerid, 377.15, 1417.41, 1081.33);
				SetPlayerFacingAngle(playerid, 1.6415);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 15);
			}

			if (interiorID == 5)
			{
				SetPlayerPos(playerid, 446.99, 1397.07, 1084.30);
				SetPlayerFacingAngle(playerid, 359.1347);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 2);
			}

			if (interiorID == 6)
			{
				SetPlayerPos(playerid, 2237.59, -1081.64, 1049.02);
				SetPlayerFacingAngle(playerid, 89.1791);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 2);
			}

			if (interiorID == 7)
			{
				SetPlayerPos(playerid, 260.85, 1237.24, 1084.26);
				SetPlayerFacingAngle(playerid, 359.8550);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 9);
			}

			if (interiorID == 8)
			{
				SetPlayerPos(playerid, 2807.48, -1174.76, 1025.57);
				SetPlayerFacingAngle(playerid, 89.4224);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 8);
			}

			if (interiorID == 9)
			{
				SetPlayerPos(playerid, 83.03, 1322.28, 1083.87);
				SetPlayerFacingAngle(playerid, 0.7248);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 9);
			}

			if (interiorID == 10)
			{
				SetPlayerPos(playerid, 2495.98, -1692.08, 1014.74);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 3);
			}

			if (interiorID == 11)
			{
				SetPlayerPos(playerid, -42.5628, 1405.5011, 1084.4297);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 8);
			}

			if (interiorID == 12)
			{
				SetPlayerPos(playerid, -68.7704, 1352.9250, 1080.2109);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 6);
			}

			if (interiorID == 13)
			{
				SetPlayerPos(playerid, 83.0758, 1322.2808, 1083.8662);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 9);
			}

			if (interiorID == 14)
			{
				SetPlayerPos(playerid, 140.2254, 1365.9796, 1083.8594);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 5);
			}

			if (interiorID == 15)
			{
				SetPlayerPos(playerid, 223.1015, 1287.0764, 1082.1406);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 1);
			}

			if (interiorID == 16)
			{
				SetPlayerPos(playerid, 225.8726, 1021.4523, 1084.0177);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 7);
			}

			if (interiorID == 17)
			{
				SetPlayerPos(playerid, 226.2984, 1114.3319, 1080.9929);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 5);
			}

			if (interiorID == 18)
			{
				SetPlayerPos(playerid, 261.0904, 1284.2944, 1080.2578);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 4);
			}

			if (interiorID == 19)
			{
				SetPlayerPos(playerid, 309.0916, 313.6412, 1003.3047);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 4);
			}

			if (interiorID == 20)
			{
				SetPlayerPos(playerid, 318.5932, 1114.4792, 1083.8828);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 5);
			}

			if (interiorID == 21)
			{
				SetPlayerPos(playerid, 327.9635, 1477.7430, 1084.4375);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 15);
			}

			if (interiorID == 22)
			{
				SetPlayerPos(playerid, 1260.6464, -785.4418, 1091.9063);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 5);
			}

			if (interiorID == 23)
			{
				SetPlayerPos(playerid, 2468.8413, -1698.4177, 1013.5078);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 2);
			}

			if (interiorID == 24)
			{
				SetPlayerPos(playerid, 2196.8506, -1204.2477, 1049.0234);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 6);
			}

			if (interiorID == 25)
			{
				SetPlayerPos(playerid, 2270.3855, -1210.4730, 1047.5625);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 10);
			}

			if (interiorID == 26)
			{
				SetPlayerPos(playerid, 2324.5479, -1149.5146, 1050.7101);
				SetPlayerFacingAngle(playerid, 359.5183);
				SetCameraBehindPlayer(playerid);
				SetPlayerInterior(playerid, 12);
			}

			//House Interiors - close
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givelevelall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givelevelall [level]");
				return 1;
			}

			new level = strval(tmp);
			new string256[256];
			format(string256, 256, "* Всички играчи получиха %d Level от администратор %s *", level, GetAccountNickname(playerid));
			SendClientMessageToAll(COLOR_YELLOW, string256);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (isLogged[i] == true)
				{
					GivePlayerLevel(i, level);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givebgnall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givebgnall [BGN]");
				return 1;
			}

			new cash = strval(tmp);
			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			format(string256, 256, "Всички играчи получиха %d лева в касата (BGN) от %s!", cash, playeridNickname);
			SendClientMessageToAll(COLOR_ADMIN_ORANGE, string256);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (isLogged[i] == true)
				{
					PlayerInfo[i][pVoucherBGN] += cash;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/giveexpall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/giveexpall [exp]");
				return 1;
			}

			new exp = strval(tmp);
			new string256[256];
			format(string256, 256, "* Всички играчи получиха %d Exp от администратор %s *", exp, GetAccountNickname(playerid));
			SendClientMessageToAll(COLOR_YELLOW, string256);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (isLogged[i] == true)
				{
					GivePlayerExp(i, exp);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givecashall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givecashall [cash]");
				return 1;
			}

			new cash = strval(tmp);
			new string256[256];
			format(string256, 256, "* Всички играчи получиха $%d от администратор %s *", cash, GetAccountNickname(playerid));
			SendClientMessageToAll(COLOR_YELLOW, string256);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (isLogged[i] == true)
				{
					GivePlayerCash(i, cash);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	//
	if (strcmp(cmd, "/setfactionmoney", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setfactionmoney [faction: 1-17] [cash]");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 1: LSPD, 2: LS Army, 3: FBI, 4: Crip, 5: West Coast Wheelers, 6: Vagos");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 7: Ballas, 8: Russian Mafia, 9: Medic, 10: Government, 11: News, 12: LV Army");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 13: Italian Mafia, 14: Aztecas, 15: LVPD, 16: Triads, 17: Grove");
				return 1;
			}

			new factionID = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setfactionmoney [faction: 1-17] [cash]");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 1: LSPD, 2: LS Army, 3: FBI, 4: Crip, 5: West Coast Wheelers, 6: Vagos");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 7: Ballas, 8: Russian Mafia, 9: Medic, 10: Government, 11: News, 12: LV Army");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 13: Italian Mafia, 14: Aztecas, 15: LVPD, 16: Triads, 17: Grove");
				return 1;
			}

			new cash = strval(tmp);
			if (factionID == FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да дадеш пари на Civilian!");
			new string256[256];
			format(string256, 256, "Ти сложи $%d на организация %s", cash, FactionInfo[factionID][fName]);
			SendClientMessage(playerid, COLOR_FACTION, string256);
			format(string256, 256, "Парите на вашата организация бяха променени на $%d в банката от %s", cash, accountNickname);
			SendFactionMessage(factionID, COLOR_FACTION, string256);
			FactionInfo[factionID][fBankAccount] = cash;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givefactionmoney", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givefactionmoney [faction: 1-17] [cash]");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 1: LSPD, 2: LS Army, 3: FBI, 4: Crip, 5: West Coast Wheelers, 6: Vagos");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 7: Ballas, 8: Russian Mafia, 9: Medic, 10: Government, 11: News, 12: LV Army");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 13: Italian Mafia, 14: Aztecas, 15: LVPD, 16: Triads, 17: Grove");
				return 1;
			}

			new factionID = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givefactionmoney [faction: 1-17] [cash]");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 1: LSPD, 2: LS Army, 3: FBI, 4: Crip, 5: West Coast Wheelers, 6: Vagos");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 7: Ballas, 8: Russian Mafia, 9: Medic, 10: Government, 11: News, 12: LV Army");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 13: Italian Mafia, 14: Aztecas, 15: LVPD, 16: Triads, 17: Grove");
				return 1;
			}

			new cash = strval(tmp);
			if (factionID == FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да дадеш пари на Civilian!");
			new string256[256];
			format(string256, 256, "Ти даде $%d в банковата сметка на %s", cash, FactionInfo[factionID][fName]);
			SendClientMessage(playerid, COLOR_FACTION, string256);
			format(string256, 256, "Вашата организация получи $%d в банката от %s", cash, accountNickname);
			SendFactionMessage(factionID, COLOR_FACTION, string256);
			FactionInfo[factionID][fBankAccount] += cash;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setlevel", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setlevel [ID на играч] [level]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setlevel [ID на играч] [level]");
				return 1;
			}

			new level = strval(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Твоя Level беше променени от %s на %d", playeridNickname, level);
			SendClientMessage(giveplayerID, COLOR_ADMIN, string256);
			format(string256, 256, "Ти сложи Level-а на %s да е %d", giveplayerIDNickname, level);
			SendClientMessage(playerid, COLOR_ADMIN, string256);
			PlayerInfo[giveplayerID][pLevel] = level;
			GivePlayerLevel(giveplayerID, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givebgn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givebgn [ID на играч] [BGN]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givebgn [ID на играч] [BGN]");
				return 1;
			}

			new cash = strval(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "%s ти даде %d лева в касата (BGN)!", playeridNickname, cash);
			SendClientMessage(giveplayerID, COLOR_ADMIN_ORANGE, string256);
			format(string256, 256, "Ти даде на %s %d лева в касата (BGN)!", giveplayerIDNickname, cash);
			SendClientMessage(playerid, COLOR_ADMIN_ORANGE, string256);
			PlayerInfo[giveplayerID][pVoucherBGN] += cash;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setbgn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setbgn [ID на играч] [BGN]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setbgn [ID на играч] [BGN]");
				return 1;
			}

			new cash = strval(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Твоите пари в касата (BGN) бяха променени от %s на %d лева!", playeridNickname, cash);
			SendClientMessage(giveplayerID, COLOR_ADMIN_ORANGE, string256);
			format(string256, 256, "Ти сложи BGN валутата в касата на %s да е %d лева!", giveplayerIDNickname, cash);
			SendClientMessage(playerid, COLOR_ADMIN_ORANGE, string256);
			PlayerInfo[giveplayerID][pVoucherBGN] = cash;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setcash", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setcash [ID на играч] [cash]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setcash [ID на играч] [cash]");
				return 1;
			}

			new cash = strval(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Твоите пари в брой бяха променени от %s на $%d", playeridNickname, cash);
			SendClientMessage(giveplayerID, COLOR_ADMIN, string256);
			format(string256, 256, "Ти сложи парите на %s да са $%d", giveplayerIDNickname, cash);
			SendClientMessage(playerid, COLOR_ADMIN, string256);
			PlayerInfo[giveplayerID][pCash] = cash;
			GivePlayerCash(giveplayerID, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/givecash", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givecash [ID на играч] [cash]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givecash [ID на играч] [cash]");
				return 1;
			}

			new cash = strval(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти получи $%d от администратор %s", cash, playeridNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN, string256);
			format(string256, 256, "Ти даде $%d на %s", cash, giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_ADMIN, string256);
			GivePlayerCash(giveplayerID, cash);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/makeboss", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeboss [ID на играч] [Job: 1-4]");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 1: Taxi, 2: Mechanic");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 3: Banker, 4: Fuel Company");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new job = strval(tmp);
			if (job < 1 || job >= MAX_JOBS)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeboss [ID на играч] [Job: 1-4]");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 1: Taxi, 2: Mechanic");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 3: Banker, 4: Fuel Company");
				return 1;
			}

			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти беше назначен за шеф на {5F63F0}%s {ffffff}от %s", JobInfo[job][jName], playeridNickname);
			SendClientMessage(giveplayerID, COLOR_WHITE, string256);
			format(string256, 256, "{5F63F0}%s {ffffff}беше назначен за шеф на {5F63F0}%s {ffffff}от %s", giveplayerIDNickname, JobInfo[job][jName], playeridNickname);
			SendClientMessageToAll(COLOR_WHITE, string256);
			format(string256, 256, "Твоята нова работа е %s! За да видиш командите, използвай /jobhelp", JobInfo[job][jName]);
			SendClientMessage(giveplayerID, COLOR_WHITE, string256);
			PlayerInfo[giveplayerID][pJob] = job;
			PlayerInfo[giveplayerID][pJobBoss] = 1;
			QuitJobProcess(giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/getboss", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getboss [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			if (PlayerInfo[giveplayerID][pJobBoss] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е шеф на фирма!");
			PlayerInfo[giveplayerID][pJob] = JOB_NO;
			PlayerInfo[giveplayerID][pJobBoss] = 0;
			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Твоята шефска позиция от фирмата е махната от %s! Вече си без работа!", playeridNickname);
			SendClientMessage(giveplayerID, COLOR_WHITE, string256);
			format(string256, 256, "{5F63F0}%s {FFFFFF}беше премахнат от неговата фирма, където беше шеф от %s!", giveplayerIDNickname, playeridNickname);
			SendClientMessageToAll(COLOR_WHITE, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/getleader", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getleader [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			if (PlayerInfo[giveplayerID][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е лидер на Faction!");
			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти беше премахнат от лидерската си позиция от %s! Вече си цивилен!", playeridNickname);
			SendClientMessage(giveplayerID, COLOR_WHITE, string256);
			format(string256, 256, "{5F63F0}%s {FFFFFF}беше премахнат от лидерската си позиция от %s!", giveplayerIDNickname, playeridNickname);
			SendClientMessageToAll(COLOR_WHITE, string256);
			if (PlayerInfo[giveplayerID][pFaction] == FACTION_LSPD || PlayerInfo[giveplayerID][pFaction] == FACTION_LVPD)
			{
				SetPoliceOffDuty(giveplayerID);
			}

			if (PlayerInfo[giveplayerID][pFaction] == FACTION_MEDIC)
			{
				SetMedicOffDuty(giveplayerID);
			}

			if (PlayerInfo[giveplayerID][pFaction] == FACTION_FBI)
			{
				SetFbiOffDuty(giveplayerID);
			}

			if (PlayerInfo[giveplayerID][pFaction] == FACTION_LS_ARMY || PlayerInfo[giveplayerID][pFaction] == FACTION_LV_ARMY)
			{
				SetArmyOffDuty(giveplayerID);
			}

			if (turfAttacker[giveplayerID] == true)
			{
				new Faction = PlayerInfo[giveplayerID][pFaction];
				format(string256, 256, "[FACTION TURF] %s излезе от бандата/мафията и отпадна от атаката на територията.", giveplayerIDNickname);
				SendFactionMessage(Faction, COLOR_TURF, string256);
				LeaveTurfAttacker(giveplayerID);
			}

			PlayerInfo[giveplayerID][pFaction] = FACTION_CIVILIAN;
			PlayerInfo[giveplayerID][pRank] = 1;
			SetPlayerDefaultColor(giveplayerID);
			if (policeSiren[giveplayerID] != -1) RemovePlayerSiren(giveplayerID);
			RemovePoliceBarricade(giveplayerID);
			if (IsPlayerAttachedObjectSlotUsed(giveplayerID, 7)) RemoveArmourObjectIfNotLaw(giveplayerID);
			PlayerInfo[giveplayerID][pHelmetObject] = 0;
			RestartPlayerSkin(giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setturf", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		tmp = strtok(cmdtext, idx);
		new faction = strval(tmp);
		if (faction < 1 || faction >= MAX_FACTIONS)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setturf [Faction: 1-17]");
			SendClientMessage(playerid, COLOR_WHITE, "ID: 1: LSPD, 2: LS Army, 3: FBI, 4: Crip, 5: West Coast Wheelers, 6: Vagos");
			SendClientMessage(playerid, COLOR_WHITE, "ID: 7: Ballas, 8: Russian Mafia, 9: Medic, 10: Government, 11: News, 12: LV Army");
			SendClientMessage(playerid, COLOR_WHITE, "ID: 13: Italian Mafia, 14: Aztecas, 15: LVPD, 16: Triads, 17: Grove");
			return 1;
		}

		if (faction == FACTION_CRIP || faction == FACTION_BALLAS || faction == FACTION_GROVE ||
			faction == FACTION_VAGOS || faction == FACTION_AZTECAS || faction == FACTION_TRIADS)
		{
			if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си извън Virtual World!");
			if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си извън Interior!");
			new bool: sameGang = false;
			new isInTurf = -1;
			for (new t = 0; t < MAX_TURFS; t++)
			{
				if (IsPlayerInTurf(playerid, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
				{
					isInTurf = t;
					if (TurfInfo[t][TurfOwner] == faction)
					{
						sameGang = true;
					}
				}
			}

			if (isInTurf == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте на територия!");
			if (sameGang == true) return SendClientMessage(playerid, COLOR_GRAD1, "Тази територия вече е на посочената организация!");
			if (turfAttacked == isInTurf) return SendClientMessage(playerid, COLOR_GRAD1, "Тази територия в момента е под атака и не можеш да промениш собственика й!");
			//Turfs:
			TurfInfo[isInTurf][TurfOwner] = faction;
			SaveTurf(isInTurf);
			//Factions:
			FactionInfo[faction][fTurfs]++;
			new oldTurfOwner = TurfInfo[isInTurf][TurfOwner];
			FactionInfo[faction][fTurfs]++;
			FactionInfo[oldTurfOwner][fTurfs]--;
			SaveFaction(faction);
			SaveFaction(oldTurfOwner);
			SendClientMessage(playerid, COLOR_ADMIN_RED, "Ти промени собственика на територията над която си!");
			for (new i; i < MAX_PLAYERS; i++)
			{
				LoadPlayerTurfs(i);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази организация не е банда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/makeleader", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeleader [ID на играч] [Faction: 1-17]");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 1: LSPD, 2: LS Army, 3: FBI, 4: Crip, 5: West Coast Wheelers, 6: Vagos");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 7: Ballas, 8: Russian Mafia, 9: Medic, 10: Government, 11: News, 12: LV Army");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 13: Italian Mafia, 14: Aztecas, 15: LVPD, 16: Triads, 17: Grove");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new faction = strval(tmp);
			if (faction < 1 || faction >= MAX_FACTIONS)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeleader [ID на играч] [Faction: 1-17]");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 1: LSPD, 2: LS Army, 3: FBI, 4: Crip, 5: West Coast Wheelers, 6: Vagos");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 7: Ballas, 8: Russian Mafia, 9: Medic, 10: Government, 11: News, 12: LV Army");
				SendClientMessage(playerid, COLOR_WHITE, "ID: 13: Italian Mafia, 14: Aztecas, 15: LVPD, 16: Triads, 17: Grove");
				return 1;
			}

			if (giveplayerID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
				return 1;
			}

			if (faction != 1)
			{
				if (PlayerInfo[giveplayerID][pFaction] == FACTION_MEDIC)
				{
					SetMedicOffDuty(giveplayerID);
				}

				if (PlayerInfo[giveplayerID][pFaction] == FACTION_LSPD || PlayerInfo[giveplayerID][pFaction] == FACTION_LVPD)
				{
					SetPoliceOffDuty(giveplayerID);
				}

				if (PlayerInfo[giveplayerID][pFaction] == FACTION_FBI)
				{
					SetFbiOffDuty(giveplayerID);
				}

				if (PlayerInfo[giveplayerID][pFaction] == FACTION_LS_ARMY || PlayerInfo[giveplayerID][pFaction] == FACTION_LV_ARMY)
				{
					SetArmyOffDuty(giveplayerID);
				}
			}

			new string256[256];
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти беше назначен за лидер на {5F63F0}%s{FFFFFF} от %s", FactionInfo[faction][fName], playeridNickname);
			SendClientMessage(giveplayerID, COLOR_WHITE, string256);
			format(string256, 256, "{5F63F0}%s {ffffff}беше назначен за лидер на {5F63F0}%s {ffffff}от %s", giveplayerIDNickname, FactionInfo[faction][fName], playeridNickname);
			SendClientMessageToAll(COLOR_WHITE, string256);
			if (turfAttacker[playerid] == true)
			{
				new Faction = PlayerInfo[playerid][pFaction];
				format(string256, 256, "[FACTION TURF] %s излезе от бандата/мафията и отпадна от атаката на територията!", giveplayerIDNickname);
				SendFactionMessage(Faction, COLOR_TURF, string256);
				LeaveTurfAttacker(playerid);
			}

			PlayerInfo[giveplayerID][pFaction] = faction;
			PlayerInfo[giveplayerID][pRank] = 6;
			SetPlayerDefaultColor(giveplayerID);
			if (policeSiren[giveplayerID] != -1) RemovePlayerSiren(giveplayerID);
			RemovePoliceBarricade(giveplayerID);
			if (IsPlayerAttachedObjectSlotUsed(giveplayerID, 7)) RemoveArmourObjectIfNotLaw(giveplayerID);
			PlayerInfo[giveplayerID][pHelmetObject] = 0;
			RestartPlayerSkin(giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}
	
	if (strcmp(cmd, "/mybank", true) == 0)
	{
		ShowPlayerBank(playerid);
		return 1;
	}

	if (strcmp(cmd, "/mydocs", true) == 0)
	{
		if (PlayerInfo[playerid][pIdentifyCard] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Все още нямаш лична карта.");
		ShowPlayerDocs(playerid, playerid);
		return 1;
	}

	if (strcmp(cmd, "/givedocs", true) == 0)
	{
		if (PlayerInfo[playerid][pIdentifyCard] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Все още нямаш лична карта.");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/givedocs [ID на играч]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да предложиш на себе си документи.");
		if (!CorDetector(5.5, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек.");
		DocsOffer[giveplayerID] = playerid;
		new string256[256];
		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		format(string256, 256, "[Документи] Ти предложи на %s документите си.", giveplayerIDNickname);
		SendClientMessage(playerid, COLOR_LIGHTRED, string256);
		format(string256, 256, "[Документи] %s ти предложи да му видиш документите.", accountNickname);
		SendClientMessage(giveplayerID, COLOR_LIGHTRED, string256);
		SendClientMessage(giveplayerID, COLOR_LIGHTRED, "Използвай /acceptdocs за да приемеш");
		return 1;
	}

	if (strcmp(cmd, "/acceptdocs", true) == 0)
	{
		if (DocsOffer[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате предоставени документи за преглед.");
		if (!CorDetector(5.5, playerid, DocsOffer[playerid])) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до човека, които ви предложи документите си.");
		new string256[256];
		//new docsOfferName[MAX_PLAYER_NAME];
		//GetPlayerName(DocsOffer[playerid], docsOfferName, 25);
		//SendClientMessage(playerid,COLOR_LIGHTRED,"[Документи] Ти прие предоставените ти документи.");
		format(string256, 256, "[Документи] %s прие документите, които му предостави.", accountNickname);
		SendClientMessage(DocsOffer[playerid], COLOR_LIGHTRED, string256);
		ShowPlayerDocs(playerid, DocsOffer[playerid]);
		DocsOffer[playerid] = -1;
		return 1;
	}

	if (strcmp(cmd, "/mytelenor", true) == 0)
	{
		new string256[256];
		format(string256, 256, "Telenor: Вие притежавате {0099FF}%d {FFFFFF}MB Internet във вашата сметка!", PlayerInfo[playerid][pTelenorMB]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		return 1;
	}

	if (strcmp(cmd, "/mylocation", true) == 0)
	{
		if (PlayerInfo[playerid][pGPS] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш GPS, който да използваш!");
		if (GetPlayerInterior(playerid) == 0)
		{
			new string256[256];
			format(string256, 256, "GPS: Вашата локация е %s!", GetPlayerZone(playerid));
			SendClientMessage(playerid, COLOR_GPS, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GPS, "GPS: В момента си в Interior!");
		}

		return 1;
	}

	if (strcmp(cmd, "/mybgn", true) == 0)
	{
		new string256[256];
		format(string256, 256, "Вашата сметка: Вие притежавате {0099FF}%d {FFFFFF}лева във вашата сметка!", PlayerInfo[playerid][pVoucherBGN]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		format(string256, 256, "Вашата сметка: Парите са регистрирани на профил: {0099FF}%s", accountNickname);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		return 1;
	}

	if (strcmp(cmd, "/revieve", true) == 0)
	{
		if (PlayerTimerInfo[playerid][ptRevieveTimer] >= 1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента ти си на земята и не можеш да ползваш командата!");
		new revieveID = -1;
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (i != playerid)
			{
				if (CorDetector(4.0, playerid, i))
				{
					if (PlayerTimerInfo[i][ptRevieveTimer] >= 1)
					{
						revieveID = i;
					}
				}
			}
		}

		if (revieveID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си достатъчно близо до ранен играч!");
		RemovePlayerDeathTimer(revieveID);
		new string256[256];
		format(string256, 256, "Ти беше спасен от припадък, благодарение на {40BF00}%s {ffffff}!", RealName(playerid));
		SendClientMessage(revieveID, COLOR_WHITE, string256);
		format(string256, 256, "Ти помогна на {40BF00}%s {ffffff} да се спаси от припадък!", RealName(revieveID));
		SendClientMessage(playerid, COLOR_WHITE, string256);
		PlayerTimerInfo[revieveID][ptClearAnimation] = 4;
		ApplyAnimationWithCondition(playerid, "MEDIC", "CPR", 4.1, 0, 1, 1, 0, 4000, 1);
		PlayerTimerInfo[playerid][ptClearAnimation] = 4;
		new Float: health;
		GetPlayerHealth(revieveID, health);
		if (health < 80.0)
		{
			SetPlayerHealth(revieveID, 80);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_MEDIC)
		{
			if (health < 100)
			{
				SetPlayerHealth(revieveID, 100);
				SendClientMessage(playerid, COLOR_WHITE, "Понеже ти си медик, играчът бе зареден с още {40BF00}20 точки живот{ffffff}!");
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/acceptdeath", true) == 0)
	{
		if (PlayerTimerInfo[playerid][ptRevieveTimer] >= 1)
		{
			SetPlayerHealth(playerid, 0);
			SendClientMessage(playerid, COLOR_WHITE, "Ти се предаде и избра да {e60000}припаднеш{ffffff}!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В момента не си пред припадък и не можеш да използваш командата!");
		}

		return 1;
	}

	if (strcmp(cmd, "/stats", true) == 0)
	{
		ShowPlayerStats(playerid, playerid);
		return 1;
	}
	
	if (strcmp(cmd, "/gotocor", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gotocor [coor x] [coor y] [coor z]");
		new coorx;
		coorx = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gotocor [coor x] [coor y] [coor z]");
		new coory;
		coory = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp)) return SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gotocor [coor x] [coor y] [coor z]");
		new coorz;
		coorz = strval(tmp);
		SetPlayerPos(playerid, coorx, coory, coorz);
		SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вие се телепортирахте успешно до оказаните координати.");
		return 1;
	}

	if (strcmp(cmd, "/makeevent", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeevent [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				new string256[256];
				format(string256, 256, "Ти получи Event права от %s Честито", accountNickname);
				SendClientMessage(giveplayerID, COLOR_ADMIN_ORANGE, string256);
				SendClientMessage(giveplayerID, COLOR_ADMIN_ORANGE, "Можеш да разгледаш /eventhelp");
				format(string256, 256, "Ти даде на %s Event права.", giveplayerIDNickname);
				SendClientMessage(playerid, COLOR_ADMIN_ORANGE, string256);
				PlayerInfo[giveplayerID][pEvent] = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/getevent", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getevent [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				new string256[256];
				format(string256, 256, "Бяха ти премахнати Event правата от %s", accountNickname);
				SendClientMessage(giveplayerID, COLOR_ADMIN, string256);
				format(string256, 256, "Ти махна Event правата на %s.", giveplayerIDNickname);
				SendClientMessage(playerid, COLOR_ADMIN, string256);
				PlayerInfo[giveplayerID][pEvent] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/getvip", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getvip [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				new string256[256];
				format(string256, 256, "Бяха ти премахнати Vip нивата от %s", accountNickname);
				SendClientMessage(giveplayerID, COLOR_WHITE, string256);
				format(string256, 256, "Ти махна Vip нивата на %s.", giveplayerIDNickname);
				SendClientMessage(playerid, COLOR_WHITE, string256);
				PlayerInfo[giveplayerID][pVip] = 0;
				RemoveParrot(giveplayerID);
				RemovePlayerLaser(giveplayerID);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/getadmin", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5 || IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getadmin [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				new string256[256];
				format(string256, 256, "{5F63F0}%s {FFFFFF}загуби админ правата си от %s", giveplayerIDNickname, accountNickname);
				SendClientMessageToAll(COLOR_WHITE, string256);
				PlayerInfo[giveplayerID][pAdmin] = 0;
				PlayerInfo[giveplayerID][pEvent] = 0;
				PlayerInfo[giveplayerID][pAdminWarns] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/makevip", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5 || IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makevip [ID на играч] [1-3]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new level[5];
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makevip [ID на играч] [1-3]");
				return 1;
			}

			strmid(level, tmp, 0, 5, 5);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				if (strval(level) < 1 || strval(level) > 3)
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makevip [ID на играч] [1-3]");
					return 1;
				}

				new vipLevel = strval(level);
				new string256[256];
				PlayerInfo[giveplayerID][pVip] = vipLevel;
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				format(string256, 256, "Ти получи {5F63F0}%d Vip Level {FFFFFF}от %s. Честито", vipLevel, playeridNickname);
				SendClientMessage(giveplayerID, COLOR_WHITE, string256);
				format(string256, 256, "Ти сложи VIP на %s да е {5F63F0}%d ниво", giveplayerIDNickname, vipLevel);
				SendClientMessage(playerid, COLOR_WHITE, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/makeadmin", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5 || IsPlayerAdmin(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeadmin [ID на играч] [1-5]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new level[5];
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeadmin [ID на играч] [1-5]");
				return 1;
			}

			strmid(level, tmp, 0, 5, 5);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				if (strval(level) < 1 || strval(level) > 5)
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/makeadmin [ID на играч] [1-5]");
					return 1;
				}

				new adminLevel = strval(level);
				new adminLevelName[25];
				new string256[256];
				PlayerInfo[giveplayerID][pAdmin] = adminLevel;
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				switch (adminLevel)
				{
					case 1:
						{
							format(adminLevelName, 25, "Moderator");
						}

					case 2:
						{
							format(adminLevelName, 25, "Global Moderator");
						}

					case 3:
						{
							format(adminLevelName, 25, "Administrator");
						}

					case 4:
						{
							format(adminLevelName, 25, "Senior Administrator");
						}

					case 5:
						{
							format(adminLevelName, 25, "Server Owner");
						}
				}

				format(string256, 256, "{5F63F0}%s {ffffff}беше назначен за {5F63F0}%s {ffffff}от %s", giveplayerIDNickname, adminLevelName, playeridNickname);
				SendClientMessageToAll(COLOR_WHITE, string256);
				if (strval(level) < 5 && scripterMode[playerid] == true)
				{
					scripterMode[playerid] = false;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/createbiz", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createbiz [price] [interior 1-26] [level][payout]");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 1: 24/7, 2: Bar, 3: Ammu, 4: 24/7, 5: ProLaps");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 6: BurShot, 7: 24/7, 8: Urban, 9: Ammu, 10: Ammu 11: Disco");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 12: SexShop, 13: Gym, 14: Gym, 15: Casino, 16: StripClub");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 17: FourDragons Casino, 18: Caligulas Casino, 19: Bar");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 20: CluckinBell, 21: Restaurant, 22: Fisher Shop");
			return 1;
		}

		new price;
		price = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createbiz [price] [interior 1-26] [level][payout]");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 1: 24/7, 2: Bar, 3: Ammu, 4: 24/7, 5: ProLaps");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 6: BurShot, 7: 24/7, 8: Urban, 9: Ammu, 10: Ammu 11: Disco");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 12: SexShop, 13: Gym, 14: Gym, 15: Casino, 16: StripClub");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 17: FourDragons Casino, 18: Caligulas Casino, 19: Bar");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 20: CluckinBell, 21: Restaurant, 22: Fisher Shop");
			return 1;
		}

		new type;
		type = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createbiz [price] [interior 1-26] [level][payout]");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 1: 24/7, 2: Bar, 3: Ammu, 4: 24/7, 5: ProLaps");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 6: BurShot, 7: 24/7, 8: Urban, 9: Ammu, 10: Ammu 11: Disco");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 12: SexShop, 13: Gym, 14: Gym, 15: Casino, 16: StripClub");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 17: FourDragons Casino, 18: Caligulas Casino, 19: Bar");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 20: CluckinBell, 21: Restaurant, 22: Fisher Shop");
			return 1;
		}

		new level;
		level = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createbiz [price] [interior 1-26] [level][payout]");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 1: 24/7, 2: Bar, 3: Ammu, 4: 24/7, 5: ProLaps");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 6: BurShot, 7: 24/7, 8: Urban, 9: Ammu, 10: Ammu 11: Disco");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 12: SexShop, 13: Gym, 14: Gym, 15: Casino, 16: StripClub");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 17: FourDragons Casino, 18: Caligulas Casino, 19: Bar");
			SendClientMessage(playerid, COLOR_BIZ, "ID: 20: CluckinBell, 21: Restaurant, 22: Fisher Shop");
			return 1;
		}

		new payout;
		payout = strval(tmp);
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			//todo

			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);

			if (price < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Цената трябва да е по-голяма от $0!");
			if (type < 1 || type > 22) return SendClientMessage(playerid, COLOR_GRAD1, "Този тип е невалиден!");
			if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да създадеш бизнес в този Virtual World!");
			if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да създадеш бизнес в този Interior!");
			new biz[64];
			format(biz, 64, "/Bizz/%d.ini", ReturnNextUnusedBizID());
			SendClientMessage(playerid, COLOR_BIZ, "Вие успешно създадохте нов бизнес.");
			maxbiz += 1;
			if (!dini_Exists(biz))
			{
				dini_Create(biz);
				dini_IntSet(biz, "bOwner", 0);
				dini_Set(biz, "bOwnerName", "None");
				dini_FloatSet(biz, "bX", X);
				dini_FloatSet(biz, "bY", Y);
				dini_FloatSet(biz, "bZ", Z);
				dini_IntSet(biz, "bLocked", 0);
				dini_IntSet(biz, "bType", type);
				dini_IntSet(biz, "bPrice", price);
				dini_IntSet(biz, "bLevel", level);
				dini_IntSet(biz, "bPayOut", payout);
				new oldbizid = ReturnNextUnusedBizID();
				BizInfo[oldbizid][bX] = dini_Float(biz, "bX");
				BizInfo[oldbizid][bY] = dini_Float(biz, "bY");
				BizInfo[oldbizid][bZ] = dini_Float(biz, "bZ");
				BizInfo[oldbizid][bOwner] = dini_Int(biz, "bOwner");
				BizInfo[oldbizid][bLocked] = dini_Int(biz, "bLocked");
				BizInfo[oldbizid][bPrice] = dini_Int(biz, "bPrice");
				BizInfo[oldbizid][bType] = dini_Int(biz, "bType");
				BizInfo[oldbizid][bLevel] = dini_Int(biz, "bLevel");
				BizInfo[oldbizid][bPayOut] = dini_Int(biz, "bPayOut");
				dini_IntSet(biz, "bStock", 60);
				BizInfo[oldbizid][bStock] = 60;

				if (type == 1)
				{
					dini_Set(biz, "bName", "General Store");
					format(BizInfo[oldbizid][bName], 256, "General Store");
				}

				if (type == 2)
				{
					dini_Set(biz, "bName", "Bar");
					format(BizInfo[oldbizid][bName], 256, "Bar");
				}

				if (type == 3)
				{
					dini_Set(biz, "bName", "Ammu-Nation");
					format(BizInfo[oldbizid][bName], 256, "Ammu-Nation");
				}

				if (type == 4)
				{
					dini_Set(biz, "bName", "General Store");
					format(BizInfo[oldbizid][bName], 256, "General Store");
				}

				if (type == 5)
				{
					dini_Set(biz, "bName", "Prolaps Store");
					format(BizInfo[oldbizid][bName], 256, "Prolaps Store");
				}

				if (type == 6)
				{
					dini_Set(biz, "bName", "Burger Shot");
					format(BizInfo[oldbizid][bName], 256, "Burger Shot");
				}

				if (type == 7)
				{
					dini_Set(biz, "bName", "General Store");
					format(BizInfo[oldbizid][bName], 256, "General Store");
				}

				if (type == 8)
				{
					dini_Set(biz, "bName", "Urban Store");
					format(BizInfo[oldbizid][bName], 256, "Urban Store");
				}

				if (type == 9)
				{
					dini_Set(biz, "bName", "Ammu-Nation");
					format(BizInfo[oldbizid][bName], 256, "Ammu-Nation");
				}

				if (type == 10)
				{
					dini_Set(biz, "bName", "Ammu-Nation");
					format(BizInfo[oldbizid][bName], 256, "Ammu-Nation");
				}

				if (type == 11)
				{
					dini_Set(biz, "bName", "Disco");
					format(BizInfo[oldbizid][bName], 256, "Disco");
				}

				if (type == 12)
				{
					dini_Set(biz, "bName", "Sex Shop");
					format(BizInfo[oldbizid][bName], 256, "Sex Shop");
				}

				if (type == 13)
				{
					dini_Set(biz, "bName", "Gym");
					format(BizInfo[oldbizid][bName], 256, "Gym");
				}

				if (type == 14)
				{
					dini_Set(biz, "bName", "Gym");
					format(BizInfo[oldbizid][bName], 256, "Gym");
				}

				if (type == 15)
				{
					dini_Set(biz, "bName", "Casino");
					format(BizInfo[oldbizid][bName], 256, "Casino");
				}

				if (type == 16)
				{
					dini_Set(biz, "bName", "STRIP CLUB");
					format(BizInfo[oldbizid][bName], 256, "STRIP CLUB");
				}

				if (type == 17)
				{
					dini_Set(biz, "bName", "4 Dragons");
					format(BizInfo[oldbizid][bName], 256, "4 Dragons");
				}

				if (type == 18)
				{
					dini_Set(biz, "bName", "Caligula'S");
					format(BizInfo[oldbizid][bName], 256, "Caligula'S");
				}

				if (type == 19)
				{
					dini_Set(biz, "bName", "Bar");
					format(BizInfo[oldbizid][bName], 256, "Bar");
				}

				if (type == 20)
				{
					dini_Set(biz, "bName", "Cluckin' Bell");
					format(BizInfo[oldbizid][bName], 256, "Cluckin' Bell");
				}

				if (type == 21)
				{
					dini_Set(biz, "bName", "Restaurant");
					format(BizInfo[oldbizid][bName], 256, "Restaurant");
				}

				if (type == 22)
				{
					dini_Set(biz, "bName", "Fishing Store");
					format(BizInfo[oldbizid][bName], 256, "Fishing Store");
				}

				bizPickup[oldbizid] = CreateDynamicPickup(1272, 1, BizInfo[oldbizid][bX], BizInfo[oldbizid][bY], BizInfo[oldbizid][bZ], 0);
				AddBizLabel(oldbizid);
				AddBizActor(oldbizid);
				bizPickupIndex[bizPickup[oldbizid]] = oldbizid;
				isBizPickup[bizPickup[oldbizid]] = true;
				AddBizIcon(oldbizid);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/createhouse", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createhouse [price] [interior 1-26] [level] [name]");
				return 1;
			}

			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);
			new model;
			model = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createhouse [price] [interior 1-26] [level] [name]");
				return 1;
			}

			new type;
			type = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createhouse [price] [interior 1-26] [level] [name]");
				return 1;
			}

			new level;
			level = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result)) return SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/createhouse [price] [interior 1-26] [level] [name]");
			if (model < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Цената трябва да е по-голяма от $0!");
			if (type < 1 || type > 28) return SendClientMessage(playerid, COLOR_GRAD1, "Този интериор е невалиден!");
			if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да създадеш къща в този Virtual World!");
			if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да създадеш къща в този Interior!");
			new house[64];
			new oldhouseid = ReturnNextUnusedHouseID();
			format(house, 64, "/Houses/%d.ini", ReturnNextUnusedHouseID());
			SendClientMessage(playerid, COLOR_HOUSE, "Ти успешно създаде нова къща!");
			maxhouses += 1;
			if (!dini_Exists(house))
			{
				dini_Create(house);
				dini_IntSet(house, "hOwner", 0);
				dini_Set(house, "hOwnerName", "None");
				dini_IntSet(house, "hOwner", 0);
				dini_FloatSet(house, "hX", X);
				dini_FloatSet(house, "hY", Y);
				dini_FloatSet(house, "hZ", Z);
				dini_IntSet(house, "hLocked", 0);
				dini_IntSet(house, "hInterior", type);
				dini_IntSet(house, "hPrice", model);
				dini_IntSet(house, "hLevel", level);
				dini_Set(house, "hName", result);
				HouseInfo[oldhouseid][hX] = dini_Float(house, "hX");
				HouseInfo[oldhouseid][hY] = dini_Float(house, "hY");
				HouseInfo[oldhouseid][hZ] = dini_Float(house, "hZ");
				HouseInfo[oldhouseid][hOwner] = dini_Int(house, "hOwner");
				HouseInfo[oldhouseid][hLocked] = dini_Int(house, "hLocked");
				HouseInfo[oldhouseid][hPrice] = dini_Int(house, "hPrice");
				HouseInfo[oldhouseid][hLevel] = dini_Int(house, "hLevel");
				HouseInfo[oldhouseid][hInterior] = dini_Int(house, "hInterior");
				format(HouseInfo[oldhouseid][hOwnerName], 256, "%s", dini_Get(house, "hOwnerName"));
				housePickup[oldhouseid] = CreateDynamicPickup(1273, 1, X, Y, Z, 0);
				housePickupIndex[housePickup[oldhouseid]] = oldhouseid;
				isHousePickup[housePickup[oldhouseid]] = true;
				format(HouseInfo[oldhouseid][hName], 256, result);
				AddHouseIcon(oldhouseid);
				AddHouseLabel(oldhouseid);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setrankname", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrankname [Rank: 1-6] [Име на Rank]");
			return 1;
		}

		new rnkid = strval(tmp);
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrankname [Rank: 1-6] [Име на Rank]");
			return 1;
		}

		if (rnkid < 1 || rnkid > 6)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrankname [Rank: 1-6] [Име на Rank]");
			return 1;
		}

		if (strlen(result) < 1 || strlen(result) > 25) return SendClientMessage(playerid, COLOR_GRAD1, "Символите трябва да бъдат между 1 и 25 знака!");
		if (strfind(result, "||", true) == 0 || strfind(result, "|", true) == 0 || strfind(result, "~", true) == 0 || strfind(result, ",", true) == 0)
		{
			return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш символите |, ~ и ,");
		}

		new string256[256];
		format(string256, 256, "%s промени името на ранг %d на %s", accountNickname, rnkid, result);
		SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
		if (rnkid == 1) format(FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1], 35, "%s", result);
		if (rnkid == 2) format(FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2], 35, "%s", result);
		if (rnkid == 3) format(FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3], 35, "%s", result);
		if (rnkid == 4) format(FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4], 35, "%s", result);
		if (rnkid == 5) format(FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5], 35, "%s", result);
		if (rnkid == 6) format(FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6], 35, "%s", result);
		SaveFaction(PlayerInfo[playerid][pFaction]);
		return 1;
	}

	if (strcmp(cmd, "/ask", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/ask [помощ]");
			return 1;
		}

		new string256[256];
		format(string256, 256, "Вашият въпрос: {FFFFFF}%s", result);
		SendClientMessage(playerid, COLOR_TYPICAL_BLUE, string256);
		SendClientMessage(playerid, COLOR_TYPICAL_BLUE, "Въпросът беше изпратен до всички онлайн администратори");
		new admins = GetAdmins();
		if (admins == 0)
		{
			SendClientMessage(playerid, COLOR_DARKRED2, "SERVER: В момента няма онлайн админи на смяна!");
		}

		format(string256, 256, "Въпрос от %s (ID: %d): {FFFFFF}%s", accountNickname, playerid, result);
		SendAdminMessage(COLOR_TYPICAL_BLUE, string256);
		return 1;
	}

	if (strcmp(cmd, "/me", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/me [направи нещо]");
			return 1;
		}

		if (PlayerInfo[playerid][pMuted] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В момента си заглушен и не можеш да използваш тази команда!");
			return 1;
		}

		new string256[256];
		format(string256, 256, "%s %s", RealName(playerid), result);
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		UpdateDynamic3DTextLabelText(PlayerLabel[playerid], COLOR_LIGHTPURPLE4, result);
		PlayerTimerInfo[playerid][pResetPlayerLabel] = 8;
		return 1;
	}

	if (strcmp(cmd, "/b", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/b [текст] (Local OOC Chat)");
			return 1;
		}

		if (PlayerInfo[playerid][pMuted] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В момента си заглушен и не можеш да използваш тази команда!");
			return 1;
		}

		new string256[256];
		format(string256, 256, "%s: {B7AFAF}(( %s ))", RealName(playerid), result);
		SendLocalMessage(40.0, playerid, COLOR_WHITE, string256);
		PlayerTimerInfo[playerid][pResetPlayerLabel] = 8;
		return 1;
	}

	if (strcmp(cmd, "/o", true) == 0 || strcmp(cmd, "/ooc", true) == 0)
	{
		if (OOCStatus == false) return SendClientMessage(playerid, COLOR_GREY, "Глобалният OOC чат е изключен!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/o(oc) [текст]");
			return 1;
		}

		if (PlayerInfo[playerid][pMuted] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В момента си заглушен и не можеш да използваш тази команда!");
			return 1;
		}

		new string256[256];
		format(string256, 256, "{CBFF26}[Главен OOC]: %s написа: {FFFFFF}%s", GetAccountNickname(playerid), result);
		SendClientMessageToAll(COLOR_WHITE, string256);
		return 1;
	}

	if (strcmp(cmd, "/s", true) == 0 || strcmp(cmd, "/shout", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/s(hout) [извикай]");
			return 1;
		}

		if (PlayerInfo[playerid][pMuted] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В момента си заглушен и не можеш да използваш тази команда!");
			return 1;
		}

		new string256[256];
		format(string256, 256, "%s извика: %s", RealName(playerid), result);
		SendLocalMessage(23.0, playerid, COLOR_ORANGE, string256);
		UpdateDynamic3DTextLabelText(PlayerLabel[playerid], COLOR_WHITE, result);
		PlayerTimerInfo[playerid][pResetPlayerLabel] = 8;
		if(!IsPlayerInAnyVehicle(playerid))
		{
			ApplyAnimationWithCondition(playerid, "ON_LOOKERS", "shout_01", 1000.0,0,0,0,0,0,1);
		}
		return 1;
	}

	if (strcmp(cmd, "/l", true) == 0 || strcmp(cmd, "/low", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/l(ow) [шепни]");
			return 1;
		}

		if (PlayerInfo[playerid][pMuted] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В момента си заглушен и не можеш да използваш тази команда!");
			return 1;
		}

		new string256[256];
		format(string256, 256, "%s шепне: %s", RealName(playerid), result);
		SendLocalMessage(1.5, playerid, COLOR_ORANGE, string256);
		UpdateDynamic3DTextLabelText(PlayerLabel[playerid], COLOR_WHITE, result);
		PlayerTimerInfo[playerid][pResetPlayerLabel] = 8;
		return 1;
	}

	if (strcmp(cmd, "/do", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/do [направи нещо]");
			return 1;
		}

		if (PlayerInfo[playerid][pMuted] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В момента си заглушен и не можеш да използваш тази команда!");
			return 1;
		}

		new string256[256];
		format(string256, 256, "* %s: ((%s))", RealName(playerid), result);
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		return 1;
	}

	if (strcmp(cmd, "/d", true) == 0)
	{
		new hisFaction = PlayerInfo[playerid][pFaction];
		if (hisFaction == FACTION_LS_ARMY ||
			hisFaction == FACTION_LV_ARMY ||
			hisFaction == FACTION_FBI ||
			hisFaction == FACTION_LSPD ||
			hisFaction == FACTION_LVPD ||
			hisFaction == FACTION_MEDIC ||
			hisFaction == FACTION_GOVERNMENT)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/d [text]");
				return 1;
			}

			new ranktext[32];
			switch (PlayerInfo[playerid][pRank])
			{
				case 1:
					format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
				case 2:
					format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
				case 3:
					format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
				case 4:
					format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
				case 5:
					format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
				case 6:
					format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
			}

			new string256[256];
			if (hisFaction == FACTION_LS_ARMY)
			{
				format(string256, 256, "[D] LS Army: %s %s says: %s", ranktext, accountNickname, result);
				SendDMessage(COLOR_LIGHTYELLOW, string256);
			}
			else if (hisFaction == FACTION_LV_ARMY)
			{
				format(string256, 256, "[D] LV Army: %s %s says: %s", ranktext, accountNickname, result);
				SendDMessage(COLOR_LIGHTYELLOW, string256);
			}
			else if (hisFaction == FACTION_FBI)
			{
				format(string256, 256, "[D] FBI: %s %s says: %s", ranktext, accountNickname, result);
				SendDMessage(COLOR_LIGHTYELLOW, string256);
			}
			else if (hisFaction == FACTION_LSPD)
			{
				format(string256, 256, "[D] LSPD: %s %s says: %s", ranktext, accountNickname, result);
				SendDMessage(COLOR_LIGHTYELLOW, string256);
			}
			else if (hisFaction == FACTION_LVPD)
			{
				format(string256, 256, "[D] LVPD: %s %s says: %s", ranktext, accountNickname, result);
				SendDMessage(COLOR_LIGHTYELLOW, string256);
			}
			else if (hisFaction == FACTION_MEDIC)
			{
				format(string256, 256, "[D] MD: %s %s says: %s", ranktext, accountNickname, result);
				SendDMessage(COLOR_LIGHTYELLOW, string256);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на държавна организация!");
		}

		return 1;
	}

	if (strcmp(cmd, "/f", true) == 0 || strcmp(cmd, "/faction", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] > 0)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}(/f)action [text]");
				return 1;
			}

			new ranktext[32];
			switch (PlayerInfo[playerid][pRank])
			{
				case 1:
					format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
				case 2:
					format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
				case 3:
					format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
				case 4:
					format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
				case 5:
					format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
				case 6:
					format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
			}

			new string256[256];
			new hisFaction = PlayerInfo[playerid][pFaction];
			new rankID = PlayerInfo[playerid][pRank];
			if (hisFaction == FACTION_LS_ARMY)
			{
				format(string256, 256, "[LS Army] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else if (hisFaction == FACTION_LV_ARMY)
			{
				format(string256, 256, "[LV Army] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else if (hisFaction == FACTION_FBI)
			{
				format(string256, 256, "[FBI] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else if (hisFaction == FACTION_LSPD)
			{
				format(string256, 256, "[LSPD] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else if (hisFaction == FACTION_LVPD)
			{
				format(string256, 256, "[LVPD] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else if (hisFaction == FACTION_NEWS)
			{
				format(string256, 256, "[SAN] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else if (hisFaction == FACTION_MEDIC)
			{
				format(string256, 256, "[MD] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_ORANGE, string256);
			}
			else
			{
				format(string256, 256, "[F] %s(%d) %s says: %s", ranktext, rankID, accountNickname, result);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, защото не си член на никой Faction!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setrank", true) == 0)
	{
		if (PlayerInfo[playerid][pRank] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrank [ID на играч] [Rank: 1-5]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new rank[5];
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrank [ID на играч] [Rank: 1-5]");
				return 1;
			}

			strmid(rank, tmp, 0, 5, 5);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				if (strval(rank) < 1 || strval(rank) > 5)
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrank [ID на играч] [Rank: 1-5]");
					return 1;
				}

				new rankID = strval(rank);
				new string256[256];
				if (PlayerInfo[giveplayerID][pFaction] != PlayerInfo[playerid][pFaction]) return SendClientMessage(playerid, COLOR_GRAD1, "Въведеният играч не е член на твоята организация!");
				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да смениш своя ранг!");
				if (PlayerInfo[giveplayerID][pRank] == 6) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да смениш ранга на лидер!");
				if (PlayerInfo[playerid][pRank] == 5 && rankID == 5) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да назначиш играч на 5-ти ранг!");
				PlayerInfo[giveplayerID][pRank] = rankID;
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				new ranktext[32];
				switch (PlayerInfo[giveplayerID][pRank])
				{
					case 1:
						format(ranktext, 32, "%s", FactionInfo[PlayerInfo[giveplayerID][pFaction]][fRankName1]);
					case 2:
						format(ranktext, 32, "%s", FactionInfo[PlayerInfo[giveplayerID][pFaction]][fRankName2]);
					case 3:
						format(ranktext, 32, "%s", FactionInfo[PlayerInfo[giveplayerID][pFaction]][fRankName3]);
					case 4:
						format(ranktext, 32, "%s", FactionInfo[PlayerInfo[giveplayerID][pFaction]][fRankName4]);
					case 5:
						format(ranktext, 32, "%s", FactionInfo[PlayerInfo[giveplayerID][pFaction]][fRankName5]);
					case 6:
						format(ranktext, 32, "%s", FactionInfo[PlayerInfo[giveplayerID][pFaction]][fRankName6]);
				}

				format(string256, 256, "%s назначи %s за %s", accountNickname, giveplayerIDNickname, ranktext);
				SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
				RestartPlayerSkin(giveplayerID);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, защото не си лидер на Faction!");
		}

		return 1;
	}

	if (strcmp(cmd, "/canceljob", true) == 0)
	{
		if (JobInvite[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате покана за работа.");
		if (PlayerInfo[playerid][pJob] != JOB_NO) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече сте нает на работа.");
		new string256[256];
		SendClientMessage(playerid, COLOR_WHITE, "Вие отказахте да се присъедините към предложената ви работа.");
		JobInvite[playerid] = -1;
		return 1;
	}

	if (strcmp(cmd, "/acceptjob", true) == 0)
	{
		if (JobInvite[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате покана за работа.");
		if (PlayerInfo[playerid][pJob] != JOB_NO) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече сте нает на работа.");
		PlayerInfo[playerid][pJob] = JobInvite[playerid];
		JobInvite[playerid] = -1;
		new string256[256];
		SendClientMessage(playerid, COLOR_WHITE, "Вие се присъединихте към предложената ви работа.");
		new job = PlayerInfo[playerid][pJob];
		format(string256, 256, "Твоята нова работа е %s! За да видиш командите, използвай /jobhelp", JobInfo[job][jName]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		QuitJobProcess(playerid);
		return 1;
	}

	if (strcmp(cmd, "/cancelfaction", true) == 0 || strcmp(cmd, "/cf", true) == 0)
	{
		if (TeamInvite[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате покана за FACTION.");
		if (PlayerInfo[playerid][pFaction] != FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече сте във FACTION.");
		new string256[256];
		SendClientMessage(playerid, COLOR_FACTION, "Вие отказахте да се присъедините към организацията!");
		format(string256, 256, "%s отказа да се присъедини към вашата организация", accountNickname);
		SendFactionMessage(TeamInvite[playerid], COLOR_FACTION, string256);
		TeamInvite[playerid] = -1;
		return 1;
	}

	if (strcmp(cmd, "/setrank", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setrank [ID на играч] [rank]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		new rank = strval(tmp);
		if (PlayerInfo[giveplayerID][pFaction] != PlayerInfo[playerid][pFaction]) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е от твоята банда/мафия.");
		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да смениш своя ранг.");
		if (PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер.");
		if (rank > 5 || rank < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Ранговете са от 1 до 5.");
		new string256[256];
		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		PlayerInfo[giveplayerID][pRank] = rank;
		RestartPlayerSkin(giveplayerID);
		SetPlayerDefaultColor(giveplayerID);
		format(string256, 256, "%s промени твоят ранг на %d", accountNickname, rank);
		SendClientMessage(giveplayerID, COLOR_FACTION, string256);
		format(string256, 256, "%s промени ранга на %s на %d", accountNickname, giveplayerIDNickname, rank);
		SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
		return 1;
	}

	if (strcmp(cmd, "/acceptfaction", true) == 0 || strcmp(cmd, "/af", true) == 0)
	{
		if (TeamInvite[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате покана за FACTION.");
		if (PlayerInfo[playerid][pFaction] != FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече сте във FACTION.");
		PlayerInfo[playerid][pRank] = 1;
		PlayerInfo[playerid][pFaction] = TeamInvite[playerid];
		TeamInvite[playerid] = -1;
		new string256[256];
		SendClientMessage(playerid, COLOR_FACTION, "Вие се присъединихте към организацията, към която бяхте поканен!");
		format(string256, 256, "%s се присъедини към %s", accountNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
		SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
		SetPlayerDefaultColor(playerid);
		return 1;
	}

	if (strcmp(cmd, "/leavefaction", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте във FACTION.");
		new string256[256];
		format(string256, 256, "Вие пожелахте да напуснете %s", FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
		SendClientMessage(playerid, COLOR_FACTION, string256);
		format(string256, 256, "%s реши да напусне %s", accountNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
		SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			SetPoliceOffDuty(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_MEDIC)
		{
			SetMedicOffDuty(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_FBI)
		{
			SetFbiOffDuty(playerid);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_LS_ARMY || PlayerInfo[playerid][pFaction] == FACTION_LV_ARMY)
		{
			SetArmyOffDuty(playerid);
		}

		if (turfAttacker[playerid] == true)
		{
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new Faction = PlayerInfo[playerid][pFaction];
			format(string256, 256, "[FACTION TURF] %s излезе от бандата/мафията и отпадна от атаката на територията.", playeridNickname);
			SendFactionMessage(Faction, COLOR_TURF, string256);
			LeaveTurfAttacker(playerid);
		}

		PlayerInfo[playerid][pFaction] = FACTION_CIVILIAN;
		PlayerInfo[playerid][pRank] = 1;
		SetPlayerDefaultColor(playerid);
		if (policeSiren[playerid] != -1) RemovePlayerSiren(playerid);
		RemovePoliceBarricade(playerid);
		if (IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemoveArmourObjectIfNotLaw(playerid);
		PlayerInfo[playerid][pHelmetObject] = 0;
		RestartPlayerSkin(playerid);
		return 1;
	}

	if (strcmp(cmd, "/quitjob", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] == JOB_NO) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте нает на работа.");
		new string256[256];
		format(string256, 256, "Вие пожелахте да напуснете {40BF00}%s", JobInfo[PlayerInfo[playerid][pJob]][jName]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		PlayerInfo[playerid][pJob] = JOB_NO;
		PlayerInfo[playerid][pJobBoss] = 0;
		QuitJobProcess(playerid);
		return 1;
	}

	if (strcmp(cmd, "/demount", true) == 0)
	{
		if (PlayerInfo[playerid][pRank] == 6)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/demount [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изгониш себе си!");
			if (LegalFaction(PlayerInfo[giveplayerID][pFaction]) == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Въведеният играч не е член на легална организация!");
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			new string256[256];
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Government: Ти изгони %s от %s", giveplayerIDNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendClientMessage(playerid, COLOR_GOVERNMENT, string256);
			format(string256, 256, "Government: %s те изгони от %s", accountNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendClientMessage(giveplayerID, COLOR_GOVERNMENT, string256);
			format(string256, 256, "[GOVERNMENT] %s изгони %s от %s!", accountNickname, giveplayerIDNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_GOVERNMENT, string256);
			if (PlayerInfo[giveplayerID][pFaction] == FACTION_LSPD || PlayerInfo[giveplayerID][pFaction] == FACTION_LVPD)
			{
				SetPoliceOffDuty(giveplayerID);
			}

			if (PlayerInfo[giveplayerID][pFaction] == FACTION_MEDIC)
			{
				SetMedicOffDuty(giveplayerID);
			}

			if (PlayerInfo[giveplayerID][pFaction] == FACTION_FBI)
			{
				SetFbiOffDuty(giveplayerID);
			}

			if (PlayerInfo[giveplayerID][pFaction] == FACTION_LS_ARMY || PlayerInfo[giveplayerID][pFaction] == FACTION_LV_ARMY)
			{
				SetArmyOffDuty(giveplayerID);
			}

			PlayerInfo[giveplayerID][pFaction] = FACTION_CIVILIAN;
			PlayerInfo[giveplayerID][pRank] = 1;
			SetPlayerDefaultColor(giveplayerID);
			if (policeSiren[giveplayerID] != -1) RemovePlayerSiren(giveplayerID);
			RemovePoliceBarricade(giveplayerID);
			if (IsPlayerAttachedObjectSlotUsed(giveplayerID, 7)) RemoveArmourObjectIfNotLaw(giveplayerID);
			PlayerInfo[giveplayerID][pHelmetObject] = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, защото не си шеф на правителството!");
		}

		return 1;
	}

	if (strcmp(cmd, "/uninvite", true) == 0)
	{
		if (PlayerInfo[playerid][pRank] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/uninvite [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (PlayerInfo[giveplayerID][pFaction] != PlayerInfo[playerid][pFaction]) return SendClientMessage(playerid, COLOR_GRAD1, "Въведеният играч не е член на твоята организация!");
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			if (PlayerInfo[giveplayerID][pRank] == 6) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изгониш лидер!");
			if (PlayerInfo[playerid][pRank] == 5 && PlayerInfo[giveplayerID][pRank] == 5) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изгониш играч над 4-ти ранг!");
			new string256[256];
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти изгони %s от %s", giveplayerIDNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendClientMessage(playerid, COLOR_FACTION, string256);
			format(string256, 256, "%s те изгони от %s", accountNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendClientMessage(giveplayerID, COLOR_FACTION, string256);
			format(string256, 256, "%s изгони %s от %s", accountNickname, giveplayerIDNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
			if (PlayerInfo[giveplayerID][pFaction] == FACTION_LSPD || PlayerInfo[giveplayerID][pFaction] == FACTION_LVPD)
			{
				SetPoliceOffDuty(giveplayerID);
			}

			if (PlayerInfo[giveplayerID][pFaction] == FACTION_MEDIC)
			{
				SetMedicOffDuty(giveplayerID);
			}

			if (PlayerInfo[giveplayerID][pFaction] == FACTION_FBI)
			{
				SetFbiOffDuty(giveplayerID);
			}

			if (PlayerInfo[giveplayerID][pFaction] == FACTION_LS_ARMY || PlayerInfo[giveplayerID][pFaction] == FACTION_LV_ARMY)
			{
				SetArmyOffDuty(giveplayerID);
			}

			if (turfAttacker[giveplayerID] == true)
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, playeridNickname, 25);
				new Faction = PlayerInfo[giveplayerID][pFaction];
				format(string256, 256, "[FACTION TURF] %s излезе от бандата/мафията и отпадна от атаката на територията.", playeridNickname);
				SendFactionMessage(Faction, COLOR_TURF, string256);
				LeaveTurfAttacker(giveplayerID);
			}

			PlayerInfo[giveplayerID][pFaction] = FACTION_CIVILIAN;
			PlayerInfo[giveplayerID][pRank] = 1;
			SetPlayerDefaultColor(giveplayerID);
			if (policeSiren[giveplayerID] != -1) RemovePlayerSiren(giveplayerID);
			RemovePoliceBarricade(giveplayerID);
			if (IsPlayerAttachedObjectSlotUsed(giveplayerID, 7)) RemoveArmourObjectIfNotLaw(giveplayerID);
			PlayerInfo[giveplayerID][pHelmetObject] = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, защото не си лидер на Faction!");
		}

		return 1;
	}

	if (strcmp(cmd, "/jobuninvite", true) == 0)
	{
		if (PlayerInfo[playerid][pJobBoss] == 1)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/jobuninvite [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (PlayerInfo[giveplayerID][pJob] != PlayerInfo[playerid][pJob]) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не нает при теб.");
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			new string256[256];
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти изгони %s от {40BF00}%s", giveplayerIDNickname, JobInfo[PlayerInfo[playerid][pJob]][jName]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string256);
			format(string256, 256, "%s те изгони от {40BF00}%s", accountNickname, JobInfo[PlayerInfo[playerid][pJob]][jName]);
			SendClientMessage(giveplayerID, COLOR_LIGHTBLUE, string256);
			format(string256, 256, "[JOB] %s изгони %s от вашата работа.", accountNickname, giveplayerIDNickname);
			SendJobMessage(PlayerInfo[playerid][pJob], COLOR_JOB, string256);
			PlayerInfo[giveplayerID][pJob] = JOB_NO;
			PlayerInfo[giveplayerID][pJobBoss] = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шеф.");
		}

		return 1;
	}

	if (strcmp(cmd, "/jobinvite", true) == 0)
	{
		if (PlayerInfo[playerid][pJobBoss] == 1)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/jobinvite [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да поканиш себе си на работа.");
			if (PlayerInfo[giveplayerID][pJob] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е нает на работа.");
			JobInvite[giveplayerID] = PlayerInfo[playerid][pJob];
			new string256[256];
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти покани %s да работи към {40BF00}%s", giveplayerIDNickname, JobInfo[PlayerInfo[playerid][pJob]][jName]);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			format(string256, 256, "%s те покани да работиш към {40BF00}%s", accountNickname, JobInfo[PlayerInfo[playerid][pJob]][jName]);
			SendClientMessage(giveplayerID, COLOR_WHITE, string256);
			SendClientMessage(giveplayerID, COLOR_WHITE, "Използвай {40BF00}/acceptjob (за да приемеш) {ffffff}или {ff0000}/canceljob (за да откажеш)");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шеф.");
		}

		return 1;
	}

	if (strcmp(cmd, "/invite", true) == 0)
	{
		if (PlayerInfo[playerid][pRank] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/invite [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да поканиш себе си във FACTION.");
			if (PlayerInfo[giveplayerID][pFaction] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е във FACTION.");
			TeamInvite[giveplayerID] = PlayerInfo[playerid][pFaction];
			new string256[256];
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти покани %s да се присъедини към %s", giveplayerIDNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendClientMessage(playerid, COLOR_FACTION, string256);
			format(string256, 256, "%s те покани да се присъединиш към %s", accountNickname, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
			SendClientMessage(giveplayerID, COLOR_FACTION, string256);
			format(string256, 256, "%s покани %s да се присъедини към твоята организация", accountNickname, giveplayerIDNickname);
			SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_FACTION, string256);
			SendClientMessage(giveplayerID, COLOR_FACTION, "Използвай /acceptfaction(/af) за да приемеш или /cancelfaction(/cf) за да откажеш!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, защото не си лидер на Faction!");
		}

		return 1;
	}

	if (strcmp(cmd, "/meteroff", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] != JOB_TAXI)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази команда е само за хора, работещи като таксиджии.");
			return 1;
		}

		if (!IsPlayerDriver(playerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си шофьор на таксито.");
			return 1;
		}

		if (inTaxiVeh[playerid] == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в такси, преди да спреш сметката.");
			return 1;
		}

		new vehicleid = GetPlayerVehicleID(playerid);
		if (isTaxiVehWorking[vehicleid] == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Сметката не се начислява в момента.");
			return 1;
		}

		if (PlayerInfo[playerid][pTaxiDuty] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на смяна, като таксиджия!");
			return 1;
		}

		new string256[256];
		format(string256, 256, "Вие закарахте таксито до дестинацията. Тарифата е $%d.", VehicleInfo[vehicleid][vTaxiFare]);
		SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
		TextDrawHideForPlayer(playerid, FareStatus[playerid]);
		for (new i; i < MAX_PLAYERS; i++)
		{
			if (GetPlayerVehicleID(i) == vehicleid && !IsPlayerDriver(i))
			{
				format(string256, 256, "Таксито ви отведе до дестинацията, сега трябва да платите $%d.", VehicleInfo[vehicleid][vTaxiFare]);
				SendClientMessage(i, COLOR_LIGHTYELLOW, string256);
				TextDrawHideForPlayer(i, FareStatus[i]);
			}
		}

		VehicleInfo[vehicleid][vTaxiFare] = 0;
		VehicleTimerInfo[vehicleid][vtTaxiFareTimer] = 0;
		isTaxiVehWorking[vehicleid] = false;
		return 1;
	}

	if (strcmp(cmd, "/colorme", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 8.0, 1923.3948, -1792.1030, 13.3828))
		{
			if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте в превозно средство.");
			if (PlayerInfo[playerid][pCash] < 30) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $30 за да промените цвета на вашето превозно средство.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/colorme [color id 1] [color id 2]");
				return 1;
			}

			if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превозно средство!");
			new color1;
			color1 = strval(tmp);
			new color2;
			tmp = strtok(cmdtext, idx);
			color2 = strval(tmp);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/colorme [color id 1] [color id 2]");
				return 1;
			}

			ChangeVehicleColor(GetPlayerVehicleID(playerid), color1, color2);
			GivePlayerCash(playerid, -30);
			SendClientMessage(playerid, COLOR_MECHANICS, "Вие сменихте цвета на вашето превозно средство за $30");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте в гараж на механици.");
		}

		return 1;
	}

	if (strcmp(cmd, "/tune", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] == JOB_MECHANIC)
		{
			if (!IsPlayerInRangeOfPoint(playerid, 70.0, MechanicJob)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в гаража на механиците.");
			if (PlayerTimerInfo[playerid][ptWorkingVeh] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента поправяте друго превозно средство");
			new working;
			if (!IsPlayerInAnyVehicle(playerid))
			{
				for (new i; i < MAX_VEHICLES; i++)
				{
					if (IsPlayerInRangeOfVehicle(playerid, i, 5.0))
					{
						ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 13000);
						ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 13000);
						ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 13000);
						ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 13000);
						ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 13000);
						workingOnVeh[playerid] = i;
						MechanicCarmodDialog(playerid);
						working = 1;
					}
				}
			}

			if (working == 1)
			{
				PlayerTimerInfo[playerid][ptWorkingVeh] = 13;
				SendClientMessage(playerid, COLOR_MECHANICS, "Вие започнахте тунинга, изчакайте малко.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до превозно средство.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте механик.");
		}

		return 1;
	}

	if (strcmp(cmd, "/repair", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] == JOB_MECHANIC)
		{
			if (PlayerTimerInfo[playerid][ptWorkingVeh] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента поправяте друго превозно средство");
			new working;
			if (!IsPlayerInAnyVehicle(playerid))
			{
				for (new i; i < MAX_VEHICLES; i++)
				{
					if (IsPlayerInRangeOfVehicle(playerid, i, 5.0))
					{
						new Float: vehicleHealth;
						GetVehicleHealth(i, vehicleHealth);
						if (vehicleHealth < 999.0)
						{
							ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 8000);
							ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 8000);
							ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 8000);
							ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 8000);
							ApplyAnimationWithCondition(playerid, "CAR", "FIXN_CAR_LOOP", 4.1, 1, 1, 1, 1, 8000);
							workingOnVeh[playerid] = i;
							working = 1;
						}
					}
				}
			}

			if (working == 1)
			{
				PlayerTimerInfo[playerid][ptWorkingVeh] = 8;
				SendClientMessage(playerid, COLOR_MECHANICS, "Вие започнахте поправката, изчакайте малко.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до превозно средство, което е много наранено");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте механик.");
		}

		return 1;
	}

	/*
     if(strcmp(cmd, "/repairme", true)==0)
     {
     if(IsPlayerInRangeOfPoint(playerid,8.0,1923.3948,-1792.1030,13.3828))
	 {
     if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"Вие не сте в превозно средство.");
     new Float:vehicleHealth;
     GetVehicleHealth(GetPlayerVehicleID(playerid),vehicleHealth);
     if(vehicleHealth>=1000) return  SendClientMessage(playerid,COLOR_GRAD1,"Вашето превозно средство е в отлично състояние и няма нужда от поправка.");
     if(PlayerInfo[playerid][pCash] < 200) return SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате $200 за да поправите вашето превозно средство.");
     RepairVehicle(GetPlayerVehicleID(playerid));
     GivePlayerCash(playerid,-200);
     SendClientMessage(playerid,COLOR_MECHANICS,"Вие поправихте вашето превозно средство за $200");
     }
     else
     {
     SendClientMessage(playerid,COLOR_GRAD1,"Вие не сте в гараж на механици.");
     }

     return 1;
     }

     */
	if (strcmp(cmd, "/meteron", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] != JOB_TAXI)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази команда е само за хора, работещи като таксиджии!");
			return 1;
		}

		if (!IsPlayerDriver(playerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си шофьор на таксито!");
			return 1;
		}

		if (inTaxiVeh[playerid] == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в такси, преди да започнеш да начисляваш сметката!");
			return 1;
		}

		if (PlayerInfo[playerid][pTaxiDuty] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на смяна, като таксиджия!");
			return 1;
		}

		new vehicleid = GetPlayerVehicleID(playerid);
		if (isTaxiVehWorking[vehicleid] == true)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Сметката вече се начислява.");
			return 1;
		}

		SendClientMessage(playerid, COLOR_LIGHTYELLOW, "Вие започнахте да начислявате сметката.");
		SendClientMessage(playerid, COLOR_LIGHTYELLOW, "Не излизайте от таксито, преди да занесете клиента си, защото таксата ще бъде анулирана.");
		isTaxiVehWorking[vehicleid] = true;
		VehicleInfo[vehicleid][vTaxiFare] = 0;
		VehicleTimerInfo[vehicleid][vtTaxiFareTimer] = 5;
		TextDrawShowForPlayer(playerid, FareStatus[playerid]);
		UpdateFareText(playerid);
		for (new i; i < MAX_PLAYERS; i++)
		{
			if (GetPlayerVehicleID(i) == vehicleid && !IsPlayerDriver(playerid))
			{
				SendClientMessage(i, COLOR_LIGHTYELLOW, "Таксито започна да начислява сметката.");
				TextDrawShowForPlayer(i, FareStatus[i]);
				UpdateFareText(i);
			}
		}

		return 1;
	}

	if (strcmp("/boot", cmdtext, true, 10) == 0)
	{
		if (!IsPlayerDriver(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва да си в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
		if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
		}

		if (vehBOOTStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Багажникът беше {40BF00}Отворен");
			vehBOOTStatusON[GetPlayerVehicleID(playerid)] = true;
			ToggleBoot(vehicleid, VEHICLE_PARAMS_ON);
		}
		else
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Багажникът беше {FF0000}Затворен");
			vehBOOTStatusON[GetPlayerVehicleID(playerid)] = false;
			ToggleBoot(vehicleid, VEHICLE_PARAMS_OFF);
		}

		return 1;
	}

	if (strcmp("/bonnet", cmdtext, true, 10) == 0)
	{
		if (!IsPlayerDriver(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва да си в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
		if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
		}

		if (vehBONTEStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Капакът беше {40BF00}Отворен");
			vehBONTEStatusON[GetPlayerVehicleID(playerid)] = true;
			ToggleBonnet(vehicleid, VEHICLE_PARAMS_ON);
		}
		else
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Капакът беше {FF0000}Затворен");
			vehBONTEStatusON[GetPlayerVehicleID(playerid)] = false;
			ToggleBonnet(vehicleid, VEHICLE_PARAMS_OFF);
		}

		return 1;
	}

	if (strcmp("/lights", cmdtext, true, 10) == 0)
	{
		if (!IsPlayerDriver(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва да си в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
		if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
		}

		if (vehLONStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Фаровете бяха {40BF00}Включени");
			vehLONStatusON[GetPlayerVehicleID(playerid)] = true;
			ToggleLights(vehicleid, VEHICLE_PARAMS_ON);
		}
		else
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Фаровете бяха {FF0000}Изключени");
			vehLONStatusON[GetPlayerVehicleID(playerid)] = false;
			ToggleLights(vehicleid, VEHICLE_PARAMS_OFF);
		}

		return 1;
	}

	if (strcmp("/alarm", cmdtext, true, 10) == 0)
	{
		if (!IsPlayerDriver(playerid)) return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва да си в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
		if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
		}

		if (vehAlarmStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Алармата беше {40BF00}Включена");
			vehAlarmStatusON[GetPlayerVehicleID(playerid)] = true;
			ToggleAlarm(vehicleid, VEHICLE_PARAMS_ON);
		}
		else
		{
			SendInCarMessage(playerid, COLOR_WHITE, "> Алармата беше {FF0000}Изключена");
			vehAlarmStatusON[GetPlayerVehicleID(playerid)] = false;
			ToggleAlarm(vehicleid, VEHICLE_PARAMS_OFF);
		}

		return 1;
	}

	if (strcmp(cmd, "/unrent", true) == 0)
	{
		if(rentorVeh[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си наел личен транспорт!");
		UnRentPlayerVeh(playerid);
		SendClientMessage(playerid, COLOR_WHITE, "Ти освободи транспорта, който беше наел последно!");
		return 1;
	}

	if (strcmp(cmd, "/jlock", true) == 0)
	{
		if(rentorVeh[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си наел личен транспорт!");
		if(GetPlayerVehicleID(playerid) != vehRented[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в наетия от теб транспорт!");
		new vehID = GetPlayerVehicleID(playerid);
		if(VehicleInfo[vehID][vRentLock] == 0)
		{
			VehicleInfo[vehID][vRentLock] = 1;
			new string256[256];
			format(string256, 256, "* %s заключи вратите на наетия от него транспорт *", RealName(playerid));
			SendLocalMessage(8.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else
		{
			VehicleInfo[vehID][vRentLock] = 0;
			new string256[256];
			format(string256, 256, "* %s отключи вратите на наетия от него транспорт *", RealName(playerid));
			SendLocalMessage(8.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		return 1;
	}

	if (strcmp(cmd, "/olock", true) == 0)
	{
		if (!IsPlayerDriver(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в превозно средство като щофьор!");
		new vehID = GetPlayerVehicleID(playerid);
		if(VehicleInfo[vehID][vRentable] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да заключиш този транспорт!");
		if (vehLocker[playerid] == -1)
		{
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (i != playerid)
				{
					SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid), i, 0, 1);
				}
			}

			vehLocker[playerid] = GetPlayerVehicleID(playerid);
			SendClientMessage(playerid, 0x9ACD32FF, "* Вие заключихте вратите на превозното средство *");
			SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Когато излезете от превозното средство вратите автоматично ще се отключат!");
		}
		else if (vehLocker[playerid] != -1)
		{
			if (GetPlayerVehicleID(playerid) != vehLocker[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превоза, който заключи!");
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				if (i != playerid)
				{
					SetVehicleParamsForPlayer(GetPlayerVehicleID(playerid), i, 0, 0);
				}
			}

			vehLocker[playerid] = -1;
			SendClientMessage(playerid, 0x9ACD32FF, "* Вие отключихте вратите на превозното средство *");
		}

		return 1;
	}

	if (strcmp(cmdtext, "/parrot", true) == 0)
	{
		if (PlayerInfo[playerid][pVip] < 1)
		{
			return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
		}

		if (parrot[playerid] == false)
		{
			SendClientMessage(playerid, COLOR_VIP_ORANGE, "* Ти си сложи папагал! *");
			SetPlayerAttachedObject(playerid, 10, 19078, 15, 0.073592, 0.024750, 0.023458, 164.272216, 87.050361, 0.000000, 1.000000, 0.968321, 1.118647);
			EditAttachedObject(playerid, 10);
			parrot[playerid] = true;
		}
		else
		{
			parrot[playerid] = false;
			RemoveParrot(playerid);
			SendClientMessage(playerid, COLOR_VIP_ORANGE, "* Ти си махна папагала! *");
		}

		return 1;
	}

	if (strcmp(cmd, "/tow", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] != JOB_MECHANIC) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си механик!");
		if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в преовзно средство!");
		if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 525) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си във влекач!");
		new vehicleid = GetPlayerVehicleID(playerid);
		new Float: dist, Float: closedist = 8, closeveh;
		new Float: x, Float: y, Float: z;
		{
			if (IsTrailerAttachedToVehicle(vehicleid))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си закачил превозно средство!");
				return 1;
			}
		}

		for (new i = 0; i < MAX_VEHICLES; i++)
		{
			if (i != vehicleid && GetVehiclePos(i, x, y, z))
			{
				dist = GetPlayerDistanceFromPoint(playerid, x, y, z);
				if (dist < closedist)
				{
					closedist = dist;
					closeveh = i;
				}
			}
		}

		if (!closeveh) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си до превозно средство!");
		AttachTrailerToVehicle(closeveh, vehicleid);
		SendClientMessage(playerid, 0xFFFFFFFF, "Успешно закачи превозното средство.");
		return 1;
	}

	if (strcmp(cmd, "/jobs", true) == 0)
	{
		new string256[256];
		new job = PlayerInfo[playerid][pJob];
		SendClientMessage(playerid, 0xFF832DFF, "Job Statistics:");
		if (job != JOB_NO)
		{
			format(string256, 256, "JOB: В момента ти си нает, като %s", JobInfo[job][jName]);
			SendClientMessage(playerid, 0xFFCA16FF, string256);
		}
		else
		{
			SendClientMessage(playerid, 0xFFCA16FF, "JOB: В момента не си нает на постоянна работа");
		}

		new sweepTimer = PlayerInfo[playerid][pSweeperTimer];
		new coalmineTimer = PlayerInfo[playerid][pCoalmineTimer];
		new busTimer = PlayerInfo[playerid][pBusTimer];
		new deliverTimer = PlayerInfo[playerid][pDeliverTimer];
		new pizzaTimer = PlayerInfo[playerid][pPizzaTimer];

		new sweepPassed = PlayerInfo[playerid][pSweeperPassed];
		new coalminePassed = PlayerInfo[playerid][pCoalminePassed];
		new busPassed = PlayerInfo[playerid][pBusPassed];
		new pizzaPassed = PlayerInfo[playerid][pPizzaPassed];
		new deliverPassed = PlayerInfo[playerid][pDeliverPassed];

		new sweepToLevelUp = (PlayerInfo[playerid][pSweeperLevel] *25) - sweepPassed;
		new coalmineToLevelUp = (PlayerInfo[playerid][pCoalmineLevel] *25) - coalminePassed;
		new busToLevelUp = (PlayerInfo[playerid][pBusLevel] *25) - busPassed;
		new pizzaToLevelUp = (PlayerInfo[playerid][pPizzaLevel] *25) - pizzaPassed;
		new deliverToLevelUp = (PlayerInfo[playerid][pDeliverLevel] *25) - deliverPassed;

		new sweepLevel = PlayerInfo[playerid][pSweeperLevel];
		new busLevel = PlayerInfo[playerid][pBusLevel];
		new deliverLevel = PlayerInfo[playerid][pDeliverLevel];
		new pizzaLevel = PlayerInfo[playerid][pPizzaLevel];
		new coalmineLevel = PlayerInfo[playerid][pCoalmineLevel];
		format(string256, 256, "SWEEP: Брой минавания: %d, Level: %d (%d jobs until levelup), Spam Timer: %d minutes", sweepPassed, sweepLevel, sweepToLevelUp, sweepTimer / 60);
		SendClientMessage(playerid, 0xFFCA16FF, string256);
		format(string256, 256, "COALMINE: Брой минавания: %d, Level: %d (%d jobs until levelup), Spam Timer: %d minutes", coalminePassed, coalmineLevel, coalmineToLevelUp, coalmineTimer / 60);
		SendClientMessage(playerid, 0xFFCA16FF, string256);
		format(string256, 256, "BUS: Брой минавания: %d, Level: %d (%d jobs until levelup), Spam Timer: %d minutes", busPassed, busLevel, busToLevelUp, busTimer / 60);
		SendClientMessage(playerid, 0xFFCA16FF, string256);
		format(string256, 256, "DELIVER: Брой минавания: %d, Level: %d (%d jobs until levelup), Spam Timer: %d minutes", deliverPassed, deliverLevel, deliverToLevelUp, deliverTimer / 60);
		SendClientMessage(playerid, 0xFFCA16FF, string256);
		format(string256, 256, "PIZZABOY: Брой минавания: %d, Level: %d (%d jobs until levelup), Spam Timer: %d minutes", pizzaPassed, pizzaLevel, pizzaToLevelUp, pizzaTimer / 60);
		SendClientMessage(playerid, 0xFFCA16FF, string256);
		return 1;
	}
	
	if (strcmp(cmd, "/fuelstations", true) == 0)
    {
        if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да работиш във Fuel Co за да имаш достъп до тази команда!");
        new string2230[512];
        new string2230result[2230];
        for (new i; i < MAX_FUEL_STATIONS; i++)
        {
            format(string2230, sizeof(string2230), "{0040FF}Бензиностанция: {FFFFFF}%s {FF0000} Бензин: {F97804}%d L\n", FuelStationInfo[i][fsLocation], FuelStationInfo[i][fsFuel]);
            strcat(string2230result, string2230);
        }
        ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_LIST, "{0040FF}Бензиностанции", string2230result, "Излез", "");
        return 1;
    }

    if (strcmp(cmd, "/fuelgps", true) == 0)
    {
        if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да работиш във Fuel Co за да имаш достъп до тази команда!");
        if (!PlayerInfo[playerid][pGPS]) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш GPS в себе си!");
        new string2230[512];
        new string2230result[2230];
        for (new i; i < MAX_FUEL_STATIONS; i++)
        {
            format(string2230, sizeof(string2230), "{0040FF}Бензиностанция: {F97804}%s\n", FuelStationInfo[i][fsLocation], FuelStationInfo[i][fsFuel]);
            strcat(string2230result, string2230);
        }
        ShowPlayerDialog(playerid, DIALOG_FUELSTATIONS_GPS, DIALOG_STYLE_LIST, "{0040FF}Бензиностанции GPS", string2230result, "Напред", "Затвори");
        return 1;
    }

    if (strcmp(cmd, "/refillgs", true) == 0)
    {
        if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да работиш във Fuel Co за да имаш достъп до тази команда!");
        if (!PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на смяна във Fuel Company за да използваш тази команда!");
        new vehicleid = GetPlayerVehicleID(playerid);
        if (!isFuelComapnyVeh[vehicleid]) return SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не принадлежи на Fuel Company!");
        if (!fuelTruckHasTrailer[vehicleid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си закачил цистерната!");
        if (GetFuelStation(playerid) != -1)
        {
            new fuelStationID = GetFuelStation(playerid);
            if (FuelStationInfo[fuelStationID][fsFuel] >= 4300 && !scripterMode[playerid]) return SendClientMessage(playerid, COLOR_GRAD1, "Бензиностанцията няма нужда от зареждане в момента!");
            new trailerid = GetVehicleTrailer(vehicleid);
            new liters = 5000 - FuelStationInfo[fuelStationID][fsFuel];
            if (VehicleInfo[trailerid][vTankFuel] < liters) return SendClientMessage(playerid, COLOR_GRAD1, "Цистерната няма достатъчно бензин!");
            new reward = 1000 + liters;
            new string256[256];
            format(string256, sizeof(string256), "Ти зареди бензиностанцията с %d литра и твоята печалба е {40BF00}$%d и 2 Exp", liters, reward);
            SendClientMessage(playerid, COLOR_WHITE, string256);
            GivePlayerExp(playerid, 2);
            GivePlayerCash(playerid, reward);
            FuelStationInfo[fuelStationID][fsFuel] = 5000;
            VehicleInfo[trailerid][vTankFuel] -= liters;
            UpdateFuelStation3DText(fuelStationID);
        }
        else
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си близо до бензиностанция!");
        }

        return 1;
    }

    if (strcmp(cmd, "/refillpt", true) == 0)
    {
        if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да работиш във Fuel Co за да имаш достъп до тази команда!");
        if (!PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на смяна във Fuel Company за да използваш тази команда!");
        new vehicleid = GetPlayerVehicleID(playerid);
        if (!isFuelComapnyVeh[vehicleid]) return SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не принадлежи на Fuel Company!");
        if (!IsPlayerInRangeOfPoint(playerid, 20.0 , 264.3938,1457.5801,10.5859)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си близо до мястото за зареждане на бензин!");
        if (!fuelTruckHasTrailer[vehicleid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си закачил цистерната!");
        new string2230[512];
        new string2230result[2230];
        new trailerid = GetVehicleTrailer(vehicleid);
        format(string2230, sizeof(string2230), "{FF0000}Напиши отдолу колко литра искаш да заредиш в цистерната\n");
        strcat(string2230result, string2230);
        format(string2230, sizeof(string2230), "{FFFFFF}За да заредиш цистерната догоре ти трябват {ffff00}%d {FFFFFF}литра", 10000 - VehicleInfo[trailerid][vTankFuel]);
        strcat(string2230result, string2230);
        ShowPlayerDialog(playerid, DIALOG_FUELSTATIONS_REFILLPT, DIALOG_STYLE_INPUT, "{0040FF}Refill", string2230result, "Зареди", "Затвори");
        return 1;
    }

	if (strcmp(cmd, "/jobhelp", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] == JOB_MECHANIC)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Mechanic: /repair /tune /tow");
		}

		if (PlayerInfo[playerid][pJob] == JOB_BANKER)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Banker: /giveloan");
		}
		else if (PlayerInfo[playerid][pJob] == JOB_TAXI)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Taxi Driver: /taxiduty /meteron /meteroff");
		}
		else if (PlayerInfo[playerid][pJob] == JOB_FUELCOMPANY)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Fuel Company: /fuelcoduty /fuelstations /fuelgps /refillpt /refillgs");
		}

		SendClientMessage(playerid, COLOR_YELLOW, "Основни Job команди: {FFFFFF}За достъп до основните команди, използвай /help");
		return 1;
	}

	if (strcmp(cmd, "/gift", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 5, 1480.3031, -1702.7001, 14.5226))
		{
			if (PlayerInfo[playerid][pGiftPaydays] >= 2)
			{
				new string256[256];
				new randomGift = randomex(0, 2);
				if(randomGift == 0)
				{
					new randomExp = randomex(1, 3);
					format(string256, 256, "Поздравления, ти отвори %d Exp от кутията с подаръци", randomExp);
					SendClientMessage(playerid, COLOR_GIFT, string256);
					format(string256, 256, "Поздравления на %s ! Паднаха му се %d Exp от кутията с подаръци", GetAccountNickname(playerid), randomExp);
					SendClientMessageToAll(COLOR_GIFT, string256);
				}
				else if(randomGift == 1)
				{
					new randomCash = randomex(500, 4000);
					format(string256, 256, "Поздравления, ти отвори $%d от кутията с подаръци", randomCash);
					SendClientMessage(playerid, COLOR_GIFT, string256);
					format(string256, 256, "Поздравления на %s ! Паднаха му се $%d от кутията с подаръци", GetAccountNickname(playerid), randomCash);
					SendClientMessageToAll(COLOR_GIFT, string256);
				}
				new randomBonusGift = randomex(0, 12);
				if (PlayerInfo[playerid][pVip] == 1)
				{
					randomBonusGift = randomex(0, 8);
				}

				if (PlayerInfo[playerid][pVip] == 2)
				{
					randomBonusGift = randomex(0, 7);
				}

				if (PlayerInfo[playerid][pVip] == 3)
				{
					randomBonusGift = randomex(0, 6);
				}
				if(randomBonusGift <= 3)
				{
					new randomomBonus_Gift = randomex(0, 2);
					if(randomomBonus_Gift == 0)
					{
						new randomExp = randomex(1, 3);
						format(string256, 256, "Явно ти се падна и бонус! Бонусът от подаръка е %d Exp", randomExp);
						SendClientMessage(playerid, COLOR_GIFT, string256);
					}
					else if(randomomBonus_Gift == 1)
					{
						new randomCash = randomex(500, 4000);
						format(string256, 256, "Явно ти се падна и бонус! Бонусът от подаръка е $%d", randomCash);
						SendClientMessage(playerid, COLOR_GIFT, string256);
					}
				}
				PlayerInfo[playerid][pGiftPaydays] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GIFT, "Вие още нямате подаръци, получавате ги при 2 Payday-а!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на място за вземане на подаръци!");
		}
		return 1;
	}

	if (strcmp(cmd, "/spawn", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		new tmp2 = strval(tmp);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Използвай: /spawn [1-4]");
			SendClientMessage(playerid, COLOR_WHITE, "1: Faction, 2: Civilian, 3: House, 4: Bizz");
			return 1;
		}

		if (tmp2 < 1 || tmp2 > 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази опция не съществува!");
		}

		if (tmp2 == 1)
		{
			if (PlayerInfo[playerid][pSpawn] == FACTION_SPAWN) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят spawn вече е на Faction!");
			SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на Faction!");
			PlayerInfo[playerid][pSpawn] = FACTION_SPAWN;
		}
		else if (tmp2 == 2)
		{
			if (PlayerInfo[playerid][pSpawn] == CIVIL_LS_SPAWN) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят spawn вече е на Civilian Los Santos!");
			SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на Civilian Los Santos!");
			PlayerInfo[playerid][pSpawn] = CIVIL_LS_SPAWN;
		}
		else if (tmp2 == 3)
		{
			if (PlayerInfo[playerid][pHouseO] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща до която да се Spawn!");
			if (PlayerInfo[playerid][pSpawn] == HOUSE_SPAWN) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят spawn вече е на House!");
			SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на House!");
			PlayerInfo[playerid][pSpawn] = HOUSE_SPAWN;
		}
		else if (tmp2 == 4)
		{
			if (PlayerInfo[playerid][pBizO] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш бизнес до който да се Spawn!");
			if (PlayerInfo[playerid][pSpawn] == BIZ_SPAWN) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят spawn вече е на Biz!");
			SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на Biz!");
			PlayerInfo[playerid][pSpawn] = BIZ_SPAWN;
		}

		return 1;
	}

	if (strcmp(cmd, "/animhelp", true) == 0)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE2, "Използвайте копчето N за да направите анимация.");
		return 1;
	}

	if (strcmp(cmd, "/vehhelp", true) == 0)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE2, "Използвайте копчето N за да използвате багажника,фаровете,капака и алармата.");
		return 1;
	}

	if (strcmp(cmd, "/gps", true) == 0)
	{
		if (PlayerInfo[playerid][pGPS] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате GPS, който да използвате.");
		new string256[256];
		format(string256, 256, "%s си извади навигатора.", RealName(playerid));
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		ShowPlayerGPS(playerid);
		return 1;
	}

	if (strcmp(cmd, "/fbtag", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/fbtag [ID на играч] [text]");
			return 1;
		}

		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		if (PlayerInfo[playerid][pPhoneStatusOFF] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Телефонът ти е изключен в момента!");
		if (PlayerInfo[playerid][pTelenorMB] < 30) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате поне 30 MB Internet!");
		if (SocStatus == false) return SendClientMessage(playerid, COLOR_GRAD1, "Социалните мрежи в момента са изключени!");
		new giveplayerID = strval(tmp);
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (playerid == giveplayerID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да тагнеш себе си!");
			return 1;
		}

		if (isLogged[giveplayerID] == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Играчът все още не е в профила си!");
			return 1;
		}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/fbtag [ID на играч] [text]");
			return 1;
		}

		new string256[256];
		format(string256, 256, "[FaceBook] {FFFFFF}%s tagged %s and posts: %s", GetPlayerRpName(playerid), GetPlayerRpName(giveplayerID), result);
		SendClientMessageToAll(COLOR_FACEBOOK, string256);
		format(string256, 256, "[FaceBook] Вие бяхте тагнат от %s", GetPlayerRpName(playerid));
		SendClientMessage(giveplayerID, COLOR_FACEBOOK, string256);
		format(string256, 256, "[FaceBook] Вие тагнахте %s", GetPlayerRpName(giveplayerID));
		SendClientMessage(playerid, COLOR_FACEBOOK, string256);
		SendClientMessage(playerid, COLOR_WHITE, "Telenor: Вие използвахте 30 MB от вашия интернет!");
		PlayerInfo[playerid][pTelenorMB] -= 30;
		return 1;
	}

	if (strcmp(cmd, "/facebook", true) == 0)
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		if (PlayerInfo[playerid][pPhoneStatusOFF] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Телефонът ти е изключен в момента!");
		if (PlayerInfo[playerid][pTelenorMB] < 20) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате поне 20 MB Internet!");
		if (SocStatus == false) return SendClientMessage(playerid, COLOR_GRAD1, "Социалните мрежи в момента са изключени!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/facebook [text]");
			return 1;
		}

		new string256[256];
		format(string256, 256, "{FFFFFF}[{0074F7}FaceBook{FFFFFF}] %s {FFFFFF}posts: %s", GetPlayerRpName(playerid), result);
		SendClientMessageToAll(COLOR_FACEBOOK, string256);
		SendClientMessage(playerid, COLOR_WHITE, "Telenor: Вие използвахте 20 MB от вашия интернет!");
		PlayerInfo[playerid][pTelenorMB] -= 20;
		return 1;
	}

	if (strcmp(cmd, "/twitter", true) == 0)
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		if (PlayerInfo[playerid][pPhoneStatusOFF] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Телефонът ти е изключен в момента!");
		if (PlayerInfo[playerid][pTelenorMB] < 20) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате поне 20 MB Internet!");
		if (SocStatus == false) return SendClientMessage(playerid, COLOR_GRAD1, "Социалните мрежи в момента са изключени!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/twitter [text]");
			return 1;
		}

		new string256[256];
		format(string256, 256, "{FFFFFF}[{27F5F4}Twitter{FFFFFF}] %s {FFFFFF}posts: %s", GetPlayerRpName(playerid), result);
		SendClientMessageToAll(COLOR_TWITTER, string256);
		SendClientMessage(playerid, COLOR_WHITE, "Telenor: Вие използвахте 20 MB от вашия интернет!");
		PlayerInfo[playerid][pTelenorMB] -= 20;
		return 1;
	}

	if (strcmp(cmd, "/darkweb", true) == 0)
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		if (PlayerInfo[playerid][pPhoneStatusOFF] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Телефонът ти е изключен в момента!");
		if (SocStatus == false) return SendClientMessage(playerid, COLOR_GRAD1, "Социалните мрежи в момента са изключени!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/darkweb [text]");
			return 1;
		}

		if (PlayerInfo[playerid][pCash] < 500) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $500 за да пуснете публикация.");
		GivePlayerCash(playerid, -500);
		new string256[256];
		format(string256, 256, "{FFFFFF}[{F70000}DarkWeb{FFFFFF}]{F70000} Нова Публикация: {FFFFFF} %s", result);
		SendClientMessageToAll(COLOR_DARKWEB, string256);
		return 1;
	}

	if (strcmp(cmd, "/advert", true) == 0)
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		if (PlayerInfo[playerid][pPhoneStatusOFF] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Телефонът ти е изключен в момента!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/advert [text]");
			SendClientMessage(playerid, COLOR_WHITE, "Цена: $4500 за обява");
			return 1;
		}

		if (PlayerInfo[playerid][pCash] < 4500) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $4500 за да пуснете обява!");
		GivePlayerCash(playerid, -4500);
		new string256[256];
		format(string256, 256, "{FFFFFF}[{ECF700}Advertisiment{FFFFFF}] %s {ECF700}Телефон: %d", result, PlayerInfo[playerid][pPhoneNum]);
		SendClientMessageToAll(COLOR_ADVERT, string256);
		return 1;
	}

	if (strcmp(cmd, "/phone", true) == 0)
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		if (PlayerInfo[playerid][pPhoneStatusOFF] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Телефонът ти е изключен в момента!");
		if (PhoneShow[playerid] == false)
		{
			SendClientMessage(playerid, COLOR_PHONE, "Използвай /phone отново или ESC за да оставиш телефона!");
			ShowPlayerPhoneMenu(playerid);
			SelectTextDraw(playerid, 0xFFD900FF);
			PhoneShow[playerid] = true;
			new string256[256];
			format(string256, 256, "%s си извади телефона.", RealName(playerid));
			SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else if (PhoneShow[playerid] == true)
		{
			HidePlayerPhone(playerid);
			CancelSelectTextDraw(playerid);
			PhoneShow[playerid] = false;
			new string256[256];
			format(string256, 256, "%s прибра своя телефон.", RealName(playerid));
			SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/closephone", true) == 0 || strcmp(cmd, "/clphone", true) == 0)
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		if (phoneConnected[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не разговаряш по телефона");
		SendClientMessage(playerid, COLOR_PHONE, "Вие затворихте на телефона с който разговаряхте.");
		SendClientMessage(phoneConnected[playerid], COLOR_PHONE, "Телефона с който разговаряхте ви затвори.");
		new connected = phoneConnected[playerid];
		phoneConnected[connected] = -1;
		phoneConnected[playerid] = -1;
		new string256[256];
		format(string256, 256, "* %s затвори обаждането и прибра телефона си в джоба!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		return 1;
	}

	if (strcmp(cmd, "/phoneon", true) == 0 || strcmp(cmd, "/pon", true) == 0)
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		if (PlayerInfo[playerid][pPhoneStatusOFF] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вече ти е включен телефона!");
		SendClientMessage(playerid, COLOR_PHONE, "Ти задържа копчето на телефона и го включи!");
		new string256[256];
		format(string256, 256, "* %s задържа копчето на телефона си и той се включи!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		PlayerInfo[playerid][pPhoneStatusOFF] = 0;
		return 1;
	}

	if (strcmp(cmd, "/phoneshow", true) == 0)
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		if (PlayerInfo[playerid][pPhoneHide] == 0)
		{
			SendClientMessage(playerid, COLOR_PHONE, "Ти скри телефонния си номер от Phonebook!");
			PlayerInfo[playerid][pPhoneHide] = 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_PHONE, "Ти разреши да бъде показан телефонния ти номер в Phonebook!");
			PlayerInfo[playerid][pPhoneHide] = 0;
		}

		return 1;
	}

	if (strcmp(cmd, "/phoneoff", true) == 0 || strcmp(cmd, "/poff", true) == 0)
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		if (PlayerInfo[playerid][pPhoneStatusOFF] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вече ти е изключен телефона!");
		if (phoneConnected[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента разговаряш по телефона!");
		SendClientMessage(playerid, COLOR_PHONE, "Ти задържа копчето на телефона и го изключи!");
		new string256[256];
		format(string256, 256, "* %s задържа копчето на телефона си и той се изключи!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		PlayerInfo[playerid][pPhoneStatusOFF] = 1;
		if (PhoneShow[playerid] == true)
		{
			HidePlayerPhone(playerid);
			CancelSelectTextDraw(playerid);
			PhoneShow[playerid] = false;
		}

		return 1;
	}

	if (strcmp(cmd, "/phoneinfo", true) == 0 || strcmp(cmd, "/pinfo", true) == 0)
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		new string256[256];
		format(string256, 256, "Вашият Телефонен номер: {FFFFFF}%d", PlayerInfo[playerid][pPhoneNum]);
		SendClientMessage(playerid, COLOR_PHONE, string256);
		if (PlayerInfo[playerid][pPhoneStatusOFF] == 1)
		{
			SendClientMessage(playerid, COLOR_PHONE, "Статус: {FF0000}Изключен");
		}
		else if (PlayerInfo[playerid][pPhoneStatusOFF] == 0)
		{
			SendClientMessage(playerid, COLOR_PHONE, "Статус: {40BF00}Включен");
		}

		return 1;
	}

	if (strcmp(cmd, "/hangup", true) == 0 || strcmp(cmd, "/h", true) == 0)
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		if (PlayerInfo[playerid][pPhoneStatusOFF] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Телефонът ти е изключен в момента!");
		AnswerPhone(playerid);
		return 1;
	}

	if (strcmp(cmd, "/cancelbiz", true) == 0)
	{
		if (bizOffererOfferTo[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си предложил бизнеса си!");
		new bizOfferedTo = bizOffererOfferTo[playerid];
		new offereredToNickname[MAX_PLAYER_NAME];
		GetPlayerName(bizOfferedTo, offereredToNickname, 25);
		new string256[256];
		format(string256, 256, "%s отказа да продаде бизнеса си на теб!", offereredToNickname);
		SendClientMessage(bizOfferedTo, COLOR_BIZ, string256);
		SendClientMessage(playerid, COLOR_BIZ, "Ти отказа да продадеш бизнеса си!");
		bizBuyerBuyFrom[bizOfferedTo] = -1;
		bizOffererOfferTo[playerid] = -1;
		return 1;
	}

	if (strcmp(cmd, "/cancelhouse", true) == 0)
	{
		if (houseOffererOfferTo[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си предложил къщата си!");
		new houseOfferedTo = houseOffererOfferTo[playerid];
		new offereredToNickname[MAX_PLAYER_NAME];
		GetPlayerName(houseOfferedTo, offereredToNickname, 25);
		new string256[256];
		format(string256, 256, "%s отказа да продаде къщата си на теб!", offereredToNickname);
		SendClientMessage(houseOfferedTo, COLOR_HOUSE, string256);
		SendClientMessage(playerid, COLOR_HOUSE, "Ти отказа да продадеш къщата си!");
		houseBuyerBuyFrom[houseOfferedTo] = -1;
		houseOffererOfferTo[playerid] = -1;
		return 1;
	}

	if (strcmp(cmd, "/chouse", true) == 0)
	{
		if (houseBuyerBuyFrom[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба!");
		new houseOfferer = houseBuyerBuyFrom[playerid];
		new offererNickname[MAX_PLAYER_NAME];
		GetPlayerName(houseOfferer, offererNickname, 25);
		new string256[256];
		format(string256, 256, "%s отказа да купи твоята къща!", offererNickname);
		SendClientMessage(houseOfferer, COLOR_HOUSE, string256);
		SendClientMessage(playerid, COLOR_HOUSE, "Ти отказа да купиш къщата!");
		houseBuyerBuyFrom[playerid] = -1;
		houseOffererOfferTo[houseOfferer] = -1;
		return 1;
	}

	if (strcmp(cmd, "/ahouse", true) == 0)
	{
		if (houseBuyerBuyFrom[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба!");
		if (PlayerInfo[playerid][pHouseO] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш купена къща!");
		new houseOfferer = houseBuyerBuyFrom[playerid];
		new housePrice = houseOfferPrice[houseOfferer];
		if (PlayerInfo[playerid][pCash] < housePrice) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари в брой за покупката!");
		new offererNickname[MAX_PLAYER_NAME];
		GetPlayerName(houseOfferer, offererNickname, 25);
		new houseIndex = PlayerInfo[houseOfferer][pHouseO];
		new string256[256];
		format(string256, 256, "Ти купи къщата на %s за $%d!", offererNickname, housePrice);
		SendClientMessage(playerid, COLOR_HOUSE, string256);

		format(string256, 256, "%s купи къщата ти за $%d!", accountNickname, housePrice);
		SendClientMessage(houseOfferer, COLOR_HOUSE, string256);

		if (PlayerInfo[houseOfferer][pSpawn] == HOUSE_SPAWN) SetToFactionSpawnWithText(houseOfferer);
		PlayerInfo[playerid][pHouseO] = houseIndex;
		PlayerInfo[houseOfferer][pHouseO] = -1;
		GivePlayerCash(playerid, -housePrice);
		GivePlayerCash(houseOfferer, housePrice);
		format(HouseInfo[houseIndex][hOwnerName], 256, "%s", accountNickname);
		SaveHouse(houseIndex);
		houseBuyerBuyFrom[playerid] = -1;
		houseOffererOfferTo[houseOfferer] = -1;
		if (PlayerInfo[playerid][pAchievement][ACHIEVEMENT_BUYHOUSE] == 0)
		{
			format(string256, 256, "Постижение: Купи си къща\n\nНаграда: 3 Exp");
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Achievement Unlocked", string256, "OK", "");
			PlayerInfo[playerid][pAchievement][ACHIEVEMENT_BUYHOUSE] = 1;
			GivePlayerExp(playerid, 3);
		}
		UpdateHouse3DText(houseIndex);
		return 1;
	}

	if (strcmp(cmd, "/abiz", true) == 0)
	{
		if (bizBuyerBuyFrom[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба!");
		if (PlayerInfo[playerid][pBizO] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш купен бизнес!");
		new bizOfferer = bizBuyerBuyFrom[playerid];
		new bizPrice = bizOfferPrice[bizOfferer];
		if (PlayerInfo[playerid][pCash] < bizPrice) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари в брой за покупката!");
		new offererNickname[MAX_PLAYER_NAME];
		GetPlayerName(bizOfferer, offererNickname, 25);
		new bizIndex = PlayerInfo[bizOfferer][pBizO];
		new string256[256];
		format(string256, 256, "Ти купи бизнеса на %s за $%d!", offererNickname, bizPrice);
		SendClientMessage(playerid, COLOR_BIZ, string256);
		format(string256, 256, "%s купи бизнеса ти за $%d!", accountNickname, bizPrice);
		SendClientMessage(bizOfferer, COLOR_BIZ, string256);
		PlayerInfo[playerid][pBizO] = bizIndex;
		PlayerInfo[bizOfferer][pBizO] = -1;
		GivePlayerCash(playerid, -bizPrice);
		GivePlayerCash(bizOfferer, bizPrice);
		format(BizInfo[bizIndex][bOwnerName], 256, "%s", accountNickname);
		SaveBiz(bizIndex);
		if (PlayerInfo[bizOfferer][pSpawn] == BIZ_SPAWN) SetToFactionSpawnWithText(bizOfferer);
		bizBuyerBuyFrom[playerid] = -1;
		bizOffererOfferTo[bizOfferer] = -1;
		if (PlayerInfo[playerid][pAchievement][ACHIEVEMENT_BUYBIZ] == 0)
		{
			format(string256, 256, "Постижение: Купи си бизнес\n\nНаграда: 3 Exp");
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Achievement Unlocked", string256, "OK", "");
			PlayerInfo[playerid][pAchievement][ACHIEVEMENT_BUYBIZ] = 1;
			GivePlayerExp(playerid, 3);
		}
		UpdateBiz3DText(bizIndex);
		return 1;
	}

	if (strcmp(cmd, "/cbiz", true) == 0)
	{
		if (bizBuyerBuyFrom[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба!");
		new bizOfferer = bizBuyerBuyFrom[playerid];
		new offererNickname[MAX_PLAYER_NAME];
		GetPlayerName(bizOfferer, offererNickname, 25);
		new string256[256];
		format(string256, 256, "%s отказа да купи твоя бизнес!", offererNickname);
		SendClientMessage(bizOfferer, COLOR_BIZ, string256);
		SendClientMessage(playerid, COLOR_BIZ, "Ти отказа да купиш бизнеса!");
		bizBuyerBuyFrom[playerid] = -1;
		bizOffererOfferTo[bizOfferer] = -1;
		return 1;
	}

	if (strcmp(cmd, "/psellbiz", true) == 0)
	{
		if (PlayerInfo[playerid][pBizO] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате бизнес!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/psellbiz [ID на играч][price]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/psellbiz [ID на играч][price]");
			return 1;
		}

		new price = strval(tmp);
		if (giveplayerID == INVALID_PLAYER_ID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
			return 1;
		}

		new giveplayerNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerNickname, 25);
		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да предложиш на себе си бизнес!");
		if (!CorDetector(10.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне на 10 метра от играча!");
		if (!(price < 1 || price > 3000000000)) return SendClientMessage(playerid, COLOR_GRAD1, "Цената трябва да бъде между $1 и $300000000!");
		if (bizOffererOfferTo[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вече си предложил бизнеса си за продажба!");
		if (bizBuyerBuyFrom[giveplayerID] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът вече има предложение за продажба на бизнес!");
		if (bizBuyerBuyFrom[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо отговори на твоето предложение за продажба, което получи!");
		if (PlayerInfo[giveplayerID][pBizO] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът вече има бизнес!");
		new bizID = PlayerInfo[playerid][pBizO];
		new bizLevel = BizInfo[bizID][bLevel];
		if (PlayerInfo[giveplayerID][pLevel] < bizLevel) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът няма нужното ниво за твоя бизнес!");
		new string256[256];
		format(string256, 256, "Ти предложи бизнеса си на %s за $%d!", giveplayerNickname, price);
		SendClientMessage(playerid, COLOR_BIZ, string256);
		SendClientMessage(playerid, COLOR_BIZ, "Използвай /cancelbiz - за да откажеш продажбата!");
		format(string256, 256, "%s ти предложи неговия бизнес за $%d!", accountNickname, price);
		SendClientMessage(giveplayerID, COLOR_BIZ, string256);
		SendClientMessage(giveplayerID, COLOR_BIZ, "/abiz - за да приемеш, /cbiz - за да откажеш");
		bizOffererOfferTo[playerid] = giveplayerID;
		bizOfferPrice[playerid] = price;
		bizBuyerBuyFrom[giveplayerID] = playerid;
		return 1;
	}

	if (strcmp(cmd, "/psellhouse", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseO] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате къща!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/psellhouse [ID на играч][price]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/psellhouse [ID на играч][price]");
			return 1;
		}

		new price = strval(tmp);
		if (giveplayerID == INVALID_PLAYER_ID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
			return 1;
		}

		new giveplayerNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerNickname, 25);
		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да предложиш на себе си къща!");
		if (!CorDetector(10.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне на 10 метра от играча!");
		if (!(price < 1 || price > 3000000000)) return SendClientMessage(playerid, COLOR_GRAD1, "Цената трябва да бъде между $1 и $300000000!");
		if (houseOffererOfferTo[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вече си предложил къщата си за продажба!");
		if (houseBuyerBuyFrom[giveplayerID] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът вече има предложение за продажба на къща!");
		if (houseBuyerBuyFrom[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо отговори на твоето предложение за продажба, което получи!");
		if (PlayerInfo[giveplayerID][pHouseO] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът вече има къща!");
		new houseID = PlayerInfo[playerid][pHouseO];
		new houseLevel = HouseInfo[houseID][hLevel];
		if (PlayerInfo[giveplayerID][pLevel] < houseLevel) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът няма нужното ниво за твоята къща!");
		new string256[256];
		format(string256, 256, "Ти предложи къщата си на %s за $%d!", giveplayerNickname, price);
		SendClientMessage(playerid, COLOR_HOUSE, string256);
		SendClientMessage(playerid, COLOR_HOUSE, "Използвай /cancelhouse - за да откажеш продажбата!");
		format(string256, 256, "%s ти предложи неговата къща за $%d!", accountNickname, price);
		SendClientMessage(giveplayerID, COLOR_HOUSE, string256);
		SendClientMessage(giveplayerID, COLOR_HOUSE, "/ahouse - за да приемеш, /chouse - за да откажеш");
		houseOffererOfferTo[playerid] = giveplayerID;
		houseOfferPrice[playerid] = price;
		houseBuyerBuyFrom[giveplayerID] = playerid;

		return 1;
	}

	if (strcmp(cmd, "/sellveh", true) == 0)
	{
		if (GetPrivateVehsNumber(playerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате лично превозно средство.");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellveh[playerid] [slot: 1-3][price]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellveh[playerid] [slot: 1-3][price]");
			return 1;
		}

		new slot;
		slot = strval(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellveh[playerid] [slot: 1-3][price]");
			return 1;
		}

		new price;
		price = strval(tmp);
		if (giveplayerID == INVALID_PLAYER_ID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
			return 1;
		}

		new giveplayerNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerNickname, 25);
		if (slot < 1 || slot > 3) return SendClientMessage(playerid, COLOR_GRAD1, "Слотовете са от 1 до 3.");
		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да предложиш на себе си превозно средство.");
		if (!CorDetector(10.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си поне на 10 метра от играча.");
		if (!(price < 1 || price > 3000000000)) return SendClientMessage(playerid, COLOR_GRAD1, "Цената трябва да бъде между $1 и $300000000!");
		new realSlot = slot;
		realSlot -= 1;
		if (PlayerInfo[playerid][pPrivateVeh][realSlot] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш превозно средство в този слот.");
		if (vehOffererOfferTo[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента продаваш друго превозно средство.");
		if (vehBuyerBuyFrom[giveplayerID] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът има предложение за друго превозно средство.");
		if (vehBuyerBuyFrom[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо отговори на твоето предложение за продажба, което получи.");
		new hisVehID = PlayerInfo[playerid][pPrivateVeh][realSlot];
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		new string256[256];
		format(string256, 256, "Ти предложи превозното си средство на %s за $%d. Модел: %s", giveplayerNickname, price, GetVehicleName(vehicleid));
		SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "/vehsellcancel - за да откажеш продажбата");
		format(string256, 256, "%s ти предложи неговото лично превозно средство за $%d. Модел: %s", giveplayerNickname, price, GetVehicleName(vehicleid));
		SendClientMessage(giveplayerID, COLOR_PRIVATEVEH, string256);
		SendClientMessage(giveplayerID, COLOR_PRIVATEVEH, "/vehaccept - за да приемеш, /vehcancel - за да откажеш");
		vehOffererOfferTo[playerid] = giveplayerID;
		vehOfferPrivateVehIndex[playerid] = hisVehID;
		vehOfferPrivateVehPrice[playerid] = price;
		vehOfferPrivateVehSlot[playerid] = realSlot;
		vehBuyerBuyFrom[giveplayerID] = playerid;
		return 1;
	}

	if (strcmp(cmd, "/vehsellcancel", true) == 0)
	{
		if (vehOffererOfferTo[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба.");
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Ти отказа продажба на превозно средство.");
		new vehBuyer = vehOffererOfferTo[playerid];
		new buyerNickname[MAX_PLAYER_NAME];
		GetPlayerName(vehBuyer, buyerNickname, 25);
		new string256[256];
		format(string256, 256, "%s отказа да продаде своето превозно средство.", buyerNickname);
		SendClientMessage(vehBuyer, COLOR_PRIVATEVEH, string256);
		vehOffererOfferTo[playerid] = -1;
		vehBuyerBuyFrom[vehBuyer] = -1;
		return 1;
	}

	if (strcmp(cmd, "/vehcancel", true) == 0)
	{
		if (vehBuyerBuyFrom[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба.");
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Ти отказа продажба на превозно средство.");
		new vehOfferer = vehBuyerBuyFrom[playerid];
		new offererNickname[MAX_PLAYER_NAME];
		GetPlayerName(vehOfferer, offererNickname, 25);
		new string256[256];
		format(string256, 256, "%s отказа да купи твоето превозно средство.", offererNickname);
		SendClientMessage(vehOfferer, COLOR_PRIVATEVEH, string256);
		vehBuyerBuyFrom[playerid] = -1;
		vehOffererOfferTo[vehOfferer] = -1;
		return 1;
	}

	if (strcmp(cmd, "/vehaccept", true) == 0)
	{
		if (vehBuyerBuyFrom[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш оферта за продажба.");
		if (GetPrivateVehsNumber(playerid) >= 3) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да имаш повече превозни средства.");
		new vehOfferer = vehBuyerBuyFrom[playerid];
		new vehPrice = vehOfferPrivateVehPrice[vehOfferer];
		if (PlayerInfo[playerid][pCash] < vehPrice) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари в брой за покупката.");
		new offererNickname[MAX_PLAYER_NAME];
		GetPlayerName(vehOfferer, offererNickname, 25);
		new vehIndex = vehOfferPrivateVehIndex[vehOfferer];
		new vehicleid = PrivateVehInfo[vehIndex][vVeh];
		new string256[256];
		format(string256, 256, "Ти купи %s на %s за $%d.", GetVehicleName(vehicleid), offererNickname, vehPrice);
		SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
		//PlayerInfo[vehOfferer][pPrivateVehs]--;

		Inventory_Remove(vehOfferer, "Ключове за кола", 1);
		Inventory_Add(playerid, "Ключове за кола", 11746, 1);
		//PlayerInfo[playerid][pPrivateVehs]++;
		new hisNewVehSlot = GetPlayerPrivateVehFreeSlot(playerid);
		if (GetPlayerVehicleID(playerid) == vehicleid)
		{
			RemovePlayerFromVehicle(playerid);
		}

		format(PrivateVehInfo[vehIndex][vOwnerName], 256, accountNickname);

		new sellerSlot = vehOfferPrivateVehSlot[playerid];
		PlayerInfo[playerid][pPrivateVeh][hisNewVehSlot] = vehIndex;	// NEW
		PlayerInfo[vehOfferer][pPrivateVeh][sellerSlot] = -1;	//NEW

		SavePrivateVehicle(vehIndex);
		vehBuyerBuyFrom[playerid] = -1;
		vehOffererOfferTo[vehOfferer] = -1;
		return 1;
	}

	if (strcmp(cmd, "/call", true) == 0)
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/call [phone number]");
			SendClientMessage(playerid, COLOR_WHITE, "Fast Calls: 911/444/80");
			return 1;
		}

		new phoneNum;
		phoneNum = strval(tmp);
		if (phoneNum == 444)
		{
			if (calledTaxiTimer[playerid] > 0) return SendClientMessage(playerid, COLOR_ERROR, "Вие вече се обадихте на таксито, изчакайте още малко, преди да се обадите пак.");
			calledTaxiTimer[playerid] = 8 * 60;
			SendClientMessage(playerid, COLOR_YELLOW, "[Taxi number] Вие се обадихте на Такси, изчакайте, преди да се свържат с вас.");
			new string256[256];
			format(string256, 256, "[Taxi Service] Фирмата има обаждане от номер {ffffff}%d{ffff00}. Наберете номера за да се свържите с клиента.", PlayerInfo[playerid][pPhoneNum]);
			SendTaxiPlayersMessage(COLOR_YELLOW, string256);
			return 1;
		}
		else if (phoneNum == 80)
		{
			if (calledMechanicTimer[playerid] > 0) return SendClientMessage(playerid, COLOR_ERROR, "Вие вече се обадихте на механиците, изчакайте още малко, преди да се обадите пак.");
			calledMechanicTimer[playerid] = 8 * 60;
			SendClientMessage(playerid, COLOR_YELLOW, "[Mechanic number] Вие се обадихте на Механиците, изчакайте, преди да се свържат с вас.");
			new string256[256];
			format(string256, 256, "[Mechanic Service] Фирмата има обаждане от номер {ffffff}%d{ffff00}. Наберете номера за да се свържите с клиента.", PlayerInfo[playerid][pPhoneNum]);
			SendMechanicPlayersMessage(COLOR_YELLOW, string256);
			return 1;
		}
		else if (phoneNum == 911)
		{
			if (calledPoliceTimer[playerid] > 0) return SendClientMessage(playerid, COLOR_ERROR, "Вие вече се обадихте на полицията, изчакайте още малко, преди да се обадите пак.");
			calledPoliceTimer[playerid] = 8 * 60;
			SendClientMessage(playerid, COLOR_YELLOW, "[Police number] Вие се обадихте на Полицията, изчакайте, преди да се свържат с вас.");
			new string256[256];
			format(string256, 256, "[Police Service] Полицията има обаждане от номер {ffffff}%d{ffff00}. Наберете номера за да се свържите с гражданина.", PlayerInfo[playerid][pPhoneNum]);
			SendPolicePlayersMessage(COLOR_YELLOW, string256);
			return 1;
		}

		CallPhone(playerid, phoneNum);
		return 1;
	}

	/*
	 if(strcmp(cmd, "/bitcoin", true)==0)
     {
     if(PlayerInfo[playerid][pPhone]==0) return SendClientMessage(playerid,COLOR_GRAD1, "Вие нямате телефон с който да отворите менюто.");
     new string2230[512]; new string2230result[2230];
	 format(string2230,512,"{FFFFFF}[{40BF00}1{FFFFFF}] {40BF00}Вашите биткойни и тяхната стойност\n");
	 strcat(string2230result, string2230);
	 format(string2230,512,"{FFFFFF}[{40BF00}2{FFFFFF}] {40BF00}Купете биткойн\n");
	 strcat(string2230result, string2230);
	 format(string2230,512,"{FFFFFF}[{40BF00}3{FFFFFF}] {40BF00}Продайте биткойн\n");
	 strcat(string2230result, string2230);
	 if(PlayerInfo[playerid][pBitcoinCourse]==0)
	 {
	 format(string2230,512,"{FFFFFF}[{40BF00}4{FFFFFF}] {00D0ED}Включете известията за Bitcoin курса\n");
	 strcat(string2230result, string2230);
	 }
	 else if(PlayerInfo[playerid][pBitcoinCourse]==1)
	 {
	 format(string2230,512,"{FFFFFF}[{40BF00}4{FFFFFF}] {FF0000}Изключете известията за Bitcoin курса\n");
	 strcat(string2230result, string2230);
	 }

	 ShowPlayerDialog(playerid,DIALOG_BITCOIN_MENU,DIALOG_STYLE_LIST,"{40BF00}Bitcoin Menu",string2230result,"Затвори","");
     return 1;
     }

     */
	if (strcmp(cmd, "/saveserver", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			SendClientMessageToAll(COLOR_ADMIN_RED, "Сървърът се запаметява от администратор, моля изчакайте малко.");
			SaveServer();
			SendClientMessageToAll(COLOR_ADMIN_RED, "Сървърът се запамети, благодарим за вашето търпение.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/gmx", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			tmp = strtok(cmdtext, idx);
			new minutes;
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gmx [minutes] [причина]");
				return 1;
			}

			minutes = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[70];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gmx [minutes] [причина]");
				return 1;
			}

			if (minutes < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Минутите трябва да са най-малко 1!");
				return 1;
			}

			if (strlen(result) < 1 || strlen(result) > 15)
			{
				return SendClientMessage(playerid, COLOR_GRAD1, "Текстът за ъпдейтът трябва да бъде най-много 15 символа");
			}

			new string256[256];
			if (minutes == 1)
				format(string256, 256, "Сървърът ще се рестартира след 1 минута Причина: %s", result);
			else
				format(string256, 256, "Сървърът ще се рестартира след %d минути Причина: %s", minutes, result);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			serverrestarttimer = minutes * 60;
			//for(new i=0; i < MAX_PLAYERS;i++ && IsPlayerConnected(i)) TextDrawShowForPlayer(i, RESTARTText);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		return 1;
	}

	if (strcmp(cmd, "/changepass", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/changepass [new password]");
			return 1;
		}
		
		if(strlen(result) > 20)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Дължината на новата парола трябва да е най-много 20 символа!");
			return 1;
		}
		
		new accountFiles[28];
		format(accountFiles, 28, "%s.ini", accountNickname);
		dini_Set(accountFiles, "pPassword", result);
		format(PlayerInfo[playerid][pPassword], 500, "%s", EncryptPassword(result));
		new string130[130];
		format(string130, 130, "Вие си сменихте паролата! Новата ви парола е {ffff00}%s", result);
		SendClientMessage(playerid, 0xFFFFFFFF, string130);
		return 1;
	}

	if (strcmp(cmd, "/vouchers", true) == 0)
	{
		new string2230[512];
		new string2230result[2230];
		format(string2230, 512, "{FFFFFF}Сървърът разполага със система за ваучери, чрез която можете да правите поръчки\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}Важно е да знаете, че ваучерите не могат да ви бъдат възстановени, след като направите поръчка\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FF0000}Екипът на сървъра не отговаря за загуба на ваучерите, при изтриване на акаунт или BAN/BLOCK\n\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}За да видите какво можете да си поръчате, натиснете {00ff00}'Продължи'\n");
		strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, DIALOG_VOUCHERS, DIALOG_STYLE_MSGBOX, "{7C94FF}VOUCHERS", string2230result, "Продължи", "Изход");
		return 1;
	}

	if (strcmp(cmd, "/viphelp", true) == 0)
	{
		new string2230[512];
		new string2630result[2630];
		format(string2230, 512, "{FFFFFF}VIP Системата ви дава бонуси с които да улесните играта си.\n\n");
		strcat(string2630result, string2230);
		//Vip Level 1
		format(string2230, 512, "{FFFFFF}За {17B7FF}VIP Ниво 1 {FFFFFF}получавате:\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- При убийство ограбвате {62dd49}$20 {ffffff}от убития\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Бонус {62dd49}$1350 {ffffff}в банката и {62dd49}3 Exp {ffffff}при получаване на Payday\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- По-голяма възжмосност за бонус, при отваряне на подарък\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Бонуси при свършена работа:\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}   Бонус {62dd49}$450 {ffffff}и {62dd49}2 Exp {ffffff}при свършена работа\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}   При свършена работа Spam Timer-ът е намален до {62dd49}30 минути\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Команда: {ff0000}/laser {FFFFFF}за да си сложиш лазер на M4 и MP5\n\n");
		strcat(string2630result, string2230);
		//Vip Level 2
		format(string2230, 512, "{FFFFFF}За {17B7FF}VIP Ниво 2 {FFFFFF}получавате:\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- При убийство ограбвате {62dd49}$30 {ffffff}от убития\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Бонус {62dd49}$1550 {ffffff}в банката и {62dd49}5 Exp{ffffff} при получаване на Payday\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Двойно по-голяма възжмосност за бонус, при отваряне на подарък\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}   Бонус {62dd49}$895 {ffffff}и {62dd49}4 Exp {ffffff}при свършена работа\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}   При свършена работа Spam Timer-ът е намален до {62dd49}25 минути\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Команда: {ff0000}/vrepair {FFFFFF}за да поправиш превоза си в гараж\n\n");
		strcat(string2630result, string2230);
		//Vip Level 3
		format(string2230, 512, "{FFFFFF}За {17B7FF}VIP Ниво 3 {FFFFFF}получавате:\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- При убийство ограбвате {62dd49}$40 {ffffff}от убития\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Бонус {62dd49}$1750 {ffffff}в банката и {62dd49}7 Exp {ffffff}при получаване на Payday\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}- Тройно по-голяма възжмосност за бонус, при отваряне на подарък\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}   Бонус {62dd49}$1250 {ffffff}и {62dd49}6 Exp {ffffff}при свършена работа\n");
		strcat(string2630result, string2230);
		format(string2230, 512, "{FFFFFF}   При свършена работа Spam Timer-ът е намален до {62dd49}20 минути\n");
		strcat(string2630result, string2230);
		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{62dd49}VIP SYSTEM", string2630result, "Изход", "");
		return 1;
	}

	if (strcmp(cmd, "/robhelp", true) == 0)
	{
		SendClientMessage(playerid, COLOR_ORANGE, "Местата, които можеш да обираш са: ");
		SendClientMessage(playerid, COLOR_ORANGE, "1) Caligula's Casino");
		return 1;
	}

	if (strcmp(cmd, "/robatm", true) == 0)
	{
		if (startedAtmRob == true) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има започнат обир на банкомат!");
		new string256[256];
		format(string256, 256, "Трябва да изчакаш още %d минути, преди да започнеш обир на банкомат!", atmRobberyWaitingTimer / 60);
		if (atmRobberyWaitingTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, string256);
		if (GetPlayerNearATM(playerid) == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си до банкомат за да стартираш обир!");
		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да направиш обир във Virtual World!");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да направиш обир в Interior!");
		if (PlayerInfo[playerid][pMoneyBag] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш Money Bag за да направиш обир!");
		atmRobberyPlaceIndex = GetPlayerNearATM(playerid);
		startedAtmRob = true;
		isAtmRobber[playerid] = true;
		atmRobberID = playerid;
		atmRobberyGettingMoneyTimer = 2;
		atmRobberyCollectTimeCheck = 0;
		atmRobberyMoney = 0;
		format(string256, 256, "Police - ATM Robbery Alert: Полицията уведомява, че има обир на банкомат, около %s", GetPlayerZone(playerid));
		SendClientMessageToAll(COLOR_ORANGE, string256);
		SetPlayerAttachedObject(playerid, 2, 1550, 1, 0.1, -0.3, 0, 0, 40, 0, 1, 1, 1);
		GivePlayerWanted(playerid, 2);
		format(string256, 256, "{ff0000}[SUSPECT] {0040FF}Вие бяхте заподозрян в престъпление: Обир на банкомат! Ниво на издирване: %d", PlayerInfo[playerid][pWantedLevel]);
		SendClientMessage(playerid, COLOR_LIGHTRED, string256);
		return 1;
	}

	if (strcmp(cmd, "/rob", true) == 0)
	{
		if (isNormalRobberyLeaderPlayer[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на обир.");
		if (normalRobberyStartedGettingCash == true) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има започнат обир.");
		new bool: inRobPlace = false;
		new string256[256];
		if (IsPlayerInRangeOfPoint(playerid, 8, 2144.2419, 1639.6534, 993.5761))
		{
			normalRobPlace = 1;
			SendClientMessageToAll(COLOR_ORANGE, "Police - Robbery Alert: Полицията уведомява, че има обир в Caligula's Casino");
			inRobPlace = true;
		}

		if (inRobPlace == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не се намирате на място за обир! Вижте /robhelp");
		}
		else if (inRobPlace == true)
		{
			startedNormalRobGettingMoney = true;
			robberyTimerToStart = 0;
			robberyGettingMoneyTimer = 2;
			robberyCollectTimeCheck = 0;
			normalRobberyStartedGettingCash = true;
			normalRobberyVirtualWorld = GetPlayerVirtualWorld(playerid);
			for (new i; i < MAX_PLAYERS; i++)
			{
				if (isNormalRobberyLeaderPlayer[i] == true)
				{
					GivePlayerWanted(i, 2);
					format(string256, 256, "{ff0000}[SUSPECT] {0040FF}Вие бяхте заподозрян в престъпление: Организиран обир! Ниво на издирване: %d", PlayerInfo[i][pWantedLevel]);
					SendClientMessage(i, COLOR_LIGHTRED, string256);
				}
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/robbery", true) == 0)
	{
		if (!IsPlayerInRangeOfPoint(playerid, 4, -127.4285, 974.5004, 19.8516) && !IsPlayerInRangeOfPoint(playerid, 4, 2447.9617, -1963.0054, 13.5469))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на място за започване на обир.");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/robbery [start/end/invite/kick/leave/check]");
			return 1;
		}

		new level[32];
		new stringrobbery[600];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/robbery [start/end/invite/kick/leave/check]");
			return 1;
		}

		strmid(level, tmp, 0, sizeof(level), sizeof(level));
		if (strcmp(level, "start", false) == 0 && strcmp(level, "end", false) == 0 && strcmp(level, "invite", false) == 0 && strcmp(level, "kick", false) == 0 && strcmp(level, "leave", false) == 0 && strcmp(level, "check", false) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/robbery [start/end/invite/kick/leave/check]");
			return 1;
		}

		if (strcmp(level, "start", true) == 0)
		{
			if (startedNormalRobbery == true) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има друг обир и не можеш да стартираш сега.");
			new string256[256];
			format(string256, 256, "Трябва да изчакаш още %d минути, преди да започнеш обир!", normalRobberyWaitingTimer / 60);
			if (normalRobberyWaitingTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, string256);
			if (PlayerInfo[playerid][pMoneyBag] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш Money Bag, където да пазиш парите!");
			SendClientMessage(playerid, COLOR_ORANGE, "Robbery: Ти започна обир, намери място където да крадеш. За да обираш напиши {ffffff}/rob");
			SendClientMessage(playerid, COLOR_ORANGE, "Robbery: Имаш 15 минути да намериш място за крадене. Виж /robhelp за да откриеш място за обир.");
			startedNormalRobbery = true;
			startedNormalRobGettingMoney = false;
			isNormalRobberyLeaderPlayer[playerid] = true;
			inNormalRobbery[playerid] = true;
			normalRobberyLeaderID = playerid;
			robberyTimerToStart = 15 * 60;
			normalRobberyMembers = 1;
			normalRobberyMoney = 0;
			SetPlayerSkin(playerid, 24);
			SetPlayerAttachedObject(playerid, 2, 1550, 1, 0.1, -0.3, 0, 0, 40, 0, 1, 1, 1);
		}

		if (strcmp(level, "leave", true) == 0)
		{
			if (isNormalRobberyLeaderPlayer[playerid] == true) return SendClientMessage(playerid, COLOR_GRAD1, "Ти си лидер и не можеш да напуснеш обира.");
			if (inNormalRobbery[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си участник в обира.");
			new string256[256];
			SendClientMessage(playerid, COLOR_ORANGE, "Robbery: Ти реши да напуснеш обира.");
			format(string256, 256, "Robbery: %s напусна обира");
			SendNormalRobberyMessage(COLOR_ORANGE, string256);
			RestartPlayerSkin(playerid);
			inNormalRobbery[playerid] = false;
		}

		if (strcmp(level, "end", true) == 0)
		{
			if (startedNormalRobbery == false) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма обир.");
			if (isNormalRobberyLeaderPlayer[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на обира.");
			SendClientMessage(playerid, COLOR_ORANGE, "Robbery: Обирът приллючи по твое желание.");
			SendNormalRobberyMessage(COLOR_ORANGE, "Robbery: Обирът приключи по желание на лидера и всеки получава част от ограбената сума.");
			GiveAllRobbersMoney();
			StopRobbery();
		}

		if (strcmp(level, "kick", true) == 0)
		{
			if (startedNormalRobbery == false) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма обир.");
			if (isNormalRobberyLeaderPlayer[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на обира.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/robbery kick [playerid] ");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
			if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изкараш себе си от обира.");
			if (inNormalRobbery[giveplayerID] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е в обира.");
			if (!CorDetector(4.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е близо до теб.");
			if (startedNormalRobGettingMoney == true) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да махнеш човек от обира, след като той е започнал.");
			RestartPlayerSkin(giveplayerID);
			inNormalRobbery[giveplayerID] = false;
			RemovePlayerAttachedObject(giveplayerID, 2);
			new string256[256];
			format(string256, 256, "Robbery: Лидерът на обира изкара %s от обира.", GetPlayerRpName(giveplayerID));
			SendNormalRobberyMessage(COLOR_ORANGE, string256);
		}

		if (strcmp(level, "invite", true) == 0)
		{
			if (startedNormalRobbery == false) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма обир.");
			if (isNormalRobberyLeaderPlayer[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на обира.");
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/robbery invite [playerid] ");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
			if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да вкараш себе си в обира.");
			if (inNormalRobbery[giveplayerID] == true) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече участва в обира.");
			if (!CorDetector(4.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е близо до теб.");
			if (startedNormalRobGettingMoney == true) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да добавиш човек в обира, след като той е започнал.");
			if (PlayerInfo[giveplayerID][pMoneyBag] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш Money Bag, където да пазиш парите!");
			new string256[256];
			inNormalRobbery[giveplayerID] = true;
			format(string256, 256, "Robbery: Лидерът на обира вкара %s, като участник.", GetPlayerRpName(giveplayerID));
			SendNormalRobberyMessage(COLOR_ORANGE, string256);
			SetPlayerSkin(giveplayerID, 25);
			SetPlayerAttachedObject(giveplayerID, 2, 1550, 1, 0.1, -0.3, 0, 0, 40, 0, 1, 1, 1);
		}

		if (strcmp(level, "check", true) == 0)
		{
			if (startedNormalRobbery == true)
			{
				SendClientMessage(playerid, COLOR_WHITE, "В момента има друг обир и не можеш да стартираш сега.");
			}
			else if (startedNormalRobbery == false)
			{
				SendClientMessage(playerid, COLOR_WHITE, "В момента няма обир.");
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/sweepjob", true) == 0)
	{
		if (isPlayerWorkingNow(playerid) == 1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента вече работиш!");
		if (PlayerInfo[playerid][pSweeperTimer] < 60 && PlayerInfo[playerid][pSweeperTimer] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още 1 минута, преди да работите пак");
			return 1;
		}

		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в никое превозно средство.");
		new hisVeh = GetPlayerVehicleID(playerid);
		if (!isSweepVeh[hisVeh]) return SendClientMessage(playerid, COLOR_GRAD1, "Не си в превозно средство за почистване на улиците.");
		if (PlayerInfo[playerid][pSweeperTimer] >= 60)
		{
			new string256[256];
			format(string256, 256, "Трябва да изчакате още %d минути, преди да работите пак", PlayerInfo[playerid][pSweeperTimer] / 60);
			SendClientMessage(playerid, COLOR_GRAD1, string256);
			return 1;
		}

		isWorkingSweep[playerid] = true;
		SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC1, 4.0);
		SendClientMessage(playerid, COLOR_WHITE, "> Двигателят е {40BF00}Пуснат");
		SendClientMessage(playerid, COLOR_JOB, "[ Sweep Job ]");
		SendClientMessage(playerid, COLOR_JOB, "Задължение: {FFFFFF}Почисти улиците");
		SendClientMessage(playerid, COLOR_WHITE, "Следвай {40BF00}маркера {FFFFFF}на картата");
		ToggleEngine(hisVeh, VEHICLE_PARAMS_ON);
		vehEngineStatusON[hisVeh] = true;
		return 1;
	}

	if (strcmp(cmd, "/busjob", true) == 0)
	{
		if (isPlayerWorkingNow(playerid) == 1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента вече работиш!");
		if (PlayerInfo[playerid][pBusTimer] < 60 && PlayerInfo[playerid][pBusTimer] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още 1 минута, преди да работите пак");
			return 1;
		}

		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в никое превозно средство.");
		new hisVeh = GetPlayerVehicleID(playerid);
		if (!isBusVeh[hisVeh]) return SendClientMessage(playerid, COLOR_GRAD1, "Не си в превозно средство за разнасяне на пътници.");
		if (PlayerInfo[playerid][pBusTimer] >= 60)
		{
			new string256[256];
			format(string256, 256, "Трябва да изчакате още %d минути, преди да работите пак", PlayerInfo[playerid][pBusTimer] / 60);
			SendClientMessage(playerid, COLOR_GRAD1, string256);
			return 1;
		}

		isWorkingBus[playerid] = true;
		SetPlayerCheckpoint(playerid, JOB_BUS_LOC1, 4.0);
		SendClientMessage(playerid, COLOR_WHITE, "> Двигателят е {40BF00}Пуснат");
		SendClientMessage(playerid, COLOR_JOB, "[ Bus Job ]");
		SendClientMessage(playerid, COLOR_JOB, "Задължение: {FFFFFF}Разнасяй автобуса");
		SendClientMessage(playerid, COLOR_WHITE, "Следвай {40BF00}маркера {FFFFFF}на картата");
		ToggleEngine(hisVeh, VEHICLE_PARAMS_ON);
		vehEngineStatusON[hisVeh] = true;
		return 1;
	}

	if (strcmp(cmd, "/coalminejob", true) == 0)
	{
		if (isPlayerWorkingNow(playerid) == 1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента вече работиш!");
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в никое превозно средство!");
		new hisVeh = GetPlayerVehicleID(playerid);
		if (!isCoalmineVeh[hisVeh]) return SendClientMessage(playerid, COLOR_GRAD1, "Не си в превозно средство за работа Coalmine!");
		if (PlayerInfo[playerid][pCoalmineTimer] < 60 && PlayerInfo[playerid][pCoalmineTimer] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още 1 минута, преди да работите пак");
			return 1;
		}

		if (PlayerInfo[playerid][pCoalmineTimer] >= 60)
		{
			new string256[256];
			format(string256, 256, "Трябва да изчакате още %d минути, преди да работите пак", PlayerInfo[playerid][pCoalmineTimer] / 60);
			SendClientMessage(playerid, COLOR_GRAD1, string256);
			return 1;
		}

		isWorkingCoalmine[playerid] = true;
		SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC1, 4.0);
		SendClientMessage(playerid, COLOR_WHITE, "> Двигателят е {40BF00}Пуснат");
		SendClientMessage(playerid, COLOR_JOB, "[ Coalmine Job ]");
		SendClientMessage(playerid, COLOR_JOB, "Задължение: {FFFFFF}Свърши работата в мината");
		SendClientMessage(playerid, COLOR_WHITE, "Следвай {40BF00}маркера {FFFFFF}на картата");
		ToggleEngine(hisVeh, VEHICLE_PARAMS_ON);
		vehEngineStatusON[hisVeh] = true;
		return 1;
	}

	if (strcmp(cmd, "/deliverjob", true) == 0)
	{
		if (isPlayerWorkingNow(playerid) == 1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента вече работиш!");
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в никое превозно средство!");
		new hisVeh = GetPlayerVehicleID(playerid);
		if (!isDeliverVeh[hisVeh]) return SendClientMessage(playerid, COLOR_GRAD1, "Не си в превозно средство за разнасяне на стока!");
		if (PlayerInfo[playerid][pDeliverTimer] < 60 && PlayerInfo[playerid][pDeliverTimer] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още 1 минута, преди да работите пак");
			return 1;
		}

		if (PlayerInfo[playerid][pDeliverTimer] >= 60)
		{
			new string256[256];
			format(string256, 256, "Трябва да изчакате още %d минути, преди да работите пак", PlayerInfo[playerid][pDeliverTimer] / 60);
			SendClientMessage(playerid, COLOR_GRAD1, string256);
			return 1;
		}

		isWorkingDeliver[playerid] = true;
		SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC1, 4.0);
		SendClientMessage(playerid, COLOR_WHITE, "> Двигателят е {40BF00}Пуснат");
		SendClientMessage(playerid, COLOR_JOB, "[ Deliver Job ]");
		SendClientMessage(playerid, COLOR_JOB, "Задължение: {FFFFFF}Достави пиците");
		SendClientMessage(playerid, COLOR_WHITE, "Следвай {40BF00}маркера {FFFFFF}на картата");
		ToggleEngine(hisVeh, VEHICLE_PARAMS_ON);
		vehEngineStatusON[hisVeh] = true;
		return 1;
	}

	if (strcmp(cmd, "/pizzajob", true) == 0)
	{
		if (isPlayerWorkingNow(playerid) == 1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента вече работиш!");
		if (PlayerInfo[playerid][pPizzaTimer] < 60 && PlayerInfo[playerid][pPizzaTimer] > 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още 1 минута, преди да работите пак");
			return 1;
		}

		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в никое превозно средство.");
		new hisVeh = GetPlayerVehicleID(playerid);
		if (!isPizzaVeh[hisVeh]) return SendClientMessage(playerid, COLOR_GRAD1, "Не си в превозно средство за разнасяне на пица.");
		if (PlayerInfo[playerid][pPizzaTimer] >= 60)
		{
			new string256[256];
			format(string256, 256, "Трябва да изчакате още %d минути, преди да работите пак", PlayerInfo[playerid][pPizzaTimer] / 60);
			SendClientMessage(playerid, COLOR_GRAD1, string256);
			return 1;
		}

		isWorkingPizza[playerid] = true;
		SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC1, 4.0);
		SendClientMessage(playerid, COLOR_WHITE, "> Двигателят е {40BF00}Пуснат");
		SendClientMessage(playerid, COLOR_JOB, "[ Pizza Job ]");
		SendClientMessage(playerid, COLOR_JOB, "Задължение: {FFFFFF}Достави пиците");
		SendClientMessage(playerid, COLOR_WHITE, "Следвай {40BF00}маркера {FFFFFF}на картата");
		ToggleEngine(hisVeh, VEHICLE_PARAMS_ON);
		vehEngineStatusON[hisVeh] = true;
		return 1;
	}

	if (strcmp(cmd, "/refuel", true) == 0)
	{
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превозно средство!");
		if (!IsPlayerDriver(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шофьор!");
		if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_1) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_1) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_2) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_3) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_4) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_5) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_6) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_7) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_8) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_9) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_10) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_11) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_12) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_13) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_14) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_15) ||
			IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_16))
		{
			new hisVeh = GetPlayerVehicleID(playerid);
			new vehModel = GetVehicleModel(hisVeh);
			new string256[256];
			if (IsNoFuelVehicle(vehModel) == 1)
			{
				format(string256, 256, "Това превозно средство няма нужда от бензиностанция!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Бензиностанция", string256, "Затвори", "");
			}

			if (100 - vehFuel[hisVeh] <= 0)
			{
				format(string256, 256, "Това превозно средство е напълно заредено!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Бензиностанция", string256, "Затвори", "");
				return 1;
			}

			format(string256, 256, "{FFFFFF}Добре дошли в бензиностанцията\n\nМожете да заредите до {FFB20C}%d {FFFFFF}литра.\n{FFFFFF}Посочете долу колко литра искате да заредите.", 100 - vehFuel[hisVeh]);
			ShowPlayerDialog(playerid, DIALOG_REFUEL, DIALOG_STYLE_INPUT, "{FFFFFF}Бензиностанция", string256, "Презареди", "Затвори");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си близо до бензиностанция!");
		}

		return 1;
	}

	if (strcmp(cmd, "/atm", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_1) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_2) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_3) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_4) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_5) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_6) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_7) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_8) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_9) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_10) ||
			IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_11))
		{
			new string256[256];
			new string2230result[2230];
			format(string256, 256, "{FFFFFF}Баланс\n{FFFFFF}Изтегли пари");
			ShowPlayerDialog(playerid, DIALOG_ATM, DIALOG_STYLE_LIST, "ATM Service", string256, "Изтеги", "Затвори");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си близо до банкомат!");
		}

		return 1;
	}

	if (strcmp(cmd, "/bank", true) == 0)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3, 1385.2511, -1679.9011, 51.2901) && GetPlayerVirtualWorld(playerid) == 1)
		{
			new string256[256];
			new string2230result[2230];
			format(string256, 256, "{FFFFFF}Баланс\n{FFFFFF}Изтегли пари\n{FFFFFF}Прехвърли пари до друг човек\n{FFFFFF}Внеси сума в банковата си сметка\n{FFFFFF}Плати си глобите\n{FFFFFF}Сметка на организацията");
			ShowPlayerDialog(playerid, DIALOG_BANK, DIALOG_STYLE_LIST, "Bank Service", string256, "Изтеги", "Затвори");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в банката!");
		}

		return 1;
	}

	if (strcmp(cmd, "/back", true) == 0)
	{
		if (PlayerInfo[playerid][pAFK] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не си в AFK!");
		if (PlayerTimerInfo[playerid][ptAFKBack] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Все още не са изминали 3 минути, откакто влезе в AFK!");
		SendClientMessage(playerid, COLOR_AFK, "AFK: Ти се върна в играта!");
		playerAfkMinutes[playerid] = 0;
		playerAfkSeconds[playerid] = 0;
		PlayerInfo[playerid][pAFK] = 0;
		SetToSpawn(playerid);
		return 1;
	}

	if (strcmp(cmd, "/afk", true) == 0)
	{
		if (PlayerInfo[playerid][pAdminDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да влезеш в AFK, когато си на Admin смяна!");
		//if(PlayerInfo[playerid][pWantedLevel]>0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можеш да влезеш в AFK, когато си издирван!");
		if (PlayerInfo[playerid][pJailed] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да влезеш в AFK, когато си в ADMIN затвора!");
		if (PlayerInfo[playerid][pPoliceJail] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да влезеш в AFK, когато си в затвора!");
		if (PlayerInfo[playerid][pAFK] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вече си в AFK!");
		if (PlayerInfo[playerid][pIdentifyCard] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Все още нямаш лична карта и не можеш да влезеш в AFK!");
		if (PlayerTimerInfo[playerid][ptRevieveTimer] >= 1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти си пред припадане и не можеш да влзеш в AFK!");
		new string256[256];
		format(string256, 256, "AFK: %s излезе в почивка!", accountNickname);
		SendClientMessageToAll(COLOR_AFK, string256);
		SendClientMessage(playerid, COLOR_AFK, "AFK: Използвай /back за да се върнеш в играта!");
		SetPlayerInterior(playerid, 15);
		SetPlayerVirtualWorld(playerid, playerid + 1);
		SetPlayerPos(playerid, 2215.454833, -1147.475585, 1025.796875);
		PlayerInfo[playerid][pAFK] = 1;
		PlayerTimerInfo[playerid][ptAFKBack] = 3 * 60;
		return 1;
	}

	if (strcmp(cmd, "/id", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/id [част от никнейма или целия]");
			return 1;
		}

		new foundids;
		new string256[256];
		//F97804
		new nname[MAX_PLAYER_NAME];
		format(string256, 256, "Търсене за: {FF0000}%s", result);
		SendClientMessage(playerid, 0xFFFFFFFF, string256);
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				GetPlayerName(i, nname, sizeof(nname));
				if (strfind(nname, result, true) != -1)
				{
					foundids += 1;
					if (foundids > 0)
					{
						format(string256, 256, "%d. %s (ID:%d)", foundids, nname, i);
						SendClientMessage(playerid, 0xFFFF00FF, string256);
						//return 1;
					}
				}
			}
		}

		if (foundids == 0)
		{
			format(string256, 256, "Няма открити играчи с този никнейм в сървъра!");
			SendClientMessage(playerid, 0xE60000FF, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/teleportfaction", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Usageй: /teleportfaction[lspd, army, gov, crip, wcw, vagos, ballas, ru-mafia, medic, news]");
			return 1;
		}

		if (strcmp(result, "lspd", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Police);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "army", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Army);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "gov", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Kmetstvo);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "crip", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Crip);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "wcw", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, WestCoastWheelers);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "vagos", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Vagos);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "ballas", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Ballas);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "ru-mafia", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Mafia);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "medic", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, Hospital);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "news", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, TheNews);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		return 1;
	}

	if (strcmp(cmd, "/laser", true) == 0)
	{
		if (PlayerInfo[playerid][pVip] < 1)
		{
			return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
		}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/laser [off, yellow, blue, red, green]");
			return 1;
		}

		new string256[256];
		if (strcmp(result, "off", true) == 0)
		{
			SendClientMessage(playerid, 0x9ACD32FF, "* Ти си премахна лазера! *");
			RemovePlayerLaser(playerid);
			format(string256, 256, "%s прибра лазера си!", RealName(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		if (strcmp(result, "yellow", true) == 0)
		{
			PlayerInfo[playerid][pLaser] = 1;
			SetPVarInt(playerid, "color", 19084);
			SendClientMessage(playerid, 0x9ACD32FF, "* Ти си сложи жълт лазер към оръжията *");
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: За да махнеш лазера, напиши /laser off");
			format(string256, 256, "%s взе жълт лазер и го сложи на своите M4 и Mp5!", RealName(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		if (strcmp(result, "blue", true) == 0)
		{
			PlayerInfo[playerid][pLaser] = 2;
			SetPVarInt(playerid, "color", 19080);
			SendClientMessage(playerid, 0x9ACD32FF, "* Ти си сложи син лазер към оръжията *");
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: За да махнеш лазера, напиши /laser off");
			format(string256, 256, "%s взе син лазер и го сложи на своите M4 и Mp5!", RealName(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		if (strcmp(result, "red", true) == 0)
		{
			PlayerInfo[playerid][pLaser] = 3;
			SetPVarInt(playerid, "color", 18643);
			SendClientMessage(playerid, 0x9ACD32FF, "* Ти си сложи червен лазер към оръжията *");
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: За да махнеш лазера, напиши /laser off");
			format(string256, 256, "%s взе червен лазер и го сложи на своите M4 и Mp5!", RealName(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		if (strcmp(result, "green", true) == 0)
		{
			PlayerInfo[playerid][pLaser] = 4;
			SetPVarInt(playerid, "color", 19083);
			SendClientMessage(playerid, 0x9ACD32FF, "* Ти си сложи зелен лазер към оръжията *");
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: За да махнеш лазера, напиши /laser off");
			format(string256, 256, "%s взе зелен лазер и го сложи на своите M4 и Mp5!", RealName(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/mylocation", true) == 0)
	{
		if (GetPlayerInterior(playerid) != 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Your Location: Вие се намирате в {40BF00}Interior");
		}

		new string256[256];
		format(string256, 256, "Your Location: Вие се намирате в {40BF00}%s", GetPlayerZone(playerid));
		SendClientMessage(playerid, COLOR_WHITE, string256);
		return 1;
	}

	if (strcmp(cmd, "/age", true) == 0)
	{
		new string256[256];
		format(string256, 256, "Your Age: Вашата възраст е {40BF00}%d {FFFFFF}години!", PlayerInfo[playerid][pAge]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		return 1;
	}

	if (strcmp(cmd, "/drugs", true) == 0)
	{
		new string256[256];
		format(string256, 256, "Your Drugs: Кокаин: %d gram/s, Марихуана: %d gram/s, Хероин: %d gram/s", PlayerInfo[playerid][pCocaine], PlayerInfo[playerid][pMarijuana], PlayerInfo[playerid][pHeroin]);
		SendClientMessage(playerid, COLOR_DRUGS, string256);
		return 1;
	}

	if (strcmp(cmd, "/usedrug", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/usedrug [cocaine/marijuana/heroin]");
			return 1;
		}

		new result[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/usedrug [cocaine/marijuana/heroin]");
			return 1;
		}

		strmid(result, tmp, 0, sizeof(result), sizeof(result));
		if (strcmp(result, "heroin", false) == 0 && strcmp(result, "cocaine", false) == 0 && strcmp(result, "marijuana", false) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/usedrug [cocaine/marijuana/heroin]");
			return 1;
		}

		new string256[256];

		if (strcmp(result, "cocaine", true) == 0)
		{
			if (PlayerInfo[playerid][pCocaine] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш кокаин в себе си!");

			tmp = strtok(cmdtext, idx);
			new grams;
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/usedrug [cocaine] [grams]");
				return 1;
			}

			grams = strval(tmp);
			if (grams < 1 || grams > 10)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Грамовете кокаин, които можеш да приемеш са от 1 до 10!");
				return 1;
			}

			if (PlayerInfo[playerid][pCocaine] < grams) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш толкова грама в себе си!");

			new Float: health;
			GetPlayerHealth(playerid, health);

			new healthPoints = grams * 5;
			new Float: newHealth;
			newHealth = health + healthPoints;
			if (newHealth > 100) return SendClientMessage(playerid, COLOR_GRAD1, "Точките ти живот са твърде много за да подейства този грамаж");
			if (health < healthPoints && newHealth <= 100)
			{
				SetPlayerHealth(playerid, newHealth);
			}

			SetPlayerWeather(playerid, 2009);
			SetPlayerDrunkLevel(playerid, 4000);
			format(string256, 256, "* %s взе %d грама кокаин и ги използва!", GetPlayerRpName(playerid), grams);
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
			SendClientMessage(playerid, COLOR_DRUGS, "Наркотикът вече подейства! Той ви зареди определени точки живот!");
			PlayerTimerInfo[playerid][ptFinishDrugEffect] = 20 * grams;
			PlayerInfo[playerid][pCocaine] -= 1;
		}

		if (strcmp(result, "heroin", true) == 0)
		{
			if (PlayerInfo[playerid][pHeroin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш хероин в себе си!");
			
			tmp = strtok(cmdtext, idx);
			new grams;
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/usedrug [heroin] [grams]");
				return 1;
			}

			grams = strval(tmp);
			if (grams < 1 || grams > 10)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Грамовете хероин, които можеш да приемеш са от 1 до 10!");
				return 1;
			}

			if (PlayerInfo[playerid][pHeroin] < grams) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш толкова грама в себе си!");

			new Float: health;
			GetPlayerHealth(playerid, health);
			new healthPoints = grams * 10;
			new Float: newHealth;
			newHealth = health + healthPoints;
			if (newHealth > 100) return SendClientMessage(playerid, COLOR_GRAD1, "Точките ти живот са твърде много за да подейства този грамаж");
			if (health < healthPoints && newHealth <= 100)
			{
				SetPlayerHealth(playerid, newHealth);
			}

			SetPlayerWeather(playerid, 2009);
			SetPlayerDrunkLevel(playerid, 4000);
			format(string256, 256, "* %s взе %d грама хероин и ги използва!", GetPlayerRpName(playerid), grams);
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
			SendClientMessage(playerid, COLOR_DRUGS, "Наркотикът вече подейства! Той ви зареди определени точки живот!");
			PlayerTimerInfo[playerid][ptFinishDrugEffect] = 25 * grams;
			PlayerInfo[playerid][pHeroin] -= 1;
		}

		if (strcmp(result, "marijuana", true) == 0)
		{
			if (PlayerInfo[playerid][pMarijuana] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш марихуана в себе си!");

			tmp = strtok(cmdtext, idx);
			new grams;
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/usedrug [marijuana] [grams]");
				return 1;
			}

			grams = strval(tmp);
			if (grams < 1 || grams > 10)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Грамовете марихуана, които можеш да приемеш са от 1 до 10!");
				return 1;
			}

			if (PlayerInfo[playerid][pMarijuana] < grams) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш толкова грама в себе си!");

			new Float: health;
			GetPlayerHealth(playerid, health);
			new healthPoints = grams * 8;
			new Float: newHealth;
			newHealth = health + healthPoints;
			if (newHealth > 100) return SendClientMessage(playerid, COLOR_GRAD1, "Точките ти живот са твърде много за да подейства този грамаж");
			if (health < healthPoints && newHealth <= 100)
			{
				SetPlayerHealth(playerid, newHealth);
			}

			SetPlayerWeather(playerid, 2009);
			SetPlayerDrunkLevel(playerid, 4000);
			format(string256, 256, "* %s взе %d грама марихуаната и ги използва!", GetPlayerRpName(playerid), grams);
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
			SendClientMessage(playerid, COLOR_DRUGS, "Наркотикът вече подейства! Той ви зареди определени точки живот!");
			PlayerTimerInfo[playerid][ptFinishDrugEffect] = 30 * grams;
			PlayerInfo[playerid][pMarijuana] -= 1;
		}

		return 1;
	}

	if (strcmp(cmd, "/agivelic", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/agivelic [playerid] [gun, car, bike, helicopter]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/agivelic [playerid] [gun, car, plane]");
			return 1;
		}

		if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID!");
		new string256[256];
		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		if (strcmp(result, "gun", true) == 0)
		{
			if (PlayerInfo[giveplayerID][pWepLic] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече има посочения лиценз!");
			PlayerInfo[giveplayerID][pWepLic] = 1;
			format(string256, 256, "Ти получи Gun License от %s", accountNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN_ORANGE, string256);
			format(string256, 256, "Ти даде Gun License на %s", giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_ADMIN_ORANGE, string256);
		}

		if (strcmp(result, "car", true) == 0)
		{
			if (PlayerInfo[giveplayerID][pCarLicense] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече има посочения лиценз!");
			PlayerInfo[giveplayerID][pCarLicense] = 1;
			format(string256, 256, "Ти получи Car License от %s", accountNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN_ORANGE, string256);
			format(string256, 256, "Ти даде Car License на %s", giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_ADMIN_ORANGE, string256);
		}
		
		if (strcmp(result, "plane", true) == 0)
		{
			if (PlayerInfo[giveplayerID][pPlaneLicense] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече има посочения лиценз!");
			PlayerInfo[giveplayerID][pPlaneLicense] = 1;
			format(string256, 256, "Ти получи Plane License от %s", accountNickname);
			SendClientMessage(giveplayerID, COLOR_ADMIN_ORANGE, string256);
			format(string256, 256, "Ти даде Plane License на %s", giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_ADMIN_ORANGE, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/teleportjob", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/teleportjob [pizza, taxi, sweep, mechanic, bus, deliver, coalmine]");
			return 1;
		}

		if (strcmp(result, "pizza", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, PizzaJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "taxi", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, TaxiJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "sweep", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, SweepJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "mechanic", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, MechanicJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "bus", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, BusJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "deliver", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, DeliverJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		if (strcmp(result, "coalmine", true) == 0)
		{
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid, CoalmineJob);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти се телепортира успешно! *");
		}

		return 1;
	}

	if (strcmp(cmd, "/gotols", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (PlayerInfo[playerid][pJailed] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в затвора!");
		if (PlayerInfo[playerid][pPoliceJail] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в затвора!");
		if (PlayerInfo[playerid][pAFK] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в AFK!");
		SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на Los Santos! *");
		SetPlayerPos(playerid, 1537.7205, -1691.0510, 13.5469);
		SetPlayerFacingAngle(playerid, 90.5010);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}

	if (strcmp(cmd, "/gotolv", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (PlayerInfo[playerid][pJailed] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в затвора!");
		if (PlayerInfo[playerid][pPoliceJail] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в затвора!");
		if (PlayerInfo[playerid][pAFK] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в AFK!");
		SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на Las Venturas Airport! *");
		SetPlayerPos(playerid, 1699.6941, 1434.8165, 10.6869);
		SetPlayerFacingAngle(playerid, 272.8860);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}

	if (strcmp(cmd, "/gotosf", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (PlayerInfo[playerid][pJailed] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в затвора!");
		if (PlayerInfo[playerid][pPoliceJail] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в затвора!");
		if (PlayerInfo[playerid][pAFK] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, когато си в AFK!");
		SendClientMessage(playerid, 0xFFFFFFFF, "* Ти се телепортира на San Fierro Airport! *");
		SetPlayerPos(playerid, -1416.9932, -296.2564, 14.1484);
		SetPlayerFacingAngle(playerid, 132.8014);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetCameraBehindPlayer(playerid);
		return 1;
	}

	if (strcmp(cmd, "/credits", true) == 0)
	{
		new string2230[512];
		new string2230result[2230];
		format(string2230, 512, "{FFFFFF}Главните администратори на сървъра:\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FF0000}sTrIx{FFFFFF}: {17B7FF}Main Dev & Owner | Занимава се със скриптиране на сървъра\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FF0000}Lineblack{FFFFFF}: {17B7FF}Senior Dev & Owner | Занимава се с поддръжката на сървъра\n\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Връзка с главните администратори:\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FF0000}sTrIx{FFFFFF} Discord: {62dd49}didkoandreevofficial#5949\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FF0000}Lineblack{FFFFFF} Discord: {62dd49}Lineblack#5220\n\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Относно Gamemode, който сървъра използва:\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Модът е започнат през 2021-ва година, като бива завършен през 2022-ра година\n\n");
        strcat(string2230result, string2230);
        format(string2230, 512, "{FFFFFF}Модът е изцяло написан и създаден от {FF0000}sTrIx");
        strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FF0000}Credits", string2230result, "OK", "");
		return 1;
	}

	if (strcmp(cmd, "/vote", true) == 0)
	{
		if (respawnVehsVoteTimer == 0 && normalVoteTimer == 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма гласуване!");
		if (didVote[playerid] == true) return SendClientMessage(playerid, COLOR_GRAD1, "Вече си гласувал!");
		new string256[256];
		if (respawnVehsVoteTimer > 0)
		{
			format(string256, 256, "{FFFFFF}В момента има започнато гласуване и ти все още не си гласувал!\nИзползвай копчетата долу '{40BF00}ДА{FFFFFF}' и '{FF0000}НЕ{FFFFFF}', за да използваш своя глас\nВъпросът е: {00ff00}Да бъдат ли RESPAWN-нати превозните средства ?");
			ShowPlayerDialog(playerid, DIALOG_VOTE_RESPAWN, DIALOG_STYLE_MSGBOX, "{60FA00}VOTЕ:", string256, "ДА", "НЕ");
			return 1;
		}

		if (normalVoteTimer > 0)
		{
			format(string256, 256, "{FFFFFF}В момента има започнато гласуване и ти все още не си гласувал!\nИзползвай копчетата долу '{40BF00}ДА{FFFFFF}' и '{FF0000}НЕ{FFFFFF}', за да използваш своя глас\nВъпросът е: {00ff00}%s", normalVoteQuestion);
			ShowPlayerDialog(playerid, DIALOG_VOTE_NORMAL, DIALOG_STYLE_MSGBOX, "{60FA00}VOTЕ:", string256, "ДА", "НЕ");
		}

		return 1;
	}

	if (strcmp(cmd, "/respawncarsvote", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (respawnVehsVoteTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има вот за Respawn Vehs!");
		if (normalVoteTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има друг вот!");
		respawnVehsVoteYES = 0;
		respawnVehsVoteNO = 0;
		new string256[256];
		format(string256, 256, "* %s започна преброяване за Respawn на превозите! Използвай /vote имаш 2 минути! *", accountNickname);
		SendClientMessageToAll(COLOR_ADMIN_RED, string256);
		respawnVehsVoteTimer = 2 * 60;
		return 1;
	}

	if (strcmp(cmd, "/startvote", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/startvote [question]");
			return 1;
		}

		if (respawnVehsVoteTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има вот за Respawn Vehs!");
		if (normalVoteTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има друг вот!");
		normalVoteYES = 0;
		normalVoteNO = 0;
		new string256[256];
		format(string256, 256, "* %s започна преброяване! Използвай /vote имаш 2 минути! *", accountNickname);
		SendClientMessageToAll(COLOR_MAXLIGHTGREEN, string256);
		format(string256, 256, "* Въпросът от започнатото гласуване е {FF0000}%s {00ff00}*", result);
		SendClientMessageToAll(COLOR_MAXLIGHTGREEN, string256);
		format(normalVoteQuestion, 256, result);
		normalVoteTimer = 2 * 60;
		return 1;
	}

	if (strcmp(cmd, "/arefuelall", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new string256[256];
		format(string256, 256, "* Администратор %s зареди всички превози със 100 литра! *", accountNickname);
		SendClientMessageToAll(COLOR_WHITE, string256);
		for (new vehs = 0; vehs < MAX_VEHICLES; vehs++)
		{
			vehFuel[vehs] = 100;
		}
		return 1;
	}

	if (strcmp(cmd, "/rules", true) == 0)
	{
		new string2230[512];
		new string2230result[2230];
		format(string2230, 512, "{00C3FC}1. Игра\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}1.1 Забранено е използването на всякакви помощни средства, като CLEO и хакове\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}1.2 Забранено е да се убиват играчи без причина\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}1.3 Забранено е да избягвате RP ситуация, чрез ESC или излизане от играта\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}1.4 Забранено е използването на всякакви бъгове. Ако намерите, съобщете на администратор, чрез /ask\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}1.5 Забранено е да си давате паролата в сървъра! Това е на ваша отговорност\n\n");
		strcat(string2230result, string2230);
		
		format(string2230, 512, "{00C3FC}2. Комуникация\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}2.1 Забранено е да псувате по личен адрес администратор или обикновен играч\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}2.2 Забранено е да заплашвате играчи за неща свързани с истинския живот\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}2.3 Строго забранено е рекламирането на други сървъри\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}2.4 Забранено е да спамите, тоест да съобщавате нещо много пъти\n\n");
		strcat(string2230result, string2230);
		
		format(string2230, 512, "{00C3FC}3. Администрация\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}3.1 Забранено е грубото говерене към администрацията на сървъра\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}3.2 Важно е админите да си вършат работата. Ако това не се случи, използвайте /report\n\n");
		strcat(string2230result, string2230);
		
		format(string2230, 512, "{00C3FC}4. Допълнителна информация\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}4.1 За да докладвате играч, използвайте /report\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}4.2 Също така можете да докладвате в официалния дискорд на сървъра\n");
		strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Правила", string2230result, "Затвори", "");
		return 1;
	}

	if (strcmp(cmd, "/mask", true) == 0)
	{
		if (PlayerInfo[playerid][pMask] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш маска, която да сложиш на лицето си!");
		if (maskOn[playerid] == false)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ти сложи маска на лицето си! Използвай {ff0000}/mask {ffffff}отново за да махнеш маската!");
			maskOn[playerid] = true;
			SetPlayerDefaultColor(playerid);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				ShowPlayerNameTagForPlayer(i, playerid, false);
			}
		}
		else if (maskOn[playerid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Ти махна маската от лицето си!");
			maskOn[playerid] = false;
			SetPlayerDefaultColor(playerid);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				ShowPlayerNameTagForPlayer(i, playerid, true);
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/clearanimation", true) == 0)
	{
		PlayerTimerInfo[playerid][ptClearAnimation] = 1;
		return 1;
	}
	
	if (strcmp(cmd, "/thirsty", true) == 0)
	{
		new stringThirsty[32];
		new thirsty = PlayerInfo[playerid][pThirsty];
		if(thirsty >= 70)
		{
			format(stringThirsty, sizeof(stringThirsty), "Ти не си много жаден");
		}
		else if(thirsty >= 40 && thirsty <= 69)
		{
			format(stringThirsty, sizeof(stringThirsty), "Ти си жаден");
		}
		else
		{
			format(stringThirsty, sizeof(stringThirsty), "Много си жаден");
		}
		new string2230[512];
		new string2230result[2230];
		format(string2230, 512, "{D1D1D1}В момента {74F967}%s\n", stringThirsty);
		strcat(string2230result, string2230);
		format(string2230, 512, "{D1D1D1}Вашето ниво на жажда е {FFFFFF}%d от 100\n\n", thirsty);
		strcat(string2230result, string2230);
		format(string2230, 512, "{D1D1D1}Важно е да пиете напитки, защото ще ви прилошее и ще припаднете!\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{D1D1D1}Можете да намерите будки с напитки или магазини от които да си купите нещо за пиене\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{D1D1D1}След като си купите някаква напитка по ваш избор, отворете инвентара, чрез /inventory или менюто Y и изберете напитка\n");
		strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "    ", string2230result, "Затвори", "");
		return 1;
	}
	
	if (strcmp(cmd, "/hungry", true) == 0)
	{
		new stringHungry[32];
		new hungry = PlayerInfo[playerid][pHungry];
		if(hungry >= 70)
		{
			format(stringHungry, sizeof(stringHungry), "Ти не си много гладен");
		}
		else if(hungry >= 40 && hungry <= 69)
		{
			format(stringHungry, sizeof(stringHungry), "Ти си гладен");
		}
		else
		{
			format(stringHungry, sizeof(stringHungry), "Много си гладен");
		}
		new string2230[512];
		new string2230result[2230];
		format(string2230, 512, "{D1D1D1}В момента {74F967}%s\n", stringHungry);
		strcat(string2230result, string2230);
		format(string2230, 512, "{D1D1D1}Вашето ниво на глад е {FFFFFF}%d от 100\n\n", hungry);
		strcat(string2230result, string2230);
		format(string2230, 512, "{D1D1D1}Важно е да ядете, защото ще ви прилошее и ще припаднете!\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{D1D1D1}Можете да намерите будки с храна или магазини от които да си купите нещо за ядене\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{D1D1D1}След като си купите храна, отворете инвентара, чрез /inventory или менюто Y и изберете храна\n");
		strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "    ", string2230result, "Затвори", "");
		return 1;
	}
	
	//HELP
	if (strcmp(cmd, "/help", true) == 0)
	{
		new string2230[512];
		new string2230result[2230];
		format(string2230, 512, "{FFFFFF}Всички Команди\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}Как се играе?");
		strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, DIALOG_HELP, DIALOG_STYLE_LIST, "{5EF403}Помощно меню", string2230result, "Напред", "Затвори");
		return 1;
	}

	if (strcmp(cmd, "/scripterhelp", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Scripter модът ще ви даде:");
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "* Достъп до всички коли за продажба с цел тяхното преместване с /sellvehpos");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/turnsocial", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			new string256[256];
			if (SocStatus == false)
			{
				format(string256, 256, "Всички социални мрежи бяха включени от администратор %s", accountNickname);
				SendClientMessageToAll(COLOR_TWITTER, string256);
				SocStatus = true;
				return 1;
			}
			else
			{
				format(string256, 256, "Всички социални мрежи бяха изключени от администратор %s", accountNickname);
				SendClientMessageToAll(COLOR_TWITTER, string256);
				SocStatus = false;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/turnooc", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			new string256[256];
			if (OOCStatus == false)
			{
				format(string256, 256, "Глобалният OOC чат беше включен от администратор %s", accountNickname);
				SendClientMessageToAll(COLOR_OOC, string256);
				OOCStatus = true;
				return 1;
			}
			else
			{
				format(string256, 256, "Глобалният OOC чат беше изключен от администратор %s", accountNickname);
				SendClientMessageToAll(COLOR_OOC, string256);
				OOCStatus = false;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/skipturftime", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN, "Ти Skip-на времето за започване на нова Turf атака!");
			turfStartTimer = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/scriptermode", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			if (scripterMode[playerid] == false)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вие включихте Scripter мода. Вижте /scripterhelp");
				scripterMode[playerid] = true;
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN, "Вие изключихте Scripter мода.");
				scripterMode[playerid] = false;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/ehelmet", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD &&
			PlayerInfo[playerid][pFaction] != FACTION_LVPD &&
			PlayerInfo[playerid][pFaction] != FACTION_FBI &&
			PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY &&
			PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на полиция/фбр/армия !");
			return 1;
		}

		if (PlayerInfo[playerid][pHelmetObject] == 0)
		{
			PlayerInfo[playerid][pHelmetObject] = 1;
			if (IsPlayerAttachedObjectSlotUsed(playerid, 7))
			{
				RemoveArmourObject(playerid);
			}

			SendClientMessage(playerid, COLOR_WHITE, "* Вече няма да получаваш жилетка, щит и каска при вземане на броня *");
		}
		else
		{
			PlayerInfo[playerid][pHelmetObject] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "* Вече ще получаваш жилетка, щит и каска при вземане на броня *");
		}

		return 1;
	}

	if (strcmp(cmd, "/toggleradio", true) == 0)
	{
		if (PlayerInfo[playerid][pDisableCarRadio] == 0)
		{
			SendClientMessage(playerid, COLOR_RADIO, "[Radio] {FFFFFF}Вече няма да чувате радио в колата, когато то е пуснато!");
			PlayerInfo[playerid][pDisableCarRadio] = 1;
			if (IsPlayerInAnyVehicle(playerid))
			{
				new hisVeh = GetPlayerVehicleID(playerid);
				if (radioveh[hisVeh] > 0)
				{
					StopAudioStreamForPlayer(playerid);
				}
			}

			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_RADIO, "[Radio] {FFFFFF}Вече ще чувате радио в колата, когато то е пуснато!");
			PlayerInfo[playerid][pDisableCarRadio] = 0;
			if (IsPlayerInAnyVehicle(playerid))
			{
				new hisVeh = GetPlayerVehicleID(playerid);
				PlayAudioStreamForPlayer(playerid, radioAudioStream[radioveh[hisVeh]]);
				//new stringRadio[50];
				//format(stringRadio,50,"~b~~h~RADIO %s",radioAudioStreamNames[radioveh[hisVeh]]);
				//GameTextForPlayer(playerid, stringRadio, 650, 1);
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/togglenews", true) == 0)
	{
		if (PlayerInfo[playerid][pDisableNews] == 0)
		{
			SendClientMessage(playerid, COLOR_NEWS, "Вие вече няма да чувате новините, когато ги съобщават.");
			PlayerInfo[playerid][pDisableNews] = 1;
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_NEWS, "Вие вече ще чувате отновно новините, когато ги съобщават.");
			PlayerInfo[playerid][pDisableNews] = 0;
		}

		return 1;
	}

	if (strcmp(cmd, "/unlockhouse", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseO] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате къща.");
			return 1;
		}

		new houseID = -1;
		for (new alh = 0; alh < maxhouses + 2; alh++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
			{
				if (PlayerInfo[playerid][pHouseO] == alh)
				{
					houseID = alh;
				}
			}
		}

		if (houseID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до вашата къща.");
		if (HouseInfo[houseID][hLocked] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази къща вече е отключена.");
			return 1;
		}

		HouseInfo[houseID][hLocked] = 0;
		SaveHouse(houseID);
		SendClientMessage(playerid, COLOR_HOUSE, "Вие отключихте къщата си!");
		new stringLock[256];
		format(stringLock, 256, "%s отключи своята къща!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringLock);
		return 1;
	}

	if (strcmp(cmd, "/vehlock", true) == 0)
	{
		LockOrUnlockVehicle(playerid);
		return 1;
	}

	/*
     if(strcmp(cmd, "/buyattachment", true) == 0)
	 {
	 if(PlayerInfo[playerid][pPrivateVehs]==0)
     {
     SendClientMessage(playerid,COLOR_GRAD1,"Вие нямате лично превозно средство.");
     return 1;
     }

     if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GRAD1,"Вие не сте в превозно средство.");
     if(GetPlayerVirtualWorld(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можете да запаметите превозното си средство в този Virtual World.");
     if(GetPlayerInterior(playerid)!=0) return SendClientMessage(playerid,COLOR_GRAD1,"Не можете да запаметите превозното си средство в този Interior.");
	 if(IsPlayerInHisPrivateVeh(playerid)==0)
	 {
	      return SendClientMessage(playerid,COLOR_GRAD1,"Вие не сте във вашето превозно средство!");
	 }

	 OpenBuyVehAttachments(playerid);
     return 1;
     }

     */
	if (strcmp(cmd, "/privatevehid", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте в превозно средство!");
		new vehicleid = GetPlayerVehicleID(playerid);
		new privateVehID = VehicleInfo[vehicleid][vPrivateID];
		if (PrivateVehInfo[privateVehID][vVehID] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в лично превозно средство!");
		new string256[256];
		format(string256, 256, "Това лично превозно средство е Private Veh ID: %d", privateVehID);
		SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
		return 1;
	}

	if (strcmp(cmd, "/park", true) == 0)
	{
		if (GetPrivateVehsNumber(playerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате лично превозно средство.");
			return 1;
		}

		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте в превозно средство.");
		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да запаметите превозното си средство в този Virtual World.");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да запаметите превозното си средство в този Interior.");
		if (IsPlayerInHisPrivateVeh(playerid) == 0)
		{
			return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте във вашето превозно средство!");
		}

		new hisVehID = PlayerInfo[playerid][pPrivateVeh][GetPlayerPrivateVehID(playerid)];
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Вие запаметихте позицията на вашето превозно средство.");
		new string256[256];
		format(string256, 256, "* %s паркира своя личен превоз!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		new Float: VX, Float: VY, Float: VZ, Float: VA;
		GetVehiclePos(vehicleid, VX, VY, VZ);
		GetVehicleZAngle(vehicleid, VA);
		PrivateVehInfo[hisVehID][vVehX] = VX;
		PrivateVehInfo[hisVehID][vVehY] = VY;
		PrivateVehInfo[hisVehID][vVehZ] = VZ;
		PrivateVehInfo[hisVehID][vVehA] = VA;
		PrivateVehInfo[hisVehID][vParked] = 1;
		new vehColor1, vehColor2;
		GetVehicleColor(vehicleid, vehColor1, vehColor2);
		PrivateVehInfo[hisVehID][vVehC1] = vehColor1;
		PrivateVehInfo[hisVehID][vVehC2] = vehColor2;
		SavePrivateVehicle(hisVehID);
		SavePrivateVehTune(vehicleid);
		PlayerTimerInfo[playerid][ptPark] = 1;
		return 1;
	}

	if (strcmp(cmd, "/findveh", true) == 0)
	{
		if (GetPrivateVehsNumber(playerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате лично превозно средство.");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/findveh [slot: 1-3]");
			return 1;
		}

		new slot;
		slot = strval(tmp);
		if (slot < 1 || slot > 3) return SendClientMessage(playerid, COLOR_GRAD1, "Слотовете са от 1 до 3.");
		new realSlot = slot;
		realSlot -= 1;
		if (PlayerInfo[playerid][pPrivateVeh][realSlot] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш превозно средство в този слот.");
		if (isPlayerWorkingNow(playerid) == 1 || isStudyingDrive[playerid] == true)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "В момента имате друг маркер, преминете първо през него.");
			return 1;
		}

		new hisVehID = PlayerInfo[playerid][pPrivateVeh][realSlot];
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		if (PrivateVehInfo[hisVehID][vParked] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вашето превозно средство не е паркирано още. Вземете си го от автосалона с /getmycar");
		SendClientMessage(playerid, COLOR_YELLOW, "Следвайте маркера за да достигнете до вашето превозно средство.");
		new Float: X, Float: Y, Float: Z;
		GetVehiclePos(vehicleid, X, Y, Z);
		SetPlayerCheckpoint(playerid, X, Y, Z, 4.0);
		findVehX[playerid] = X;
		findVehY[playerid] = Y;
		findVehZ[playerid] = Z;
		return 1;
	}

	if (strcmp(cmd, "/listvehs", true) == 0)
	{
		if (GetPrivateVehsNumber(playerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш лични превозни средства!");
			return 1;
		}

		new string256[256];
		for (new i; i < 3; i++)
		{
			new hisVehID = PlayerInfo[playerid][pPrivateVeh][i];
			new fakeSlot = (i + 1);
			if (PlayerInfo[playerid][pPrivateVeh][i] != -1)
			{
				if (IsValidPrivateVehID(hisVehID) == 0)
				{
					format(string256, 256, "[Слот %d]     {FFFFFF}Празен Слот", fakeSlot);
					SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
					RemovePlayerPrivateVehInfo(playerid, i);
				}
				else if (IsValidPrivateVehID(hisVehID) == 1)
				{
					new vehicleid = PrivateVehInfo[hisVehID][vVeh];
					format(string256, 256, "[Слот %d]     {FFFFFF}Модел: %s", fakeSlot, GetVehicleName(vehicleid));
					SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
				}
			}
			else if (PlayerInfo[playerid][pPrivateVeh][i] == -1)
			{
				format(string256, 256, "[Слот %d]     {FFFFFF}Празен Слот", fakeSlot);
				SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
			}
		}

		return 1;
	}

	//check listvehs - open
	if (strcmp(cmd, "/checkvehs", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/checkvehs [playerid] ");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (GetPrivateVehsNumber(giveplayerID) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Играчът няма лични превозни средства!");
			return 1;
		}

		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		new string256[256];
		format(string256, 256, "Личните превозни средства на {40BF00}%s", giveplayerIDNickname);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		for (new i; i < 3; i++)
		{
			new hisVehID = PlayerInfo[giveplayerID][pPrivateVeh][i];
			new fakeSlot = (i + 1);
			if (PlayerInfo[giveplayerID][pPrivateVeh][i] != -1)
			{
				if (IsValidPrivateVehID(hisVehID) == 0)
				{
					format(string256, 256, "[Слот %d]     {FFFFFF}Празен Слот", fakeSlot);
					SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
					RemovePlayerPrivateVehInfo(giveplayerID, i);
				}
				else if (IsValidPrivateVehID(hisVehID) == 1)
				{
					new vehicleid = PrivateVehInfo[hisVehID][vVeh];
					format(string256, 256, "[Слот %d]     {FFFFFF}Модел: %s[Private Veh ID: %d]", fakeSlot, GetVehicleName(vehicleid), hisVehID);
					SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
				}
			}
			else if (PlayerInfo[playerid][pPrivateVeh][i] == -1)
			{
				format(string256, 256, "[Слот %d]     {FFFFFF}Празен Слот", fakeSlot);
				SendClientMessage(playerid, COLOR_LIGHTYELLOW, string256);
			}
		}

		return 1;
	}

	//check listvehs - close
	//get keys - open
	if (strcmp(cmd, "/getkeys", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getkeys [playerid] [slot: 1-3]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getkeys [playerid] [slot: 1-3]");
			return 1;
		}

		new slot;
		slot = strval(tmp);
		if (giveplayerID != INVALID_PLAYER_ID)
		{
			if (slot < 1 || slot > 3) return SendClientMessage(playerid, COLOR_GRAD1, "Слотовете са от 1 до 3!");
			new realSlot = slot;
			realSlot -= 1;
			if (PlayerInfo[giveplayerID][pPrivateVeh][realSlot] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът няма превоз в този слот!");
			new string256[256];
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			format(string256, 256, "Ти премахна %d слот превоз на %s!", slot, giveplayerIDNickname);
			SendClientMessage(giveplayerID, COLOR_PRIVATEVEH, string256);
			format(string256, 256, "%s премахна твоя личен превоз от слот %d завинаги!", accountNickname, slot);
			SendClientMessage(giveplayerID, COLOR_PRIVATEVEH, string256);
			new hisVehID = PlayerInfo[giveplayerID][pPrivateVeh][realSlot];
			new vehicleid = PrivateVehInfo[hisVehID][vVeh];
			DestroyVehicle(vehicleid);
			PrivateVehInfo[hisVehID][vVehID] = 0;
			format(string256, 256, "/PrivateVehs/%d.ini", hisVehID);
			dini_Remove(string256);
			PlayerInfo[giveplayerID][pPrivateVeh][realSlot] = -1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		}

		return 1;
	}

	//get keys - close
	if (strcmp(cmd, "/destroymycar", true) == 0)
	{
		if (GetPrivateVehsNumber(playerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате лично превозно средство.");
			return 1;
		}

		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да премахнете превоза си в този Virtual World!");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да премахнете превоза си в този Interior!");
		if (!IsPlayerInRangeOfPoint(playerid, 23, 1796.0702, -1922.7603, 13.3912))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си близо до главния гараж!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/destroymycar [slot: 1-3] [confirm]");
			return 1;
		}

		new slot;
		slot = strval(tmp);
		if (slot < 1 || slot > 3) return SendClientMessage(playerid, COLOR_GRAD1, "Слотовете са от 1 до 3!");
		//confirm open
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/destroymycar [slot: 1-3] [confirm]");
			SendClientMessage(playerid, COLOR_WHITE, "Ако си сигурен, че искаш да унищожиш превоза си, използвай /destroymycar [slot: 1-3] [confirm]");
			return 1;
		}

		if (strcmp(result, "confirm", true) != 0)
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/destroymycar [slot: 1-3] [confirm]");
			SendClientMessage(playerid, COLOR_WHITE, "Ако си сигурен, че искаш да унищожиш превоза си, използвай /destroymycar [slot: 1-3] [confirm]");
			return 1;
		}

		//confirm close
		new realSlot = slot;
		realSlot -= 1;
		if (PlayerInfo[playerid][pPrivateVeh][realSlot] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш превозно средство в този слот!");
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Вие премахнахте вашето превозно средство завинаги!");
		new hisVehID = PlayerInfo[playerid][pPrivateVeh][realSlot];
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		DestroyVehicle(vehicleid);
		PrivateVehInfo[hisVehID][vVehID] = 0;
		new string256[256];
		format(string256, 256, "/PrivateVehs/%d.ini", hisVehID);
		dini_Remove(string256);
		RestartPrivateTuneInfo(hisVehID);
		PlayerInfo[playerid][pPrivateVeh][realSlot] = -1;
		return 1;
	}

	if (strcmp(cmd, "/getmycar", true) == 0)
	{
		if (GetPrivateVehsNumber(playerid) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате лично превозно средство.");
			return 1;
		}

		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете превозното си средство в този Virtual World!");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете превозното си средство в този Interior!");
		if (!IsPlayerInRangeOfPoint(playerid, 50, 2155.8245, -1135.9541, 25.3614) && !IsPlayerInRangeOfPoint(playerid, 23, 1795.6138, -1911.3533, 13.3968) &&
			!IsPlayerInRangeOfPoint(playerid, 50, 1085.3721, 1076.5508, 10.8359))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си близо до автосалон или главен гараж!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/getmycar [slot: 1-3]");
			return 1;
		}

		new slot;
		slot = strval(tmp);
		if (slot < 1 || slot > 3) return SendClientMessage(playerid, COLOR_GRAD1, "Слотовете са от 1 до 3.");
		new realSlot = slot;
		realSlot -= 1;
		if (PlayerInfo[playerid][pPrivateVeh][realSlot] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш превозно средство в този слот!");
		new hisVehID = PlayerInfo[playerid][pPrivateVeh][realSlot];

		if (IsValidPrivateVehID(hisVehID) == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство е унищожено от база данните!");
			RemovePlayerPrivateVehInfo(playerid, realSlot);
			return 1;
		}

		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Вие пуснахте превозното си средство! Използвайте /park за да го паркирате!");
		new vehicleid = PrivateVehInfo[hisVehID][vVeh];
		LinkVehicleToInterior(vehicleid, GetPlayerInterior(playerid));
		SetVehicleVirtualWorld(vehicleid, GetPlayerVirtualWorld(playerid));
		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		SetVehiclePos(vehicleid, X, Y, Z);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		return 1;
	}

	if (strcmp(cmd, "/lockhouse", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseO] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате къща.");
			return 1;
		}

		new houseID = -1;
		for (new alh = 0; alh < maxhouses + 2; alh++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
			{
				if (PlayerInfo[playerid][pHouseO] == alh)
				{
					houseID = alh;
				}
			}
		}

		if (houseID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до вашата къща.");
		if (HouseInfo[houseID][hLocked] == 1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази къща вече е заключена.");
			return 1;
		}

		HouseInfo[houseID][hLocked] = 1;
		SaveHouse(houseID);
		SendClientMessage(playerid, COLOR_HOUSE, "Вие заключихте къщата си!");
		new stringLock[256];
		format(stringLock, 256, "%s заключи своята къща!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringLock);
		return 1;
	}

	if (strcmp(cmd, "/lockbiz", true) == 0)
	{
		if (PlayerInfo[playerid][pBizO] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате бизнес!");
			return 1;
		}

		new bizID = -1;
		for (new alb = 0; alb < maxbiz + 2; alb++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
			{
				if (PlayerInfo[playerid][pBizO] == alb)
				{
					bizID = alb;
				}
			}
		}

		if (bizID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до вашия бизнес!");
		if (BizInfo[bizID][bLocked] == 1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този бизнес вече е залючен!");
			return 1;
		}

		BizInfo[bizID][bLocked] = 1;
		SaveBiz(bizID);
		SendClientMessage(playerid, COLOR_BIZ, "Вие заключихте бизнеса си!");
		new stringLock[256];
		format(stringLock, 256, "%s заключи своя бизнес!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringLock);
		return 1;
	}

	if (strcmp(cmd, "/unlockbiz", true) == 0)
	{
		if (PlayerInfo[playerid][pBizO] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате бизнес!");
			return 1;
		}

		new bizID = -1;
		for (new alb = 0; alb < maxbiz + 2; alb++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
			{
				if (PlayerInfo[playerid][pBizO] == alb)
				{
					bizID = alb;
				}
			}
		}

		if (bizID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до вашия бизнес!");
		if (BizInfo[bizID][bLocked] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този бизнес вече е отключен!");
			return 1;
		}

		BizInfo[bizID][bLocked] = 0;
		SaveBiz(bizID);
		SendClientMessage(playerid, COLOR_BIZ, "Вие отключихте бизнеса си!");
		new stringLock[256];
		format(stringLock, 256, "%s отключи своя бизнес!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringLock);
		return 1;
	}

	if (strcmp(cmd, "/govvote", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		//if(governmentCandidates < 2) return SendClientMessage(playerid,COLOR_GRAD1,"В момента няма 2 кандидата за правителство");
		if (governmentVoting == true)
		{
			new string256[256];
			format(string256, 256, "[Гласуване] {FFFFFF}Кандидати: %s и %s", governmentCandidate1Name, governmentCandidate2Name);
			SendClientMessageToAll(COLOR_GOVERNMENT, string256);
			SendClientMessageToAll(COLOR_GOVERNMENT, "_______________________________________________");
			format(string256, 256, "[Първи кандидат] {FFFFFF}Резултатите на {40BF00}%s {ffffff}са {40BF00}%d", governmentCandidate1Name, governmentCandidate1Result);
			SendClientMessageToAll(COLOR_GOVERNMENT, string256);
			format(string256, 256, "[Втори кандидат] {FFFFFF}Резултатите на {40BF00}%s {ffffff}са {40BF00}%d", governmentCandidate2Name, governmentCandidate2Result);
			SendClientMessageToAll(COLOR_GOVERNMENT, string256);
			SendClientMessageToAll(COLOR_GOVERNMENT, "_______________________________________________");
			if (governmentCandidate1Result > governmentCandidate2Result)
			{
				format(string256, 256, "[Резултат] {FFFFFF}***Поздравления на {40BF00}%s{ffffff}, той оглави новото правителство {ffffff}***", governmentCandidate1Name);
				SendClientMessageToAll(COLOR_GOVERNMENT, string256);
			}
			else if (governmentCandidate2Result > governmentCandidate1Result)
			{
				format(string256, 256, "[Резултат] {FFFFFF}***Поздравления на {40BF00}%s{ffffff}, той оглави новото правителство {ffffff}***", governmentCandidate2Name);
				SendClientMessageToAll(COLOR_GOVERNMENT, string256);
			}
			else if (governmentCandidate2Result == governmentCandidate1Result)
			{
				format(string256, 256, "[Резултат] {FFFFFF}***Резултатите са {40BF00}наравно {ffffff}и няма избрано правителство {ffffff}***", governmentCandidate2Name);
				SendClientMessageToAll(COLOR_GOVERNMENT, string256);
			}

			governmentCandidate1Result = 0;
			governmentCandidate2Result = 0;
			governmentVoting = false;
		}
		else if (governmentVoting == false)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/govvote [ID на кандидат 1] [ID на кандидат 2]");
				return 1;
			}

			new candidate1ID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/govvote [ID на кандидат 1] [ID на кандидат 2]");
				return 1;
			}

			new candidate2ID = ReturnUser(tmp);

			if (candidate1ID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно първо ID.");
				return 1;
			}

			if (candidate2ID == INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Невалидно второ ID.");
				return 1;
			}

			SendClientMessageToAll(COLOR_GOVERNMENT, "[Гласуване] {FFFFFF}Гласуването започва. Отидете до кметството и глаусвайте");
			new string256[256];
			format(string256, 256, "[Гласуване] {FFFFFF}Кандидати: {40BF00}%s {ffffff}и {40BF00}%s", GetPlayerRpName(candidate1ID), GetPlayerRpName(candidate2ID));
			SendClientMessageToAll(COLOR_GOVERNMENT, string256);
			format(governmentCandidate1Name, 60, "%s", GetPlayerRpName(candidate1ID));
			format(governmentCandidate2Name, 60, "%s", GetPlayerRpName(candidate2ID));
			governmentVoting = true;
			ClearVotersInfo();
		}

		return 1;
	}

	if (strcmp(cmd, "/rbarricade", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD &&
			PlayerInfo[playerid][pFaction] != FACTION_LVPD &&
			PlayerInfo[playerid][pFaction] != FACTION_FBI &&
			PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY &&
			PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш барикади, която да махнеш!");
			return 1;
		}

		new string2230[512];
		new string2230result[2230];
		for (new i = 0; i < 20; i++)
		{
			new slotID = i + 1;
			if (policeBarricade[playerid] [i] == -1)
			{
				format(string2230, 512, "{FFFFFF}Слот %d {40BF00}[Празен]\n", slotID);
				strcat(string2230result, string2230);
			}
			else if (policeBarricade[playerid] [i] != -1)
			{
				format(string2230, 512, "{FFFFFF}Слот %d {FF0000}[Използван]\n", slotID);
				strcat(string2230result, string2230);
			}
		}

		strcat(string2230result, "{FF0000}Махни всички барикади");
		ShowPlayerDialog(playerid, DIALOG_REM_BARRICADE, DIALOG_STYLE_LIST, "Remove Barricade:", string2230result, "Избери", "Излез");
		return 1;
	}

	if (strcmp(cmd, "/barricade", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD &&
			PlayerInfo[playerid][pFaction] != FACTION_LVPD &&
			PlayerInfo[playerid][pFaction] != FACTION_FBI &&
			PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY &&
			PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш барикади, която да добавиш!");
			return 1;
		}

		OpenBarricadeItems(playerid);
		return 1;
	}

	if (strcmp(cmd, "/siren", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD &&
			PlayerInfo[playerid][pFaction] != FACTION_LVPD &&
			PlayerInfo[playerid][pFaction] != FACTION_FBI &&
			PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY &&
			PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш сирена, която да добавиш!");
			return 1;
		}

		if (policeSiren[playerid] != -1)
		{
			RemovePlayerSiren(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "* Ти премахна сирената от превоза си! *");
			new string256[256];
			format(string256, 256, "%s премахна сирената от превоза си!", RealName(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else if (policeSiren[playerid] == -1)
		{
			if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превозно средство!");
			SendClientMessage(playerid, COLOR_WHITE, "* Ти добави сирена към превоза си, намести я! *");
			new string256[256];
			format(string256, 256, "%s добави сирена към превоза си!", RealName(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);
			policeSiren[playerid] = CreateDynamicObject(18646, X, Y, Z, 0, 0, 0);
			isSirenObject[policeSiren[playerid]] = true;
			EditDynamicObject(playerid, policeSiren[playerid]);
		}

		return 1;
	}

	if (strcmp(cmd, "/creategraffiti", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да използвате този Virutal World");
		if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да използвате този Interior");
		SendClientMessage(playerid, COLOR_LIGHTRED, "[Графити] {ffffff}Вие създадохте нов графит. Наместете го.");
		new gang = FACTION_CIVILIAN;
		new gangName[80];
		format(gangName, 80, "%s", getFactionName(gang));
		new graffiti[64];
		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		maxGraffiti += 1;
		format(graffiti, 64, "/Graffiti/%d.ini", maxGraffiti);
		if (!dini_Exists(graffiti))
		{
			dini_Create(graffiti);
			dini_FloatSet(graffiti, "gX", X);
			dini_FloatSet(graffiti, "gY", Y);
			dini_FloatSet(graffiti, "gZ", Z);
			dini_FloatSet(graffiti, "gXY", 0);
			dini_FloatSet(graffiti, "gYY", 0);
			dini_FloatSet(graffiti, "gZY", 0);
			dini_IntSet(graffiti, "GraffitiOwner", 0);
		}

		GraffitiInfo[maxGraffiti][gX] = X;
		GraffitiInfo[maxGraffiti][gY] = Y;
		GraffitiInfo[maxGraffiti][gZ] = Z;
		GraffitiInfo[maxGraffiti][gXY] = 0;
		GraffitiInfo[maxGraffiti][gYY] = 0;
		GraffitiInfo[maxGraffiti][gZY] = 0;
		GraffitiInfo[maxGraffiti][gObjectID] = CreateObject(19482, X, Y, Z, 0.0, 0.0, 0.0, 0);
		EditObject(playerid, GraffitiInfo[maxGraffiti][gObjectID]);
		SetObjectMaterialText(GraffitiInfo[maxGraffiti][gObjectID], gangName, 0, OBJECT_MATERIAL_SIZE_512x512, "Diploma", 100, 0, 0xFFFFFFFF, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
		new grObjectID = GraffitiInfo[maxGraffiti][gObjectID];
		isGraffitiObject[grObjectID] = true;
		graffitiSpecialIndex[grObjectID] = maxGraffiti;
		return 1;
	}

	if (strcmp(cmd, "/buyfurniture", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseO] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате къща!");
		new neededVw = PlayerInfo[playerid][pHouseO] + 50;
		if (neededVw != GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте в къщата ви!");

		new string2230[512];
		new string2230result[2230];
		new hisHouse = PlayerInfo[playerid][pHouseO];
		for (new i; i < 10; i++)
		{
			new isSetObject = HouseInfo[hisHouse][hFurSlot][i];
			new isSetString[50];
			if (isSetObject == 0)
			{
				format(isSetString, 50, "{00FF00}Свободен");
			}
			else if (isSetObject == 1)
			{
				format(isSetString, 50, "{FF0000}Зает");
			}

			new realSlot = i;
			realSlot += 1;
			format(string2230, 512, "{FFFFFF}Слот {40BF00}[%d] {FFFFFF}- %s\n", realSlot, isSetString);
			strcat(string2230result, string2230);
		}

		ShowPlayerDialog(playerid, DIALOG_HOUSE_FURNITURES_SLOT, DIALOG_STYLE_LIST, "{EBEBEB}House furnitures:", string2230result, "Напред", "Затвори");
		return 1;
	}

	if (strcmp(cmd, "/sellhouse", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseO] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате къща.");
			return 1;
		}

		new houseID = -1;
		for (new alh = 0; alh < maxhouses + 2; alh++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
			{
				if (PlayerInfo[playerid][pHouseO] == alh)
				{
					houseID = alh;
				}
			}
		}

		if (houseID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до къща ви.");

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellhouse [confirm]");
			format(stringResult, 256, "Продажба:{FFFFFF} Сигурни ли сте, че искате да продадете къщата си за $%d ?", HouseInfo[houseID][hPrice] / 2);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, stringResult);
			return 1;
		}

		if (strcmp(result, "confirm", true) != 0)
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellhouse [confirm]");
			format(stringResult, 256, "Продажба:{FFFFFF} Сигурни ли сте, че искате да продадете къщата си за $%d ?", HouseInfo[houseID][hPrice] / 2);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, stringResult);
			return 1;
		}

		new string256[256];
		PlayerInfo[playerid][pHouseO] = -1;
		format(HouseInfo[houseID][hOwnerName], 256, "None");
		HouseInfo[houseID][hOwner] = 0;
		GivePlayerCash(playerid, HouseInfo[houseID][hPrice] / 2);
		format(string256, 256, "Вие продадохте къщата си на стойност $%d", HouseInfo[houseID][hPrice] / 2);
		SendClientMessage(playerid, COLOR_HOUSE, string256);
		if (PlayerInfo[playerid][pSpawn] == HOUSE_SPAWN) SetToFactionSpawnWithText(playerid);
		SaveHouse(houseID);
		UpdateHouse3DText(houseID);
		return 1;
	}

	if (strcmp(cmd, "/earnings", true) == 0)
	{
		if (PlayerInfo[playerid][pBizO] == -1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не притежаваш бизнес!");
		new hisBiz = PlayerInfo[playerid][pBizO];
		if (!IsPlayerInRangeOfPoint(playerid, 3, BizInfo[hisBiz][bX], BizInfo[hisBiz][bY], BizInfo[hisBiz][bZ])) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си достатъчно близо до бизнеса си!");
		if (BizInfo[hisBiz][bEarnings] == 0) return SendClientMessage(playerid, 0xB4B5B7FF, "Твоят бизнес няма изкарани пари все още!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/earnings [confirm]");
			format(stringResult, 256, "Earnings:{FFFFFF} Сигурни ли сте, че искате да вземете {40BF00}$%d {FFFFFF}от бизнеса ви?", BizInfo[hisBiz][bEarnings]);
			SendClientMessage(playerid, COLOR_BIZ, stringResult);
			return 1;
		}

		if (strcmp(result, "confirm", true) != 0)
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/earnings [confirm]");
			format(stringResult, 256, "Earnings:{FFFFFF} Сигурни ли сте, че искате да вземете {40BF00}$%d {FFFFFF}от бизнеса ви?", BizInfo[hisBiz][bEarnings]);
			SendClientMessage(playerid, COLOR_BIZ, stringResult);
			return 1;
		}

		new string256[256];
		format(string256, 256, "Вие взехте {40BF00}$%d {FFFFFF}от печалбата на бизнеса ви!");
		SendClientMessage(playerid, COLOR_WHITE, string256);
		GivePlayerCash(playerid, BizInfo[hisBiz][bEarnings]);
		BizInfo[hisBiz][bEarnings] = 0;
		return 1;
	}

	if (strcmp(cmd, "/checkstock", true) == 0)
	{
		if (PlayerInfo[playerid][pBizO] == -1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не притежаваш бизнес!");
		new hisBiz = PlayerInfo[playerid][pBizO];
		if (!IsPlayerInRangeOfPoint(playerid, 3, BizInfo[hisBiz][bX], BizInfo[hisBiz][bY], BizInfo[hisBiz][bZ])) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си достатъчно близо до бизнеса си!");
		new string256[256];
		format(string256, 256, "Бизнесът ти има {40BF00}%d {FFFFFF}броя стоки! За да бъде напълно зареден трябват {FFFF00}60 стоки!", BizInfo[hisBiz][bStock]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		return 1;
	}

	if (strcmp(cmd, "/buystock", true) == 0)
	{
		if (PlayerInfo[playerid][pBizO] == -1) return SendClientMessage(playerid, 0xB4B5B7FF, "Ти не притежаваш бизнес!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/buystock [брой стока]");
			return 1;
		}

		new bizStock = strval(tmp);
		new playersBiz = PlayerInfo[playerid][pBizO];
		if (!IsPlayerInRangeOfPoint(playerid, 3, BizInfo[playersBiz][bX], BizInfo[playersBiz][bY], BizInfo[playersBiz][bZ])) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си достатъчно близо до бизнеса си!");
		if (bizStock < 1) return SendClientMessage(playerid, 0xB4B5B7FF, "Стоката не може да е под 1 бр.!");
		new oldStock = BizInfo[playersBiz][bStock];
		if (oldStock >= 60) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът ти има достатъчно стока!");
		new string256[256];
		new maximumStock = 60 - oldStock;
		new stockPrice = bizStock * 400;
		format(string256, 256, "Можеш да купиш максимум %d бр. стока", maximumStock);
		if (oldStock + bizStock > 60) return SendClientMessage(playerid, COLOR_GRAD1, string256);
		format(string256, 256, "Нямаш достатъчно пари! Цената за %d бр. стока е $%d", bizStock, stockPrice);
		if (PlayerInfo[playerid][pCash] < stockPrice) return SendClientMessage(playerid, COLOR_GRAD1, string256);
		format(string256, 256, "Вие купихте {40BF00}%d {ffffff}броя стока за бизнеса на цена {ff0000}$%d{ffffff}!", bizStock, stockPrice);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		BizInfo[playersBiz][bStock] += bizStock;
		GivePlayerCash(playerid, stockPrice);
		SaveBiz(playersBiz);
		return 1;
	}

	if (strcmp(cmd, "/sellbiz", true) == 0)
	{
		if (PlayerInfo[playerid][pBizO] == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не притежавате бизнес.");
			return 1;
		}

		new bizID = -1;
		for (new alb = 0; alb < maxbiz + 2; alb++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
			{
				if (PlayerInfo[playerid][pBizO] == alb)
				{
					bizID = alb;
				}
			}
		}

		if (bizID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до бизнеса ви.");

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellbiz [confirm]");
			format(stringResult, 256, "Продажба:{FFFFFF} Сигурни ли сте, че искате да продадете бизнеса си за $%d ?", BizInfo[bizID][bPrice] / 2);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, stringResult);
			return 1;
		}

		if (strcmp(result, "confirm", true) != 0)
		{
			new stringResult[256];
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sellbiz [confirm]");
			format(stringResult, 256, "Продажба:{FFFFFF} Сигурни ли сте, че искате да продадете бизнеса си за $%d ?", BizInfo[bizID][bPrice] / 2);
			SendClientMessage(playerid, COLOR_LIGHTGREEN, stringResult);
			return 1;
		}

		new string256[256];
		PlayerInfo[playerid][pBizO] = -1;
		format(BizInfo[bizID][bOwnerName], 256, "None");
		BizInfo[bizID][bOwner] = 0;
		GivePlayerCash(playerid, BizInfo[bizID][bPrice] / 2);
		format(string256, 256, "Вие продадохте бизнеса си на стойност $%d", BizInfo[bizID][bPrice] / 2);
		SendClientMessage(playerid, 0x0984E3FF, string256);
		if (PlayerInfo[playerid][pSpawn] == BIZ_SPAWN) SetToFactionSpawnWithText(playerid);
		SaveBiz(bizID);
		UpdateBiz3DText(bizID);
		return 1;
	}

	if (strcmp(cmd, "/buybiz", true) == 0)
	{
		if (PlayerInfo[playerid][pBizO] > -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие вече притежавате бизнес.");
			return 1;
		}

		new bizID = -1;
		for (new alb = 0; alb < maxbiz + 2; alb++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]))
			{
				bizID = alb;
			}
		}

		if (bizID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до бизнес.");
		if (BizInfo[bizID][bOwner] == 1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този бизнес вече има притежател!");
			return 1;
		}

		if (BizInfo[bizID][bLevel] > PlayerInfo[playerid][pLevel])
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво за бизнеса!");
			return 1;
		}

		if (BizInfo[bizID][bPrice] > PlayerInfo[playerid][pCash])
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари за този бизнес!");
			return 1;
		}

		new string256[256];
		PlayerInfo[playerid][pBizO] = bizID;
		GetPlayerName(playerid, accountNickname, 25);
		format(BizInfo[bizID][bOwnerName], 256, "%s", accountNickname);
		BizInfo[bizID][bOwner] = 1;
		SaveBiz(bizID);
		GivePlayerCash(playerid, -BizInfo[bizID][bPrice]);
		format(string256, 256, "Честито, вие си купихте бизнес на стойност $%d", BizInfo[bizID][bPrice]);
		SendClientMessage(playerid, 0x0984E3FF, string256);
		if (PlayerInfo[playerid][pAchievement][ACHIEVEMENT_BUYBIZ] == 0)
		{
			format(string256, 256, "Постижение: Купи си бизнес\n\nНаграда: 3 Exp");
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Achievement Unlocked", string256, "OK", "");
			PlayerInfo[playerid][pAchievement][ACHIEVEMENT_BUYBIZ] = 1;
			GivePlayerExp(playerid, 3);
		}
		UpdateBiz3DText(bizID);
		return 1;
	}

	if (strcmp(cmd, "/buyhouse", true) == 0)
	{
		if (PlayerInfo[playerid][pHouseO] > -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие вече притежавате къща.");
			return 1;
		}

		new houseID = -1;
		for (new alh = 0; alh < maxhouses + 2; alh++)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]))
			{
				houseID = alh;
			}
		}

		if (houseID == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте близо до къща.");
		if (HouseInfo[houseID][hOwner] == 1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Тази къща вече има притежател!");
			return 1;
		}

		if (HouseInfo[houseID][hLevel] > PlayerInfo[playerid][pLevel])
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво за къщата!");
			return 1;
		}

		if (HouseInfo[houseID][hPrice] > PlayerInfo[playerid][pCash])
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари за тази къща!");
			return 1;
		}

		new string256[256];
		PlayerInfo[playerid][pHouseO] = houseID;
		format(HouseInfo[houseID][hOwnerName], 256, "%s", accountNickname);
		HouseInfo[houseID][hOwner] = 1;
		GivePlayerCash(playerid, -HouseInfo[houseID][hPrice]);
		format(string256, 256, "Честито, вие си купихте къща на стойност $%d!", HouseInfo[houseID][hPrice]);
		SendClientMessage(playerid, COLOR_HOUSE, string256);
		SaveHouse(houseID);
		if (PlayerInfo[playerid][pAchievement][ACHIEVEMENT_BUYHOUSE] == 0)
		{
			format(string256, 256, "Постижение: Купи си къща\n\nНаграда: 3 Exp");
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Achievement Unlocked", string256, "OK", "");
			PlayerInfo[playerid][pAchievement][ACHIEVEMENT_BUYHOUSE] = 1;
			GivePlayerExp(playerid, 3);
		}
		UpdateHouse3DText(houseID);
		return 1;
	}

	if (strcmp(cmd, "/buygunlic", true) == 0)
	{
		if (!IsPlayerInRangeOfPoint(playerid, 3.0, 1560.4720, -1672.3912, 2113.0349)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте в управлението на иконката.");
		if (PlayerInfo[playerid][pWepLic] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате лиценз за оръжия.");
		if (PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_GRAD2, "Вие не сте достатъчно голям Level. Трябва ви 5 ниво.");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/buygunlic [confirm]");
			SendClientMessage(playerid, COLOR_POLICE_2, "Управление:{FFFFFF} Сумата е $63600. Потвърдете дали искате да я платите.");
			return 1;
		}

		if (strcmp(result, "confirm", true) != 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/buygunlic [confirm]");
			SendClientMessage(playerid, COLOR_POLICE_2, "Управление:{FFFFFF} Сумата е $63600. Потвърдете дали искате да я платите.");
			return 1;
		}

		if (PlayerInfo[playerid][pCash] < 63600) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно средства за да си купите лиценз.");
		GivePlayerCash(playerid, -63600);
		SendClientMessage(playerid, COLOR_POLICE_2, "Gun License: Вие си купихте лиценз за $63600");
		PlayerInfo[playerid][pWepLic] = 1;
		return 1;
	}

	if (strcmp(cmd, "/bosses", true) == 0)
	{
		new leadersOnline, jobName[256];
		new string512[512];
		new string2230result[2230];
		new leaderNickname[MAX_PLAYER_NAME];
		format(string2230result, 2230, "Job:\t Шеф:\t Статус:\n");
		new bool: onlineJobLeader[MAX_JOBS] = false;
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pJobBoss] == 1)
				{
					leadersOnline++;
					GetPlayerName(i, leaderNickname, 25);
					format(jobName, 256, "%s", JobInfo[PlayerInfo[i][pJob]][jName]);
					new leaderStatus[25];
					switch (PlayerInfo[i][pAFK])
					{
						case 0:
							format(leaderStatus, 25, "{40BF00}Online");
						case 1:
							format(leaderStatus, 25, "{D6F34A}Away From Keyboard");
					}

					format(string512, 512, "{33CCFF}%s\t {FFFFFF}%s\t %s\n", jobName, leaderNickname, leaderStatus);
					strcat(string2230result, string512, 2230);
					onlineJobLeader[PlayerInfo[i][pJob]] = true;
				}
			}
		}

		for (new i = 0; i < MAX_JOBS; i++)
		{
			if (i != JOB_NO)
			{
				if (onlineJobLeader[i] == false)
				{
					format(jobName, 256, "%s", JobInfo[i][jName]);
					format(string512, 512, "{33CCFF}%s\t {FFFFFF}No Boss Online\t {FF0000}Offline\n", jobName);
					strcat(string2230result, string512, 2230);
				}
			}
		}

		ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Онлайн шефове на Jobs", string2230result, "Излез", "");
		return 1;
	}

	if (strcmp(cmd, "/leaders", true) == 0)
	{
		new leadersOnline, gangName[256];
		new string512[512];
		new string2230result[2230];
		new leaderNickname[MAX_PLAYER_NAME];
		format(string2230result, 2230, "Организация:\t Лидер:\t Статус:\n");
		new bool: onlineFactionLeader[MAX_FACTIONS] = false;
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pRank] == 6)
				{
					leadersOnline++;
					GetPlayerName(i, leaderNickname, 25);
					format(gangName, 256, "%s", FactionInfo[PlayerInfo[i][pFaction]][fName]);
					new leaderStatus[25];
					switch (PlayerInfo[i][pAFK])
					{
						case 0:
							format(leaderStatus, 25, "{40BF00}Online");
						case 1:
							format(leaderStatus, 25, "{D6F34A}Away From Keyboard");
					}

					format(string512, 512, "{33CCFF}%s\t {FFFFFF}%s\t %s\n", gangName, leaderNickname, leaderStatus);
					strcat(string2230result, string512, 2230);
					onlineFactionLeader[PlayerInfo[i][pFaction]] = true;
				}

				if (PlayerInfo[i][pRank] == 5)
				{
					leadersOnline++;
					GetPlayerName(i, leaderNickname, 25);
					format(gangName, 256, "%s", FactionInfo[PlayerInfo[i][pFaction]][fName]);
					new leaderStatus[25];
					switch (PlayerInfo[i][pAFK])
					{
						case 0:
							format(leaderStatus, 25, "{40BF00}Online");
						case 1:
							format(leaderStatus, 25, "{D6F34A}Away From Keyboard");
					}

					format(string512, 512, "{33CCFF}Co-Leader: %s\t {FFFFFF}%s\t %s\n", gangName, leaderNickname, leaderStatus);
					strcat(string2230result, string512, 2230);
					onlineFactionLeader[PlayerInfo[i][pFaction]] = true;
				}
			}
		}

		for (new i = 0; i < MAX_FACTIONS; i++)
		{
			if (i != FACTION_CIVILIAN)
			{
				if (onlineFactionLeader[i] == false)
				{
					format(gangName, 256, "%s", FactionInfo[i][fName]);
					format(string512, 512, "{33CCFF}%s\t {FFFFFF}No Leader Online\t {FF0000}Offline\n", gangName);
					strcat(string2230result, string512, 2230);
				}
			}
		}

		ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_TABLIST_HEADERS, "{ffffff}Онлайн лидери на организации", string2230result, "Излез", "");
		return 1;
	}

	if (strcmp(cmd, "/jobmembers", true) == 0)
	{
		if (PlayerInfo[playerid][pJob] == JOB_NO) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си нает никъде на работа!");
		new bool: isBoss;
		new string512[512];
		new string2230result[2230];
		new memberNickname[MAX_PLAYER_NAME];
		format(string2230result, 2230, "");
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction])
				{
					GetPlayerName(i, memberNickname, 25);
					if (PlayerInfo[i][pJobBoss] == 1) isBoss = true;
					if (isBoss == true)
					{
						format(string512, 512, "{FFFFFF}• {33CCFF}%s[ID: %d] {FFFFFF}е {40BF00}шеф на фирмата\n", memberNickname, i);
					}
					else
					{
						format(string512, 512, "{FFFFFF}• {33CCFF}%s[ID: %d] {FFFFFF}е {40BF00}служител във фирмата\n", memberNickname, i);
					}

					strcat(string2230result, string512, 2230);
				}
			}
		}

		ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{ffffff}Онлайн членове", string2230result, "Излез", "");
		return 1;
	}

	if (strcmp(cmd, "/members", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, защото не си член на никой Faction!");
		new rankName[256];
		new string512[512];
		new string2230result[2230];
		new memberNickname[MAX_PLAYER_NAME];
		format(string2230result, 2230, "");
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pFaction] == PlayerInfo[playerid][pFaction])
				{
					GetPlayerName(i, memberNickname, 25);
					switch (PlayerInfo[i][pRank])
					{
						case 1:
							format(rankName, 32, "%s", FactionInfo[PlayerInfo[i][pFaction]][fRankName1]);
						case 2:
							format(rankName, 32, "%s", FactionInfo[PlayerInfo[i][pFaction]][fRankName2]);
						case 3:
							format(rankName, 32, "%s", FactionInfo[PlayerInfo[i][pFaction]][fRankName3]);
						case 4:
							format(rankName, 32, "%s", FactionInfo[PlayerInfo[i][pFaction]][fRankName4]);
						case 5:
							format(rankName, 32, "%s", FactionInfo[PlayerInfo[i][pFaction]][fRankName5]);
						case 6:
							format(rankName, 32, "%s", FactionInfo[PlayerInfo[i][pFaction]][fRankName6]);
					}

					format(string512, 512, "{FFFFFF}• {33CCFF}%s[ID: %d] {FFFFFF}е {40BF00}%s (Rank: %d)\n", memberNickname, i, rankName, PlayerInfo[i][pRank]);
					strcat(string2230result, string512, 2230);
				}
			}
		}

		ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{ffffff}Онлайн членове", string2230result, "Излез", "");
		return 1;
	}

	if (strcmp(cmd, "/suspects", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_LVPD) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на полицията!");
		new suspectsOnline;
		new string256[256];
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pWantedLevel] >= 1)
				{
					suspectsOnline++;
					if (suspectsOnline == 1)
					{
						SendClientMessage(playerid, COLOR_POLICE_2, "{ff0000}Police Device: Онлайн заподозрени:");
						SendClientMessage(playerid, COLOR_POLICE_2, "{ff0000}__________________________________________________________");
					}

					format(string256, 256, "(%d): Име на издирвания: %s, Ниво на издирване: %d", suspectsOnline, GetPlayerRpName(i), PlayerInfo[i][pWantedLevel]);
					SendClientMessage(playerid, COLOR_POLICE_2, string256);
				}
			}
		}

		if (suspectsOnline == 0)
		{
			SendClientMessage(playerid, COLOR_POLICE_2, "Police Device: Няма онлайн заподозрени в момента!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_POLICE_2, "{ff0000}__________________________________________________________");
		}

		return 1;
	}

	if (strcmp(cmd, "/admins", true) == 0)
	{
		new adminLevelName[65];
		new status[25];
		new adminsOnline;
		new string512[512];
		new string2230result[2230];
		new adminNickname[MAX_PLAYER_NAME];
		format(string512, 512, "Играч\tНиво\tСтатус\n");
		strcat(string2230result, string512);
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pAdmin] >= 1)
				{
					switch (PlayerInfo[i][pAdmin])
					{
						case 1:
							format(adminLevelName, 65, "{33CCFF}Moderator");
						case 2:
							format(adminLevelName, 65, "{33CCFF}Global Moderator");
						case 3:
							format(adminLevelName, 65, "{33CCFF}Administrator");
						case 4:
							format(adminLevelName, 65, "{E60000}Senior Administrator");
						case 5:
							format(adminLevelName, 65, "{E60000}Server Owner");
					}

					switch (PlayerInfo[i][pAdminDuty])
					{
						case 0:
							format(status, 25, "{FF0000}Off Duty");
						case 1:
							format(status, 25, "{339933}• On Duty");
					}

					if (PlayerInfo[i][pAFK] == 1) format(status, 25, "{D6F34A}AFK");
					adminsOnline++;
					GetPlayerName(i, adminNickname, 25);
					format(string512, 512, "{FFFFFF}%s[ID: %d]\t %s\t %s\n", adminNickname, i, adminLevelName, status);
					strcat(string2230result, string512, 2230);
				}
			}
		}

		if (adminsOnline > 0)
		{
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_TABLIST_HEADERS, "{40BF00}Онлайн администратори:", string2230result, "Излез", "");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Няма онлайн администратори в момента.");
		}

		return 1;
	}

	if (strcmp(cmd, "/payfine", true) == 0)
	{
		if (!IsPlayerInRangeOfPoint(playerid, 3.0, 1560.4720, -1672.3912, 2113.0349)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в Los Santos Police управлението до касата!");
		if (PlayerInfo[playerid][pFine] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате глоби за плащане!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		new string256[256];
		new playerFine = PlayerInfo[playerid][pFine] + (PlayerInfo[playerid][pWantedLevel] *2000);
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/payfine [confirm]");
			format(string256, 256, "Управление:{FFFFFF} Вашата глоба е $%d. Потвърдете дали искате да я платите!", playerFine);
			SendClientMessage(playerid, COLOR_POLICE_2, string256);
			return 1;
		}

		if (strcmp(result, "confirm", true) != 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/payfine [confirm]");
			format(string256, 256, "Управление:{FFFFFF} Вашата глоба е $%d. Потвърдете дали искате да я платите!", playerFine);
			SendClientMessage(playerid, COLOR_POLICE_2, string256);
			return 1;
		}

		if (PlayerInfo[playerid][pCash] < playerFine) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно средства за да си платите глобите!");
		GivePlayerCash(playerid, -playerFine);
		format(string256, 256, "Вие си платихте глобите за $%d!", playerFine);
		SendClientMessage(playerid, COLOR_POLICE_2, string256);
		PlayerInfo[playerid][pFine] = 0;
		if (PlayerInfo[playerid][pWantedLevel] < 4)
		{
			GetPlayerAllWanted(playerid);
		}

		return 1;
	}

	if (strcmp(cmd, "/fine", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/fine [ID на играч] [цена] [предупреждение]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/fine [ID на играч] [цена] [предупреждение]");
				return 1;
			}

			new finePrice;
			finePrice = strval(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}

				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}

				result[idx - offset] = EOS;
				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/fine [ID на играч] [цена] [предупреждение]");
					return 1;
				}

				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/fine [ID на играч] [цена] [предупреждение]");
					return 1;
				}

				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да глобите себе си.");
				if (PlayerInfo[playerid][pPoliceDuty] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте на смяна, за да използвате тази команда.");
				if (!CorDetector(5.5, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек.");
				if (finePrice < 1 || finePrice > 1500) return SendClientMessage(playerid, COLOR_GRAD1, "Глобата може да бъде между $1 и $1500!");
				new string256[256];
				PlayerInfo[giveplayerID][pFine] += finePrice;
				format(string256, 256, "%s сложи глоба на %s[Причина: %s]", accountNickname, giveplayerIDNickname, result);
				SendLocalMessage(5.5, playerid, COLOR_POLICE_2, string256);
				format(string256, 256, "Вие сложихте глоба на %s на стойност $%d. Той трябва да отиде до управлението за да плати.", giveplayerIDNickname, finePrice);
				SendClientMessage(playerid, COLOR_POLICE_2, string256);
				format(string256, 256, "Вие имате глоба от полицай на стойност $%d. Отидете до управлението за да платите.", finePrice);
				SendClientMessage(giveplayerID, COLOR_POLICE_2, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/drunktest", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/drunktest [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да проверите себе си.");
				if (!CorDetector(5.5, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек.");
				new string256[256];
				new isDrunk[25];
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				if (GetPlayerDrunkLevel(giveplayerID) >= 3000)
				{
					format(isDrunk, 25, "Положителен");
				}
				else
				{
					format(isDrunk, 25, "Отрицателен");
				}

				format(string256, 256, "%s прави проверка за алкохол на %s ... Резултатите са готови: %s", accountNickname, giveplayerIDNickname, isDrunk);
				SendLocalMessage(5.5, playerid, COLOR_POLICE_2, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/unwanted", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unwanted [ID на играч]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете себе си за издирване.");
				if (PlayerInfo[giveplayerID][pWantedLevel] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този човек няма нива на издирване.");
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да премахнете себе си от издирване.");
				new string256[256];
				GetPlayerAllWanted(giveplayerID);
				format(string256, 256, "[UNWANTED] %s премахна издирването на %s", accountNickname, giveplayerIDNickname);
				SendPolicePlayersMessage(COLOR_POLICE_2, string256);
				format(string256, 256, "[UNWANTED] Вашето издирване беше прекратено, вече можете да бъдете спокоен.");
				SendClientMessage(giveplayerID, COLOR_POLICE_2, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/wanted", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/wanted [ID на играч] [причина]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}

				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}

				result[idx - offset] = EOS;
				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/wanted [ID на играч] [причина]");
					return 1;
				}

				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/wanted [ID на играч] [причина]");
					return 1;
				}

				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да пуснете себе си за издирване.");
				new string256[256];
				GivePlayerWanted(giveplayerID, 1);
				format(string256, 256, "{ff0000}[SUSPECT] {0040FF}%s пусна %s за издирване. Ниво на издирване: %d [Reason: %s]", accountNickname, giveplayerIDNickname, PlayerInfo[giveplayerID][pWantedLevel], result);
				SendPolicePlayersMessage(COLOR_POLICE_2, string256);
				format(string256, 256, "{ff0000}[SUSPECT] {0040FF}Вие бяхте пуснат за издирване. [Reason: %s]", result);
				SendClientMessage(giveplayerID, COLOR_LIGHTRED, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/warning", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD || PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/warning [ID на играч] [предупреждение]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}

				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}

				result[idx - offset] = EOS;
				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/warning [ID на играч] [предупреждение]");
					return 1;
				}

				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/warning [ID на играч] [предупреждение]");
					return 1;
				}

				if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да предупредите себе си.");
				if (!CorDetector(5.5, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек.");
				new string256[256];
				format(string256, 256, "%s получи предупреждение от полицай %s Причина: %s", giveplayerIDNickname, accountNickname, result);
				SendLocalMessage(5.5, playerid, COLOR_POLICE_2, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/arrest", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/arrest [ID на играч]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_LVPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте полицай, за да използвате тази команда.");
		if (PlayerInfo[playerid][pPoliceDuty] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте на смяна, за да използвате тази команда.");
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да арестувате себе си!");
		if (!CorDetector(9.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек.");
		if (GetPlayerSpecialAction(giveplayerID) != SPECIAL_ACTION_CUFFED) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е закопчан с белезници.");
		if (!IsPlayerInRangeOfPoint(playerid, 8.0, 1578.2095, -1636.5558, 13.5550) && !IsPlayerInRangeOfPoint(playerid, 8.0, 2337.2117, 2459.1912, 14.9742)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си до мястото за арест!");
		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		new string256[256];
		cuffed[giveplayerID] = false;
		ClearAnimations(giveplayerID);
		RemovePlayerDeathTimer(giveplayerID);
		PlayerInfo[giveplayerID][pPoliceJail] = JailTimeByWanted(PlayerInfo[giveplayerID][pWantedLevel]);
		SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_CUFFED);
		SetPlayerPos(giveplayerID, 1579.2612, -1677.0515, 2982.2800);
		SetPlayerInterior(giveplayerID, 6);
		SetPlayerVirtualWorld(giveplayerID, 1);
		FreezeAntiDropOnSpawn(giveplayerID);
		GetPlayerAllGuns(giveplayerID);
		format(string256, 256, "{ff0000}[WASTED] {0040FF}Вие бяхте подложен на арест за %d минути!", JailTimeByWanted(PlayerInfo[giveplayerID][pWantedLevel]) / 60);
		SendClientMessage(giveplayerID, COLOR_POLICE_2, string256);
		if (PlayerInfo[playerid][pFine] > 0)
		{
			format(string256, 256, "Вие бяхте хванат с глоби, заради това те бяха изплатени! Вие изгубихте {ff0000}$%d{ffffff}!", PlayerInfo[playerid][pFine]);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			GivePlayerCash(playerid, -PlayerInfo[playerid][pFine]);
		}

		GetPlayerAllWanted(giveplayerID);
		PlayerInfo[giveplayerID][pFine] = 0;
		return 1;
	}

	if (strcmp(cmd, "/uncuff", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/uncuff [ID на играч]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_LVPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте полицай, за да използвате тази команда.");
		if (PlayerInfo[playerid][pPoliceDuty] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте на смяна, за да използвате тази команда.");
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да откопчеете себе си.");
		if (!CorDetector(2.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек.");
		if (cuffed[giveplayerID] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е закопчан с белезници.");
		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		new string256[256];
		cuffed[giveplayerID] = false;
		RemovePlayerAttachedObject(giveplayerID, 0);
		SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_NONE);
		format(string256, 256, "* %s извади ключа за белезниците си и отключи белезниците на %s .", accountNickname, giveplayerIDNickname);
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		format(string256, 256, "* [POLICE] %s откопча %s от белезниците.", accountNickname, giveplayerIDNickname);
		SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_POLICE_2, string256);
		return 1;
	}

	if (strcmp(cmd, "/cuff", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/cuff [ID на играч]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_LVPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте полицай, за да използвате тази команда.");
		if (PlayerInfo[playerid][pPoliceDuty] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте на смяна, за да използвате тази команда.");
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да закопчеете себе си с белезници.");
		if (!CorDetector(2.0, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек.");
		if (GetPlayerSpecialAction(giveplayerID) != SPECIAL_ACTION_HANDSUP) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е вдигнал ръцете си, за да бъде закопчан.");
		if (cuffed[giveplayerID] == true) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е закопчан с белезници.");
		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		new string256[256];
		cuffed[giveplayerID] = true;
		RemovePlayerDeathTimer(giveplayerID);
		SetPlayerAttachedObject(giveplayerID, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
		SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_CUFFED);
		ClearAnimations(giveplayerID);
		format(string256, 256, "* %s извади белезниците си и закопча %s с тях.", accountNickname, giveplayerIDNickname);
		SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
		format(string256, 256, "* [POLICE] %s закопча %s с белезници!", accountNickname, giveplayerIDNickname);
		SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_POLICE_2, string256);
		return 1;
	}

	if (strcmp(cmd, "/aduty", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте администратор, за да използвате тази команда!");
		if (PlayerInfo[playerid][pAdminDuty] == 0)
		{
			if (PlayerInfo[playerid][pPoliceDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като полицай!");
			if (PlayerInfo[playerid][pFbiDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като агент!");
			if (PlayerInfo[playerid][pTaxiDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Taxi смяна първо!");
			if (PlayerInfo[playerid][pFuelCoDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
			if (PlayerInfo[playerid][pArmyDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като военен!");
			if (PlayerInfo[playerid][pMedicDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като медик!");
			if (PlayerInfo[playerid][pAFK] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от AFK!");
			SetAdminOnDuty(playerid);
			SendClientMessage(playerid, COLOR_ADMINDUTY, "Вие влязохте на смяна, като администратор!");
			new string256[256];
			format(string256, 256, "(( Admin %s влезе на смяна. Ако имате въпроси, използвайте /ask ))", accountNickname);
			SendClientMessageToAll(COLOR_ADMINDUTY, string256);
		}
		else
		{
			SetAdminOffDuty(playerid);
			SendClientMessage(playerid, COLOR_ADMINDUTY, "Вие излязохте от смяна, като администратор!");
			new string256[256];
			format(string256, 256, "(( Admin %s излезе от смяна ))", accountNickname);
			SendClientMessageToAll(COLOR_ADMINDUTY, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/fuelcoduty", true) == 0)
	{
		if (PlayerInfo[playerid][pPoliceDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като полицай!");
		if (PlayerInfo[playerid][pFbiDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като агент!");
		if (PlayerInfo[playerid][pArmyDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като военен!");
		if (PlayerInfo[playerid][pMedicDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като медик!");
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 283.4168, 1387.7717, 10.5859) && GetPlayerVirtualWorld(playerid) == 0 && GetPlayerInterior(playerid) == 0)
		{
			new string256[256];
			if (PlayerInfo[playerid][pFuelCoDuty] == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти вече си на смяна, като {FFFF00}Fuel Company");
				SetFuelCoOnDuty(playerid);
			}
			else if (PlayerInfo[playerid][pFuelCoDuty] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти излезе от смяна, като Fuel Company");
				SetFuelCoOffDuty(playerid);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си до иконката, до Fuel Company!");
		}

		return 1;
	}

	if (strcmp(cmd, "/taxiduty", true) == 0)
	{
		if (PlayerInfo[playerid][pPoliceDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като полицай!");
		if (PlayerInfo[playerid][pFbiDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като агент!");
		if (PlayerInfo[playerid][pArmyDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като военен!");
		if (PlayerInfo[playerid][pMedicDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва първо да излезеш от смяна, като медик!");
		if (PlayerInfo[playerid][pFuelCoDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1843.5786, 664.0244, 29.3228) && GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 1)
		{
			new string256[256];
			if (PlayerInfo[playerid][pTaxiDuty] == 0)
			{
				format(string256, 256, "[San Andreas Taxi Co] %s вече е на смяна! Наберете 444, ако имате нужда от такси!", GetPlayerRpName(playerid));
				SendClientMessageToAll(COLOR_YELLOW, string256);
				SendClientMessage(playerid, COLOR_WHITE, "Ти вече си на смяна, като {FFFF00}Taxi Driver");
				SetTaxiOnDuty(playerid);
			}
			else if (PlayerInfo[playerid][pTaxiDuty] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти излезе от смяна, като Taxi Driver");
				SetTaxiOffDuty(playerid);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в сградата на такси компанията до бюрото!");
		}

		return 1;
	}

	if (strcmp(cmd, "/armyduty", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY && PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте член на Army, за да използвате тази команда!");
		if (PlayerInfo[playerid][pAdminDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Admin смяна!");
		if (PlayerInfo[playerid][pTaxiDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Taxi смяна!");
		if (PlayerInfo[playerid][pFuelCoDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
		if (PlayerInfo[playerid][pFaction] == FACTION_LS_ARMY)
		{
			if (!IsPlayerInRangeOfPoint(playerid, 3, 882.1519, -2255.8872, 12.8527)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на място за влизане на смяна!");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_LV_ARMY)
		{
			if (!IsPlayerInRangeOfPoint(playerid, 3, 211.5823, 1812.2897, 21.8594)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на място за влизане на смяна!");
		}

		if (IsPlayerInRangeOfPoint(playerid, 3, 882.1519, -2255.8872, 12.8527) && PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Los Santos Army за да влзете на смяна оттук!");
			return 1;
		}

		if (IsPlayerInRangeOfPoint(playerid, 3, 211.5823, 1812.2897, 21.8594) && PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на Los Santos Army за да влзете на смяна оттук!");
			return 1;
		}

		new ranktext[32];
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
			case 2:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
			case 3:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
			case 4:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
			case 5:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
			case 6:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
		}

		if (PlayerInfo[playerid][pArmyDuty] == 0)
		{
			SetArmyOnDuty(playerid);
			SendClientMessage(playerid, COLOR_ARMY, "* Вие влязохте на смяна! *");
			new string256[256];
			format(string256, 256, "HQ: %s %s вече е На Смяна!", ranktext, GetPlayerRpName(playerid));
			SendFactionMessage(FACTION_LS_ARMY, COLOR_ARMY, string256);
		}
		else
		{
			SetArmyOffDuty(playerid);
			SendClientMessage(playerid, COLOR_ARMY, "* Вие излязохте от смяна! *");
			new string256[256];
			format(string256, 256, "HQ: %s %s вече е Извън Смяна!", ranktext, GetPlayerRpName(playerid));
			SendFactionMessage(FACTION_LS_ARMY, COLOR_ARMY, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/fbiduty", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_FBI) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте член на ФБР, за да използвате тази команда!");
		if (PlayerInfo[playerid][pAdminDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Admin смяна!");
		if (PlayerInfo[playerid][pTaxiDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Taxi смяна!");
		if (PlayerInfo[playerid][pFuelCoDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
		if (!IsPlayerInRangeOfPoint(playerid, 3, 1571.7607, -1689.3435, 62.1910))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте на мястото за влизане на смяна.");
			return 1;
		}

		new ranktext[32];
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
			case 2:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
			case 3:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
			case 4:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
			case 5:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
			case 6:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
		}

		if (PlayerInfo[playerid][pFbiDuty] == 0)
		{
			SetFbiOnDuty(playerid);
			SendClientMessage(playerid, COLOR_FBI, "* Вие влязохте на смяна! *");
			new string256[256];
			format(string256, 256, "HQ: %s %s вече е На Смяна!", ranktext, GetPlayerRpName(playerid));
			SendFactionMessage(FACTION_FBI, COLOR_FBI, string256);
		}
		else
		{
			SetFbiOffDuty(playerid);
			SendClientMessage(playerid, COLOR_FBI, "* Вие излязохте от смяна! *");
			new string256[256];
			format(string256, 256, "HQ: %s %s вече е Извън Смяна!", ranktext, GetPlayerRpName(playerid));
			SendFactionMessage(FACTION_FBI, COLOR_FBI, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/medicduty", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_MEDIC) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте медик, за да използвате тази команда!");
		if (PlayerInfo[playerid][pAdminDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Admin смяна!");
		if (PlayerInfo[playerid][pTaxiDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Taxi смяна!");
		if (PlayerInfo[playerid][pFuelCoDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
		if (!IsPlayerInRangeOfPoint(playerid, 3, 1402.7806, -39.0275, 1000.9107))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте на мястото за влизане на смяна.");
			return 1;
		}

		new ranktext[32];
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
			case 2:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
			case 3:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
			case 4:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
			case 5:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
			case 6:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
		}

		if (PlayerInfo[playerid][pMedicDuty] == 0)
		{
			SetMedicOnDuty(playerid);
			new string256[256];
			SendClientMessage(playerid, COLOR_MEDIC, "* Вие влязохте на смяна! *");
			format(string256, 256, "HQ: %s %s вече е На Смяна!", ranktext, GetPlayerRpName(playerid));
			SendFactionMessage(FACTION_MEDIC, COLOR_MEDIC, string256);
		}
		else
		{
			SetMedicOffDuty(playerid);
			new string256[256];
			SendClientMessage(playerid, COLOR_MEDIC, "* Вие излязохте от смяна! *");
			format(string256, 256, "HQ: %s %s вече е Извън Смяна!", ranktext, GetPlayerRpName(playerid));
			SendFactionMessage(FACTION_MEDIC, COLOR_MEDIC, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/policeduty", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_LVPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте полицай, за да използвате тази команда!");
		if (PlayerInfo[playerid][pAdminDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Admin смяна!");
		if (PlayerInfo[playerid][pTaxiDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Първо трябва да излезеш от Taxi смяна!");
		if (PlayerInfo[playerid][pFuelCoDuty] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да излезеш от Fuel Company смяна първо!");
		if (PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			if (!IsPlayerInRangeOfPoint(playerid, 3, 1588.2194, -1676.2596, 2982.2800)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на място за влизане на смяна!");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD)
		{
			if (!IsPlayerInRangeOfPoint(playerid, 3, 1572.3451, -1666.6284, 2113.0349)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на място за влизане на смяна!");
		}

		if (IsPlayerInRangeOfPoint(playerid, 3, 1588.2194, -1676.2596, 2982.2800) && PlayerInfo[playerid][pFaction] != FACTION_LVPD)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие трябва да сте член на LSPD за да влезете на смяна отттук!");
			return 1;
		}

		if (IsPlayerInRangeOfPoint(playerid, 3, 1572.3451, -1666.6284, 2113.0349) && PlayerInfo[playerid][pFaction] != FACTION_LSPD)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие трябва да сте член на LVPD за да влезете на смяна отттук!");
			return 1;
		}

		new ranktext[32];
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
			case 2:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
			case 3:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
			case 4:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
			case 5:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
			case 6:
				format(ranktext, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
		}

		if (PlayerInfo[playerid][pPoliceDuty] == 0)
		{
			SetPoliceOnDuty(playerid);
			new string256[256];
			SendClientMessage(playerid, COLOR_POLICE_2, "* Вие влязохте на смяна! *");
			format(string256, 256, "HQ: %s %s вече е На Смяна!", ranktext, GetPlayerRpName(playerid));
			SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_POLICE_2, string256);
		}
		else
		{
			SetPoliceOffDuty(playerid);
			new string256[256];
			SendClientMessage(playerid, COLOR_POLICE_2, "* Вие излязохте от смяна! *");
			format(string256, 256, "HQ: %s %s вече е Извън Смяна!", ranktext, GetPlayerRpName(playerid));
			SendFactionMessage(PlayerInfo[playerid][pFaction], COLOR_POLICE_2, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/turfattack", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_CRIP || PlayerInfo[playerid][pFaction] == FACTION_BALLAS || PlayerInfo[playerid][pFaction] == FACTION_GROVE ||
			PlayerInfo[playerid][pFaction] == FACTION_VAGOS || PlayerInfo[playerid][pFaction] == FACTION_AZTECAS || PlayerInfo[playerid][pFaction] == FACTION_TRIADS)
		{
			if (PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте лидер!");
			if (startedTurf == true) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има друга атака на територия!");
			if (turfStartTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още преди да започнете атака!");
			if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си извън Virtual World!");
			if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си извън Interior!");
			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);
			new isInTurf = -1;
			new bool: sameGang = false;
			new turfPlayers;
			for (new t = 0; t < MAX_TURFS; t++)
			{
				if (IsPlayerInTurf(playerid, TurfInfo[t][zMinX], TurfInfo[t][zMinY], TurfInfo[t][zMaxX], TurfInfo[t][zMaxY]))
				{
					isInTurf = t;
					if (TurfInfo[t][TurfOwner] == PlayerInfo[playerid][pFaction])
					{
						sameGang = true;
					}
				}
			}

			if (sameGang == true)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Тази територия е на вашата банда/мафия.");
				return 1;
			}

			if (isInTurf == -1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте на територия.");
				return 1;
			}

			for (new i; i < MAX_PLAYERS; i++)
			{
				if (IsPlayerConnected(i))
				{
					if (IsPlayerInTurf(playerid, TurfInfo[isInTurf][zMinX], TurfInfo[isInTurf][zMinY], TurfInfo[isInTurf][zMaxX], TurfInfo[isInTurf][zMaxY]))
					{
						turfPlayers++;
					}
				}
			}

			if (turfPlayers < 3 && scripterMode[playerid] == false)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Трябва да има трима члена на тази територия!");
				return 1;
			}

			new turfOwner = TurfInfo[isInTurf][TurfOwner];
			if (turfOwner != FACTION_CIVILIAN)
			{
				new turfOwnerOnlinePlayers = GetPlayersCountFromFaction(turfOwner);
				if (turfOwnerOnlinePlayers == 0)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Трябва да има поне 1 член онлайн на банда/мафията, която нападаш!");
					return 1;
				}
			}

			StartTurfWar(PlayerInfo[playerid][pFaction], isInTurf, turfPlayers);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на банда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/graffitstime", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_CRIP || PlayerInfo[playerid][pFaction] == FACTION_BALLAS || PlayerInfo[playerid][pFaction] == FACTION_GROVE ||
			PlayerInfo[playerid][pFaction] == FACTION_VAGOS || PlayerInfo[playerid][pFaction] == FACTION_AZTECAS || PlayerInfo[playerid][pFaction] == FACTION_TRIADS)
		{
			new string256[256];
			if (graffitStartTimer > 60)
			{
				format(string256, 256, "Времето за чакане до ново нападение е %d минути.", graffitStartTimer / 60);
				SendClientMessage(playerid, COLOR_GRAFFITS, string256);
			}
			else if (graffitStartTimer > 0 && graffitStartTimer < 60)
			{
				format(string256, 256, "Времето за чакане до ново нападение е 1 минута.");
				SendClientMessage(playerid, COLOR_GRAFFITS, string256);
			}
			else if (graffitStartTimer == 0)
			{
				format(string256, 256, "Може да се направи нападение още сега.");
				SendClientMessage(playerid, COLOR_GRAFFITS, string256);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на банда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/turftime", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_CRIP || PlayerInfo[playerid][pFaction] == FACTION_BALLAS || PlayerInfo[playerid][pFaction] == FACTION_GROVE ||
			PlayerInfo[playerid][pFaction] == FACTION_VAGOS || PlayerInfo[playerid][pFaction] == FACTION_AZTECAS || PlayerInfo[playerid][pFaction] == FACTION_TRIADS)
		{
			new string256[256];
			if (turfStartTimer > 60)
			{
				format(string256, 256, "Времето за чакане до ново нападение е %d минути.", turfStartTimer / 60);
				SendClientMessage(playerid, COLOR_TURF, string256);
			}
			else if (turfStartTimer > 0 && turfStartTimer < 60)
			{
				format(string256, 256, "Времето за чакане до ново нападение е 1 минута.");
				SendClientMessage(playerid, COLOR_TURF, string256);
			}
			else if (turfStartTimer == 0)
			{
				format(string256, 256, "Може да се направи нападение още сега.");
				SendClientMessage(playerid, COLOR_TURF, string256);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на банда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/graffits", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_CRIP || PlayerInfo[playerid][pFaction] == FACTION_BALLAS || PlayerInfo[playerid][pFaction] == FACTION_GROVE ||
			PlayerInfo[playerid][pFaction] == FACTION_VAGOS || PlayerInfo[playerid][pFaction] == FACTION_AZTECAS || PlayerInfo[playerid][pFaction] == FACTION_TRIADS)
		{
			new string256[256];
			format(string256, 256, "Вашата банда/мафия има %d графити.", FactionInfo[PlayerInfo[playerid][pFaction]][fGraffits]);
			SendClientMessage(playerid, COLOR_GRAFFITS, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на банда.");
		}

		return 1;
	}

	if (strcmp(cmd, "/turfs", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_CRIP || PlayerInfo[playerid][pFaction] == FACTION_BALLAS || PlayerInfo[playerid][pFaction] == FACTION_GROVE ||
			PlayerInfo[playerid][pFaction] == FACTION_VAGOS || PlayerInfo[playerid][pFaction] == FACTION_AZTECAS || PlayerInfo[playerid][pFaction] == FACTION_TRIADS)
		{
			new string256[256];
			format(string256, 256, "Вашата банда/мафия има %d територии.", FactionInfo[PlayerInfo[playerid][pFaction]][fTurfs]);
			SendClientMessage(playerid, COLOR_TURF, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на банда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/fhelp", true) == 0 || strcmp(cmd, "/factionhelp", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_FBI)
		{
			SendClientMessage(playerid, COLOR_FBI, "FBI команди: {FFFFFF}/badge, /fbiduty, /siren, /barricade, /rbarricade");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_GOVERNMENT)
		{
			SendClientMessage(playerid, COLOR_GOVERNMENT, "Правителство команди: {FFFFFF}/badge, /demount");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_MEDIC)
		{
			SendClientMessage(playerid, COLOR_MEDIC, "Медик команди: {FFFFFF}/badge, /heal, /medicduty");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_LS_ARMY)
		{
			SendClientMessage(playerid, COLOR_ARMY, "Военни команди: {FFFFFF}/badge, /armyduty, /especvehs, /siren, /barricade, /rbarricade");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_LV_ARMY)
		{
			SendClientMessage(playerid, COLOR_ARMY, "Военни команди: {FFFFFF}/badge, /armyduty, /especvehs, /siren, /barricade, /rbarricade");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD)
		{
			SendClientMessage(playerid, COLOR_POLICE_2, "Полицейски команди: {FFFFFF}/(un)cuff, /policeduty, /badge, /fine, /warning, /arrest, /rbarricade");
			SendClientMessage(playerid, COLOR_POLICE_2, "Полицейски команди: {FFFFFF}/drunktest, /wanted, /unwanted, /giveweplic, /siren, /barricade, /suspects");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			SendClientMessage(playerid, COLOR_POLICE_2, "Полицейски команди: {FFFFFF}/(un)cuff, /policeduty, /badge, /fine, /warning, /arrest, /rbarricade");
			SendClientMessage(playerid, COLOR_POLICE_2, "Полицейски команди: {FFFFFF}/drunktest, /wanted, /unwanted, /giveweplic, /siren, /barricade, /suspects");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_NEWS)
		{
			SendClientMessage(playerid, COLOR_NEWS, "Команди за медийте: {FFFFFF}/news, /badge");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_CRIP)
		{
			SendClientMessage(playerid, COLOR_LIGHTORANGE, "Команди за бандa: {FFFFFF}/turfs, /turftime, /turfattack, /graffits, /graffitstime");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_GROVE)
		{
			SendClientMessage(playerid, COLOR_LIGHTORANGE, "Команди за бандa: {FFFFFF}/turfs, /turftime, /turfattack, /graffits, /graffitstime");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_VAGOS)
		{
			SendClientMessage(playerid, COLOR_LIGHTORANGE, "Команди за бандa: {FFFFFF}/turfs, /turftime, /turfattack, /graffits, /graffitstime");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_BALLAS)
		{
			SendClientMessage(playerid, COLOR_LIGHTORANGE, "Команди за бандa: {FFFFFF}/turfs, /turftime, /turfattack, /graffits, /graffitstime");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_AZTECAS)
		{
			SendClientMessage(playerid, COLOR_LIGHTORANGE, "Команди за бандa: {FFFFFF}/turfs, /turftime, /turfattack, /graffits, /graffitstime");
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_TRIADS)
		{
			SendClientMessage(playerid, COLOR_LIGHTORANGE, "Команди за бандa: {FFFFFF}/turfs, /turftime, /turfattack, /graffits, /graffitstime");
		}

		SendClientMessage(playerid, COLOR_YELLOW, "Основни Faction команди: {FFFFFF}За достъп до основните команди, използвай /help");
		return 1;
	}

	if (strcmp(cmd, "/badge", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_NEWS && PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY && PlayerInfo[playerid][pFaction] != FACTION_MEDIC &&
			PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_GOVERNMENT && PlayerInfo[playerid][pFaction] != FACTION_FBI &&
			PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY && PlayerInfo[playerid][pFaction] != FACTION_LVPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достъп до тази команда.");
		new string256[256];
		new faction = PlayerInfo[playerid][pFaction];
		new rankname[35];
		switch (PlayerInfo[playerid][pRank])
		{
			case 1:
				format(rankname, 35, FactionInfo[faction][fRankName1]);
			case 2:
				format(rankname, 35, FactionInfo[faction][fRankName2]);
			case 3:
				format(rankname, 35, FactionInfo[faction][fRankName3]);
			case 4:
				format(rankname, 35, FactionInfo[faction][fRankName4]);
			case 5:
				format(rankname, 35, FactionInfo[faction][fRankName5]);
			case 6:
				format(rankname, 35, FactionInfo[faction][fRankName6]);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_FBI)
		{
			format(string256, 256, "%s си извади значката и показа, че е назначен в FBI, като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_GOVERNMENT)
		{
			format(string256, 256, "%s си извади значката и показа, че е назначен в правителството, като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_MEDIC)
		{
			format(string256, 256, "%s си извади значката и показа, че е назначен в болницата, като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		if (PlayerInfo[playerid][pFaction] == FACTION_NEWS)
		{
			format(string256, 256, "%s си извади значката и показа, че е назначен в медийте, като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else if (PlayerInfo[playerid][pFaction] == FACTION_LSPD)
		{
			format(string256, 256, "%s си извади значката и показа, че е на служба в полицията (LSPD), като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else if (PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			format(string256, 256, "%s си извади значката и показа, че е на служба в полицията (LVPD), като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else if (PlayerInfo[playerid][pFaction] == FACTION_LS_ARMY)
		{
			format(string256, 256, "%s си извади значката и показа, че е на служба в LS Army, като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}
		else if (PlayerInfo[playerid][pFaction] == FACTION_LV_ARMY)
		{
			format(string256, 256, "%s си извади значката и показа, че е на служба в LV Army, като %s", accountNickname, rankname);
			SendLocalMessage(7.0, playerid, COLOR_LIGHTPURPLE4, string256);
		}

		return 1;
	}

	if (strcmp(cmd, "/news", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_NEWS)
		{
			if (IsPlayerInRangeOfPoint(playerid, 6.0, 3190.9307, -1757.5547, 3001.0859))
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}

				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}

				result[idx - offset] = EOS;
				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/news [text]");
					return 1;
				}

				if (PlayerInfo[playerid][pDisableNews] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да можете да чувате новините, за да ги съобщавате. Използвайте /togglenews");
				new string256[256];
				format(string256, 256, "Новини: %s съобщава: %s", accountNickname, result);
				SendNewsMessage(COLOR_NEWS, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте в студиото, за да публикувате новините.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте работник в медийте, за да използвате тази команда.");
		}

		return 1;
	}

	if (strcmp(cmd, "/cnnn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			new txtid;
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/cnnn [type 1-6] [text]");
				return 1;
			}

			txtid = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/cnnn [type 1-4] [text]");
				return 1;
			}

			if (txtid == 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш id 2!");
				return 1;
			}

			if (txtid < 1 || txtid > 4) return SendClientMessage(playerid, COLOR_GRAD1, "Типът трябва да е от 1 до 4!");
			new string256[256];
			format(string256, 256, "~w~%s", result);
			for (new i = 0; i < MAX_PLAYERS; i++)
			{
				GameTextForPlayer(i, string256, 5000, txtid);
			}

			format(string256, 256, "Администраторът %s (ID: %d) изпрати Screen Message до всички играчи онлайн", accountNickname, playerid);
			SendClientMessageToAll(COLOR_ADMIN, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		return 1;
	}

	if (strcmp(cmd, "/message", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/message [text]");
				return 1;
			}

			new string256[256];
			format(string256, 256, "[Message]: {00FF00}%s", result);
			SendClientMessageToAll(COLOR_WHITE, string256);
			format(string256, 256, "Message: %s(ID: %d) изпрати Message до всички играчи онлайн", accountNickname, playerid);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/ann", true) == 0 || strcmp(cmd, "/announce", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/ann(ounce) [text]");
				return 1;
			}

			new adminLevelName[25];
			switch (PlayerInfo[playerid][pAdmin])
			{
				case 1:
					{
						format(adminLevelName, 25, "Moderator");
					}

				case 2:
					{
						format(adminLevelName, 25, "Global Moderator");
					}

				case 3:
					{
						format(adminLevelName, 25, "Administrator");
					}

				case 4:
					{
						format(adminLevelName, 25, "Senior Administrator");
					}

				case 5:
					{
						format(adminLevelName, 25, "Server Owner");
					}
			}

			new string256[256];
			format(string256, 256, "Announcement: %s(%d) %s[ID: %d]: %s", adminLevelName, PlayerInfo[playerid][pAdmin], accountNickname, playerid, result);
			SendClientMessageToAll(COLOR_MAXLIGHTGREEN, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/a", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] > 0)
		{
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/a [text]");
				return 1;
			}

			new adminLevelName[25];
			switch (PlayerInfo[playerid][pAdmin])
			{
				case 1:
					{
						format(adminLevelName, 25, "Moderator");
					}

				case 2:
					{
						format(adminLevelName, 25, "Global Moderator");
					}

				case 3:
					{
						format(adminLevelName, 25, "Administrator");
					}

				case 4:
					{
						format(adminLevelName, 25, "Senior Administrator");
					}

				case 5:
					{
						format(adminLevelName, 25, "Server Owner");
					}
			}

			new string256[256];
			format(string256, 256, "%s(%d) %s(ID: %d) каза: %s", adminLevelName, PlayerInfo[playerid][pAdmin], accountNickname, playerid, result);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/number", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/number [ID на играч]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		new string256[256];
		if (PlayerInfo[giveplayerID][pPhoneNum] != 0)
		{
			if (PlayerInfo[giveplayerID][pPhoneHide] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Номерът на този играч не присъства в Phonebook!");
			format(string256, 256, "Телефонният номер на {0099FF}%s {ffffff}е {0099FF}%d", GetPlayerRpName(giveplayerID), PlayerInfo[giveplayerID][pPhoneNum]);
			SendClientMessage(playerid, COLOR_WHITE, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Играчът няма телефон!");
		}

		return 1;
	}

	if (strcmp(cmd, "/checkbgn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/checkbgn [ID на играч]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		new string256[256];
		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		format(string256, 256, "Ваучери в BGN: {40BF00}%s {ffffff}притежава {0099FF}%d {ffffff}лева в сметката си!", giveplayerIDNickname, PlayerInfo[giveplayerID][pVoucherBGN]);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		format(string256, 256, "Ваучери в BGN: Парите са регистрирани на профил: {0099FF}%s", giveplayerIDNickname);
		SendClientMessage(playerid, COLOR_WHITE, string256);
		return 1;
	}

	if (strcmp(cmd, "/check", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/check [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			ShowPlayerStats(playerid, giveplayerID);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setarmour", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setarmour [ID на играч] [armour]");
				return 1;
			}

			new string256[256];
			new giveplayerID;
			giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new armour = strval(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				format(string256, 256, "Вие сменихте Armour точките на %s", giveplayerIDNickname);
				SendClientMessage(playerid, COLOR_YELLOW, string256);
				format(string256, 256, "%s ти Armour точките", accountNickname);
				SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
				format(string256, 256, "Set Armour: %s(ID: %d) смени Armour на %s(ID: %d)", accountNickname, playerid, giveplayerIDNickname, giveplayerID);
				SendAdminMessage(COLOR_ADMIN_RED, string256);
				SetPlayerArmour(giveplayerID, armour);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/sethp", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sethp [ID на играч] [hp]");
				return 1;
			}

			new string256[256];
			new giveplayerID;
			giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new health = strval(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				format(string256, 256, "Вие сменихте HP точките на %s", giveplayerIDNickname);
				SendClientMessage(playerid, COLOR_YELLOW, string256);
				format(string256, 256, "%s ти HP точките", accountNickname);
				SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
				format(string256, 256, "Set Hp: %s(ID: %d) смени HP на %s(ID: %d)", accountNickname, playerid, giveplayerIDNickname, giveplayerID);
				SendAdminMessage(COLOR_ADMIN_RED, string256);
				SetPlayerHealth(giveplayerID, health);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setpermskin", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setpermskin [ID на играч] [skin id]");
				return 1;
			}

			new string256[256];
			new giveplayerID;
			giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new skin = strval(tmp);
			if (skin < 0 || skin > 311)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setpermskin [ID на играч] [skin id]");
				return 1;
			}

			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				format(string256, 256, "Вие сменихте постоянния скин на %s", giveplayerIDNickname);
				SendClientMessage(playerid, COLOR_YELLOW, string256);
				format(string256, 256, "%s ти смени постоянния скин!", accountNickname);
				SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
				format(string256, 256, "Set Skin: %s(ID: %d) смени постоянния скин на %s(ID: %d)", accountNickname, playerid, giveplayerIDNickname, giveplayerID);
				SendAdminMessage(COLOR_ADMIN_RED, string256);
				SetPlayerSkin(giveplayerID, skin);
				PlayerInfo[giveplayerID][pNormalSkin] = skin;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/setskin", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setskin [ID на играч] [skin id]");
				return 1;
			}

			new string256[256];
			new giveplayerID;
			giveplayerID = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new skin = strval(tmp);
			if (skin < 0 || skin > 311)
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setskin [ID на играч] [skin id]");
				return 1;
			}

			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				format(string256, 256, "Вие сменихте скина на %s", giveplayerIDNickname);
				SendClientMessage(playerid, COLOR_YELLOW, string256);
				format(string256, 256, "%s ти смени скина", accountNickname);
				SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
				format(string256, 256, "Set Skin: %s(ID: %d) смени скина на %s(ID: %d)", accountNickname, playerid, giveplayerIDNickname, giveplayerID);
				SendAdminMessage(COLOR_ADMIN_RED, string256);
				SetPlayerSkin(giveplayerID, skin);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/gethere", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gethere [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			new string256[256];
			format(string256, 256, "Вие телепортирахте %s до себе си", giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			format(string256, 256, "%s ви телепортира до себе си", accountNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPlayerPos(giveplayerID, X, Y, Z);
			new hisInt = GetPlayerInterior(playerid);
			new hisVw = GetPlayerVirtualWorld(playerid);
			SetPlayerInterior(giveplayerID, hisInt);
			SetPlayerVirtualWorld(giveplayerID, hisVw);
			format(string256, 256, "Gethere: %s(ID: %d) телепортира %s(ID: %d) до себе си", accountNickname, playerid, giveplayerIDNickname, giveplayerID);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/goto", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/goto [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			new string256[256];
			format(string256, 256, "Вие се телепортирахте до %s", giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			format(string256, 256, "%s се телепортира до вас", accountNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(giveplayerID, X, Y, Z);
			SetPlayerPos(playerid, X, Y, Z);
			new hisInt = GetPlayerInterior(giveplayerID);
			new hisVw = GetPlayerVirtualWorld(giveplayerID);
			SetPlayerInterior(playerid, hisInt);
			SetPlayerVirtualWorld(playerid, hisVw);
			format(string256, 256, "Goto: %s(ID: %d) се телепортира до %s(ID: %d)", accountNickname, playerid, giveplayerIDNickname, giveplayerID);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/unfreeze", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unfreeze [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			new string256[256];
			format(string256, 256, "Вие отмрази %s", giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			format(string256, 256, "%s ви отмрази", accountNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			TogglePlayerControllable(giveplayerID, 1);
			format(string256, 256, "Unfreeze: %s(ID: %d) отмрази %s(ID: %d)", accountNickname, playerid, giveplayerIDNickname, giveplayerID);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/freeze", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 4)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/freeze [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			new string256[256];
			format(string256, 256, "Вие замразихте %s", giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			format(string256, 256, "%s ви замрази", accountNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			TogglePlayerControllable(giveplayerID, 0);
			format(string256, 256, "Freeze: %s(ID: %d) замрази %s(ID: %d)", accountNickname, playerid, giveplayerIDNickname, giveplayerID);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/slap", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/slap [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			new string256[256];
			format(string256, 256, "Вие дигнахте %s във въздуха", giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			format(string256, 256, "%s ви дигна във въздуха", accountNickname);
			SendClientMessage(giveplayerID, COLOR_YELLOW, string256);
			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(giveplayerID, X, Y, Z);
			SetPlayerPos(giveplayerID, X, Y, Z + 5);
			format(string256, 256, "Slap: %s(ID: %d) дигна %s(ID: %d) във въздуха", accountNickname, playerid, giveplayerIDNickname, giveplayerID);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/spec", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/spec [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			if (playerid == giveplayerID)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Не можете да наблюдавате себе си.");
				return 1;
			}

			if (spec[playerid] == false)
			{
				GetPlayerPos(playerid, Unspec[playerid] [sPx], Unspec[playerid] [sPy], Unspec[playerid] [sPz]);
				Unspec[playerid] [sPint] = GetPlayerInterior(playerid);
				Unspec[playerid] [sVw] = GetPlayerVirtualWorld(playerid);
				GetPlayerFacingAngle(playerid, Unspec[playerid] [sAngle]);
			}

			spec[playerid] = true;
			TogglePlayerSpectating(playerid, 1);
			SetPlayerInterior(playerid, GetPlayerInterior(giveplayerID));
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerID));
			new playeridNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playeridNickname, 25);
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			new string256[256];
			format(string256, 256, "Вие започнахте да наблюдавате %s", giveplayerIDNickname);
			SendClientMessage(playerid, COLOR_YELLOW, string256);
			format(string256, 256, "Spec: %s(ID: %d) започна да наблюдава %s(ID: %d)", playeridNickname, playerid, giveplayerIDNickname, giveplayerID);
			SendAdminMessage(COLOR_ADMIN_RED, string256);
			if (IsPlayerInAnyVehicle(giveplayerID))
			{
				new carid = GetPlayerVehicleID(giveplayerID);
				PlayerSpectateVehicle(playerid, carid);
			}
			else
			{
				PlayerSpectatePlayer(playerid, giveplayerID);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/specoff", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			if (spec[playerid] == false)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "В момента не наблюдаваш играч!");
				return 1;
			}

			TogglePlayerSpectating(playerid, 0);
			SetPlayerPos(playerid, Unspec[playerid] [sPx], Unspec[playerid] [sPy], Unspec[playerid] [sPz]);
			SetPlayerFacingAngle(playerid, Unspec[playerid] [sAngle]);
			SetPlayerInterior(playerid, Unspec[playerid] [sPint]);
			SetPlayerVirtualWorld(playerid, Unspec[playerid] [sVw]);
			SendClientMessage(playerid, COLOR_YELLOW, "Вие спряхте да наблюдавате играча.");
			spec[playerid] = false;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/unban", true) == 0)
	{
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unban [nickname]");
			return 1;
		}

		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			new string115[115];
			format(string115, 115, "%s.ini", result);
			if (dini_Exists(string115))
			{
				new string256[256];
				format(string256, 256, "unbanip %s", dini_Int(string115, "pIP"));
				SendRconCommand(string256);
				SendRconCommand("reloadbans");
				format(string256, 256, "%s was unbanned by %s", result, accountNickname);
				SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
		}

		return 1;
	}

	if (strcmp(cmd, "/ban", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/ban [ID на играч] [причина]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				if (PlayerInfo[giveplayerID][pAdmin] > PlayerInfo[playerid][pAdmin])
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да BAN администратор с по-високо ниво от твоето.");
					return 1;
				}

				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}

				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}

				result[idx - offset] = EOS;
				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/kick [ID на играч] [причина]");
					return 1;
				}

				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/kick [ID на играч] [причина]");
					return 1;
				}

				new string256[256];
				format(string256, 256, "%s беше BAN-нат от сървъра от администратор %s Причина: %s", giveplayerIDNickname, playeridNickname, (result));
				SendClientMessageToAll(COLOR_ADMIN_RED, string256);
				PlayerTimerInfo[giveplayerID][ptBan] = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/kick", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/kick [ID на играч] [причина]");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				if (PlayerInfo[giveplayerID][pAdmin] > PlayerInfo[playerid][pAdmin])
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да KICK администратор с по-високо ниво от твоето.");
					return 1;
				}

				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}

				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}

				result[idx - offset] = EOS;
				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/kick [ID на играч] [причина]");
					return 1;
				}

				if (!strlen(result))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/kick [ID на играч] [причина]");
					return 1;
				}

				new string256[256];
				format(string256, 256, "%s беше KICK-нат от администратор %s Причина: %s", giveplayerIDNickname, playeridNickname, (result));
				SendClientMessageToAll(COLOR_ADMIN_RED, string256);
				PlayerTimerInfo[giveplayerID][ptKick] = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/answer", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/answer [ID на играч] [text]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (playerid == giveplayerID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да отговориш на себе си!");
			return 1;
		}

		if (PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/answer [ID на играч] [text]");
			return 1;
		}

		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		new string256[256];
		format(string256, 256, "* Admin %s[ID: %d] ти отговори: %s", accountNickname, playerid, result);
		SendClientMessage(giveplayerID, COLOR_ANSWER, string256);
		format(string256, 256, "* Answer до %s[ID: %d]: %s", giveplayerIDNickname, giveplayerID, result);
		SendClientMessage(playerid, COLOR_ANSWER, string256);
		return 1;
	}

	if (strcmp(cmd, "/report", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/report [ID на играч] [оплакване]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (playerid == giveplayerID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изпратиш доклад за себе си.");
			return 1;
		}

		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/report [ID на играч] [оплакване]");
			return 1;
		}

		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		new string256[256];
		SendClientMessage(playerid, COLOR_REPORT, "Вие предадохте доклад за нарушител на правилата");
		format(string256, 256, "Доклад от %s (ID: %d) за %s (ID: %d): %s", accountNickname, playerid, giveplayerIDNickname, giveplayerID, result);
		SendAdminMessage(COLOR_REPORT, string256);
		return 1;
	}

	if (strcmp(cmd, "/pm", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/pm [ID на играч] [text]");
			return 1;
		}

		new giveplayerID = strval(tmp);
		if (!IsPlayerConnected(giveplayerID))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			return 1;
		}

		if (playerid == giveplayerID)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изпратиш лично съобщение до себе си.");
			return 1;
		}

		if (PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[giveplayerID][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/pm [ID на играч] [text]");
			return 1;
		}

		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		new string256[256];
		format(string256, 256, "* PM от %s[ID: %d]: %s", accountNickname, playerid, result);
		SendClientMessage(giveplayerID, 0xFFFF00FF, string256);
		format(string256, 256, "* PM до %s[ID: %d]: %s", giveplayerIDNickname, giveplayerID, result);
		SendClientMessage(playerid, 0xFFFF00FF, string256);
		return 1;
	}

	if (strcmp(cmd, "/gotoveh", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		new car = strval(tmp);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/gotoveh [vehicle id]");
			return 1;
		}

		if (car < 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID на превозно средство!");
			return 1;
		}

		if (!IsValidVehicle(car))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не съществува!");
			return 1;
		}

		new stringveh[256];
		new Float: XX;
		new Float: YY;
		new Float: ZZ;
		GetVehiclePos(car, XX, YY, ZZ);
		SetPlayerPos(playerid, XX, YY, ZZ + 3.0);
		format(stringveh, 256, "Ти успешно се телепортира до превозното средство ID %d", car);
		SendClientMessage(playerid, COLOR_YELLOW, stringveh);
		return 1;
	}

	if (strcmp(cmd, "/destroyvehs", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Ти унищожи всички SPAWN-нати превозни средства от админи!");
			for (new vehID = 0; vehID < MAX_VEHICLES; vehID++)
			{
				if (adminVeh[vehID] == true)
				{
					DestroyVehicle(vehID);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/jail", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/jail [ID на играч] [време] [причина]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			tmp = strtok(cmdtext, idx);
			new time = strval(tmp);
			if (time < 1 || time > 100000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Минутите трябва да са между 1 и 100000.");
				return 1;
			}

			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}

			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}

			result[idx - offset] = EOS;
			if (!strlen(result))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/jail [ID на играч] [време] [причина]");
				return 1;
			}

			if (PlayerInfo[giveplayerID][pJailed] > 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е в Админ Затвора.");
				return 1;
			}

			new jailMinutes = time * 60;
			PlayerInfo[giveplayerID][pJailed] = jailMinutes;
			new string256[256];
			new giveplayerIDNickname[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
			if (PlayerInfo[giveplayerID][pPoliceJail] > 0) PlayerInfo[giveplayerID][pPoliceJail] = 0;
			if (PlayerInfo[giveplayerID][pAFK] == 1) PlayerInfo[giveplayerID][pAFK] = 0;
			format(string256, 256, "%s беше вкаран в административния затвор от %s за %d минути Причина: %s", giveplayerIDNickname, accountNickname, time, result);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			RemovePlayerDeathTimer(giveplayerID);
			SetPlayerVirtualWorld(giveplayerID, 1);
			SetPlayerInterior(giveplayerID, 4);
			SetPlayerPos(giveplayerID, 299.7077, 303.4193, 999.1484);
			SetPlayerAttachedObject(giveplayerID, 1, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
			SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_CUFFED);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/unpjail", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unpjail [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			if (PlayerInfo[giveplayerID][pPoliceJail] > 0)
			{
				new string256[256];
				PlayerInfo[giveplayerID][pPoliceJail] = 0;
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				format(string256, 256, "%s беше освободен от полицейския затвор от администратор %s", giveplayerIDNickname, accountNickname);
				SendClientMessageToAll(COLOR_ADMIN_RED, string256);
				SetToSpawn(giveplayerID);
				RemovePlayerAttachedObject(giveplayerID, 1);
				SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_NONE);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е в Полицейския Затвор!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/vrepair", true) == 0)
	{
		if (PlayerInfo[playerid][pVip] < 1)
		{
			return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
		}

		if (PlayerInfo[playerid][pLastVRepair] > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изминат поне 20 минути от последното ползване на командата!");
		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превозно средство!");
		if (IsPlayerInRangeOfPoint(playerid, 22.0, 2146.1609, -1728.5712, 15.4429) || IsPlayerInRangeOfPoint(playerid, 22.0, 1929.2274, -1861.0381, 15.4305))
		{
			new Float: vehHealth;
			GetVehicleHealth(GetPlayerVehicleID(playerid), vehHealth);
			if (vehHealth >= 1000.0) return SendClientMessage(playerid, COLOR_GRAD1, "Превозът ти е напълно здрав!");
			SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
			RepairVehicle(GetPlayerVehicleID(playerid));
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			PlayerInfo[playerid][pLastVRepair] = 20 * 60;
			SendClientMessage(playerid, 0xFFFFFFFF, "* Вие поправихте вашето превозно средство *");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в Tuning гараж!");
		}

		return 1;
	}

	if (strcmp(cmd, "/fixveh", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			if (IsPlayerInAnyVehicle(playerid))
			{
				SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
				RepairVehicle(GetPlayerVehicleID(playerid));
				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, 0xFFFFFFFF, "* Вие поправихте вашето превозно средство *");
				new string256[256];
				format(string256, 256, "Fix Veh: %s(ID: %d) поправи превоза си", accountNickname, playerid);
				SendAdminMessage(COLOR_ADMIN_RED, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превозно средство!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/unjail", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unjail [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			if (PlayerInfo[giveplayerID][pJailed] > 0)
			{
				new string256[256];
				PlayerInfo[giveplayerID][pJailed] = 0;
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				format(string256, 256, "%s беше освободен от административния затвор от %s", giveplayerIDNickname, accountNickname);
				SendClientMessageToAll(COLOR_ADMIN_RED, string256);
				SetToSpawn(giveplayerID);
				RemovePlayerAttachedObject(giveplayerID, 1);
				SetPlayerSpecialAction(giveplayerID, SPECIAL_ACTION_NONE);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е в Админ Затвора.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/unmute", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unmute [ID на играч]");
				return 1;
			}

			new giveplayerID = strval(tmp);
			if (!IsPlayerConnected(giveplayerID))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
				return 1;
			}

			if (PlayerInfo[giveplayerID][pMuted] > 0)
			{
				new string256[256];
				PlayerInfo[giveplayerID][pMuted] = 0;
				new giveplayerIDNickname[MAX_PLAYER_NAME];
				GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
				format(string256, 256, "%s беше отглушен в чата от администратор %s", giveplayerIDNickname, accountNickname);
				SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е заглушен.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/mute", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
			tmp = strtok(cmdtext, idx);
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/mute [ID на играч] [опция]");
				SendClientMessage(playerid, 0x00FF00FF, "Опции: 1: Спам, 2: Псуване/Обиждане, 3: Спам/Псуване/Обиждане");
				SendClientMessage(playerid, 0x00FF00FF, "Опции: 4: Пречи на играта, 5: По-сериозно");
				return 1;
			}

			new giveplayerID = ReturnUser(tmp);
			if (giveplayerID != INVALID_PLAYER_ID)
			{
				tmp = strtok(cmdtext, idx);
				new option = strval(tmp);
				if (!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/mute [ID на играч] [опция]");
					SendClientMessage(playerid, 0x00FF00FF, "Опции: 1: Спам, 2: Псуване/Обиждане, 3: Спам/Псуване/Обиждане");
					SendClientMessage(playerid, 0x00FF00FF, "Опции: 4: Пречи на играта, 5: По-сериозно");
					return 1;
				}

				if (option < 1 || option > 5)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Грешна опция! Опциите са от 1 до 5!");
					return 1;
				}

				if (PlayerInfo[giveplayerID][pMuted] == 0)
				{
					new mutereasonStr[256];
					switch (option)
					{
						case 1:
							format(mutereasonStr, 256, "Спам");
						case 2:
							format(mutereasonStr, 256, "Псуване/Обиждане");
						case 3:
							format(mutereasonStr, 256, "Спам/Псуване/Обиждане");
						case 4:
							format(mutereasonStr, 256, "Пречи на играта");
						case 5:
							format(mutereasonStr, 256, "По-сериозно нарушение");
					}

					new string256[256];
					new muteTime = (15 *option) *60;
					new muteTimeShow = (muteTime / 60);
					PlayerInfo[giveplayerID][pMuted] = muteTime;
					new giveplayerIDNickname[MAX_PLAYER_NAME];
					GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
					format(string256, 256, "%s беше заглушен в чата от администратор %s за %d минути Причина: %s", giveplayerIDNickname, accountNickname, muteTimeShow, mutereasonStr);
					SendClientMessageToAll(COLOR_ADMIN_RED, string256);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече е заглушен.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	if (strcmp(cmd, "/eventhelp", true) == 0)
	{
		if (PlayerInfo[playerid][pEvent] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да бъдете Event администратор за да използвате тази команда.");
			return 1;
		}

		new string2230[512];
		new string2230result[2530];
		format(string2230, 512, "{FFFFFF}Команда{FFFFFF},\t{FFFFFF}Действие\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/startevent\t {00E62D}- за да създадете Event\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/startevent1\t {00E62D}- за да създадете Event с Награда\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/endevent\t {00E62D}- за да спрете Event\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/esethpall\t {00E62D}- за да сложите кръв на всички\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/esetarmourall\t {00E62D}- за да сложите жилетка на всички\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/egivegunall\t {00E62D}- за да дадете оръжие на всеки\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/esethp\t {00E62D}- за да сложите кръв на играч\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/esetarmour\t {00E62D}- за да сложите жилетка на играч\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/egivegun\t {00E62D}- за да дадете оръжие на играч\n");
		strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}КОМ{008000}АН{FF0000}ДИ", string2230result, "Затвори", "");
		return 1;
	}

	if (strcmp(cmd, "/awarn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unawarn [ID на играч] [причина]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/awarn [ID на играч] [причина]");
			return 1;
		}

		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/awarn [ID на играч] [причина]");
			return 1;
		}

		if (PlayerInfo[giveplayerID][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е администратор!");
		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		PlayerInfo[giveplayerID][pAdminWarns] += 1;
		new warns = PlayerInfo[giveplayerID][pAdminWarns];
		new string256[256];
		format(string256, 256, "%s добави едно Admin предупреждение на %s [%d/3] Причина: %s", accountNickname, giveplayerIDNickname, warns, result);
		SendClientMessageToAll(COLOR_ADMIN_RED, string256);
		if (warns == 3)
		{
			format(string256, 256, "%s получи 3 Admin предупреждения и загуби правата си!", giveplayerIDNickname);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			PlayerInfo[giveplayerID][pAdmin] = 0;
			PlayerInfo[giveplayerID][pAdminWarns] = 0;
		}

		return 1;
	}

	if (strcmp(cmd, "/unawarn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unawarn [ID на играч] [причина]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unawarn [ID на играч] [причина]");
			return 1;
		}

		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unawarn [ID на играч] [причина]");
			return 1;
		}

		if (PlayerInfo[giveplayerID][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е администратор!");
		if (PlayerInfo[giveplayerID][pAdminWarns] <= 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч няма никакви Admin предупреждения!");
		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		PlayerInfo[giveplayerID][pAdminWarns] -= 1;
		new warns = PlayerInfo[giveplayerID][pAdminWarns];
		new string256[256];
		format(string256, 256, "%s премахна едно Admin предупреждение на %s [%d/3] Причина: %s", accountNickname, giveplayerIDNickname, warns, result);
		SendClientMessageToAll(COLOR_ADMIN_RED, string256);
		return 1;
	}

	if (strcmp(cmd, "/unwarn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 4)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unwarn [ID на играч] [причина]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unwarn [ID на играч] [причина]");
			return 1;
		}

		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/unwarn [ID на играч] [причина]");
			return 1;
		}

		if (PlayerInfo[giveplayerID][pWarns] <= 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч няма никакви предупреждения!");
		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		PlayerInfo[giveplayerID][pWarns] -= 1;
		new warns = PlayerInfo[giveplayerID][pWarns];
		new string256[256];
		format(string256, 256, "%s премахна едно предупреждение на %s [%d/5] Причина: %s", accountNickname, giveplayerIDNickname, warns, result);
		SendClientMessageToAll(COLOR_ADMIN_RED, string256);
		return 1;
	}

	//
	if (strcmp(cmd, "/rban", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			//
			tmp = strtok(cmdtext, idx);
			new nickname[32];
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/rban [nickname] [reason]");
				return 1;
			}

			strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
			//
			tmp = strtok(cmdtext, idx);
			new result[32];
			if (!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/rban [nickname] [reason]");
				return 1;
			}

			strmid(result, tmp, 0, sizeof(result), sizeof(result));
			if (strlen(nickname) < 1 || strlen(nickname) > 30)
			{
				SendClientMessage(playerid, 0xB4B5B7FF, "Името трябва да бъде с до 30 символа!");
				return 1;
			}

			if (strlen(result) < 1 || strlen(result) > 30)
			{
				SendClientMessage(playerid, 0xB4B5B7FF, "Причината трябва да бъде с до 30 символа!");
				return 1;
			}

			new nicknameFile[50];
			format(nicknameFile, 50, "%s.ini", nickname);
			if (dini_Exists(nicknameFile))
			{
				new string256[256];
				format(string256, 256, "%s беше BAN-нат от администратор %s Причина: %s", nickname, accountNickname, result);
				SendClientMessageToAll(COLOR_ADMIN_RED, string256);
				new nicknamesIP[35];
				format(nicknamesIP, 35, "%s", dini_Get(nicknameFile, "pIP"));
				new rconCommandString[115];
				format(rconCommandString, 115, "banip %s", nicknamesIP);
				SendRconCommand(rconCommandString);
				SendRconCommand("reloadbans");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този nickname не съществува!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		}

		return 1;
	}

	//
	if (strcmp(cmd, "/nunwarn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 4)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		new nickname[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/nunwarn [nickname] [reason]");
			return 1;
		}

		strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
		tmp = strtok(cmdtext, idx);
		new result[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/nunwarn [nickname] [reason]");
			return 1;
		}

		strmid(result, tmp, 0, sizeof(result), sizeof(result));
		if (strlen(nickname) < 1 || strlen(nickname) > 30)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Името трябва да бъде с до 30 символа!");
			return 1;
		}

		if (strlen(result) < 1 || strlen(result) > 30)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Причината трябва да бъде с до 30 символа!");
			return 1;
		}

		new string256[256];
		new nname[MAX_PLAYER_NAME];
		//IF ONLINE:
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				GetPlayerName(i, nname, sizeof(nname));
				if (strcmp(nname, nickname, true) == 0)
				{
					new warns = PlayerInfo[playerid][pWarns];
					if (warns == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч няма никакви предупреждения!");
					PlayerInfo[i][pWarns] -= 1;
					warns -= 1;
					format(string256, 256, "%s премахна едно предупреждение на %s [%d/5] Причина: %s", accountNickname, nname, warns, result);
					SendClientMessageToAll(COLOR_ADMIN_RED, string256);
					return 1;
				}
			}
		}

		//IF OFFLINE:
		new bool: existAccount = false;
		new nicknameFile[42];
		format(nicknameFile, 42, "%s.ini", nickname);
		if (dini_Exists(nicknameFile))
		{
			existAccount = true;
			new warns = dini_Int(nicknameFile, "pWarns");
			if (warns == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч няма никакви предупреждения!");
			warns -= 1;
			format(string256, 256, "%s премахна едно предупреждение на %s [%d/5] Причина: %s", accountNickname, nickname, warns, result);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			dini_IntSet(nicknameFile, "pWarns", warns);
		}

		if (existAccount == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не съществува такъв акаунт!");
		}

		return 1;
	}

	//animation - open
	if (strcmp(cmd, "/admanimation", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 5)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		new nickname[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/admanimation [nickname] [reason]");
			return 1;
		}

		strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
		tmp = strtok(cmdtext, idx);
		new result[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/admanimation [nickname] [reason]");
			return 1;
		}

		strmid(result, tmp, 0, sizeof(result), sizeof(result));
		if (strlen(nickname) < 1 || strlen(nickname) > 30)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Името 1 трябва да бъде с до 30 символа!");
			return 1;
		}

		if (strlen(result) < 1 || strlen(result) > 30)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Името 2 трябва да бъде с до 30 символа!");
			return 1;
		}

		ApplyAnimation(playerid, nickname, result, 4.1, 0, 1, 1, 0, 60000, 1);
		return 1;
	}

	//animation - close
	if (strcmp(cmd, "/nwarn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		new nickname[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/nwarn [nickname] [reason]");
			return 1;
		}

		strmid(nickname, tmp, 0, sizeof(nickname), sizeof(nickname));
		tmp = strtok(cmdtext, idx);
		new result[32];
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/nwarn [nickname] [reason]");
			return 1;
		}

		strmid(result, tmp, 0, sizeof(result), sizeof(result));
		if (strlen(nickname) < 1 || strlen(nickname) > 30)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Името трябва да бъде с до 30 символа!");
			return 1;
		}

		if (strlen(result) < 1 || strlen(result) > 30)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Причината трябва да бъде с до 30 символа!");
			return 1;
		}

		new string256[256];
		new nname[MAX_PLAYER_NAME];
		//IF ONLINE:
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (IsPlayerConnected(i))
			{
				GetPlayerName(i, nname, sizeof(nname));
				if (strcmp(nname, nickname, true) == 0)
				{
					new warns = PlayerInfo[playerid][pWarns];
					if (warns >= 5) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече има 5 предупреждения!");
					PlayerInfo[i][pWarns] += 1;
					warns += 1;
					format(string256, 256, "%s сложи предупреждение на %s [%d/5] Причина: %s", accountNickname, nname, warns, result);
					SendClientMessageToAll(COLOR_ADMIN_RED, string256);
					if (warns == 5)
					{
						format(string256, 256, "%s събра 5 предупреждения и акаунтът му е блокиран!", nname);
						SendClientMessageToAll(COLOR_ADMIN_RED, string256);
						PlayerTimerInfo[i][ptKick] = 1;
					}

					return 1;
				}
			}
		}

		//IF OFFLINE:
		new bool: existAccount = false;
		new nicknameFile[42];
		format(nicknameFile, 42, "%s.ini", nickname);
		if (dini_Exists(nicknameFile))
		{
			existAccount = true;
			new warns = dini_Int(nicknameFile, "pWarns");
			if (warns >= 5) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече има 5 предупреждения!");
			warns += 1;
			format(string256, 256, "%s сложи предупреждение на %s [%d/5] Причина: %s", accountNickname, nickname, warns, result);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			dini_IntSet(nicknameFile, "pWarns", warns);
			if (warns == 5)
			{
				format(string256, 256, "%s събра 5 предупреждения и акаунтът му е блокиран!", nickname);
				SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			}
		}

		if (existAccount == false)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не съществува такъв акаунт!");
		}

		return 1;
	}

	if (strcmp(cmd, "/warn", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] < 3)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
			return 1;
		}

		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/warn [ID на играч] [причина]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
			idx++;
		}

		new offset = idx;
		new result[256];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = cmdtext[idx];
			idx++;
		}

		result[idx - offset] = EOS;
		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/warn [ID на играч] [причина]");
			return 1;
		}

		if (!strlen(result))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/warn [ID на играч] [причина]");
			return 1;
		}

		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		PlayerInfo[giveplayerID][pWarns] += 1;
		new warns = PlayerInfo[giveplayerID][pWarns];
		new string256[256];
		format(string256, 256, "%s сложи предупреждение на %s [%d/5] Причина: %s", accountNickname, giveplayerIDNickname, warns, result);
		SendClientMessageToAll(COLOR_ADMIN_RED, string256);
		if (PlayerInfo[giveplayerID][pWarns] == 5)
		{
			format(string256, 256, "%s събра 5 предупреждения и акаунтът му е блокиран!", giveplayerIDNickname);
			SendClientMessageToAll(COLOR_ADMIN_RED, string256);
			PlayerTimerInfo[giveplayerID][ptKick] = 1;
		}

		return 1;
	}

	if (strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Трябва да бъдете администратор за да използвате тази команда!");
			return 1;
		}

		new string2230[512];
		new string2230result[2530];
		format(string2230, 512, "{FFFFFF}Commands of\t {5AA5E7}Admin Level: \t{5AA5E7}Moderator (1)\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/а \t \t за да използвате ADMIN чата\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/kick \t \t за да изхвърлите играч от сървъра\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/spec \t \t за да наблюдавате играч от сървъра\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/specoff \t \t за да спрете да наблюдавате даден играч\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/аduty \t \t за да влезете на смяна, като администратор\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/ann \t \t за да направите обява относно сървъра\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/pm \t \t за да напишеш лично съобщение до играч\n");
		strcat(string2230result, string2230);
		format(string2230, 512, "{FFFFFF}/answer \t \t за да отговориш на въпроса, зададен от играч\n");
		strcat(string2230result, string2230);
		ShowPlayerDialog(playerid, DIALOG_AHELP1, DIALOG_STYLE_TABLIST_HEADERS, "{5AA5E7}ADMIN HELP: COMMANDS", string2230result, "Напред", "Затвори");
		return 1;
	}

	if (strcmp(cmd, "/setweather", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/setweather [weather id]");
			return 1;
		}

		new weather = strval(tmp);
		if (weather < 1 || weather > 19)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Времето трябва да е между 1 и 19.");
			return 1;
		}

		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new string256[256];
		SetWeather(weather);
		format(string256, 256, "* Времето в сървъра беше променено от %s, сега е ID %d *", accountNickname, weather);
		SendClientMessageToAll(COLOR_YELLOW, string256);
		return 1;
	}

	if (strcmp(cmd, "/sethours", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/sethours [hour id]");
			return 1;
		}

		new hours = strval(tmp);
		if (hours < 1 || hours > 23)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Часът трябва да е между 1 и 23.");
			return 1;
		}

		if (PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достъп до тази административна команда!");
		new string256[256];
		SetWorldTime(hours);
		format(string256, 256, "* Часът в сървъра беше променен от %s, сега е %d часа *", accountNickname, hours);
		SendClientMessageToAll(COLOR_YELLOW, string256);
		return 1;
	}

	if (strcmp(cmd, "/especvehs", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY && PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на армията!");
		if (PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си лидер на армията!");
		new string256[256];
		if (PlayerInfo[playerid][pFaction] == FACTION_LS_ARMY)
		{
			if (eSpecVehsLSArmy == false)
			{
				format(string256, 256, "* %s позволи да карате специалните превозни средства за отбрана на щата! *", accountNickname);
				SendFactionMessage(FACTION_LS_ARMY, COLOR_ARMY, string256);
				eSpecVehsLSArmy = true;
			}
			else
			{
				format(string256, 256, "* %s забрани да карате специалните превозни средства! *", accountNickname);
				SendFactionMessage(FACTION_LS_ARMY, COLOR_ARMY, string256);
				eSpecVehsLSArmy = false;
			}
		}
		else if (PlayerInfo[playerid][pFaction] == FACTION_LV_ARMY)
		{
			if (eSpecVehsLVArmy == false)
			{
				format(string256, 256, "* %s позволи да карате специалните превозни средства за отбрана на щата! *", accountNickname);
				SendFactionMessage(FACTION_LV_ARMY, COLOR_ARMY, string256);
				eSpecVehsLVArmy = true;
			}
			else
			{
				format(string256, 256, "* %s забрани да карате специалните превозни средства! *", accountNickname);
				SendFactionMessage(FACTION_LV_ARMY, COLOR_ARMY, string256);
				eSpecVehsLVArmy = false;
			}
		}

		return 1;
	}

	if (strcmp(cmd, "/giveweplic", true) == 0)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD && PlayerInfo[playerid][pFaction] != FACTION_LVPD) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на полицията!");
		if (PlayerInfo[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си 5 Rank!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/giveweplic [ID на играч]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (IsPlayerConnected(giveplayerID))
		{
			if (giveplayerID != playerid)
			{
				if (CorDetector(4.0, playerid, giveplayerID))
				{
					if (PlayerInfo[giveplayerID][pWepLic] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч вече има лиценз за оръжия.");
					new string256[256];
					new giveplayerIDNickname[MAX_PLAYER_NAME];
					PlayerInfo[giveplayerID][pWepLic] = 1;
					GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
					format(string256, 256, "Ти даде на %s {00FF00}лиценз за оръжия{FFFFFF}.", giveplayerIDNickname);
					SendClientMessage(playerid, COLOR_WHITE, string256);
					format(string256, 256, "Ти получи {00FF00}лиценз за оръжия {FFFFFF} от %s.", accountNickname);
					SendClientMessage(giveplayerID, COLOR_WHITE, string256);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е близо до теб!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да дадеш лиценз за оръжия на себе си!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		}

		return 1;
	}

	if (strcmp(cmd, "/heal", true) == 0)
	{
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/heal [ID на играч]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		if (IsPlayerConnected(giveplayerID))
		{
			if (giveplayerID != playerid)
			{
				if (CorDetector(4.0, playerid, giveplayerID))
				{
					if (PlayerInfo[playerid][pFaction] != FACTION_MEDIC) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте лекар!");
					if (PlayerInfo[playerid][pMedicDuty] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си лекар на смяна!");
					new Float: health;
					GetPlayerHealth(giveplayerID, health);
					if (health >= 90) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът не е много наранен.");
					SetPlayerHealth(giveplayerID, 100);
					new string256[256];
					new giveplayerIDNickname[MAX_PLAYER_NAME];
					GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
					format(string256, 256, "Ти излекува %s!", giveplayerIDNickname);
					SendClientMessage(playerid, COLOR_MEDIC, string256);
					format(string256, 256, "Ти беше излекуван от %s!", accountNickname);
					SendClientMessage(giveplayerID, COLOR_MEDIC, string256);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е близо до теб!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да дадеш пари на себе си!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		}

		return 1;
	}

	if (strcmp(cmd, "/pay", true) == 0)
	{
		if (PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва ви поне 5-ти Level за тази команда!");
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/pay [ID на играч] [стойност]");
			return 1;
		}

		new giveplayerID = ReturnUser(tmp);
		tmp = strtok(cmdtext, idx);
		if (!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "Usage: {FFFFFF}/pay [ID на играч] [стойност]");
			return 1;
		}

		new moneys = strval(tmp);
		if (moneys < 1 || moneys > 1000000)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Сумата трябва да е между $1 до $1 000 000.");
			return 1;
		}

		if (IsPlayerConnected(giveplayerID))
		{
			if (giveplayerID != playerid)
			{
				if (CorDetector(4.0, playerid, giveplayerID))
				{
					if (PlayerInfo[playerid][pCash] < moneys) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш толкова пари!");
					GivePlayerCash(playerid, -moneys);
					GivePlayerCash(giveplayerID, moneys);
					new string256[256];
					new giveplayerIDNickname[MAX_PLAYER_NAME];
					GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
					format(string256, 256, "Ти даде на {FFFFFF}%s {FFFF00}$%d {FFFFFF}пари в брой.", giveplayerIDNickname, moneys);
					SendClientMessage(playerid, COLOR_WHITE, string256);
					format(string256, 256, "Ти получи {FFFF00}$%d {FFFFFF}пари в брой от %s.", moneys, accountNickname);
					SendClientMessage(giveplayerID, COLOR_WHITE, string256);
					format(string256, 256, "* %s извади пари от джоба си и ги даде на %s", RealName(playerid), RealName(giveplayerID));
					SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е близо до теб!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да дадеш пари на себе си!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		}

		return 1;
	}

	//invalid command message
	return SendClientMessage(playerid, COLOR_WHITE, "Командата, която написа не съществува! Напиши {5EF403}/help{FFFFFF} за да видиш всички команди");
}

stock CheckForEnterInPrivateVeh(playerid, vehicleid, ispassenger)
{
	new privateVehIndex = VehicleInfo[vehicleid][vPrivateID];

	if (VehicleInfo[vehicleid][vIsPrivate] == 1)
	{
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, accountNickname, 25);
		if (strcmp(PrivateVehInfo[privateVehIndex][vOwnerName], accountNickname, false))
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SetPlayerPos(playerid, X, Y, Z);
				new string256[256];
				if (PrivateVehInfo[privateVehIndex][vLocked] == 1)
				{
					if (PrivateVehInfo[privateVehIndex][vOwner] == 1)
					{
						format(string256, 256, "Това превозно средство е регистрирано на {68F355}%s", PrivateVehInfo[privateVehIndex][vOwnerName]);
						SendClientMessage(playerid, COLOR_WHITE, string256);
					}
					else if (PrivateVehInfo[privateVehIndex][vOwner] == 0)
					{
						format(string256, 256, "Това превозно средство принадлежи на {68F355}щата San Andreas");
						SendClientMessage(playerid, COLOR_WHITE, string256);
					}
				}
			}
		}
	}
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	RemovePlayerAttachedObject(playerid, 0);
	if (withBelt[playerid] == true)
	{
		withBelt[playerid] = false;
	}

	CheckForEnterInPrivateVeh(playerid, vehicleid, ispassenger);
	if (isBusVeh[vehicleid] == true)
	{
		if (ispassenger)
		{
			if (isBusVehWorking[vehicleid] == false)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Съжаляваме, но този бус не работи в момента.");
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
			else if (isBusVehWorking[vehicleid] == true)
			{
				if (PlayerInfo[playerid][pCash] < 5)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Съжаляваме, но вие нямате $5 за да се качите.");
					new Float: X, Float: Y, Float: Z;
					GetPlayerPos(playerid, X, Y, Z);
					SetPlayerPos(playerid, X, Y, Z);
				}
				else
				{
					SendClientMessage(playerid, COLOR_BUS, "Добре дошли в буса, насладете се на пътуването си.");
					GivePlayerCash(playerid, -5);
				}
			}
		}
	}

	if (VehicleInfo[vehicleid][vRentable] == 1 && !ispassenger)
	{
		if (VehicleInfo[vehicleid][vRentedBy] >= 0 && VehicleInfo[vehicleid][vRentedBy] != playerid)
		{
			if(VehicleInfo[vehicleid][vRentLock] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Това превозно средство е заключено");
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}
	}

	if (isLsArmySpecialVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}

		if (PlayerInfo[playerid][pArmyDuty] == 0)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "Трябва да сте на смяна за да карате това превозно средство.");
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}

		if (eSpecVehsLSArmy == false)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "Превозните средства за защита на щата са забранени от генерала!");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isLvArmySpecialVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}

		if (PlayerInfo[playerid][pArmyDuty] == 0)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "Трябва да сте на смяна за да карате това превозно средство.");
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}

		if (eSpecVehsLVArmy == false)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "Превозните средства за защита на щата са забранени от генерала!");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isLvpdDutyVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LVPD)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}

		if (PlayerInfo[playerid][pPoliceDuty] == 0)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "Трябва да сте на смяна за да карате служебно превозно средство!");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isLspdDutyVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}

		if (PlayerInfo[playerid][pPoliceDuty] == 0)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "Трябва да сте на смяна за да карате служебно превозно средство!");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isLvpdVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LVPD)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isLspdVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LSPD)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isNewsVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_NEWS)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isFbiVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_FBI)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isLsArmyVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isLvArmyVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isGroveVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_GROVE)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isCripVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_CRIP)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isTriadsVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_TRIADS)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isAztecasVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_AZTECAS)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isItalianVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_ITALIAN_MAFIA)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isWcwVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_WCW)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isMafiaVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_RUSSIAN_MAFIA)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isBallasVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_BALLAS)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isVagosVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_VAGOS)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isBankVeh[vehicleid] == true)
	{
		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
		SetPlayerPos(playerid, X, Y, Z);
	}

	if (isGovVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_GOVERNMENT)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isMedicVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pFaction] != FACTION_MEDIC)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isTaxiVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pJob] != JOB_TAXI)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
				return 1;
			}
		}

		if (PlayerInfo[playerid][pTaxiDuty] == 0)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "Трябва да си на смяна, за да караш този превоз!");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isAutoSchoolVeh[vehicleid] == true)
	{
		if (isStudyingDrive[playerid] == false)
		{
			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);
			SendClientMessage(playerid, COLOR_GRAD2, "Това превозно средство е предназначено за ученици по шофиране!");
			SetPlayerPos(playerid, X, Y, Z);
		}
	}

	if (isFuelComapnyVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isBusTeleportVeh[vehicleid] == true)
	{
		if (!ispassenger)
		{
			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);
			SendClientMessage(playerid, COLOR_GRAD2, "Този автобус е само за пътници!");
			SetPlayerPos(playerid, X, Y, Z);
		}
	}

	if (isBankerVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pJob] != JOB_BANKER)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	if (isMechanicVeh[vehicleid] == true)
	{
		if (PlayerInfo[playerid][pJob] != JOB_MECHANIC)
		{
			if (!ispassenger)
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти нямаш ключовете за това превозно средство");
				SetPlayerPos(playerid, X, Y, Z);
			}
		}
	}

	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	UnlockOLockedVeh(playerid);
	if (withBelt[playerid] == true)
	{
		withBelt[playerid] = false;
	}

	if (PlayerTimerInfo[playerid][ptVehicleTurnEngineOn] >= 0)
	{
		PlayerTimerInfo[playerid][ptVehicleTurnEngineOn] = 0;
	}
	
	if(isFuelComapnyVeh[vehicleid]) 
    {
        TextDrawHideForPlayer(playerid, TankFuel[playerid]);
    }

	if (isStudyingDrive[playerid] == true)
	{
		PlayerTimerInfo[playerid][ptDriverSchoolTimer] = 0;
		PlayerTimerInfo[playerid][ptDriverSchoolTaken] = 0;
		DisablePlayerRaceCheckpoint(playerid);
		TextDrawHideForPlayer(playerid, driverCourseText[playerid]);
		isStudyingDrive[playerid] = false;
		if (IsValidVehicle(driverStudyVeh[playerid]))
		{
			DestroyVehicle(driverStudyVeh[playerid]);
		}

		SendClientMessage(playerid, COLOR_RED, "[DMV] Изпитът ви е провален, защото напуснахте превозното средство.");
	}

	if (isWorkingCoalmine[playerid] == true)
	{
		SendClientMessage(playerid, COLOR_WHITE, "> Вие напуснахте превозното средство, заради което работата ви се отменя.");
		switch (PlayerInfo[playerid][pVip])
		{
			case 0:
				{
					PlayerInfo[playerid][pCoalmineTimer] = 35 * 60;
				}

			case 1:
				{
					PlayerInfo[playerid][pCoalmineTimer] = 30 * 60;
				}

			case 2:
				{
					PlayerInfo[playerid][pCoalmineTimer] = 25 * 60;
				}

			case 3:
				{
					PlayerInfo[playerid][pCoalmineTimer] = 20 * 60;
				}
		}

		DisablePlayerCheckpoint(playerid);
		SetVehicleToRespawn(vehicleid);
		isWorkingCoalmine[playerid] = false;
	}

	if (isWorkingDeliver[playerid] == true)
	{
		SendClientMessage(playerid, COLOR_WHITE, "> Вие напуснахте превозното средство, заради което работата ви се отменя.");
		switch (PlayerInfo[playerid][pVip])
		{
			case 0:
				{
					PlayerInfo[playerid][pDeliverTimer] = 35 * 60;
				}

			case 1:
				{
					PlayerInfo[playerid][pDeliverTimer] = 30 * 60;
				}

			case 2:
				{
					PlayerInfo[playerid][pDeliverTimer] = 25 * 60;
				}

			case 3:
				{
					PlayerInfo[playerid][pDeliverTimer] = 20 * 60;
				}
		}

		DisablePlayerCheckpoint(playerid);
		SetVehicleToRespawn(vehicleid);
		isWorkingDeliver[playerid] = false;
	}

	if (isWorkingSweep[playerid] == true)
	{
		SendClientMessage(playerid, COLOR_WHITE, "> Вие напуснахте превозното средство, заради което работата ви се отменя.");
		switch (PlayerInfo[playerid][pVip])
		{
			case 0:
				{
					PlayerInfo[playerid][pSweeperTimer] = 35 * 60;
				}

			case 1:
				{
					PlayerInfo[playerid][pSweeperTimer] = 30 * 60;
				}

			case 2:
				{
					PlayerInfo[playerid][pSweeperTimer] = 25 * 60;
				}

			case 3:
				{
					PlayerInfo[playerid][pSweeperTimer] = 20 * 60;
				}
		}

		DisablePlayerCheckpoint(playerid);
		SetVehicleToRespawn(vehicleid);
		isWorkingSweep[playerid] = false;
	}

	if (isWorkingPizza[playerid] == true)
	{
		SendClientMessage(playerid, COLOR_WHITE, "> Вие напуснахте превозното средство, заради което работата ви се отменя.");
		switch (PlayerInfo[playerid][pVip])
		{
			case 0:
				{
					PlayerInfo[playerid][pPizzaTimer] = 35 * 60;
				}

			case 1:
				{
					PlayerInfo[playerid][pPizzaTimer] = 30 * 60;
				}

			case 2:
				{
					PlayerInfo[playerid][pPizzaTimer] = 25 * 60;
				}

			case 3:
				{
					PlayerInfo[playerid][pPizzaTimer] = 20 * 60;
				}
		}

		DisablePlayerCheckpoint(playerid);
		SetVehicleToRespawn(vehicleid);
		isWorkingPizza[playerid] = false;
	}

	if (isWorkingBus[playerid] == true)
	{
		SendClientMessage(playerid, COLOR_WHITE, "> Вие напуснахте превозното средство, заради което работата ви се отменя.");
		switch (PlayerInfo[playerid][pVip])
		{
			case 0:
				{
					PlayerInfo[playerid][pBusTimer] = 35 * 60;
				}

			case 1:
				{
					PlayerInfo[playerid][pBusTimer] = 30 * 60;
				}

			case 2:
				{
					PlayerInfo[playerid][pBusTimer] = 25 * 60;
				}

			case 3:
				{
					PlayerInfo[playerid][pBusTimer] = 20 * 60;
				}
		}

		isBusVehWorking[vehicleid] = false;
		SetVehicleToRespawn(vehicleid);
		isWorkingBus[playerid] = false;
		DisablePlayerCheckpoint(playerid);
	}

	if (isTaxiVehWorking[vehicleid] == true && IsPlayerDriver(playerid))
	{
		isTaxiVehWorking[vehicleid] = false;
		new string256[256];
		SendClientMessage(playerid, COLOR_LIGHTYELLOW, "Вие напуснахте таксито, заради което се спря начисляването на сметката.");
		for (new i; i < MAX_PLAYERS; i++)
		{
			if (GetPlayerVehicleID(i) == vehicleid && !IsPlayerDriver(i))
			{
				format(string256, 256, "Шофьорът напусна таксито и сега трябва да платите $%d.", VehicleInfo[vehicleid][vTaxiFare]);
				SendClientMessage(i, COLOR_LIGHTYELLOW, string256);
				TextDrawHideForPlayer(i, FareStatus[i]);
			}
		}
	}

	if (radioveh[vehicleid] > 0)
	{
		StopAudioStreamForPlayer(playerid);
	}

	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if (newstate == PLAYER_STATE_ONFOOT)
	{
		UnlockOLockedVeh(playerid);
	}

	//is driven vehicle - open
	if (newstate == PLAYER_STATE_DRIVER)
	{
		new hisVeh = GetPlayerVehicleID(playerid);
		if (isCarVehicle(GetVehicleModel(hisVeh)) == 1)
		{
			if (PlayerInfo[playerid][pCarLicense] == 0 && isStudyingDrive[playerid] == false)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти все още нямаш шофьорска книжка и може да имаш неприятности с полицията");
			}
		}

		if (isHelicopterVehicle(GetVehicleModel(hisVeh)) == 1)
		{
			if (PlayerInfo[playerid][pPlaneLicense] == 0 && isStudyingDrive[playerid] == false)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[Мисли] Ти все още нямаш шофьорска книжка и може да имаш неприятности с полицията");
			}
		}

		hisLastVeh[playerid] = hisVeh;
	}

	//is driven vehicle - close
	if (newstate == PLAYER_STATE_PASSENGER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (vehicleid == busTeleportVehs[0])
		{
			if (PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid, COLOR_ERROR, "Вие нямате достатъчно пари за да използвате автобуса.");
			//SetPlayerPos(playerid,2280.1428,2395.9788,10.8203);
			inBusTeleportVehIndex[playerid] = 1;
			busTeleportTimer[playerid] = 25;
			SetPlayerPos(playerid, 2021.9185, 2235.1279, 2103.9536);	// in bus
			SetPlayerVirtualWorld(playerid, playerid + 1);
			GivePlayerCash(playerid, -10);
			SendClientMessage(playerid, COLOR_BUS, "Изчакайте няколко секунди, преди да стигнете до дестинацията.");
		}

		if (vehicleid == busTeleportVehs[1])
		{
			if (PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid, COLOR_ERROR, "Вие нямате достатъчно пари за да използвате автобуса.");
			//SetPlayerPos(playerid,-287.8196,1519.5582,75.3594);
			SetPlayerPos(playerid, 2021.9185, 2235.1279, 2103.9536);	// in bus
			SetPlayerVirtualWorld(playerid, playerid + 1);
			inBusTeleportVehIndex[playerid] = 2;
			busTeleportTimer[playerid] = 25;
			GivePlayerCash(playerid, -10);
			SendClientMessage(playerid, COLOR_BUS, "Изчакайте няколко секунди, преди да стигнете до дестинацията.");
		}

		if (vehicleid == busTeleportVehs[2])
		{
			if (PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid, COLOR_ERROR, "Вие нямате достатъчно пари за да използвате автобуса.");
			//SetPlayerPos(playerid,2280.1428,2395.9788,10.8203);
			inBusTeleportVehIndex[playerid] = 1;
			busTeleportTimer[playerid] = 25;
			SetPlayerPos(playerid, 2021.9185, 2235.1279, 2103.9536);	// in bus
			SetPlayerVirtualWorld(playerid, playerid + 1);
			GivePlayerCash(playerid, -10);
			SendClientMessage(playerid, COLOR_BUS, "Изчакайте няколко секунди, преди да стигнете до дестинацията.");
		}
	}

	if (newstate == PLAYER_STATE_DRIVER)
	{
		if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 481 &&
			GetVehicleModel(GetPlayerVehicleID(playerid)) != 509 &&
			GetVehicleModel(GetPlayerVehicleID(playerid)) != 510 &&
			GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
		{
			PlayerTimerInfo[playerid][ptFuel] = 50;
		}
	}

	if (newstate == PLAYER_STATE_DRIVER)
	{
		UpdateSpeedoText(playerid);
		ShowSpeedoStatusForPlayer(playerid);
		//TextDrawShowForPlayer(playerid,MaxAllowedSpeed[playerid]);
		if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
		{
			new vehModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			if (IsNoFuelVehicle(vehModel) == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Натисни {40BF00}CTRL{FFFFFF} за да включиш двигателя!");
			}
		}

		new vehicleid = GetPlayerVehicleID(playerid);
		if (VehicleInfo[vehicleid][vForSaleShop] == 1)
		{
			new string256[256];
			new vehicleidSellCar = VehicleInfo[vehicleid][vForSaleID];
			//format(string256,256,"{FFFFFF}Желаете ли да купите това превозно средство за {40BF00}$%d {FFFFFF}?",SellCarInfo[vehicleidSellCar][scVehPrice]);
			format(string256, 256, "{FFFFFF}Транспорът се продава!\n\n{FFFFFF}Информация:\n{FFFFFF}Модел: {40BF00}%s\n{FFFFFF}Цена: {40BF00}$%d\n\n{FFFFFF}За да купите този превоз, натиснете {40BF00}Купи", GetVehicleName(vehicleid), SellCarInfo[vehicleidSellCar][scVehPrice]);
			ShowPlayerDialog(playerid, DIALOG_BUYVEH, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Купи", "Излез");
		}

		if (VehicleInfo[vehicleid][vRentable] == 1)
		{
			if (VehicleInfo[vehicleid][vRentedBy] == -1)
			{
				new string256[256];
				format(string256, 256, "{FFFFFF}Транспорът се дава под наем!\n\n{FFFFFF}Информация:\n{FFFFFF}Модел: {40BF00}%s\n{FFFFFF}Цена: {40BF00}$%d\n\n{FFFFFF}За да наемете този превоз, натиснете {40BF00}Наеми", GetVehicleName(vehicleid), VehicleInfo[vehicleid][vRentPrice]);
				ShowPlayerDialog(playerid, DIALOG_RENTVEH, DIALOG_STYLE_MSGBOX, "{FFFFFF}Транспорт под наем", string256, "Наеми", "Излез");
			}
		}

		if (isRobberyVeh[vehicleid] == true)
		{
			if (isRobber[playerid] == false)
			{
				new string256[256];
				if (robberyTime <= 0)
				{
					format(string256, 256, "{EE975B}Искате ли да направите обир ?");
					ShowPlayerDialog(playerid, DIALOG_ACCEPT_ROBBERY, DIALOG_STYLE_MSGBOX, "{FFFFFF}Robbery", string256, "Започни", "Излез");
				}

				if (robberyTime >= 60)
				{
					format(string256, 256, "{EE975B}Трябва да изчакате още %d минути, преди да можете да направите обир", robberyTime / 60);
					ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Robbery", string256, "Излез", "");
				}

				if (robberyTime < 60 && robberyTime > 0)
				{
					format(string256, 256, "{EE975B}Трябва да изчакате още 1 минута, преди да можете да направите обир");
					ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Robbery", string256, "Излез", "");
				}
			}
		}

		if (isPizzaVeh[vehicleid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "За да започнеш да разнасяш пица, напиши {e7905e}/pizzajob {ffffff}(Rule: Не използвай мотора за лични цели)");
		}

		if (isBusVeh[vehicleid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "За да започнеш да разнасяш хора, напиши {e7905e}/busjob {ffffff}(Rule: Не използвай автобуса за лични цели)");
		}

		if (isSweepVeh[vehicleid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "За да започнеш да почистваш, напиши {e7905e}/sweepjob {ffffff}(Rule: Не използвай чистача за лични цели)");
		}

		if (isDeliverVeh[vehicleid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "За да започнеш да доставяш, напиши {e7905e}/deliverjob {ffffff}(Rule: Не използвай превозното средство за лични цели)");
		}

		if (isCoalmineVeh[vehicleid] == true)
		{
			SendClientMessage(playerid, COLOR_WHITE, "За да започнеш да работиш, напиши {e7905e}/coalminejob {ffffff}(Rule: Не използвай превозното средство за лични цели)");
		}
	}	//DRIVER_STATE }

	//onfoot check - open
	if (newstate == PLAYER_STATE_ONFOOT)
	{
		isOnFoot[playerid] = true;
	}
	else if (newstate != PLAYER_STATE_ONFOOT)
	{
		isOnFoot[playerid] = false;
	}

	//onfoot check - close

	if (newstate == PLAYER_STATE_ONFOOT)
	{
		if (inTaxiVeh[playerid] == true)
		{
			inTaxiVeh[playerid] = false;
			TextDrawHideForPlayer(playerid, FareStatus[playerid]);
		}

		HideSpeedoStatusForPlayer(playerid);
		//TextDrawHideForPlayer(playerid,MaxAllowedSpeed[playerid]);
		StopAudioStreamForPlayer(playerid);
	}

	//
	if (newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (isTaxiVeh[vehicleid] == true)
		{
			inTaxiVeh[playerid] = true;
			if (isTaxiVehWorking[vehicleid] == true)
			{
				TextDrawShowForPlayer(playerid, FareStatus[playerid]);
			}
		}

		if (radioveh[vehicleid] == 0)
		{
			if (PlayerInfo[playerid][pDisableCarRadio] == 0)
			{
				PlayAudioStreamForPlayer(playerid, "www.google.com");
			}

			//StopAudioStreamForPlayer(playerid);
			GameTextForPlayer(playerid, "~r~~h~RADIO OFF", 650, 1);
		}
		else
		{
			new stringRadio[50];
			format(stringRadio, 50, "~b~~h~RADIO %s", radioAudioStreamNames[radioveh[vehicleid]]);
			GameTextForPlayer(playerid, stringRadio, 650, 1);
			if (PlayerInfo[playerid][pDisableCarRadio] == 0)
			{
				PlayAudioStreamForPlayer(playerid, radioAudioStream[radioveh[vehicleid]]);
			}
		}
	}

	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	new hisVeh = GetPlayerVehicleID(playerid);
	if (IsPlayerInRangeOfPoint(playerid, 4.0, findVehX[playerid], findVehY[playerid], findVehZ[playerid]))
	{
		SendClientMessage(playerid, COLOR_YELLOW, "[Tracker] Вие достигнахте до вашата кола.");
		DisablePlayerCheckpoint(playerid);
	}

	if(gpsOn[playerid])
	{
	
	for(new i=0; i<MAX_FUEL_STATIONS; i++)
    {
        if(IsPlayerInRangeOfPoint(playerid, 4.0, FuelStationInfo[i][fsCoordsX], FuelStationInfo[i][fsCoordsY], FuelStationInfo[i][fsCoordsZ]))
        {
            SendClientMessage(playerid, COLOR_GPS, "[GPS] Вие достигнахте до избраната от вас бензиностанция!");
            DisablePlayerCheckpoint(playerid);
            gpsOn[playerid] = false;
        }
    }
		
		if (IsPlayerInRangeOfPoint(playerid, 4.0, PizzaJob) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, TaxiJob) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, TaxiJobBC) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, SweepJob) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, MechanicJob) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, Garage) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, GarageNeon) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, DeliverJob) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, CoalmineJob) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, BusJob) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, Kmetstvo) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, Police) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, TheNews) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, Bank) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, BankBC) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, Hospital) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, Army) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, KingRingJob) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, RobPoint) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, RobPointBC) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, FishingPlace) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, DMV_LOCATION) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, PaintBall) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, Crip) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, WestCoastWheelers) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, Vagos) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, Mafia) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, Ballas) ||
			IsPlayerInRangeOfPoint(playerid, 4.0, Autosallon))
		{
			SendClientMessage(playerid, COLOR_GPS, "[GPS] Вие достигнахте до избраното от вас място.");
			DisablePlayerCheckpoint(playerid);
			gpsOn[playerid] = false;
		}
	}
	if (IsPlayerInRangeOfPoint(playerid, 4.0, Tip0Checkpoint))
	{
		SendClientMessage(playerid, COLOR_LIGHTYELLOW, "[Напътствие] {ffffff}Напишете /enter, след което си купете GPS, чрез /buy");
		DisablePlayerCheckpoint(playerid);
	}

	if (isDeliverVeh[hisVeh] == true)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC1)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC2, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC2)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC3, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC3)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC4, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC4)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC5, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC5)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC6, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC6)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC7, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC7)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC8, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC8)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC9, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC9)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC10, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC10)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC11, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC11)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC12, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC12)) SetPlayerCheckpoint(playerid, JOB_DELIVER_LOC13, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_LOC13))
		{
			SetPlayerCheckpoint(playerid, JOB_DELIVER_FINAL, 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "Вие свършихте работата, сега трябва да оставите превоза.");
		}

		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_DELIVER_FINAL))
		{
			new string256[256];
			new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_DELIVER);
			format(string256, 256, "Вие свършихте вашата работа и получавате възнаграждение от {40BF00}$%d {ffffff}по банкова сметка + {40BF00}3 Exp.", cashToEarn);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			new Float: hisVehHealth;
			GetVehicleHealth(hisVeh, hisVehHealth);
			if (hisVehHealth < 870)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти беше таксуван с {ff0000}$95{ffffff}, заради повреди по превоза!");
				PlayerInfo[playerid][pBank] -= 95;
			}

			switch (PlayerInfo[playerid][pVip])
			{
				case 1:
					{
						PlayerInfo[playerid][pBank] += 450;
						GivePlayerExp(playerid, 2);
					}

				case 2:
					{
						PlayerInfo[playerid][pBank] += 895;
						GivePlayerExp(playerid, 4);
					}

				case 3:
					{
						PlayerInfo[playerid][pBank] += 1250;
						GivePlayerExp(playerid, 6);
					}
			}

			SetVehicleToRespawn(hisVeh);
			RemovePlayerFromVehicle(playerid);
			DisablePlayerCheckpoint(playerid);
			isWorkingDeliver[playerid] = false;
			switch (PlayerInfo[playerid][pVip])
			{
				case 0:
					{
						PlayerInfo[playerid][pDeliverTimer] = 35 * 60;
					}

				case 1:
					{
						PlayerInfo[playerid][pDeliverTimer] = 30 * 60;
					}

				case 2:
					{
						PlayerInfo[playerid][pDeliverTimer] = 25 * 60;
					}

				case 3:
					{
						PlayerInfo[playerid][pDeliverTimer] = 20 * 60;
					}
			}

			PlayerInfo[playerid][pBank] += cashToEarn;
			GivePlayerExp(playerid, 3);
			PlayerPassedJob(playerid, SIDEJOB_DELIVER);
		}
	}

	//Coalmine open
	if (isCoalmineVeh[hisVeh] == true)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC1)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC2, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC2)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC3, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC3)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC4, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC4)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC5, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC5)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC6, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC6)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC7, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC7)) SetPlayerCheckpoint(playerid, JOB_COALMINE_LOC8, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_LOC8))
		{
			SetPlayerCheckpoint(playerid, JOB_COALMINE_FINAL, 4.0);
			SendClientMessage(playerid, COLOR_WHITE, "Вие свършихте работата, сега трябва да оставите превоза.");
		}

		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_COALMINE_FINAL))
		{
			new string256[256];
			new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_COALMINE);
			format(string256, 256, "Вие свършихте вашата работа и получавате възнаграждение от {40BF00}$%d {ffffff}по банкова сметка + {40BF00}3 Exp.", cashToEarn);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			new Float: hisVehHealth;
			GetVehicleHealth(hisVeh, hisVehHealth);
			if (hisVehHealth < 870)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти беше таксуван с {ff0000}$95{ffffff}, заради повреди по превоза!");
				PlayerInfo[playerid][pBank] -= 95;
			}

			switch (PlayerInfo[playerid][pVip])
			{
				case 1:
					{
						PlayerInfo[playerid][pBank] += 450;
						GivePlayerExp(playerid, 2);
					}

				case 2:
					{
						PlayerInfo[playerid][pBank] += 895;
						GivePlayerExp(playerid, 4);
					}

				case 3:
					{
						PlayerInfo[playerid][pBank] += 1250;
						GivePlayerExp(playerid, 6);
					}
			}

			SetVehicleToRespawn(hisVeh);
			RemovePlayerFromVehicle(playerid);
			DisablePlayerCheckpoint(playerid);
			isWorkingCoalmine[playerid] = false;
			switch (PlayerInfo[playerid][pVip])
			{
				case 0:
					{
						PlayerInfo[playerid][pCoalmineTimer] = 35 * 60;
					}

				case 1:
					{
						PlayerInfo[playerid][pCoalmineTimer] = 30 * 60;
					}

				case 2:
					{
						PlayerInfo[playerid][pCoalmineTimer] = 25 * 60;
					}

				case 3:
					{
						PlayerInfo[playerid][pCoalmineTimer] = 20 * 60;
					}
			}

			PlayerInfo[playerid][pBank] += cashToEarn;
			GivePlayerExp(playerid, 3);
			PlayerPassedJob(playerid, SIDEJOB_COALMINE);
		}
	}

	//Coalmine close

	if (isPizzaVeh[hisVeh] == true)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC1)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC2, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC2)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC3, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC3)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC4, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC4)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC5, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC5)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC6, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC6)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC7, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC7)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC8, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC8)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC9, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC9)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC10, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC10)) SetPlayerCheckpoint(playerid, JOB_PIZZA_LOC11, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_LOC11))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Вие свършихте работата, сега трябва да оставите превоза.");
			SetPlayerCheckpoint(playerid, JOB_PIZZA_FINAL, 4.0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_PIZZA_FINAL))
		{
			new string256[256];
			new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_PIZZA);
			format(string256, 256, "Вие свършихте вашата работа и получавате възнаграждение от {40BF00}$%d {ffffff}по банкова сметка + {40BF00}3 Exp.", cashToEarn);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			new Float: hisVehHealth;
			GetVehicleHealth(hisVeh, hisVehHealth);
			if (hisVehHealth < 870)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти беше таксуван с {ff0000}$95{ffffff}, заради повреди по превоза!");
				PlayerInfo[playerid][pBank] -= 95;
			}

			switch (PlayerInfo[playerid][pVip])
			{
				case 1:
					{
						PlayerInfo[playerid][pBank] += 450;
						GivePlayerExp(playerid, 2);
					}

				case 2:
					{
						PlayerInfo[playerid][pBank] += 895;
						GivePlayerExp(playerid, 4);
					}

				case 3:
					{
						PlayerInfo[playerid][pBank] += 1250;
						GivePlayerExp(playerid, 6);
					}
			}

			SetVehicleToRespawn(hisVeh);
			RemovePlayerFromVehicle(playerid);
			DisablePlayerCheckpoint(playerid);
			isWorkingPizza[playerid] = false;
			switch (PlayerInfo[playerid][pVip])
			{
				case 0:
					{
						PlayerInfo[playerid][pPizzaTimer] = 35 * 60;
					}

				case 1:
					{
						PlayerInfo[playerid][pPizzaTimer] = 30 * 60;
					}

				case 2:
					{
						PlayerInfo[playerid][pPizzaTimer] = 25 * 60;
					}

				case 3:
					{
						PlayerInfo[playerid][pPizzaTimer] = 20 * 60;
					}
			}

			PlayerInfo[playerid][pBank] += cashToEarn;
			GivePlayerExp(playerid, 3);
			PlayerPassedJob(playerid, SIDEJOB_PIZZA);
		}
	}

	if (isBusVeh[hisVeh] == true)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC1)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC2, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC2)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC3, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC3)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC4, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC4)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC5, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC5)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC6, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC6)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC7, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC7)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC8, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC8)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC9, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC9)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC10, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC10)) SetPlayerCheckpoint(playerid, JOB_BUS_LOC11, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_LOC11))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Вие свършихте работата, сега трябва да оставите превоза.");
			SetPlayerCheckpoint(playerid, JOB_BUS_FINAL, 4.0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_BUS_FINAL))
		{
			new string256[256];
			new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_BUS);
			format(string256, 256, "Вие свършихте вашата работа и получавате възнаграждение от {40BF00}$%d {ffffff}по банкова сметка + {40BF00}3 Exp.", cashToEarn);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			new Float: hisVehHealth;
			GetVehicleHealth(hisVeh, hisVehHealth);
			if (hisVehHealth < 870)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти беше таксуван с {ff0000}$95{ffffff}, заради повреди по превоза!");
				PlayerInfo[playerid][pBank] -= 95;
			}

			switch (PlayerInfo[playerid][pVip])
			{
				case 1:
					{
						PlayerInfo[playerid][pBank] += 450;
						GivePlayerExp(playerid, 2);
					}

				case 2:
					{
						PlayerInfo[playerid][pBank] += 895;
						GivePlayerExp(playerid, 4);
					}

				case 3:
					{
						PlayerInfo[playerid][pBank] += 1250;
						GivePlayerExp(playerid, 6);
					}
			}

			new vehicleid = GetPlayerVehicleID(playerid);
			isBusVehWorking[vehicleid] = false;
			SetVehicleToRespawn(hisVeh);
			RemovePlayerFromVehicle(playerid);
			DisablePlayerCheckpoint(playerid);
			isWorkingBus[playerid] = false;
			switch (PlayerInfo[playerid][pVip])
			{
				case 0:
					{
						PlayerInfo[playerid][pBusTimer] = 35 * 60;
					}

				case 1:
					{
						PlayerInfo[playerid][pBusTimer] = 30 * 60;
					}

				case 2:
					{
						PlayerInfo[playerid][pBusTimer] = 25 * 60;
					}

				case 3:
					{
						PlayerInfo[playerid][pBusTimer] = 20 * 60;
					}
			}

			PlayerInfo[playerid][pBank] += cashToEarn;
			GivePlayerExp(playerid, 3);
			PlayerPassedJob(playerid, SIDEJOB_BUS);
		}
	}

	if (isSweepVeh[hisVeh] == true)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC1)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC2, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC2)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC3, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC3)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC4, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC4)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC5, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC5)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC6, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC6)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC7, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC7)) SetPlayerCheckpoint(playerid, JOB_SWEEP_LOC8, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_LOC8))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Вие свършихте работата, сега трябва да оставите превоза.");
			SetPlayerCheckpoint(playerid, JOB_SWEEP_FINAL, 4.0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 4.0, JOB_SWEEP_FINAL))
		{
			new string256[256];
			new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_SWEEP);
			format(string256, 256, "Вие свършихте вашата работа и получавате възнаграждение от {40BF00}$%d {ffffff}по банкова сметка + {40BF00}3 Exp.", cashToEarn);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			new Float: hisVehHealth;
			GetVehicleHealth(hisVeh, hisVehHealth);
			if (hisVehHealth < 870)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ти беше таксуван с {ff0000}$95{ffffff}, заради повреди по превоза!");
				PlayerInfo[playerid][pBank] -= 95;
			}

			switch (PlayerInfo[playerid][pVip])
			{
				case 1:
					{
						PlayerInfo[playerid][pBank] += 450;
						GivePlayerExp(playerid, 2);
					}

				case 2:
					{
						PlayerInfo[playerid][pBank] += 895;
						GivePlayerExp(playerid, 4);
					}

				case 3:
					{
						PlayerInfo[playerid][pBank] += 1250;
						GivePlayerExp(playerid, 6);
					}
			}

			if (PlayerInfo[playerid][pSweeperPast] == 0) PlayerInfo[playerid][pSweeperPast] = 1;
			RemovePlayerFromVehicle(playerid);
			SetVehicleToRespawn(hisVeh);
			DisablePlayerCheckpoint(playerid);
			isWorkingSweep[playerid] = false;
			switch (PlayerInfo[playerid][pVip])
			{
				case 0:
					{
						PlayerInfo[playerid][pSweeperTimer] = 35 * 60;
					}

				case 1:
					{
						PlayerInfo[playerid][pSweeperTimer] = 30 * 60;
					}

				case 2:
					{
						PlayerInfo[playerid][pSweeperTimer] = 25 * 60;
					}

				case 3:
					{
						PlayerInfo[playerid][pSweeperTimer] = 20 * 60;
					}
			}

			PlayerInfo[playerid][pBank] += cashToEarn;
			GivePlayerExp(playerid, 2);
			PlayerPassedJob(playerid, SIDEJOB_SWEEP);
		}
	}

	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	if (isStudyingDriveType[playerid] == 2)
	{
		if (IsPlayerInRangeOfPoint(playerid, 15.0, COURSE_A1_CHECK_1))
		{
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, 3, COURSE_A1_CHECK_2, COURSE_A1_CHECK_3, 8.0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 15.0, COURSE_A1_CHECK_2)) SetPlayerRaceCheckpoint(playerid, 3, COURSE_A1_CHECK_3, COURSE_A1_CHECK_4, 8.0);
		if (IsPlayerInRangeOfPoint(playerid, 15.0, COURSE_A1_CHECK_3)) SetPlayerRaceCheckpoint(playerid, 3, COURSE_A1_CHECK_4, COURSE_A1_CHECK_5, 8.0);
		if (IsPlayerInRangeOfPoint(playerid, 15.0, COURSE_A1_CHECK_4)) SetPlayerRaceCheckpoint(playerid, 3, COURSE_A1_CHECK_5, COURSE_A1_CHECK_6, 8.0);
		if (IsPlayerInRangeOfPoint(playerid, 15.0, COURSE_A1_CHECK_5)) SetPlayerRaceCheckpoint(playerid, 3, COURSE_A1_CHECK_6, COURSE_A1_CHECK_7, 8.0);
		if (IsPlayerInRangeOfPoint(playerid, 15.0, COURSE_A1_CHECK_6)) SetPlayerRaceCheckpoint(playerid, 3, COURSE_A1_CHECK_7, COURSE_A1_CHECK_FINALL, 8.0);
		if (IsPlayerInRangeOfPoint(playerid, 15.0, COURSE_A1_CHECK_7)) SetPlayerRaceCheckpoint(playerid, 4, COURSE_A1_CHECK_FINALL, COURSE_A1_CHECK_FINALL, 8.0);
		if (IsPlayerInRangeOfPoint(playerid, 15.0, COURSE_A1_CHECK_FINALL))
		{
			isStudyingDrive[playerid] = false;
			PlayerTimerInfo[playerid][ptDriverSchoolTimer] = 0;
			PlayerTimerInfo[playerid][ptDriverSchoolTaken] = 0;
			DisablePlayerRaceCheckpoint(playerid);
			TextDrawHideForPlayer(playerid, driverCourseText[playerid]);
			new Float: vehHealth;
			GetVehicleHealth(driverStudyVeh[playerid], vehHealth);
			if (IsValidVehicle(driverStudyVeh[playerid]))
			{
				DestroyVehicle(driverStudyVeh[playerid]);
			}

			if (PlayerTimerInfo[playerid][ptDriverSchoolTaken] >= 360)
			{
				SendClientMessage(playerid, COLOR_RED, "[DMV] Вие не стигнахте навреме и заради това не успяхте да вземете изпита.");
				SetPlayerPos(playerid, -2031.4067, -117.4425, 1035.1719);
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerInterior(playerid, 3);
				return 1;
			}

			if (vehHealth < 800)
			{
				SendClientMessage(playerid, COLOR_RED, "[DMV] Не успяхте да вземете изпита, понеже наранихте првозното средство твърде много.");
				SetPlayerPos(playerid, -2031.4067, -117.4425, 1035.1719);
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerInterior(playerid, 3);
				return 1;
			}

			SendClientMessage(playerid, COLOR_AUTOSCHOOL, "[DMV] Вие преминахте практичния тест.");
			SendClientMessage(playerid, COLOR_AUTOSCHOOL, "[DMV] Вече имате Helicopter License и можете да карате легално.");
			SetPlayerPos(playerid, -2031.4067, -117.4425, 1035.1719);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 3);
			PlayerInfo[playerid][pPlaneLicense] = 1;
			isStudyingDriveType[playerid] = 0;
		}
	}

	if (isStudyingDriveType[playerid] == 1)
	{
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_1)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_2, COURSE_GVL1_CHECK_3, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_2)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_3, COURSE_GVL1_CHECK_4, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_3)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_4, COURSE_GVL1_CHECK_5, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_4)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_5, COURSE_GVL1_CHECK_6, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_5)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_6, COURSE_GVL1_CHECK_7, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_6)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_7, COURSE_GVL1_CHECK_8, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_7)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_8, COURSE_GVL1_CHECK_9, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_8)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_9, COURSE_GVL1_CHECK_10, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_9)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_10, COURSE_GVL1_CHECK_11, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_10)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_11, COURSE_GVL1_CHECK_12, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_11)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_12, COURSE_GVL1_CHECK_13, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_12)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_13, COURSE_GVL1_CHECK_14, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_13)) SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_14, COURSE_GVL1_CHECK_FINALL, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_14)) SetPlayerRaceCheckpoint(playerid, 1, COURSE_GVL1_CHECK_FINALL, COURSE_GVL1_CHECK_FINALL, 4.0);
		if (IsPlayerInRangeOfPoint(playerid, 4.0, COURSE_GVL1_CHECK_FINALL))
		{
			isStudyingDrive[playerid] = false;
			PlayerTimerInfo[playerid][ptDriverSchoolTimer] = 0;
			PlayerTimerInfo[playerid][ptDriverSchoolTaken] = 0;
			DisablePlayerRaceCheckpoint(playerid);
			TextDrawHideForPlayer(playerid, driverCourseText[playerid]);
			new Float: vehHealth;
			GetVehicleHealth(driverStudyVeh[playerid], vehHealth);
			if (IsValidVehicle(driverStudyVeh[playerid]))
			{
				DestroyVehicle(driverStudyVeh[playerid]);
			}

			if (PlayerTimerInfo[playerid][ptDriverSchoolTaken] >= 360)
			{
				SendClientMessage(playerid, COLOR_RED, "[DMV] Вие не стигнахте навреме и заради това не успяхте да вземете изпита.");
				SetPlayerPos(playerid, -2031.4067, -117.4425, 1035.1719);
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerInterior(playerid, 3);
				return 1;
			}

			if (vehHealth < 800)
			{
				SendClientMessage(playerid, COLOR_RED, "[DMV] Не успяхте да вземете изпита, понеже наранихте првозното средство твърде много.");
				SetPlayerPos(playerid, -2031.4067, -117.4425, 1035.1719);
				SetPlayerVirtualWorld(playerid, 1);
				SetPlayerInterior(playerid, 3);
				return 1;
			}

			SendClientMessage(playerid, COLOR_AUTOSCHOOL, "[DMV] Вие преминахте практичния тест.");
			SendClientMessage(playerid, COLOR_AUTOSCHOOL, "[DMV] Вече имате Car License и можете да карате легално.");
			SetPlayerPos(playerid, -2031.4067, -117.4425, 1035.1719);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 3);
			PlayerInfo[playerid][pCarLicense] = 1;
			isStudyingDriveType[playerid] = 0;
		}
	}

	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(pickupid == InteractPickups[0])
	{
		if(PlayerTimerInfo[playerid][ptLastPickup] == 0)
		{
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{FFFFFF}1. Почисти улиците\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}2. Разнасяй пица\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}3. Работи в мината");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_SELECT_JOB, DIALOG_STYLE_LIST, "{5F63F0}Непознат: Търся работници", string2230result, "Напред", "Затвори");
			PlayerTimerInfo[playerid][ptLastPickup] = 7;
		}
	}
	
	if(pickupid == InteractPickups[1])
	{
		if(PlayerTimerInfo[playerid][ptLastPickup] == 0)
		{
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{FFFFFF}1. Стани механик\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}2. Стани таксиджия\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}3. Стани работник във Fuel Company");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_SELECT_JOB_2, DIALOG_STYLE_LIST, "{5F63F0}Работодател: Възможности за работа", string2230result, "Напред", "Затвори");
			PlayerTimerInfo[playerid][ptLastPickup] = 7;
		}
	}
	
	if (pickupid == pizzaJobPickup)
	{
		new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_PIZZA);
		new string256[256];
		if (PlayerInfo[playerid][pPizzaTimer] > 0)
		{
			format(string256, 256, "~g~PIZZA BOY SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK IN ~b~%d ~w~MINUTES", cashToEarn, PlayerInfo[playerid][pPizzaTimer] / 60);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
		else
		{
			format(string256, 256, "~g~PIZZA BOY SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK RIGHT NOW", cashToEarn);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
	}

	if (pickupid == sweepJobPickup)
	{
		new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_SWEEP);
		new string256[256];
		if (PlayerInfo[playerid][pSweeperTimer] > 0)
		{
			format(string256, 256, "~g~SWEEP SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK IN ~b~%d ~w~MINUTES", cashToEarn, PlayerInfo[playerid][pSweeperTimer] / 60);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
		else
		{
			format(string256, 256, "~g~SWEEP SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK RIGHT NOW", cashToEarn);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
	}

	if (pickupid == busJobPickup)
	{
		new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_BUS);
		new string256[256];
		if (PlayerInfo[playerid][pBusTimer] > 0)
		{
			format(string256, 256, "~g~BUS SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK IN ~b~%d ~w~MINUTES", cashToEarn, PlayerInfo[playerid][pBusTimer] / 60);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
		else
		{
			format(string256, 256, "~g~BUS SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK RIGHT NOW", cashToEarn);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
	}

	if (pickupid == deliverJobPickup)
	{
		new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_DELIVER);
		new string256[256];
		if (PlayerInfo[playerid][pDeliverTimer] > 0)
		{
			format(string256, 256, "~g~DELIVER SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK IN ~b~%d ~w~MINUTES", cashToEarn, PlayerInfo[playerid][pDeliverTimer] / 60);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
		else
		{
			format(string256, 256, "~g~DELIVER SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK RIGHT NOW", cashToEarn);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
	}

	if (pickupid == coalmineJobPickup)
	{
		new cashToEarn = GetPlayerJobCash(playerid, SIDEJOB_COALMINE);
		new string256[256];
		if (PlayerInfo[playerid][pCoalmineTimer] > 0)
		{
			format(string256, 256, "~g~COALMINE SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK IN ~b~%d ~w~MINUTES", cashToEarn, PlayerInfo[playerid][pCoalmineTimer] / 60);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
		else
		{
			format(string256, 256, "~g~COALMINE SIDE-JOB~n~~w~YOU CAN EARN ~y~$%d~w~~n~YOU CAN WORK RIGHT NOW", cashToEarn);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
	}

	if (pickupid == mechanicJobPickup)
	{
		GameTextForPlayer(playerid, "~g~MECHANIC JOB", 1500, 3);
	}

	if (pickupid == lsArmyArmour)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LS_ARMY)
		{
			SetArmourObjectToPlayer(playerid);
			SetPlayerArmour(playerid, 100);
		}
	}

	if (pickupid == lvArmyArmour)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LV_ARMY)
		{
			SetArmourObjectToPlayer(playerid);
			SetPlayerArmour(playerid, 100);
		}
	}

	if (pickupid == fbiArmour[0] || pickupid == fbiArmour[1])
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_FBI)
		{
			SetArmourObjectToPlayer(playerid);
			SetPlayerArmour(playerid, 100);
		}
	}

	if (pickupid == lspdArmour)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LSPD)
		{
			SetArmourObjectToPlayer(playerid);
			SetPlayerArmour(playerid, 100);
		}
	}

	if (pickupid == lvpdArmour)
	{
		if (PlayerInfo[playerid][pFaction] == FACTION_LVPD)
		{
			SetArmourObjectToPlayer(playerid);
			SetPlayerArmour(playerid, 100);
		}
	}

	if (isBizPickup[pickupid] == true)
	{
		new string256[356];
		new bizID = bizPickupIndex[pickupid];
		lastEnterPickupBIZ[playerid] = bizID;
		lastEnterPickupHOUSE[playerid] = -1;
		if (BizInfo[bizID][bOwner] == 0)
		{
			format(string256, 356, "~y~Bussines For Sale~n~~r~%s~n~~w~PRICE:~g~ $%d~n~ ~w~Level: ~b~%d ~n~~w~PAYOUT: ~g~$%d", BizInfo[bizID][bName], BizInfo[bizID][bPrice], BizInfo[bizID][bLevel], BizInfo[bizID][bPayOut]);
			GameTextForPlayer(playerid, string256, 1500, 3);
			return 1;
		}
		if (BizInfo[bizID][bOwner] == 1)
		{
			format(string256, 356, "~r~%s~n~~w~Owner:~g~ %s ~n~~w~Level: ~b~%d ~n~~w~PAYOUT: ~g~$%d", BizInfo[bizID][bName], BizInfo[bizID][bOwnerName], BizInfo[bizID][bLevel], BizInfo[bizID][bPayOut]);
			GameTextForPlayer(playerid, string256, 1500, 3);
			return 1;
		}
	}
	
	if (isHousePickup[pickupid] == true)
	{
		new houseID = housePickupIndex[pickupid];
		lastEnterPickupBIZ[playerid] = -1;
		lastEnterPickupHOUSE[playerid] = houseID;
		new string256[256];
		if (HouseInfo[houseID][hOwner] == 0)
		{
			if (HouseInfo[houseID][hInterior] == 1)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 2)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 1 ROOM~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 3)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 1 ROOM~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 4)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 5)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 6 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 6)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 7)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 8)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 9)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 10)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 11)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 12)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 13)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 14)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 15)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 16)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 9 ROOM~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 17)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 9 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 18)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 19)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 2 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 20)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 21)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 22)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 22 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 23)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 24)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 25)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}

			if (HouseInfo[houseID][hInterior] == 26)
			{
				format(string256, 256, "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d", HouseInfo[houseID][hPrice], HouseInfo[houseID][hLevel]);
				GameTextForPlayer(playerid, string256, 1500, 3);
			}
		}
		else
		{
			format(string256, 256, "~w~Owner:~g~ %s~n~~w~Level: ~b~ %d~n~", HouseInfo[houseID][hOwnerName], HouseInfo[houseID][hLevel]);
			GameTextForPlayer(playerid, string256, 1500, 3);
		}
	}

	for (new i; i < 11; i++)
	{
		if (pickupid == ATMPickup[i])
		{
			GameTextForPlayer(playerid, "~w~USE ~g~/atm~n~~n~~w~START ROB WITH ~g~/robatm", 1500, 3);
		}
	}

	for (new i; i < 16; i++)
	{
		if (pickupid == pressEnter[i])
		{
			GameTextForPlayer(playerid, "~w~PRESS ~r~ENTER", 1500, 3);
		}
	}

	if (pickupid == busTeleportExitPickup)
	{
		GameTextForPlayer(playerid, "~b~BUS~n~~w~PRESS ~r~ENTER ~w~TO EXIT", 1500, 3);
	}

	if (pickupid == kingringPickup)
	{
		GameTextForPlayer(playerid, "~w~PRESS ~y~Y ~w~TO WORK HERE~n~~b~WITHOUT A CONTRACT", 1500, 3);
	}

	if (pickupid == giftPickup)
	{
		GameTextForPlayer(playerid, "~p~~h~GIFTS~n~~w~TYPE ~y~/GIFT ~w~TO GET GIFT", 1500, 3);
	}

	if (pickupid == robberyStartPickup || pickupid == robberyStartPickup2)
	{
		GameTextForPlayer(playerid, "~r~ROBBERY START POINT~n~~w~TYPE ~y~/robbery ~w~TO START A ROB", 1500, 3);
	}

	if (pickupid == fineGunLicPickup)
	{
		GameTextForPlayer(playerid, "~b~POLICE~n~~w~USE ~y~/payfine ~w~TO PAY FINE~n~USE ~g~/buygunlic ~w~TO BUY A GUN LICENSE", 1500, 3);
	}

	if (pickupid == hospitalPickup)
	{
		GameTextForPlayer(playerid, "~r~HOSPITAL~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE", 1500, 3);
	}

	if (pickupid == hospital2Pickup)
	{
		GameTextForPlayer(playerid, "~r~HOSPITAL~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE", 1500, 3);
	}

	if (pickupid == bankPickup)
	{
		GameTextForPlayer(playerid, "~g~BANK~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE", 1500, 3);
	}

	if (pickupid == blackMarket)
	{
		GameTextForPlayer(playerid, "~r~BLACK MARKET~n~~w~TYPE ~r~/buy", 1500, 3);
	}

	if (pickupid == cityHall)
	{
		GameTextForPlayer(playerid, "~g~HALL~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE", 1500, 3);
	}

	if (pickupid == bikeShopPickup)
	{
		GameTextForPlayer(playerid, "~b~BIKE SHOP~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE", 1500, 3);
	}

	if (pickupid == taxiPickup)
	{
		GameTextForPlayer(playerid, "~y~TAXI JOB~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE", 1500, 3);
	}

	if (pickupid == telenorPickup)
	{
		GameTextForPlayer(playerid, "~b~~h~TELENOR~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE", 1500, 3);
	}

	if (pickupid == paintballPickup)
	{
		GameTextForPlayer(playerid, "~r~PAINTBALL~n~~w~USE ~r~/joinpaintball ~w~TO ENTER", 1500, 3);
	}

	if (pickupid == lspdPickup)
	{
		GameTextForPlayer(playerid, "~b~POLICE~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE", 1500, 3);
	}

	if (pickupid == lvpdPickup)
	{
		GameTextForPlayer(playerid, "~b~POLICE~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE", 1500, 3);
	}

	if (pickupid == newsPickup[0])
	{
		GameTextForPlayer(playerid, "~p~THE NEWS BUILDING~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE", 1500, 3);
	}

	if (pickupid == dmvPickup)
	{
		GameTextForPlayer(playerid, "~p~DRIVING SCHOOL~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE", 1500, 3);
	}

	if (pickupid == fbiPickup[0] || pickupid == fbiPickup[1])
	{
		GameTextForPlayer(playerid, "~p~Federal Bureau Of Investigation~n~~w~PRESS ~r~ENTER ~w~TO GO INSIDE", 1500, 3);
	}

	if (pickupid == buyBikePickup)
	{
		GameTextForPlayer(playerid, "~b~BIKE SHOP~n~~w~USE ~y~/buyveh", 1500, 3);
	}

	if (pickupid == buyTelenorPickup)
	{
		GameTextForPlayer(playerid, "~b~TELENOR~n~~w~USE ~y~/buy", 1500, 3);
	}

	if (pickupid == RobPickup)
	{
		GameTextForPlayer(playerid, "~g~TO START STEALING MONEY~w~~n~TYPE /rob", 1500, 3);
	}

	if (pickupid == buyCarPickup)
	{
		GameTextForPlayer(playerid, "~b~CAR SHOP~n~~w~USE ~y~/buyveh", 1500, 3);
	}

	if (pickupid == bankPickupDollar)
	{
		GameTextForPlayer(playerid, "~g~LOS SANTOS BANK~n~~n~~w~USE ~y~/bank", 1500, 3);
	}

	if (pickupid == OfficePickup)
	{
		GameTextForPlayer(playerid, "~w~LOS SANTOS OFFICE CENTER~n~~n~~g~TO BUY A OFFICE: ~r~/buyoffice", 2000, 3);
		return 1;
	}

	if (pickupid == documentsPickup)
	{
		GameTextForPlayer(playerid, "~g~HALL~n~~w~PRESS ~y~Y ~w~TO GET DOCUMENTS", 1500, 3);
	}

	if (pickupid == driverLicPickup)
	{
		GameTextForPlayer(playerid, "~g~DEPARTMENT OF MOTOR VEHICLES~n~~n~~w~TEST CENTER~n~~n~~w~PRESS ~b~Y ~w~FOR COURSE", 1500, 3);
	}

	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	if (pickupid == BIZPICKUP[0])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~g~GENERAL STORE~n~        ~w~Use /BUY");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[1])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~b~BAR~n~~w~    Use /DRINK");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[2])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~b~BAR~n~~w~    Use /DRINK");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[3])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~g~GENERAL STORE~n~        ~w~Use /BUY");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[4])
	{
		TextDrawSetString(CommandInfo[playerid], "              ~r~AMMUNATION~n~~w~    Use /BUYGUN /BUYARMOUR ($450)");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[5])
	{
		TextDrawSetString(CommandInfo[playerid], "              ~r~AMMUNATION~n~~w~    Use /BUYGUN /BUYARMOUR ($450)");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[6])
	{
		TextDrawSetString(CommandInfo[playerid], "              ~r~AMMUNATION~n~~w~    Use /BUYGUN /BUYARMOUR ($450)");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[7])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~g~GENERAL STORE~n~        ~w~Use /BUY");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[8])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~p~CLOTHES STORE~n~~w~    Use /BUYCLOTHES");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[9])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~p~CLOTHES STORE~n~~w~    Use /BUYCLOTHES");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[10])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~y~FOOD STORE~n~~w~    Use /buyfood");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[11])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~y~FOOD STORE~n~~w~    Use /buyfood");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[12])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~y~FOOD STORE~n~~w~    Use /buyfood");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[13])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~p~FISHING STORE~n~~w~Use /buy /sellfish /sellcrate");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[14])
	{
		TextDrawSetString(CommandInfo[playerid], "               ~g~GYM~n~~w~            Use /train");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == BIZPICKUP[15])
	{
		TextDrawSetString(CommandInfo[playerid], "               ~g~GYM~n~~w~            Use /train");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == FOODPICKUP[0])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~y~FOOD AND DRINKS~n~~w~    Use /buyfood");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == FOODPICKUP[1])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~y~FOOD AND DRINKS~n~~w~    Use /buyfood");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	if (pickupid == FOODPICKUP[2])
	{
		TextDrawSetString(CommandInfo[playerid], "    ~y~FOOD AND DRINKS~n~~w~    Use /buyfood");
		TextDrawShowForPlayer(playerid, CommandInfo[playerid]);
		PlayerTimerInfo[playerid][ptHideCommandInfo] = 2;
		return 1;
	}

	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if (VehicleInfo[vehicleid][vIsPrivate] == 1)
	{
		new privateVehID = VehicleInfo[vehicleid][vPrivateID];
		PrivateVehInfo[privateVehID][vVehPaintJob] = paintjobid;
	}

	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}

stock SendInCarMessage(playerid, COLOR, string[])
{
	new vehID = GetPlayerVehicleID(playerid);
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (GetPlayerVehicleID(i) == vehID)
		{
			SendClientMessage(i, COLOR, string);
		}
	}
}

stock SendLocalMessageExceptPlayerid(Float: cor, playerid, COLOR, string[])
{
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (i != playerid)
		{
			if (CorDetector(cor, i, playerid))
			{
				if (GetPlayerInterior(playerid) == GetPlayerInterior(i))
				{
					if (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
					{
						SendClientMessage(i, COLOR, string);
					}
				}
			}
		}
	}
}

stock SendLocalMessage(Float: cor, playerid, COLOR, string[])
{
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (CorDetector(cor, i, playerid))
		{
			if (GetPlayerInterior(playerid) == GetPlayerInterior(i))
			{
				if (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
				{
					SendClientMessage(i, COLOR, string);
				}
			}
		}
	}
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	//BIZ - open
	if (newkeys & 16)
	{
		new bizID = lastEnterPickupBIZ[playerid];
		if(bizID != -1)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, BizInfo[bizID][bX], BizInfo[bizID][bY], BizInfo[bizID][bZ]))
			{
				EnterInBiz(playerid, bizID);
			}
		}
	}
	
	if (newkeys & 16)
	{
	if(inBiz[playerid] != -1)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3, -27.3025, -57.6649, 1003.5469) ||
				IsPlayerInRangeOfPoint(playerid, 3, 501.980987, -69.150199, 998.757812) ||
				IsPlayerInRangeOfPoint(playerid, 3, -2026.9447, -103.6024, 1035.1832) ||
				IsPlayerInRangeOfPoint(playerid, 3, 296.8089, -112.0065, 1001.5156) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1260.6464, -785.4418, 1091.9063) ||
				IsPlayerInRangeOfPoint(playerid, 3, -27.3512, -31.7518, 1003.5573) ||
				IsPlayerInRangeOfPoint(playerid, 3, 207.054992, -138.804992, 1003.507812) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1494.4723, 1303.5813, 1093.2891) ||
				IsPlayerInRangeOfPoint(playerid, 3, 362.8670, -75.1642, 1001.5078) ||
				IsPlayerInRangeOfPoint(playerid, 3, 834.6642, 7.5311, 1004.1870) ||
				IsPlayerInRangeOfPoint(playerid, 3, -25.9455, -141.5480, 1003.5469) ||
				IsPlayerInRangeOfPoint(playerid, 3, 203.7447, -50.6649, 1001.8047) ||
				IsPlayerInRangeOfPoint(playerid, 3, 285.9084, -86.7750, 1001.5229) ||
				IsPlayerInRangeOfPoint(playerid, 3, 315.7523, -143.6341, 999.6016) ||
				IsPlayerInRangeOfPoint(playerid, 3, 493.4793, -24.9576, 1000.6719) ||
				IsPlayerInRangeOfPoint(playerid, 3, 744.6210, 1436.3411, 1102.7031) ||
				IsPlayerInRangeOfPoint(playerid, 3, 773.9693, -78.8193, 1000.6628) ||
				IsPlayerInRangeOfPoint(playerid, 3, 774.1560, -50.4766, 1000.5859) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1133.2222, -15.8171, 1000.6797) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1204.7975, -13.8216, 1000.9219) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1306.8253, 3.2698, 1001.0272) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2018.6144, 1017.7792, 996.8750) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2234.1011, 1714.4489, 1012.3828) ||
				IsPlayerInRangeOfPoint(playerid, 3, -229.1534, 1401.3180, 27.7656) ||
				IsPlayerInRangeOfPoint(playerid, 3, 377.0852, -193.3047, 1000.6328) ||
				IsPlayerInRangeOfPoint(playerid, 3, 364.9964, -11.8438, 1001.8516) ||
				IsPlayerInRangeOfPoint(playerid, 3, 460.5563, -88.6419, 999.5547) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1727.7561, -1638.0088, 20.2230) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2541.9399, -1304.0100, 1025.0703) ||
				IsPlayerInRangeOfPoint(playerid, 3, -1395.4200, 1245.6000, 1039.8672) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1781.7737, 1650.2898, -12.8729))
			{
				new alb = inBiz[playerid];
				if (GetPlayerVirtualWorld(playerid) == alb + 500)
				{
					if (BizInfo[alb][bLocked] == 1)
					{
						return SendClientMessage(playerid, COLOR_WHITE, "Бизнесът е заключен и не можеш да излезеш !");
					}
					inBiz[playerid] = -1;
					SetPlayerPos(playerid, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]);
					SetPlayerInterior(playerid, 0);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
		}
	}
	//BIZ - close
	
	//HOUSE - open
	if (newkeys & 16)
	{
		new houseID = lastEnterPickupHOUSE[playerid];
		if(houseID != -1)
		{
			if (IsPlayerInRangeOfPoint(playerid, 3, HouseInfo[houseID][hX], HouseInfo[houseID][hY], HouseInfo[houseID][hZ]))
			{
				EnterInHouse(playerid, houseID);
			}
		}
	}
	
	if(newkeys & 16)
	{
		if(inHouse[playerid] != -1)
		{
		if (IsPlayerInRangeOfPoint(playerid, 3, 2324.5479, -1149.5146, 1050.7101) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2270.3855, -1210.4730, 1047.5625) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2196.8506, -1204.2477, 1049.0234) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2468.8413, -1698.4177, 1013.5078) ||
				IsPlayerInRangeOfPoint(playerid, 3, 1260.6464, -785.4418, 1091.9063) ||
				IsPlayerInRangeOfPoint(playerid, 3, 327.9635, 1477.7430, 1084.4375) ||
				IsPlayerInRangeOfPoint(playerid, 3, 318.5932, 1114.4792, 1083.8828) ||
				IsPlayerInRangeOfPoint(playerid, 3, 309.0916, 313.6412, 1003.3047) ||
				IsPlayerInRangeOfPoint(playerid, 3, 261.0904, 1284.2944, 1080.2578) ||
				IsPlayerInRangeOfPoint(playerid, 3, 226.2984, 1114.3319, 1080.9929) ||
				IsPlayerInRangeOfPoint(playerid, 3, 225.8726, 1021.4523, 1084.0177) ||
				IsPlayerInRangeOfPoint(playerid, 3, 223.1015, 1287.0764, 1082.1406) ||
				IsPlayerInRangeOfPoint(playerid, 3, 140.2254, 1365.9796, 1083.8594) ||
				IsPlayerInRangeOfPoint(playerid, 3, 83.0758, 1322.2808, 1083.8662) ||
				IsPlayerInRangeOfPoint(playerid, 3, -68.7704, 1352.9250, 1080.2109) ||
				IsPlayerInRangeOfPoint(playerid, 3, -42.5628, 1405.5011, 1084.4297) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2495.98, -1692.08, 1014.74) ||
				IsPlayerInRangeOfPoint(playerid, 3, 83.03, 1322.28, 1083.87) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2807.48, -1174.76, 1025.57) ||
				IsPlayerInRangeOfPoint(playerid, 3, 260.85, 1237.24, 1084.26) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2237.59, -1081.64, 1049.02) ||
				IsPlayerInRangeOfPoint(playerid, 3, 446.99, 1397.07, 1084.30) ||
				IsPlayerInRangeOfPoint(playerid, 3, 377.15, 1417.41, 1081.33) ||
				IsPlayerInRangeOfPoint(playerid, 3, 2308.77, -1212.94, 1049.02) ||
				IsPlayerInRangeOfPoint(playerid, 3, 243.72, 304.91, 999.15) || IsPlayerInRangeOfPoint(playerid, 3, 2283.04, -1140.28, 1050.90))
			{
				new alh = inHouse[playerid];
				if (GetPlayerVirtualWorld(playerid) == alh + 50)
				{
					if (HouseInfo[alh][hLocked] == 1)
					{
						return SendClientMessage(playerid, COLOR_HOUSE, "Къщата е заключена и не можеш да излезеш !");
					}
					inHouse[playerid]=-1;
					SetPlayerPos(playerid, HouseInfo[alh][hX], HouseInfo[alh][hY], HouseInfo[alh][hZ]);
					SetPlayerInterior(playerid, 0);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, 0);
				}
			}
		}
	}
	//HOUSE - close
	
	//anti dm - open
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if(( newkeys & KEY_FIRE || (oldkeys & 128 && newkeys & 16)))
		{
			if(AntiDm(playerid,GetPlayerWeapon(playerid)) == 2) return true;
		}
	}
	//anti dm - close
	//anti bunny hop - open
	if (GetPVarInt(playerid, "UseAnim") == 0 && IsPlayerInAnyVehicle(playerid) == 0 && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
	{
		if (Holding(KEY_SPRINT))
		{
			if (Pressed(KEY_JUMP))
			{
				new Float: X, Float: Y, Float: Z;
				GetPlayerPos(playerid, X, Y, Z);
				SetPlayerPos(playerid,X,Y,Z); 	//Anti Bunny Hop
				ApplyAnimation(playerid,"ped","FALL_COLLAPSE",4.1,0,1,1,0,0,1);	//Anti Bunny Hop
			}
		}
	}

	//anti bunny hop - close
	//inventory - open
	if (newkeys & 65536)
	{
		if (spawned[playerid] == true && isOnFoot[playerid] == true)
		{
			//OpenInventory(playerid);
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{5F63F0}[{FFFFFF}1{5F63F0}] {FFFFFF}Статистика на персонажа\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{5F63F0}[{FFFFFF}2{5F63F0}] {FFFFFF}GPS Навигатор\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{5F63F0}[{FFFFFF}3{5F63F0}] {FFFFFF}Телефон\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{5F63F0}[{FFFFFF}4{5F63F0}] {FFFFFF}Инвентар на персонажа\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{5F63F0}[{FFFFFF}5{5F63F0}] {FFFFFF}Помощно меню		[{2ADA25}Учебник{FFFFFF}]\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{5F63F0}[{FFFFFF}6{5F63F0}] {FFFFFF}Всички команди		[{2ADA25}Учебник{FFFFFF}]\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{5F63F0}[{FFFFFF}7{5F63F0}] {FFFFFF}Как се играе		[{2ADA25}Учебник{FFFFFF}]\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{5F63F0}[{FFFFFF}8{5F63F0}] {FFFFFF}Правилник			[{FF0000}Важно{FFFFFF}]\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{5F63F0}[{FFFFFF}9{5F63F0}] {FFFFFF}Настройки			[{FF0000}Важно{FFFFFF}]\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{5F63F0}[{FFFFFF}10{5F63F0}] {FFFFFF}Ваучерите на персонажа\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{5F63F0}[{FFFFFF}11{5F63F0}] {FFFFFF}Платените услуги\n");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_MY_MENU, DIALOG_STYLE_LIST, "{5F63F0}Лично меню на персонажа", string2230result, "Напред", "Затвори");
		}
	}

	//inventory - close
	//ports, gates - open
	if (newkeys & KEY_SUBMISSION)
	{
		if (IsPlayerInRangeOfPoint(playerid, 2.0, 1583.2211, -1637.3295, 13.3905))
		{
			gateopening[playerid] = true;
			if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LSPD!");
			lspdGateDoorTimer = 10;
			MoveDynamicObject(lspdGateDoor, 1581.937133, -1637.983764, 9.981795, 2.0, 0.000000, 0.000000, -87.099975);
			SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
		}
	}

	if (IsPlayerInRangeOfPoint(playerid, 10.0, 1542.8047, -1627.7461, 13.3828))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LSPD!");
				lspdPortTimer = 10;
				MoveDynamicObject(lspdPort, 1544.74634, -1630.74500, 13.01674, 2, 1.00000, 11.0000, -89.20010);
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LSPD!");
				lspdPortTimer = 10;
				MoveDynamicObject(lspdPort, 1544.74634, -1630.74500, 13.01674, 2, 1.00000, 11.0000, -89.20010);
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
			}
		}
	}

	//LV Army - open
	if (IsPlayerInRangeOfPoint(playerid, 10.0, 136.5198, 1941.1293, 19.3139))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LV Army!");
				armyLvPort1Timer = 10;
				MoveDynamicObject(armyLvPort1, 135.142593, 1941.479492, 15.087491, 5.00, 0, 0, 0);
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LV Army!");
				armyLvPort1Timer = 10;
				MoveDynamicObject(armyLvPort1, 135.142593, 1941.479492, 15.087491, 5.00, 0, 0, 0);
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
			}
		}
	}

	if (IsPlayerInRangeOfPoint(playerid, 10.0, 285.2253, 1820.8843, 17.6406))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LV Army!");
				armyLvPort2Timer = 10;
				MoveDynamicObject(armyLvPort2, 285.723236, 1820.534057, 13.034932, 5.00, 0, 0, 89.800071);
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LV Army!");
				armyLvPort2Timer = 10;
				MoveDynamicObject(armyLvPort2, 285.723236, 1820.534057, 13.034932, 5.00, 0, 0, 89.800071);
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
			}
		}
	}

	//LV Army - close

	//LS Army - open
	if (IsPlayerInRangeOfPoint(playerid, 10.0, 837.3369, -2074.3181, 12.8527))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LS Army!");
				armyLsPort1Timer = 10;
				MoveDynamicObject(armyLsPort1, 836.487792, -2069.757812, 6.618954, 5.00, 0, 0, 0);
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LS Army!");
				armyLsPort1Timer = 10;
				MoveDynamicObject(armyLsPort1, 836.487792, -2069.757812, 6.618954, 5.00, 0, 0, 0);
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
			}
		}
	}

	if (IsPlayerInRangeOfPoint(playerid, 10.0, 837.2773, -2030.8582, 12.8672))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LS Army!");
				armyLsPort2Timer = 10;
				MoveDynamicObject(armyLsPort2, 836.365417, -2027.369750, 6.646684, 5.00, 0, 0, 0);
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LS Army!");
				armyLsPort2Timer = 10;
				MoveDynamicObject(armyLsPort2, 836.365417, -2027.369750, 6.646684, 5.00, 0, 0, 0);
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
			}
		}
	}

	//LS Army - close

	if (IsPlayerInRangeOfPoint(playerid, 10.0, 1588.2328, -1635.5154, 13.3828))
	{
		if (IsPlayerInAnyVehicle(playerid))
		{
			if (newkeys & 262144)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LSPD!");
				lspdGateTimer = 10;
				MoveDynamicObject(lspdGate, 1588.6683, -1638.3994, 10.2556, 2, 0.0000, 0.0000, -90.6001);
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
			}
		}
		else
		{
			if (newkeys & KEY_SUBMISSION)
			{
				gateopening[playerid] = true;
				if (PlayerInfo[playerid][pFaction] != FACTION_LSPD) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си член на LSPD!");
				lspdGateTimer = 10;
				MoveDynamicObject(lspdGate, 1588.6683, -1638.3994, 10.2556, 2, 0.0000, 0.0000, -90.6001);
				SendClientMessage(playerid, COLOR_LIGHTGREEN6, "[INFO] Бариерата ще се затвори след 10 секунди");
			}
		}
	}

	//ports, gates - close
	//items - open
	if (newkeys & KEY_YES)
	{
		if (Item_Nearest(playerid) != -1)
		{
			new itemid = Item_Nearest(playerid);
			PickupItem(playerid, itemid);
		}
	}

	//items - close
	//drug dealers - open
	if (newkeys & KEY_YES)
	{
		if (IsPlayerInRangeOfPoint(playerid, 5, DrugPoint))
		{
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{FFFFFF}1. Кокаин: $45 на грам\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}2. Марихуана: $55 на грам\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}3. Хероин: $65 на грам\n");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_BUYDRUG, DIALOG_STYLE_LIST, "{FF4D4D}Дилър на дрога", string2230result, "Напред", "Затвори");
		}
	}

	//drug dealers - close
	//change job - open
	//change job - close
	//radio - open
	if (IsPlayerDriver(playerid))
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if (newkeys &KEY_ANALOG_UP && VehicleTimerInfo[vehicleid][vtRadioChange] == 0)
		{
			if (radioveh[vehicleid] < sizeof(radioAudioStreamNames))
			{
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				radioveh[vehicleid]++;
				VehicleTimerInfo[vehicleid][vtRadioChange] = 1;
				new string256[256];
				new accountNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, accountNickname, 25);
				format(string256, 256, "[Radio] {ffffff}%s смени радиостанцията", RealName(playerid));
				SendInCarMessage(playerid, COLOR_RADIO, string256);
			}
			else
			{
				PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
			}
		}
		else if (newkeys &KEY_ANALOG_DOWN && VehicleTimerInfo[vehicleid][vtRadioChange] == 0)
		{
			if (radioveh[vehicleid] > 0)
			{
				PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
				radioveh[vehicleid]--;
				VehicleTimerInfo[vehicleid][vtRadioChange] = 1;
				new string256[256];
				new accountNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, accountNickname, 25);
				format(string256, 256, "[Radio] {ffffff}%s смени радиостанцията", RealName(playerid));
				SendInCarMessage(playerid, COLOR_RADIO, string256);
			}
			else
			{
				PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
			}
		}
	}

	//radio - close
	if (newkeys & KEY_YES)
	{
		if (IsPlayerInRangeOfPoint(playerid, 5.0, 1535.3966, -1712.6166, 13.5469))
		{
			ShowPlayerDialog(playerid, DIALOG_LOTTO, DIALOG_STYLE_LIST, "Лотария", "{ffffff}1. Лотария на момента - {40BF00}$15\n{ffffff}2. Лотария на всеки час (San Andreas Lottery) - {40BF00}$10", "Избери", "Затвори");
		}
	}

	//lottery - close
	if (newkeys & 131072)
	{
		if (!IsPlayerInAnyVehicle(playerid) && cuffed[playerid] == false)
		{
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{ff0000}Премахни движенията\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{ffff00}Смей се\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{ffff00}Огледай се\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{ffff00}Кръстосай ръце\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{ffff00}Гнуси се\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{ffff00}Псувай\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{ffff00}Разговаряй\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{ffff00}Танцувай ID 1\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{ffff00}Танцувай ID 2\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{ffff00}Танцувай ID 3\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{ffff00}Дигни ръце\n");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_SELECT_ANIMATION, DIALOG_STYLE_LIST, "{FFFFFF}Движения", string2230result, "{ffffff}Направи го", "Отказ");
		}

		if (IsPlayerInAnyVehicle(playerid) && IsPlayerDriver(playerid))
		{
			if (GetVehicleModel(GetPlayerVehicleID(playerid)) != 481 &&
				GetVehicleModel(GetPlayerVehicleID(playerid)) != 509 &&
				GetVehicleModel(GetPlayerVehicleID(playerid)) != 510 &&
				GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
			{
				new string256[256];
				format(string256, 256, "{88C864}Багажник\n{88C864}Фарове\n{88C864}Аларма\n{88C864}Капак");
				ShowPlayerDialog(playerid, DIALOG_VEHMENU, DIALOG_STYLE_LIST, "         ", string256, "Напред", "Излез");
			}
		}
	}

	//county hall - open
	if (newkeys & 16)
	{
		//CITY HALLS - INTERIOR
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 231.5891, 2348.4021, 1017.1257) && GetPlayerInterior(playerid) == 3 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pIdentifyCard] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си вземеш лична карта първо, преди да излезеш!");
			SetPlayerPos(playerid, 1481.0225, -1772.3137, 18.7958);
			SetPlayerFacingAngle(playerid, 358.7897);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}
		
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 231.5891, 2348.4021, 1017.1257) && GetPlayerInterior(playerid) == 3 && GetPlayerVirtualWorld(playerid) == 2)
		{
			if (PlayerInfo[playerid][pIdentifyCard] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си вземеш лична карта първо, преди да излезеш!");
			SetPlayerPos(playerid, 382.0412,-1810.1704,7.8313);
			SetPlayerFacingAngle(playerid, 184.8654);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			SetSpawnRandomAnim(playerid);
		}
		//CITY HALLS - EXTERIOR
		
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1481.0225, -1772.3137, 18.7958) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 231.5891, 2348.4021, 1017.1257);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 3);
		}

		//county hall - close
		//bikeshop - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 701.7798, -510.9636, -5.5826) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 501)
		{
			SetPlayerPos(playerid, 701.7157, -518.4803, 16.3245);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 701.7157, -518.4803, 16.3245) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			PlayerTimerInfo[playerid][ptUnfreeze] = 2;
			TogglePlayerControllable(playerid, 0);
			SetPlayerPos(playerid, 701.7798, -510.9636, -5.5826);
			SetPlayerVirtualWorld(playerid, 501);
			SetPlayerInterior(playerid, 1);
		}

		//bikeshop - close
		//lspd police - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1554.3608, -1674.6322, 2113.0349) && GetPlayerInterior(playerid) == 6 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 1555.5004, -1675.5570, 16.1953);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1555.5004, -1675.5570, 16.1953) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1554.3608, -1674.6322, 2113.0349);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
			FreezeAntiDropOnSpawn(playerid);
		}

		//lspd police - close
		//lvpd police - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1568.0807, -1672.6967, 2982.2800) && GetPlayerInterior(playerid) == 6 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 2287.1235, 2432.0078, 10.8203);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2287.1235, 2432.0078, 10.8203) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1568.0807, -1672.6967, 2982.2800);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
			FreezeAntiDropOnSpawn(playerid);
		}

		//lvpd police - close
		//telenor - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1851.9668, -1843.7668, 34.8882) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 1154.7313, -1458.0173, 15.7969);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1154.7313, -1458.0173, 15.7969) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1851.9668, -1843.7668, 34.8882);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 1);
			FreezeAntiDropOnSpawn(playerid);
		}

		//telenor - close

		//taxi - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1839.1335, 653.5633, 29.2490) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 1796.5181, -1937.3527, 13.5469);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1796.5181, -1937.3527, 13.5469) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1839.1335, 653.5633, 29.2490);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 1);
			FreezeAntiDropOnSpawn(playerid);
		}

		//taxi - close

		//teleport bus - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2021.9185, 2235.1279, 2103.9536))
		{
			if (busTeleportTimer[playerid] > 0) return SendClientMessage(playerid, COLOR_ERROR, "Автобусът все още пътува, изчакайте малко.");
			if (inBusTeleportVehIndex[playerid] == 1)
			{
				SetPlayerPos(playerid, 2280.1428, 2395.9788, 10.8203);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (inBusTeleportVehIndex[playerid] == 2)
			{
				SetPlayerPos(playerid, -287.8196, 1519.5582, 75.3594);
				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
			}
		}

		//teleport bus - close

		//triads - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1924.3322, 959.7982, 10.8203) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_TRIADS) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 2196.8513, -1204.4027, 1049.0234);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2196.8513, -1204.4027, 1049.0234) && GetPlayerInterior(playerid) == 6 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_TRIADS) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 1924.3322, 959.7982, 10.8203);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//triads - close

		//aztecas - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1870.7598, -2019.6267, 13.5469) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_AZTECAS) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 2237.5168, -1081.1450, 1049.0234);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 2);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2237.5168, -1081.1450, 1049.0234) && GetPlayerInterior(playerid) == 2 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_AZTECAS) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 1870.7598, -2019.6267, 13.5469);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//aztecas - close
		//italian mafia - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1456.1323, 2773.3992, 10.8203) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_ITALIAN_MAFIA) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 447.0938, 1397.3625, 1084.3047);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 2);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 447.0938, 1397.3625, 1084.3047) && GetPlayerInterior(playerid) == 2 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_ITALIAN_MAFIA) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 1456.1323, 2773.3992, 10.8203);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//italian mafia - close
		//grove - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2495.3496, -1690.8401, 14.7656) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_GROVE) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 2495.9983, -1692.9227, 1014.7422);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 3);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2495.9983, -1692.9227, 1014.7422) && GetPlayerInterior(playerid) == 3 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_GROVE) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 2495.3496, -1690.8401, 14.7656);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//grove - close
		//crip - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 300.3634, -1154.5724, 81.3906) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_CRIP) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 140.1744, 1366.1003, 1083.8594);
			SetPlayerVirtualWorld(playerid, 2);
			SetPlayerInterior(playerid, 5);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 140.1744, 1366.1003, 1083.8594) && GetPlayerInterior(playerid) == 5 && GetPlayerVirtualWorld(playerid) == 2)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_CRIP) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 300.3634, -1154.5724, 81.3906);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//crip - close
		//ru-mafia - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1122.7068, -2036.9517, 69.8942) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_RUSSIAN_MAFIA) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 225.8751, 1021.7491, 1084.0168);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 7);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 225.8751, 1021.7491, 1084.0168) && GetPlayerInterior(playerid) == 7 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_RUSSIAN_MAFIA) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 1122.7068, -2036.9517, 69.8942);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//ru-mafia - close
		//vagos - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2186.4338, -997.3134, 66.4688) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_VAGOS) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 140.1744, 1366.1003, 1083.8594);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 5);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 140.1744, 1366.1003, 1083.8594) && GetPlayerInterior(playerid) == 5 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_VAGOS) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 2186.4338, -997.3134, 66.4688);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//vagos - close
		//ballas - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2166.0020, -1671.1249, 15.0732) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_BALLAS) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 318.5366, 1114.6714, 1083.8828);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 5);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 318.5366, 1114.6714, 1083.8828) && GetPlayerInterior(playerid) == 5 && GetPlayerVirtualWorld(playerid) == 1)
		{
			if (PlayerInfo[playerid][pFaction] != FACTION_BALLAS) return SendClientMessage(playerid, COLOR_GRAD2, "Вие нямате ключовете за тази сграда!");
			SetPlayerPos(playerid, 2166.0020, -1671.1249, 15.0732);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//ballas - close
		//fbi - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1565.4529, -1693.0446, 62.1910) && GetPlayerInterior(playerid) == 5 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 326.1825, -1513.9746, 36.0325);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 326.1825, -1513.9746, 36.0325) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1565.4529, -1693.0446, 62.1910);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 5);
			FreezeAntiDropOnSpawn(playerid);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1565.4529, -1693.0446, 62.1910) && GetPlayerInterior(playerid) == 6 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, -329.7000, 1537.0417, 76.6117);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, -329.7000, 1537.0417, 76.6117) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1565.4529, -1693.0446, 62.1910);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 6);
			FreezeAntiDropOnSpawn(playerid);
		}

		//fbi - close
		//bank - open

		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1405.9008, -1680.4558, 51.2845) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 1412.0486, -1699.9275, 13.5395);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 1.0, 1412.0486, -1699.9275, 13.5395) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1405.9008, -1680.4558, 51.2845);
			PlayerTimerInfo[playerid][ptUnfreeze] = 2;
			TogglePlayerControllable(playerid, 0);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 0);
		}

		//bank - close
		//autoschool - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, -2026.8644, -103.6019, 1035.1835) && GetPlayerInterior(playerid) == 3 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 1111.5974, -1795.6440, 16.5938);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1111.5974, -1795.6440, 16.5938) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, -2026.8644, -103.6019, 1035.1835);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 3);
		}

		//autoschool - close
		//hospital - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1402.7703, -25.7659, 1000.8640) && GetPlayerInterior(playerid) == 3 && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 1172.0785, -1323.4440, 15.4032);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1172.0785, -1323.4440, 15.4032) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1402.7703, -25.7659, 1000.8640);
			PlayerTimerInfo[playerid][ptUnfreeze] = 2;
			TogglePlayerControllable(playerid, 0);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 3);
		}

		//hospital - close
		//hospital 2 - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, -204.4778, -1735.6512, 675.7687) && GetPlayerInterior(playerid) == 1)
		{
			if (PlayerInfo[playerid][pInHospital] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Първо трябва да се излекуваш, като имаш 100 точки живот, за да излезеш!");
				return 1;
			}

			SetPlayerPos(playerid, 2034.1549, -1402.1107, 17.2946);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 2034.1549, -1402.1107, 17.2946) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, -204.4778, -1735.6512, 675.7687);
			PlayerTimerInfo[playerid][ptUnfreeze] = 2;
			TogglePlayerControllable(playerid, 0);
			SetCameraBehindPlayer(playerid);
			SetPlayerVirtualWorld(playerid, 1);
			SetPlayerInterior(playerid, 1);
		}

		//hospital 2 - close
		//the news - open
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 1654.2100, -1654.7755, 22.5156) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 3190.9485, -1762.9432, 3001.0859);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			FreezeAntiDropOnSpawn(playerid);
		}

		if (IsPlayerInRangeOfPoint(playerid, 3.0, 3190.9485, -1762.9432, 3001.0859) && GetPlayerInterior(playerid) == 0 && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 1654.2100, -1654.7755, 22.5156);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
		}

		//the news - close
	}

	if (newkeys & 1 && gateopening[playerid] == false)
	{
		if (IsPlayerInAnyVehicle(playerid) && IsPlayerDriver(playerid))
		{
			new vehModel = GetVehicleModel(GetPlayerVehicleID(playerid));
			if (IsNoFuelVehicle(vehModel) == 0)
			{
				if (PlayerTimerInfo[playerid][ptTurnEngine] == 0)
				{
					new vehicleID = GetPlayerVehicleID(playerid);
					new accountNickname[MAX_PLAYER_NAME];
					GetPlayerName(playerid, accountNickname, 25);
					PlayerTimerInfo[playerid][ptTurnEngine] = 3;
					if (vehEngineStatusON[vehicleID] == true)
					{
						if (isVehicleToggleEngineForb(vehicleID)) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изключиш двигателя на това превозно средство.");
						ToggleEngine(vehicleID, VEHICLE_PARAMS_OFF);
						vehEngineStatusON[vehicleID] = false;
						new string256[256];
						format(string256, 256, "* %s завъртя ключовете и изключи двигателя. *", RealName(playerid));
						SendLocalMessage(8.0, playerid, COLOR_LIGHTPURPLE4, string256);
						format(string256, 256, "> Двигателят е {FF0000}Изключен");
						SendInCarMessage(playerid, COLOR_WHITE, string256);
					}
					else
					{
						if (vehFuel[vehicleID] <= 0) return SendClientMessage(playerid, COLOR_GRAD1, "Превозното средство няма бензин за да запали.");
						if (isVehicleToggleEngineForb(vehicleID)) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да запалиш това превозно средство.");
						PlayerTimerInfo[playerid][ptVehicleTurnEngineOn] = randomex(2, 4);
						new string256[256];
						format(string256, 256, "* %s завъртя ключовете и се опита да запали двигателя... *", RealName(playerid));
						SendLocalMessage(8.0, playerid, COLOR_LIGHTPURPLE4, string256);
					}
				}
			}
		}
	}

	if (newkeys & KEY_YES)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3.0, 226.8525, 2348.2913, 1017.1298) && GetPlayerInterior(playerid) == 3)
		{
			new string256[256];
			format(string256, 256, "{ffffff}1. Вземи си {40BF00}лична карта\n{ffffff}2. Гласувай за правителство\n3. {FFFFFF}Разгледай възможностите за работа");
			ShowPlayerDialog(playerid, DIALOG_GETDOCUMENTS, DIALOG_STYLE_LIST, "Документи:", string256, "Вземи", "Излез");
		}
	}

	if (newkeys & KEY_YES)
	{
		if (IsPlayerInRangeOfPoint(playerid, 3.0, -2033.4341, -117.4944, 1035.1719) &&
			GetPlayerVirtualWorld(playerid) == 1 && GetPlayerInterior(playerid) == 3)
		{
			if (isStudyingDrive[playerid] == true) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си в обучение.");
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{FFFFFF}- Пътни превозни средства\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}- Въздушни превозни средства");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_DRIVERCOURSE, DIALOG_STYLE_LIST, "Добре дошли в DMV. Изберете опция:", string2230result, "Започни теста", "Излез");
		}
	}

	gateopening[playerid] = false;
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	return 1;
}

public OnPlayerUpdate(playerid)
{
	AFKDetect[playerid] = gettime();
	
	if(GetPlayerNearInteractiveActor(playerid) != -1)
	{
		if(PlayerTimerInfo[playerid][ptInteractActor] == 0)
		{
			new actorID = GetPlayerNearInteractiveActor(playerid);
			new Float: aX, Float: aY, Float: aZ;
			GetDynamicActorPos(InteractiveActor[actorID], aX, aY, aZ);
			//CreateDynamic3DTextLabel(const text[], color, Float:x, Float:y, Float:z, Float:drawdistance, attachedplayer = INVALID_PLAYER_ID, attachedvehicle = INVALID_VEHICLE_ID, testlos = 0, worldid = -1, interiorid = -1, playerid = -1, Float:streamdistance = STREAMER_3D_TEXT_LABEL_SD, STREAMER_TAG_AREA:areaid = STREAMER_TAG_AREA:-1, priority = 0);
			if(actorID == 0)
			{
				InteractText3D[playerid][actorID] = CreateDynamic3DTextLabel("Хей, търся работници!\nВиж какво предлагам", COLOR_ACTOR, aX, aY, aZ+1.0, 8.0, INVALID_PLAYER_ID,  INVALID_VEHICLE_ID,  0, 0, 0, playerid);
				SendClientMessage(playerid, COLOR_ACTOR, "Непознат: Здравей! Искаш ли бърза работа за бързи пари?");
			}
			if(actorID == 1)
			{
				InteractText3D[playerid][actorID] = CreateDynamic3DTextLabel("Можеш да започнеш работа още сега!", COLOR_ACTOR, aX, aY, aZ+1.0, 8.0, INVALID_PLAYER_ID,  INVALID_VEHICLE_ID,  0, 0, 0, playerid);
				SendClientMessage(playerid, COLOR_ACTOR, "Работодател: Здравей! Ела при мен и започни работа още сега");
			}
			PlayerTimerInfo[playerid][ptInteractActor] = 30;
			PlayerTimerInfo[playerid][ptHideInteractiveActor] = 15;
		}
	}
	
	if (playerCurrentGun[playerid] != GetPlayerWeapon(playerid))
	{
		if (changeGunTimer[playerid] == 0)
		{
			new currentGun = playerCurrentGun[playerid];
			playerCurrentGun[playerid] = GetPlayerWeapon(playerid);
			if (playerCurrentGun[playerid] >= 2)
			{
				new string256[256];
				new gunname[32];
				GetWeaponName(playerCurrentGun[playerid], gunname, sizeof(gunname));
				format(string256, 256, "* %s извади %s!", RealName(playerid), gunname);
				SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
				changeGunTimer[playerid] = 4;
			}
			else
			{
				new string256[256];
				new gunname[32];
				GetWeaponName(currentGun, gunname, sizeof(gunname));
				format(string256, 256, "* %s прибра %s!", RealName(playerid), gunname);
				SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
			}
		}
	}

	if (IsPlayerDriver(playerid))
	{
		UpdateSpeedoText(playerid);
		new vehicleid = GetPlayerVehicleID(playerid);
        if(isFuelComapnyVeh[vehicleid] && fuelTruckHasTrailer[vehicleid])
        {
            UpdateTankFuelText(playerid);
        }
	}
	
	if(IsPlayerDriver(playerid))
    {
        new vehicleid = GetPlayerVehicleID(playerid);
        if(isFuelComapnyVeh[vehicleid])
        {
            if (IsTrailerAttachedToVehicle(vehicleid))
            {
                if(!fuelTruckHasTrailer[vehicleid])
                {
                    TextDrawShowForPlayer(playerid, TankFuel[playerid]);
                    fuelTruckHasTrailer[vehicleid] = true;
                }
            }
            else
            {
                if(fuelTruckHasTrailer[vehicleid])
                {
                    TextDrawHideForPlayer(playerid, TankFuel[playerid]);
                    fuelTruckHasTrailer[vehicleid] = false;
                }
            }
        }
    }

	if (GetPlayerMoney(playerid) != PlayerInfo[playerid][pCash])
	{
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	}

	if (!IsPlayerInAnyVehicle(playerid))
	{
		if (PlayerInfo[playerid][pLaser] >= 1)
		{
			if (PlayerInfo[playerid][pVip] >= 1)
			{
				RemovePlayerAttachedObject(playerid, 0);
				if ((IsPlayerInAnyVehicle(playerid)) || (IsPlayerInWater(playerid))) return 1;
				switch (GetPlayerWeapon(playerid))
				{
					case 31:
						{
							if (IsPlayerAiming(playerid))
							{
								if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{
									SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6,	// M4 standing aiming
										0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
								}
								else
								{
									SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6,	// M4 crouched aiming
										0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
								}
							}
							else
							{
								if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{
									SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6,	// M4 standing not aiming
										0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
								}
								else
								{
									SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6,	// M4 crouched not aiming
										0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
								}
							}
						}

					case 29:
						{
							if (IsPlayerAiming(playerid))
							{
								if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{
									SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6,	// MP5 standing aiming
										0.298249, -0.02776, 0.158052, -11.631746, 359.302673, 357.584259);
								}
								else
								{
									SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6,	// MP5 crouched aiming
										0.298249, -0.02776, 0.158052, 8.368253, 358.302673, 352.584259);
								}
							}
							else
							{
								if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK)
								{
									SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6,	// MP5 standing not aiming
										0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
								}
								else
								{
									SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6,	// MP5 crouched not aiming
										0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
								}
							}
						}
				}
			}
		}
	}

	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{

	if(dialogid == DIALOG_SELECT_JOB_2)
	{
		if(response)
		{
			new string256[256];
			switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][pJob] != JOB_NO) return SendClientMessage(playerid, COLOR_ACTOR, "Работодател: Явно вече имаш работа! Първо напусни сегашната си работа и ела пак!");
					if(PlayerInfo[playerid][pLevel] < 5) return SendClientMessage(playerid, COLOR_ACTOR, "Работодател: Търся някой малко по-опитен! Стани поне 5-ти Level и ела пак за тази длъжност!");
					PlayerInfo[playerid][pJob] = JOB_MECHANIC;
				}
				case 1:
				{
					if(PlayerInfo[playerid][pJob] != JOB_NO) return SendClientMessage(playerid, COLOR_ACTOR, "Работодател: Явно вече имаш работа! Първо напусни сегашната си работа и ела пак!");
					if(PlayerInfo[playerid][pLevel] < 10) return SendClientMessage(playerid, COLOR_ACTOR, "Работодател: Търся някой малко по-опитен! Стани поне 10-ти Level и ела пак за тази длъжност!");
					PlayerInfo[playerid][pJob] = JOB_TAXI;
				}
				case 2:
				{
					if(PlayerInfo[playerid][pJob] != JOB_NO) return SendClientMessage(playerid, COLOR_ACTOR, "Работодател: Явно вече имаш работа! Първо напусни сегашната си работа и ела пак!");				
					if(PlayerInfo[playerid][pLevel] < 15) return SendClientMessage(playerid, COLOR_ACTOR, "Работодател: Търся някой малко по-опитен! Стани поне 15-ти Level и ела пак за тази длъжност!");
					PlayerInfo[playerid][pJob] = JOB_FUELCOMPANY;
				}
			}
			SendClientMessage(playerid, COLOR_WHITE, "Вие бяхте приет и вече сте с нова работа (Job).");
			new job = PlayerInfo[playerid][pJob];
			format(string256, 256, "Твоята нова работа е {5F63F0}%s{FFFFFF}! За да видиш командите, използвай /jobhelp", JobInfo[job][jName]);
			SendClientMessage(playerid, COLOR_WHITE, string256);
		}
	}

	if(dialogid == DIALOG_SELECT_JOB)
	{
		if(response)
		{
			if(PlayerInfo[playerid][pGPS] == 0) return SendClientMessage(playerid, COLOR_ACTOR, "Непознат: Оф.. Ти нямаш GPS! Ела обратно, когато си вземеш устройството!");
			switch(listitem)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_ACTOR, "Непознат: Искаш да почистваш, значи. Отбелязал съм на картата ти къде е фирмата с червен маркер!");
					gpsOn[playerid] = true;
					SetPlayerCheckpoint(playerid, SweepJob, 4.0);
					SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Sweep Job.");
				}
				case 1:
				{
					SendClientMessage(playerid, COLOR_ACTOR, "Непознат: Отиди до фирмата за пица. Отбелязал съм я на твоята карта с червен маркер!");
					gpsOn[playerid] = true;
					SetPlayerCheckpoint(playerid, PizzaJob, 4.0);
					SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Pizza Job.");
				}
				case 2:
				{
					SendClientMessage(playerid, COLOR_ACTOR, "Непознат: Работата в мината е прекрасна възможност да натрупаш опит! Отиди до червената точка на картата ти, която отбелязах!");
					gpsOn[playerid] = true;
					SetPlayerCheckpoint(playerid, CoalmineJob, 4.0);
					SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Coalmine Job.");
				}
			}
		}
	}

	if(dialogid == DIALOG_FUELSTATIONS_GPS)
    {
        if(response)
        {
            SendClientMessage(playerid, COLOR_GPS, "[GPS] Бензиностанцията, която посочи беше поставена на картата ти с червен кръг!");
            SetPlayerCheckpoint(playerid, FuelStationInfo[listitem][fsCoordsX], FuelStationInfo[listitem][fsCoordsY], FuelStationInfo[listitem][fsCoordsZ], 4.0);
            gpsOn[playerid] = true;
        }
    }
	
	if(dialogid == DIALOG_FUELSTATIONS_REFILLPT)
    {
        if(response)
        {
            if (PlayerInfo[playerid][pJob] != JOB_FUELCOMPANY) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да работиш във Fuel Co за да имаш достъп!");
            if (!PlayerInfo[playerid][pFuelCoDuty]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си на смяна във Fuel Company за да заредиш цистерната!");
            new vehicleid = GetPlayerVehicleID(playerid);
            if (!isFuelComapnyVeh[vehicleid]) return SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не принадлежи на Fuel Company!");
            if (!IsPlayerInRangeOfPoint(playerid, 15.0 , 264.3938,1457.5801,10.5859)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си близо до мястото за зареждане на бензин!");
            if (!fuelTruckHasTrailer[vehicleid]) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си закачил цистерната!");
            new trailerid = GetVehicleTrailer(vehicleid);
            new fuel = strval(inputtext);
            if(fuel <= 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да добавиш 0 литра!");
            if(fuel + VehicleInfo[trailerid][vTankFuel] > 10000) return SendClientMessage(playerid, COLOR_GRAD1, "Максимумът на цистерната е 10000 L!");
            VehicleInfo[trailerid][vTankFuel] += fuel;
            new string140[140];
            format(string140, sizeof(string140), "Ти зареди {ffff00}%d {ffffff}литра бензин в твоята цистерна!", fuel);
            SendClientMessage(playerid, COLOR_WHITE, string140);
            format(string140, 140, "%s добави бензин към цистерната!", GetPlayerRpName(playerid));
            SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string140);
        }
    }

	if (dialogid == DIALOG_VOUCHERS_BUY)
	{
		if (response)
		{
			new string512[512];
			new string2230result[2230];
			new voucherItem = buyItemWithBGNIndex[playerid];
			if (voucherItem == 3)
			{
				if (PlayerInfo[playerid][pVip] == 3)
				{
					buyItemWithBGNIndex[playerid] = -1;
					format(string512, 512, "Вече имаш 3-то ниво VIP! Няма следващо ниво!");
					strcat(string2230result, string512, 2230);
					ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}VOUCHERS {40BF00}CONFIRM {FF0000}BUY:", string2230result, "Излез", "");
					return 1;
				}
			}

			if (voucherItem == 6 || voucherItem == 7)
			{
				if (GetPrivateVehsNumber(playerid) >= 3)
				{
					buyItemWithBGNIndex[playerid] = -1;
					format(string512, 512, "Нямаш свободен слот за лични превози!");
					strcat(string2230result, string512, 2230);
					ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}VOUCHERS {40BF00}CONFIRM {FF0000}BUY:", string2230result, "Излез", "");
					return 1;
				}
			}

			if (PlayerInfo[playerid][pVoucherBGN] < GetItemPriceWithBGN(voucherItem))
			{
				buyItemWithBGNIndex[playerid] = -1;
				format(string512, 512, "Нямаш достатъчно пари в касата си за тази поръчка!");
				strcat(string2230result, string512, 2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}VOUCHERS {40BF00}CONFIRM {FF0000}BUY:", string2230result, "Излез", "");
				return 1;
			}

			PlayerInfo[playerid][pVoucherBGN] -= GetItemPriceWithBGN(voucherItem);
			format(string512, 512, "{FFFFFF}Успешна поръчка!\n\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Име на поръчката: {0099FF}%s\n", GetItemNameWithBGN(voucherItem));
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Цена на поръчката: {40BF00}%d лева\n\n", GetItemPriceWithBGN(voucherItem));
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}След като направихте поръчката ви остават: {40BF00}%d лева {ffffff}в касата", PlayerInfo[playerid][pVoucherBGN]);
			strcat(string2230result, string512, 2230);
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}VOUCHERS {40BF00}BUYING {FF0000}SUCCESS:", string2230result, "Излез", "");
			GivePlayerItemWithBGN(playerid, buyItemWithBGNIndex[playerid]);
			buyItemWithBGNIndex[playerid] = -1;
		}
	}

	if (dialogid == DIALOG_VOUCHERS_SERVICE)
	{
		if (response)
		{
			buyItemWithBGNIndex[playerid] = listitem;
			new string512[512];
			new string2230result[2230];
			format(string512, 512, "{FFFFFF}На път си да направиш поръчка срещу пари в каса!\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Твоите пари в каса (BGN): {40BF00}%d лв\n\n", PlayerInfo[playerid][pVoucherBGN]);
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Име на покупката: {0099FF}%s\n", GetItemNameWithBGN(listitem));
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Цена на покупката: {40BF00}%d лв\n\n", GetItemPriceWithBGN(listitem));
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Натисни {0099FF}'Потвърди'{FFFFFF} за да осъществиш покупката!\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Натисни {FF0000}'Излез'{FFFFFF} за да откажеш покупката!\n\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FF0000}Важно: Парите в касата ти няма да бъдат възстановени, ако се откажеш от поръчката си!");
			strcat(string2230result, string512, 2230);
			ShowPlayerDialog(playerid, DIALOG_VOUCHERS_BUY, DIALOG_STYLE_MSGBOX, "{FFFFFF}VOUCHERS {40BF00}CONFIRM {FF0000}BUY:", string2230result, "Потвърди", "Излез");
		}
	}

	if (dialogid == DIALOG_VOUCHERS)
	{
		if (response)
		{
			new string512[512];
			new string2230result[2230];
			format(string512, 512, "Услуга:\tЦена:\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Пари в играта: {40BF00}$22300\t{0099FF}2 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Пари в играта: {40BF00}$35300\t{0099FF}4 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Пари в играта: {40BF00}$48300\t{0099FF}6 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Следващ VIP Level\t{0099FF}2 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Exp: {40BF00}20\t{0099FF}2 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Level: {40BF00}5\t{0099FF}2 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Sultan\t{0099FF}2 лева\n");
			strcat(string2230result, string512, 2230);
			format(string512, 512, "{FFFFFF}Infernus\t{0099FF}4 лева\n");
			strcat(string2230result, string512, 2230);
			ShowPlayerDialog(playerid, DIALOG_VOUCHERS_SERVICE, DIALOG_STYLE_TABLIST_HEADERS, "{FFFFFF}VOUCHERS {40BF00}SERVICES {FF0000}MENU:", string2230result, "Купи", "Излез");
		}
	}

	if (dialogid == DIALOG_VIPHELP_CMDS)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{00ff00}VIP Системата ви дава по-голям набор от команди и бонуси.\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{ffffff}Можете да станете {40BF00}VIP{FF0000}, чрез печелене на турнири, събития и т.н.\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{40BF00}VIP Системата ви предоставя:\n\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FF0000}-----------= КОМАНДИ: =-----------\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{00FF00}--=== Vip Level 1 ===--\n\n");
			strcat(string2230result, string2230);
			//format(string2230,512,"{FFFFFF}- /parrot - за да си сложиш/махнеш папагала\n\n");
			//strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}- /laser - за да си сложиш/махнеш лазера от Mp5 и M4\n\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{00FF00}--=== Vip Level 2 ===--\n\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}- /vrepair - за да поправиш превоза си в гараж\n\n");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}VIP {40BF00}HELP {FF0000}COMMANDS:", string2230result, "Изход", "");
		}
	}

	if (dialogid == DIALOG_TUNEMECHANIC)
	{
		if (response)
		{
			new vehid = workingOnVeh[playerid];
			new vehmd = GetVehicleModel(vehid);
			switch (listitem)
			{
				case 0:
					AddVehicleComponent(vehid, 1010), MechanicCarmodDialog(playerid), PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				case 1:
					ShowPlayerDialog(playerid, 1112, DIALOG_STYLE_LIST, "Choose primary color:", "White\nBlack\nOrange\nLight Blue\nDark Blue\nPurple\nRed\nDark Red\nGrey", "Ok", "Cancle");
				case 2:
					ShowPlayerDialog(playerid, 1113, DIALOG_STYLE_LIST, "Choose a wheel:", "Shadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nAhab\nVirtual\nAcces\n{FF0000}Back", "Ok", "Cancle");
				case 3:
					AddVehicleComponent(vehid, 1086), PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0), MechanicCarmodDialog(playerid);
				case 4:
					AddVehicleComponent(vehid, 1087), PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0), MechanicCarmodDialog(playerid);
				case 5:
					{
						if (vehmd == 562 || vehmd == 565 || vehmd == 559 || vehmd == 561 || vehmd == 560 || vehmd == 558)
						{
							ShowPlayerDialog(playerid, 1114, DIALOG_STYLE_LIST, "Choose one", "Paintjob\nAlien\nX-Flow\n{FF0000}Back", "Select", "Cancel");
						}
						else if (vehmd == 576 || vehmd == 575 || vehmd == 535)
						{
							ShowPlayerDialog(playerid, 1001, DIALOG_STYLE_LIST, "Choose one", "Paintjob\nChrome\nSlamin\n{FF0000}Back", "Select", "Cancel");
						}
						else if (vehmd == 567 || vehmd == 536)
						{
							ShowPlayerDialog(playerid, 1002, DIALOG_STYLE_LIST, "Choose one", "Paintjob\nChrome\nSlamin\nHardtop Roof\nSofttop Roof\n{FF0000}Back", "Select", "Cancel");
						}
						else if (vehmd == 534)
						{
							ShowPlayerDialog(playerid, 1003, DIALOG_STYLE_LIST, "Choose one", "Paintjob\nChrome\nSlamin\nFlame Sideskirt \nArches Sideskirt Roof\n{FF0000}Back", "Select", "Cancel");
						}
						else if (vehmd == 496 || vehmd == 505 || vehmd == 516 || vehmd == 517 || vehmd == 518 || vehmd == 527 ||
							vehmd == 529 || vehmd == 540 || vehmd == 546 || vehmd == 547 || vehmd == 549 || vehmd == 550 || vehmd == 551 ||
							vehmd == 580 || vehmd == 585 || vehmd == 587 || vehmd == 589 || vehmd == 600 || vehmd == 603 || vehmd == 401 ||
							vehmd == 410 || vehmd == 415 || vehmd == 418 || vehmd == 420 || vehmd == 436 || vehmd == 439 || vehmd == 458 ||
							vehmd == 489 || vehmd == 491 || vehmd == 492)
						{
							RegularCarDialog(playerid);
						}
						else
						{
							SendClientMessage(playerid, COLOR_RED, "Your car cannot be tuned!");
						}
					}
			}
		}
	}

	if (dialogid == 1112 && response)
	{
		new color1, color2;
		new vehid = workingOnVeh[playerid];
		//				new vehmd = GetVehicleModel(vehid);
		GetVehicleColor(vehid, color1, color2);
		new Carray[] = { 1, 0, 6, 2, 79, 149, 151, 3, 34 };

		ChangeVehicleColor(vehid, Carray[listitem], color2);
		return ShowPlayerDialog(playerid, 1116, DIALOG_STYLE_LIST, "Choose second color:", "White\nBlack\nOrange\nLight Blue\nDark Blue\nPurple\nRed\nDark Red\nGrey", "Ok", "Cancle");
	}

	if (dialogid == 1116 && response)
	{
		new color1, color2;
		new vehid = workingOnVeh[playerid];
		//			new vehmd = GetVehicleModel(vehid);
		GetVehicleColor(vehid, color1, color2);
		new Carray[] = { 1, 0, 6, 2, 79, 149, 151, 3, 34 };

		ChangeVehicleColor(vehid, Carray[listitem], Carray[listitem]);
		return MechanicCarmodDialog(playerid);
	}

	if (dialogid == 1113 && response)
	{
		if (listitem == 16) return MechanicCarmodDialog(playerid);
		new vehid = workingOnVeh[playerid];
		//			new vehmd = GetVehicleModel(vehid);
		new Warray[] = { 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1096, 1097, 1098 };

		AddVehicleComponent(vehid, Warray[listitem]);
		return MechanicCarmodDialog(playerid);
	}

	if (dialogid == 1114 && response)
	{
		new vehid = workingOnVeh[playerid];
		new vehmd = GetVehicleModel(vehid);
		switch (listitem)
		{
			case 0:
				ShowPlayerDialog(playerid, 1115, DIALOG_STYLE_LIST, "Choose one:", "Paintjob 1\nPaintjob 2\nPaintjob 3", "Ok", "Cancel");
			case 1:
				{
					if (vehmd == 560)	//Sultan
					{
						AddVehicleComponent(vehid, 1026);
						AddVehicleComponent(vehid, 1027);
						AddVehicleComponent(vehid, 1028);
						AddVehicleComponent(vehid, 1032);
						AddVehicleComponent(vehid, 1138);
						AddVehicleComponent(vehid, 1141);
						AddVehicleComponent(vehid, 1169);
					}

					if (vehmd == 562)	//Elegy
					{
						AddVehicleComponent(vehid, 1036);
						AddVehicleComponent(vehid, 1040);
						AddVehicleComponent(vehid, 1034);
						AddVehicleComponent(vehid, 1038);
						AddVehicleComponent(vehid, 1147);
						AddVehicleComponent(vehid, 1171);
						AddVehicleComponent(vehid, 1149);
					}

					if (vehmd == 565)	//Flash
					{
						AddVehicleComponent(vehid, 1047);
						AddVehicleComponent(vehid, 1051);
						AddVehicleComponent(vehid, 1046);
						AddVehicleComponent(vehid, 1054);
						AddVehicleComponent(vehid, 1049);
						AddVehicleComponent(vehid, 1150);
						AddVehicleComponent(vehid, 1153);
					}

					if (vehmd == 559)	//Jester
					{
						AddVehicleComponent(vehid, 1069);
						AddVehicleComponent(vehid, 1071);
						AddVehicleComponent(vehid, 1065);
						AddVehicleComponent(vehid, 1067);
						AddVehicleComponent(vehid, 1162);
						AddVehicleComponent(vehid, 1159);
						AddVehicleComponent(vehid, 1160);
					}

					if (vehmd == 561)	//Stratum
					{
						AddVehicleComponent(vehid, 1056);
						AddVehicleComponent(vehid, 1062);
						AddVehicleComponent(vehid, 1064);
						AddVehicleComponent(vehid, 1055);
						AddVehicleComponent(vehid, 1058);
						AddVehicleComponent(vehid, 1154);
						AddVehicleComponent(vehid, 1155);
					}

					if (vehmd == 558)	//Uranus
					{
						AddVehicleComponent(vehid, 1090);
						AddVehicleComponent(vehid, 1094);
						AddVehicleComponent(vehid, 1092);
						AddVehicleComponent(vehid, 1088);
						AddVehicleComponent(vehid, 1164);
						AddVehicleComponent(vehid, 1168);
						AddVehicleComponent(vehid, 1166);
					}
				}

			case 2:
				{
					if (vehmd == 560)	//Sultan
					{
						AddVehicleComponent(vehid, 1031);
						AddVehicleComponent(vehid, 1030);
						AddVehicleComponent(vehid, 1029);
						AddVehicleComponent(vehid, 1033);
						AddVehicleComponent(vehid, 1139);
						AddVehicleComponent(vehid, 1140);
						AddVehicleComponent(vehid, 1170);
					}

					if (vehmd == 562)	//Elegy
					{
						AddVehicleComponent(vehid, 1041);
						AddVehicleComponent(vehid, 1039);
						AddVehicleComponent(vehid, 1037);
						AddVehicleComponent(vehid, 1035);
						AddVehicleComponent(vehid, 1146);
						AddVehicleComponent(vehid, 1148);
						AddVehicleComponent(vehid, 1172);
					}

					if (vehmd == 565)	//Flash
					{
						AddVehicleComponent(vehid, 1048);
						AddVehicleComponent(vehid, 1045);
						AddVehicleComponent(vehid, 1053);
						AddVehicleComponent(vehid, 1050);
						AddVehicleComponent(vehid, 1152);
						AddVehicleComponent(vehid, 1151);
						AddVehicleComponent(vehid, 1052);
					}

					if (vehmd == 559)	//Jester
					{
						AddVehicleComponent(vehid, 1070);
						AddVehicleComponent(vehid, 1072);
						AddVehicleComponent(vehid, 1066);
						AddVehicleComponent(vehid, 1068);
						AddVehicleComponent(vehid, 1158);
						AddVehicleComponent(vehid, 1161);
						AddVehicleComponent(vehid, 1173);
					}

					if (vehmd == 561)	//Stratum
					{
						AddVehicleComponent(vehid, 1057);
						AddVehicleComponent(vehid, 1063);
						AddVehicleComponent(vehid, 1059);
						AddVehicleComponent(vehid, 1061);
						AddVehicleComponent(vehid, 1060);
						AddVehicleComponent(vehid, 1154);
						AddVehicleComponent(vehid, 1157);
					}

					if (vehmd == 558)	//Uranus
					{
						AddVehicleComponent(vehid, 1093);
						AddVehicleComponent(vehid, 1095);
						AddVehicleComponent(vehid, 1089);
						AddVehicleComponent(vehid, 1091);
						AddVehicleComponent(vehid, 1163);
						AddVehicleComponent(vehid, 1167);
						AddVehicleComponent(vehid, 1165);
					}
				}

			case 3:
				MechanicCarmodDialog(playerid);
		}
	}

	if (dialogid == 1001 && response)
	{
		new vehid = workingOnVeh[playerid];
		new vehmd = GetVehicleModel(vehid);
		switch (listitem)
		{
			case 0:
				ShowPlayerDialog(playerid, 1115, DIALOG_STYLE_LIST, "Choose one:", "Paintjob 1\nPaintjob 2\nPaintjob 3", "Ok", "Cancel");
			case 1:
				{
					if (vehmd == 576)	//Tornado
					{
						AddVehicleComponent(vehid, 1134);
						AddVehicleComponent(vehid, 1136);
						AddVehicleComponent(vehid, 1137);
						AddVehicleComponent(vehid, 1191);
						AddVehicleComponent(vehid, 1192);
					}

					if (vehmd == 575)	//Broadway
					{
						AddVehicleComponent(vehid, 1042);
						AddVehicleComponent(vehid, 1044);
						AddVehicleComponent(vehid, 1099);
						AddVehicleComponent(vehid, 1174);
						AddVehicleComponent(vehid, 1176);
					}

					if (vehmd == 535)	//Slamvan
					{
						AddVehicleComponent(vehid, 1109);
						AddVehicleComponent(vehid, 1113);
						AddVehicleComponent(vehid, 1115);
						AddVehicleComponent(vehid, 1117);
						AddVehicleComponent(vehid, 1118);
						AddVehicleComponent(vehid, 1120);
					}
				}

			case 2:
				{
					if (vehmd == 576)	//Tornado
					{
						AddVehicleComponent(vehid, 1135);
						AddVehicleComponent(vehid, 1190);
						AddVehicleComponent(vehid, 1193);
					}

					if (vehmd == 575)	//Broadway
					{
						AddVehicleComponent(vehid, 1177);
						AddVehicleComponent(vehid, 1175);
						AddVehicleComponent(vehid, 1143);
					}

					if (vehmd == 535)	//Slamvan
					{
						AddVehicleComponent(vehid, 1110);
						AddVehicleComponent(vehid, 1114);
						AddVehicleComponent(vehid, 1116);
						AddVehicleComponent(vehid, 1119);
						AddVehicleComponent(vehid, 1121);
					}
				}

			case 3:
				MechanicCarmodDialog(playerid);
		}
	}

	if (dialogid == 1002)
	{
		new vehid = workingOnVeh[playerid];
		new vehmd = GetVehicleModel(vehid);
		switch (listitem)
		{
			case 0:
				ShowPlayerDialog(playerid, 1115, DIALOG_STYLE_LIST, "Choose one:", "Paintjob 1\nPaintjob 2\nPaintjob 3", "Ok", "Cancel");
			case 1:
				{
					if (vehmd == 567)	//Savanna
					{
						AddVehicleComponent(vehid, 1129);
						AddVehicleComponent(vehid, 1133);
						AddVehicleComponent(vehid, 1102);
						AddVehicleComponent(vehid, 1187);
						AddVehicleComponent(vehid, 1189);
					}

					if (vehmd == 536)	//Blade
					{
						AddVehicleComponent(vehid, 1104);
						AddVehicleComponent(vehid, 1107);
						AddVehicleComponent(vehid, 1108);
						AddVehicleComponent(vehid, 1182);
						AddVehicleComponent(vehid, 1184);
					}
				}

			case 2:
				{
					if (vehmd == 567)	//Savanna
					{
						AddVehicleComponent(vehid, 1188);
						AddVehicleComponent(vehid, 1186);
						AddVehicleComponent(vehid, 1132);
					}

					if (vehmd == 536)	//Blade
					{
						AddVehicleComponent(vehid, 1105);
						AddVehicleComponent(vehid, 1183);
						AddVehicleComponent(vehid, 1181);
					}
				}

			case 3:
				{
					if (vehmd == 567)	//Savanna
					{
						AddVehicleComponent(vehid, 1130);
					}

					if (vehmd == 536)	//Blade
					{
						AddVehicleComponent(vehid, 1128);
					}
				}

			case 4:
				{
					if (vehmd == 567)	//Savanna
					{
						AddVehicleComponent(vehid, 1131);
					}

					if (vehmd == 536)	//Blade
					{
						AddVehicleComponent(vehid, 1103);
					}
				}

			case 5:
				MechanicCarmodDialog(playerid);
		}
	}

	if (dialogid == 1003)	//Remington
	{
		new vehid = workingOnVeh[playerid];
		//			new vehmd = GetVehicleModel(vehid);
		switch (listitem)
		{
			case 0:
				ShowPlayerDialog(playerid, 1115, DIALOG_STYLE_LIST, "Choose one:", "Paintjob 1\nPaintjob 2\nPaintjob 3", "Ok", "Cancel");
			case 1:
				{
					AddVehicleComponent(vehid, 1100);
					AddVehicleComponent(vehid, 1122);
					AddVehicleComponent(vehid, 1123);
					AddVehicleComponent(vehid, 1125);
					AddVehicleComponent(vehid, 1126);
					AddVehicleComponent(vehid, 1179);
					AddVehicleComponent(vehid, 1180);
				}

			case 2:
				{
					AddVehicleComponent(vehid, 1185);
					AddVehicleComponent(vehid, 1178);
					AddVehicleComponent(vehid, 1127);
				}

			case 3:
				AddVehicleComponent(vehid, 1122), AddVehicleComponent(vehid, 1101);
			case 4:
				AddVehicleComponent(vehid, 1106), AddVehicleComponent(vehid, 1124);
			case 5:
				MechanicCarmodDialog(playerid);
		}
	}

	if (dialogid == 1004 && response)	//regular cars
	{
		new vehid = workingOnVeh[playerid];
		new vehmd = GetVehicleModel(vehid);
		switch (listitem)
		{
			case 0:
				{
					ShowPlayerDialog(playerid, 1010, DIALOG_STYLE_LIST, "Spoiler", "Pro\nWin\nDrag\nAlpha\nChamp\nRace\nWorx\nFury\n{FF0000}Back", "Select", "Cancel");
				}

			case 1:
				{
					if (vehmd == 585 || vehmd == 603 || vehmd == 439 || vehmd == 458 || vehmd == 418 || vehmd == 527 || vehmd == 580)
					{
						AddVehicleComponent(vehid, 1006);
						return RegularCarDialog(playerid);
					}
					else if (vehmd == 439 || vehmd == 458 || vehmd == 491 || vehmd == 517 || vehmd == 547)
					{
						ShowPlayerDialog(playerid, 1040, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n{FF0000}Back", "Select", "Cancel");
					}
					else if (vehmd == 415)
					{
						AddVehicleComponent(vehid, 1007);
						AddVehicleComponent(vehid, 1071);
						return RegularCarDialog(playerid);
					}
					else ShowPlayerDialog(playerid, 1020, DIALOG_STYLE_LIST, "Hood", "Champ\nFury\nRace\nWorx\n{FF0000}Back", "Select", "Cancel");
				}

			case 2:
				{
					if (vehmd == 549 || vehmd == 585 || vehmd == 603)
					{
						ShowPlayerDialog(playerid, 1040, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n{FF0000}Back", "Select", "Cancel");
					}
					else if (vehmd == 410 || vehmd == 436 || vehmd == 439 || vehmd == 458 || vehmd == 516 || vehmd == 491 || vehmd == 517 || vehmd == 418 || vehmd == 527 || vehmd == 580)
					{
						AddVehicleComponent(vehid, 1007);
						AddVehicleComponent(vehid, 1071);
						return RegularCarDialog(playerid);
					}
					else if (vehmd == 415 || vehmd == 547 || vehmd == 420 || vehmd == 587)
					{
						MechanicCarmodDialog(playerid);
					}
					else
					{
						AddVehicleComponent(vehid, 1006);
						return RegularCarDialog(playerid);
					}
				}

			case 3:
				{
					if (vehmd == 549 || vehmd == 585 || vehmd == 603 || vehmd == 551 || vehmd == 492 || vehmd == 529)
					{
						AddVehicleComponent(vehid, 1007);
						AddVehicleComponent(vehid, 1071);
						return RegularCarDialog(playerid);
					}
					else if (vehmd == 410 || vehmd == 436 || vehmd == 439 || vehmd == 458 || vehmd == 489 || vehmd == 505)
					{
						ShowPlayerDialog(playerid, 1060, DIALOG_STYLE_LIST, "Lights", "Round Fog\nSquare Fog\n{FF0000}Back", "Select", "Cancel");
					}
					else if (vehmd == 418 || vehmd == 527 || vehmd == 580 || vehmd == 491 || vehmd == 517 || vehmd == 516)
					{
						MechanicCarmodDialog(playerid);
					}
					else
					{
						ShowPlayerDialog(playerid, 1040, DIALOG_STYLE_LIST, "Vents", "Oval\nSquare\n{FF0000}Back", "Select", "Cancel");
					}
				}

			case 4:
				{
					if (vehmd == 549 || vehmd == 550 || vehmd == 585 || vehmd == 603)
					{
						ShowPlayerDialog(playerid, 1060, DIALOG_STYLE_LIST, "Lights", "Round Fog\nSquare Fog\n{FF0000}Back", "Select", "Cancel");
					}
					else if (vehmd == 489 || vehmd == 505 || vehmd == 551 || vehmd == 492 || vehmd == 529 || vehmd == 439 || vehmd == 458 || vehmd == 410 || vehmd == 436)
					{
						MechanicCarmodDialog(playerid);
					}
					else
					{
						AddVehicleComponent(vehid, 1007);
						AddVehicleComponent(vehid, 1071);
						return RegularCarDialog(playerid);
					}
				}

			case 5:
				{
					if (vehmd == 585 || vehmd == 603 || vehmd == 550 || vehmd == 549)
					{
						MechanicCarmodDialog(playerid);
					}
					else
					{
						ShowPlayerDialog(playerid, 1060, DIALOG_STYLE_LIST, "Lights", "Round Fog\nSquare Fog\n{FF0000}Back", "Select", "Cancel");
					}
				}

			case 6:
				MechanicCarmodDialog(playerid);
		}
	}

	if (dialogid == 1010 && response)
	{
		new vehid = workingOnVeh[playerid];
		//			new vehmd = GetVehicleModel(vehid);
		if (listitem == 8) return RegularCarDialog(playerid);
		new Xarray[] = { 1000, 1001, 1002, 1003, 1014, 1015, 1016, 1023 };

		AddVehicleComponent(vehid, Xarray[listitem]);
		return RegularCarDialog(playerid);
	}

	if (dialogid == 1020 && response)
	{
		new vehid = workingOnVeh[playerid];
		//			new vehmd = GetVehicleModel(vehid);
		if (listitem == 4) return RegularCarDialog(playerid);
		new Xarray[] = { 1004, 1005, 1011, 1012 };

		AddVehicleComponent(vehid, Xarray[listitem]);
		return RegularCarDialog(playerid);
	}

	if (dialogid == 1040 && response)
	{
		new vehid = workingOnVeh[playerid];
		//			new vehmd = GetVehicleModel(vehid);
		switch (listitem)
		{
			case 0:
				{
					AddVehicleComponent(vehid, 1142);
					AddVehicleComponent(vehid, 1143);
					return RegularCarDialog(playerid);
				}

			case 1:
				{
					AddVehicleComponent(vehid, 1144);
					AddVehicleComponent(vehid, 1145);
					return RegularCarDialog(playerid);
				}

			case 2:
				RegularCarDialog(playerid);
		}
	}

	if (dialogid == 1060 && response)
	{
		new vehid = workingOnVeh[playerid];
		//new vehmd = GetVehicleModel(vehid);
		if (listitem == 2) return RegularCarDialog(playerid);
		new Xarray[] = { 1013, 1024 };

		AddVehicleComponent(vehid, Xarray[listitem]);
		return RegularCarDialog(playerid);
	}

	if (dialogid == 1115 && response)
	{
		new vehid = workingOnVeh[playerid];
		//new vehmd = GetVehicleModel(vehid);
		new Parray[] = { 0, 1, 2 };

		ChangeVehiclePaintjob(vehid, Parray[listitem]);
		return MechanicCarmodDialog(playerid);
	}

	if (dialogid == DIALOG_AHELP1)
	{
		if (response)
		{
			if (PlayerInfo[playerid][pAdmin] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно права за да видите този лист.");
				return 1;
			}

			new string2230[512];
			new string2230result[2530];
			format(string2230, 512, "{FFFFFF}Commands of\t {5AA5E7}Admin Level: \t{5AA5E7}Global Moderator (2)\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/slap \t \t за да хвърлите играч в небето\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/check \t \t за да видите статистиката на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/goto \t \t за да се телепортирате до играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/mute \t \t за да заглушите играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/unmute \t \t за да отглушите играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/jail \t \t за да вкарате играч в АДМИН Затвора\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/unjail \t \t за да изкарате играч от АДМИН Затвора\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/unpjail \t \t за да изкарате играч от Полицейския Затвор\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/fixveh \t \t за да поправиш првоза си\n");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_AHELP2, DIALOG_STYLE_TABLIST_HEADERS, "{5AA5E7}ADMIN HELP: COMMANDS", string2230result, "Напред", "Затвори");
		}
	}

	if (dialogid == DIALOG_AHELP2)
	{
		if (response)
		{
			if (PlayerInfo[playerid][pAdmin] < 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно права за да видите този лист.");
				return 1;
			}

			new string2230[512];
			new string2230result[2530];
			format(string2230, 512, "{FFFFFF}Commands of\t {5AA5E7}Admin Level: \t{5AA5E7}Administrator (3)\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/setint \t \t за да смениш Interior на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/setworld \t \t за да смениш Virtual World на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/akill \t \t за да убиете играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/settospawn \t \t за да пуснеш играч на Spawn позицията му\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/gethere \t \t за да телепортирате играч до себе си\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/ban \t \t за да BAN-нете играч от сървъра\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/unban \t \t за да UNBAN-нете играч от сървъра\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/clearchat \t \t за да изтриете чата\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/gotols \t \t за да се телепортираш до Los Santos\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/gotolv \t \t за да се телепортираш до Las Venturas\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/gotosf \t \t за да се телепортираш до San Fierro\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/teleportjob \t \t за да се телепортираш някъде\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/teleportfaction \t \t за да се телепортираш някъде\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/startvote \t \t за да пуснеш вот\n");
			strcat(string2230result, string2230);
			//format(string2230,512,"{FFFFFF}/respawncarsvote \t \t за да пуснеш вот за Respawn на превозите\n");
			//strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/arefuelall \t \t за да заредиш всички превози с бензин\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/warn \t \t за да сложиш предупреждение\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/nwarn \t \t за да сложиш предупреждение на човек извън сървъра\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/message \t \t за да пуснеш съобщение в сървъра\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/cnnn \t \t за да пуснеш съобщение в сървъра на екрана\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/checkvehs \t \t за да провериш какви лични превози има играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/privatevehid \t \t за да провериш Private Veh ID на превозно средство\n");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_AHELP3, DIALOG_STYLE_TABLIST_HEADERS, "{5AA5E7}ADMIN HELP: COMMANDS", string2230result, "Напред", "Затвори");
		}
	}

	if (dialogid == DIALOG_AHELP3)
	{
		if (response)
		{
			if (PlayerInfo[playerid][pAdmin] < 4)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно права за да видите този лист.");
				return 1;
			}

			new string2230[512];
			new string2230result[2530];
			format(string2230, 512, "{FFFFFF}Commands of\t {5AA5E7}Admin Level: \t{5AA5E7}Senior Administrator (4)\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/veh \t \t за да създадете превозно средство\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/setskin \t \t сменя скина на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/setpermskin \t \t сменя постоянния скин\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/sethp \t \t сменя HP играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/setarmour \t \t сменя Armour играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/freeze \t \t да замразиш играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/unfreeze \t \t да отмразиш играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/epaintball \t \t за да отвориш/затвориш Paintball арената\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/unwarn \t \t за да махнеш предупреждение\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/nunwarn \t \t за да махнеш предупреждение на човек извън сървъра\n");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_AHELP4, DIALOG_STYLE_TABLIST_HEADERS, "{5AA5E7}ADMIN HELP: COMMANDS", string2230result, "Напред", "Затвори");
		}
	}

	if (dialogid == DIALOG_AHELP4)
	{
		if (response)
		{
			if (PlayerInfo[playerid][pAdmin] < 5)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно права за да видите този лист.");
				return 1;
			}

			new string2230[512];
			new string2230result[2530];
			format(string2230, 512, "{FFFFFF}Commands of\t {5AA5E7}Admin Level: \t{5AA5E7}Server Owner (5)\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/gotoveh \t \t телепорт до превозно средство\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/destroyvehs \t \t унищожава SPAWNED колите\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/gmx \t \t рестартира сървъра\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/saveserver \t \t запаметява сървъра\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/turnooc \t \t включва/изключва OOC чата\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/turnsocial \t \t включва/изключва социалните мрежи\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/disarm \t \t маха оръжията на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/givegun \t \t дава оръжие на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/givecash \t \t дава пари на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/setcash \t \t слага пари на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/setbgn \t \t слага пари в касата на играч (BG Валута)\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/givebgn \t \t добавя пари в касата на играч (BG Валута)\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/givebgnall \t \t добавя пари в касата на всеки онлайн играч (BG Валута)\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/setlevel \t \t слага Level на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/givecashall \t \t дава пари на всеки\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/giveexp \t \t дава Exp на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/giveexpall \t \t дава Exp на всеки\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/givelevel \t \t дава Level на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/givelevelall \t \t дава Level на всеки\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/sethours \t \t променя часа в сървъра\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/setweather \t \t променя времето в сървъра\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/scriptermode \t \t за да включите Scripter мода\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/skipturftime \t \t за да Skip-неш времето до нова Turf атака\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/scripterhelp \t \t за да видите помоща за Scripter мода\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/makevip \t \t за да направите играч VIP\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/makeadmin \t \t за да направите играч администратор\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/creategraffiti \t \t за да направите графит\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/getadmin \t \t махате админ права\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/awarn \t \t добавяте админ предупреждение\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/unawarn \t \t махате админ предупреждение\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/getvip \t \t махате VIP\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/makeevent \t \t за да направите играч Event Admin\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/getevent \t \t за да махнете Event Admin\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/makeboss \t \t за да направите играч шеф на работа\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/makeleader \t \t за да направите играч лидер на FACTION\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/getleader \t \t за да махнете лидерство\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/getboss \t \t за да махнете шефска позиция\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/createhouse \t \t за да създадете къща\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/createbiz \t \t за да създадете бизнес\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/govvote \t \t за да пуснете гласуване за правителство\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/givekeys \t \t за да създадеш личен превоз и да предадеш ключовете на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/checkbgn \t \t за да провериш колко пари в касата има играч\n");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_AHELP5, DIALOG_STYLE_TABLIST_HEADERS, "{5AA5E7}ADMIN HELP: COMMANDS", string2230result, "Напред", "Затвори");
		}
	}

	if (dialogid == DIALOG_AHELP5)
	{
		if (response)
		{
			if (PlayerInfo[playerid][pAdmin] < 5)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно права за да видите този лист.");
				return 1;
			}

			new string2230[512];
			new string2230result[2530];
			format(string2230, 512, "{FFFFFF}Commands of\t {5AA5E7}Admin Level: \t{5AA5E7}Server Owner (5)\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/checkhouseinterior \t \t за да провериш Interior на къща\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/golastpos \t \t за да се върнеш в предходната си позиция\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/setturf \t \t за да промениш притежателя на дадена територия\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/vehobjects \t \t за да изкара менюто, което отговаря за обектите по превозите\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/getkeys \t \t за да унищожиш нечий личен превоз\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/spawnprivate \t \t за да унищожиш нечий личен превоз\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/destroyprivateveh \t \t за да унищожиш лично превозно средство\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/agivelic \t \t за да дадеш лиценз на играч\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/givefactionmoney \t \t за да дадеш пари на Faction\n");
			strcat(string2230result, string2230);
			format(string2230, 512, "{FFFFFF}/setfactionmoney \t \t за да дадеш пари на Faction\n");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_TABLIST_HEADERS, "{5AA5E7}ADMIN HELP: COMMANDS", string2230result, "Затвори", "");
		}
	}

	if (dialogid == DIALOG_ACCEPT_ROBBERY)
	{
		if (response)
		{
			if (robberyTime > 0 || robberyTimeToRob > 0)
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_LIGHTORANGE, "В момента не можеш да стартираш обир.");
				return 1;
			}

			if (startedRobbery == true)
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_LIGHTORANGE, "В момента има друг обир.");
				return 1;
			}

			SendClientMessage(playerid, COLOR_ROBBERY, "[Robbery] Имате 5 минути да започнете обира.");
			robberyTimeToRob = 5 * 60;
			isRobber[playerid] = true;
			robberyRobberID = playerid;
		}

		if (!response)
		{
			RemovePlayerFromVehicle(playerid);
		}
	}

	if (dialogid == DIALOG_HOUSE_FURNITURES_REMOVE)
	{
		if (response)
		{
			new hisHouse = PlayerInfo[playerid][pHouseO];
			new itemID = houseUsedFurSlot[playerid];
			DestroyDynamicObject(HouseInfo[hisHouse][hFurObject][itemID]);
			SendClientMessage(playerid, COLOR_HOUSE, "Вие премахнахте мебел от къщата си.");
			HouseInfo[hisHouse][hFurSlot][itemID] = 0;
			SaveHouse(hisHouse);
		}
	}

	if (dialogid == DIALOG_HOUSE_FURNITURES_FINAL)
	{
		new hisHouse = PlayerInfo[playerid][pHouseO];
		if (!response)
		{
			DestroyDynamicObject(HouseInfo[hisHouse][hTempFurObj]);
		}

		if (response)
		{
			if (PlayerInfo[playerid][pCash] < houseObjectPrice[playerid])
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за тази вещ.");
				GivePlayerCash(playerid, -houseObjectPrice[playerid]);
				DestroyDynamicObject(HouseInfo[hisHouse][hTempFurObj]);
				return 1;
			}

			DestroyDynamicObject(HouseInfo[hisHouse][hTempFurObj]);
			HouseInfo[hisHouse][hFurObject][houseUsedFurSlot[playerid]] = CreateDynamicObject(objectID[playerid], tempHouseFurX[playerid], tempHouseFurY[playerid], tempHouseFurZ[playerid], tempHouseFurRX[playerid], tempHouseFurRY[playerid], tempHouseFurRZ[playerid]);
			HouseInfo[hisHouse][hFurSlot][houseUsedFurSlot[playerid]] = 1;
			HouseInfo[hisHouse][hFurID][houseUsedFurSlot[playerid]] = objectID[playerid];
			HouseInfo[hisHouse][hFurX][houseUsedFurSlot[playerid]] = tempHouseFurX[playerid];
			HouseInfo[hisHouse][hFurY][houseUsedFurSlot[playerid]] = tempHouseFurY[playerid];
			HouseInfo[hisHouse][hFurZ][houseUsedFurSlot[playerid]] = tempHouseFurZ[playerid];
			HouseInfo[hisHouse][hFurRX][houseUsedFurSlot[playerid]] = tempHouseFurRX[playerid];
			HouseInfo[hisHouse][hFurRY][houseUsedFurSlot[playerid]] = tempHouseFurRY[playerid];
			HouseInfo[hisHouse][hFurRZ][houseUsedFurSlot[playerid]] = tempHouseFurRZ[playerid];
			SaveHouse(hisHouse);
			new string256[256];
			format(string256, 256, "Вие добавихте мебел в къщата си за $%d.", houseObjectPrice[playerid]);
			SendClientMessage(playerid, COLOR_HOUSE, string256);
			GivePlayerCash(playerid, -houseObjectPrice[playerid]);
		}
	}

	if (dialogid == DIALOG_HOUSE_FURNITURES_SLOT)
	{
		if (response)
		{
			new string256[256];
			new string2230result[2230];
			new string2230[512];
			new hisHouse = PlayerInfo[playerid][pHouseO];

			//
			new isSetObject = HouseInfo[hisHouse][hFurSlot][listitem];
			houseUsedFurSlot[playerid] = listitem;
			if (isSetObject == 1)
			{
				format(string256, 256, "{FFFF00}Искате ли да премахнете този обект от къщата си?");
				ShowPlayerDialog(playerid, DIALOG_HOUSE_FURNITURES_REMOVE, DIALOG_STYLE_MSGBOX, "{FFFFFF}Furnitures", string256, "Премахни", "Излез");
			}
			else if (isSetObject == 0)
			{
				format(string2230, 512, "{FFFFFF}Снимка 1: {40BF00}$45\n");
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Снимка 2: {40BF00}$45\n");
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Диван 1: {40BF00}$75\n");
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Диван 2: {40BF00}$75\n");
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Маса 1: {40BF00}$85\n");
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Маса 2: {40BF00}$85\n");
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Лампи 1: {40BF00}$95\n");
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Лампи 2: {40BF00}$95\n");
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Баскетболен кош: {40BF00}$100\n");
				strcat(string2230result, string2230);
				//new
				format(string2230, 512, "{FFFFFF}Карта, скица: {40BF00}$50\n");	//3111
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Шкаф: {40BF00}$50\n");	//2167
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Дъска: {40BF00}$60\n");	//2737
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Напитки: {40BF00}$60\n");	//2531
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Легло: {40BF00}$70\n");	//11720
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Растение: {40BF00}$60\n");	//2176
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Полилей: {40BF00}$70\n");	//2073
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Статуя, лъв: {40BF00}$100\n");	//3471
				strcat(string2230result, string2230);
				format(string2230, 512, "{FFFFFF}Плакат: {40BF00}$40\n");	//2691
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, DIALOG_HOUSE_FURNITURES_ADDOBJECT, DIALOG_STYLE_LIST, "{EBEBEB}House furnitures | Добавяне:", string2230result, "Напред", "Затвори");
			}

			//

		}
	}

	if (dialogid == DIALOG_BUYCLOTHES_MENU)
	{
		if (response)
		{
			new clothID = buyClothesSelect[playerid];
			new itsPrice = BuyClothesInfo[playerid] [clothID][buycPrice];
			new stringBuy[256];
			if (PlayerInfo[playerid][pCash] < itsPrice)
			{
				format(stringBuy, 256, "{ffffff}Вие нямате достатъчно пари за тази поръчка. Трябват ви {40BF00}$%d", itsPrice);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Clothes", stringBuy, "ОК", "");
				return 1;
			}

			new freeSlot = GetPlayerClothesFreeSlot(playerid);
			if (freeSlot == -1)
			{
				format(stringBuy, 256, "{ffffff}Вие нямате достатъчно място в гардероба!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Clothes", stringBuy, "ОК", "");
				return 1;
			}

			new skinID = BuyClothesInfo[playerid] [clothID][buycModel];
			if (DoesPlayerHaveSkin(playerid, skinID))
			{
				format(stringBuy, 256, "{ffffff}Вие вече имате това облекло!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Clothes", stringBuy, "ОК", "");
				return 1;
			}

			format(stringBuy, 256, "{ffffff}Вие си купихте ново обклекло за {FF0000}$%d\n{FFFFFF}Използвайте /myclothes за достъп до дрехите ви!", itsPrice);
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Clothes", stringBuy, "ОК", "");
			GivePlayerCash(playerid, -itsPrice);
			PlayerInfo[playerid][pNormalSkin] = skinID;
			SetPlayerSkin(playerid, skinID);
			PlayerInfo[playerid][pClothes][freeSlot] = skinID;
		}
	}

	if (dialogid == DIALOG_HOUSE_FURNITURES_ADDOBJECT)
	{
		switch (listitem)
		{
			case 0:
				{
					objectID[playerid] = 2258;
					houseObjectPrice[playerid] = 45;
				}

			case 1:
				{
					objectID[playerid] = 2283;
					houseObjectPrice[playerid] = 45;
				}

			case 2:
				{
					objectID[playerid] = 1762;
					houseObjectPrice[playerid] = 75;
				}

			case 3:
				{
					objectID[playerid] = 11717;
					houseObjectPrice[playerid] = 75;
				}

			case 4:
				{
					objectID[playerid] = 941;
					houseObjectPrice[playerid] = 85;
				}

			case 5:
				{
					objectID[playerid] = 936;
					houseObjectPrice[playerid] = 85;
				}

			case 6:
				{
					objectID[playerid] = 2072;
					houseObjectPrice[playerid] = 95;
				}

			case 7:
				{
					objectID[playerid] = 2071;
					houseObjectPrice[playerid] = 95;
				}

			case 8:
				{
					objectID[playerid] = 946;
					houseObjectPrice[playerid] = 100;
				}

				//new
			case 9:
				{
					objectID[playerid] = 3111;
					houseObjectPrice[playerid] = 50;
				}

			case 10:
				{
					objectID[playerid] = 2167;
					houseObjectPrice[playerid] = 50;
				}

			case 11:
				{
					objectID[playerid] = 2737;
					houseObjectPrice[playerid] = 60;
				}

			case 12:
				{
					objectID[playerid] = 2531;
					houseObjectPrice[playerid] = 60;
				}

			case 13:
				{
					objectID[playerid] = 11720;
					houseObjectPrice[playerid] = 70;
				}

			case 14:
				{
					objectID[playerid] = 2176;
					houseObjectPrice[playerid] = 60;
				}

			case 15:
				{
					objectID[playerid] = 2073;
					houseObjectPrice[playerid] = 70;
				}

			case 16:
				{
					objectID[playerid] = 3471;
					houseObjectPrice[playerid] = 100;
				}

			case 17:
				{
					objectID[playerid] = 2691;
					houseObjectPrice[playerid] = 40;
				}
		}

		if (response)
		{
			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);
			X += 1.1;
			Y += 1.1;
			new hisHouse = PlayerInfo[playerid][pHouseO];
			HouseInfo[hisHouse][hTempFurObj] = CreateDynamicObject(objectID[playerid], X, Y, Z, 0, 0, 0, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid));
			EditDynamicObject(playerid, HouseInfo[hisHouse][hTempFurObj]);
		}
	}

	if (dialogid == DIALOG_CLOTHES_HATS)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						SetPlayerAttachedObject(playerid, 3, 18926, 2);
					}

				case 1:
					{
						SetPlayerAttachedObject(playerid, 3, 18927, 2);
					}

				case 2:
					{
						SetPlayerAttachedObject(playerid, 3, 18928, 2);
					}

				case 3:
					{
						SetPlayerAttachedObject(playerid, 3, 18929, 2);
					}

				case 4:
					{
						SetPlayerAttachedObject(playerid, 3, 18930, 2);
					}
			}
		}

		EditAttachedObject(playerid, 3);
	}

	if (dialogid == DIALOG_CLOTHES_WATCHES)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						SetPlayerAttachedObject(playerid, 4, 19042, 6, 0, 0, 0, 125, 125, -40);
					}

				case 1:
					{
						SetPlayerAttachedObject(playerid, 4, 19039, 6, 0, 0, 0, 125, 125, -40);
					}

				case 2:
					{
						SetPlayerAttachedObject(playerid, 4, 19053, 6, 0, 0, 0, 125, 125, -40);
					}

				case 3:
					{
						SetPlayerAttachedObject(playerid, 4, 19043, 6, 0, 0, 0, 125, 125, -40);
					}

				case 4:
					{
						SetPlayerAttachedObject(playerid, 4, 19041, 6, 0, 0, 0, 125, 125, -40);
					}
			}
		}

		EditAttachedObject(playerid, 4);
	}

	if (dialogid == DIALOG_CLOTHES_MASKS)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						SetPlayerAttachedObject(playerid, 5, 18911, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858);
					}

				case 1:
					{
						SetPlayerAttachedObject(playerid, 5, 18912, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858);
					}

				case 2:
					{
						SetPlayerAttachedObject(playerid, 5, 18913, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858);
					}

				case 3:
					{
						SetPlayerAttachedObject(playerid, 5, 18914, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858);
					}

				case 4:
					{
						SetPlayerAttachedObject(playerid, 5, 18915, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858);
					}
			}
		}

		EditAttachedObject(playerid, 5);
	}

	if (dialogid == DIALOG_CLOTHES_GLASSES)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						SetPlayerAttachedObject(playerid, 6, 19006, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
					}

				case 1:
					{
						SetPlayerAttachedObject(playerid, 6, 19007, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
					}

				case 2:
					{
						SetPlayerAttachedObject(playerid, 6, 19008, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
					}

				case 3:
					{
						SetPlayerAttachedObject(playerid, 6, 19009, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
					}

				case 4:
					{
						SetPlayerAttachedObject(playerid, 6, 19010, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
					}
			}
		}

		EditAttachedObject(playerid, 6);
	}

	if (dialogid == DIALOG_BUYBIKE_2)
	{
		if (response)
		{
			new string256[256];
			new vehID = buyVehFromStoreIndex[playerid];
			if (GetPrivateVehsNumber(playerid) >= 3)
			{
				format(string256, 256, "Вие вече имате 3 лични превозни средства и не можете да си купите ново!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Bike Store", string256, "Close", "");
				SetPlayerVirtualWorld(playerid, 501);
				inBuyVehVW[playerid] = -1;
				if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
				SetCameraBehindPlayer(playerid);
				return 1;
			}

			if (PlayerInfo[playerid][pLevel] < sellBikeFromStoreInfo[vehID][sbVehLevel])
			{
				format(string256, 256, "Нямате достатъчно Level за да си позволите това превозно средство!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Bike Store", string256, "Close", "");
				SetPlayerVirtualWorld(playerid, 501);
				inBuyVehVW[playerid] = -1;
				if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
				SetCameraBehindPlayer(playerid);
				return 1;
			}

			if (PlayerInfo[playerid][pCash] < sellBikeFromStoreInfo[vehID][sbVehPrice])
			{
				format(string256, 256, "Нямате достатъчно пари за да си позволите това превозно средство!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Bike Store", string256, "Close", "");
				SetPlayerVirtualWorld(playerid, 501);
				inBuyVehVW[playerid] = -1;
				if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
				SetCameraBehindPlayer(playerid);
				return 1;
			}

			new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
			new oldVehID = unusedPrivateVehID;
			BuyBikeFromStore(playerid);
			new hisNewVehicle = PrivateVehInfo[oldVehID][vVeh];
			SendClientMessage(playerid, COLOR_PRIVATEVEH, "Превозното ти средство е паркирано отвън сградата!");
			SetVehiclePos(hisNewVehicle, 703.8214, -525.2336, 15.7632);
			SetPlayerVirtualWorld(playerid, 501);
			inBuyVehVW[playerid] = -1;
			if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
			SetCameraBehindPlayer(playerid);
		}
		else if (!response)
		{
			SetPlayerVirtualWorld(playerid, 501);
			inBuyVehVW[playerid] = -1;
			if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
			SetCameraBehindPlayer(playerid);
		}
	}

	if (dialogid == DIALOG_BUYBIKE)
	{
		if (response)
		{
			new string556[556];
			new vehID = buyVehFromStoreIndex[playerid];
			new vehPrice = sellBikeFromStoreInfo[vehID][sbVehPrice];
			new vehName[70];
			format(vehName, 70, "%s", sellBikeFromStoreInfo[vehID][sbVehName]);
			format(string556, 556, "{FFFFFF}На път сте да си купите ново превозно средство!\nСигурен ли сте?\n\nЗа да си купите превозното средство, натиснете {40BF00}'Buy'{FFFFFF}, а за да се откажете {FF0000}'Close'\n{FFFFFF}Vehicle Name: %s\nPrice: {40BF00}$%d", vehName, vehPrice);
			ShowPlayerDialog(playerid, DIALOG_BUYBIKE_2, DIALOG_STYLE_MSGBOX, "Bike Store", string556, "Buy", "Close");
		}
		else if (!response)
		{
			new maxVehs = MAX_SELLBIKE - 1;
			if (buyVehFromStoreIndex[playerid] == maxVehs)
			{
				buyVehFromStoreIndex[playerid] = 0;
			}
			else if (buyVehFromStoreIndex[playerid] < MAX_SELLBIKE)
			{
				buyVehFromStoreIndex[playerid] += 1;
			}

			new string556[556];
			new vehName[70];
			new vehID = buyVehFromStoreIndex[playerid];
			new vehModelID = sellBikeFromStoreInfo[vehID][sbVehModel];
			format(vehName, 70, "%s", sellBikeFromStoreInfo[vehID][sbVehName]);
			CreateVehicleForBuying(playerid, vehModelID);
			new vehPrice = sellBikeFromStoreInfo[vehID][sbVehPrice];
			new vehLevel = sellBikeFromStoreInfo[vehID][sbVehLevel];
			format(string556, 556, "{FFFFFF}Vehicle Name: %s\nPrice: {40BF00}$%d\n{FFFFFF}Level: {FFFF00}%d", vehName, vehPrice, vehLevel);
			ShowPlayerDialog(playerid, DIALOG_BUYBIKE, DIALOG_STYLE_MSGBOX, "Bike Store", string556, "Buy", "Next");
		}
	}

	if (dialogid == DIALOG_BUYCAR)
	{
		if (response)
		{
			new string556[556];
			new vehID = buyVehFromStoreIndex[playerid];
			new vehPrice = sellCarFromStoreInfo[vehID][sbVehPrice];
			new vehName[70];
			format(vehName, 70, "%s", sellCarFromStoreInfo[vehID][sbVehName]);
			format(string556, 556, "{FFFFFF}На път сте да си купите ново превозно средство!\nСигурен ли сте?\n\nЗа да си купите превозното средство, натиснете {40BF00}'Buy'{FFFFFF}, а за да се откажете {FF0000}'Close'\n{FFFFFF}Vehicle Name: %s\nPrice: {40BF00}$%d", vehName, vehPrice);
			ShowPlayerDialog(playerid, DIALOG_BUYCAR_2, DIALOG_STYLE_MSGBOX, "Veh Store", string556, "Buy", "Close");
		}
		else if (!response)
		{
			new maxVehs = MAX_SELLBIKE - 1;
			if (buyVehFromStoreIndex[playerid] == maxVehs)
			{
				buyVehFromStoreIndex[playerid] = 0;
			}
			else if (buyVehFromStoreIndex[playerid] < MAX_SELLBIKE)
			{
				buyVehFromStoreIndex[playerid] += 1;
			}

			new string556[556];
			new vehName[70];
			new vehID = buyVehFromStoreIndex[playerid];
			new vehModelID = sellCarFromStoreInfo[vehID][sbVehModel];
			format(vehName, 70, "%s", sellCarFromStoreInfo[vehID][sbVehName]);
			CreateVehicleForBuying(playerid, vehModelID);
			new vehPrice = sellCarFromStoreInfo[vehID][sbVehPrice];
			new vehLevel = sellCarFromStoreInfo[vehID][sbVehLevel];
			format(string556, 556, "{FFFFFF}Vehicle Name: %s\nPrice: {40BF00}$%d\n{FFFFFF}Level: {FFFF00}%d", vehName, vehPrice, vehLevel);
			ShowPlayerDialog(playerid, DIALOG_BUYCAR, DIALOG_STYLE_MSGBOX, "Veh Store", string556, "Buy", "Next");
		}
	}

	if (dialogid == DIALOG_BUYSTICKER)
	{
		if (response)
		{
			if (strlen(inputtext) < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вие въведохте 0 символа! Въведете текст!");
				return 1;
			}

			if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте в превозно средство!");
			if (vehicleStickerPlayer[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента намествате друг стикер!");
			//
			new vehicleid = GetPlayerVehicleID(playerid);
			new Float: X, Float: Y, Float: Z;
			GetVehiclePos(vehicleid, X, Y, Z);
			vehicleStickerPlayer[playerid] = CreateDynamicObject(19482, X, Y, Z, 0.0, 0.0, 0.0, 0);
			SetObjectMaterialText(vehicleStickerPlayer[playerid], inputtext, 0, OBJECT_MATERIAL_SIZE_512x512, "Diploma", 100, 0, 0xFFFFFFFF, 0, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
			//AttachDynamicObjectToVehicle(vehicleStickerPlayer[playerid], vehicleid, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0);
			EditDynamicObject(playerid, vehicleStickerPlayer[playerid]);
			SendClientMessage(playerid, COLOR_WHITE, "{26CE01}Наместете стикера, както желаете.");
			//
		}
	}

	if (dialogid == DIALOG_BUYNEON)
	{
		if (response)
		{
			if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в превозно средство!");
			if (IsPlayerInHisPrivateVeh(playerid) == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в твое лично превозно средство!");
			if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 510 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 481
				//motors
				||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 462 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 463 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 521 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 423 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 522 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 581 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 586 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 461 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 448 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 468
				//flying
				||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 476 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 448 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 497 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 501 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 511 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 519 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 520 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 548 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 553 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 465 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 464 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 469 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 563 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 577 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 592 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 593 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 417 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 447 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 425)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство не може да има неон!");
				return 1;
			}

			new vehicleid = GetPlayerVehicleID(playerid);
			new specialIndex = VehicleInfo[vehicleid][vPrivateID];
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pCash] < 14230)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за този неон!");
							return 1;
						}

						GivePlayerCash(playerid, -14230);
						if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Старият неон е премахнат! Заменен е с новия!");
						}

						PrivateVehInfo[specialIndex][vVehNeonColor] = 18647;
						SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Вие добавихте неон към вашето превозно средство! Цветът на неона е червен!");
					}

				case 1:
					{
						if (PlayerInfo[playerid][pCash] < 14430)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за този неон!");
							return 1;
						}

						GivePlayerCash(playerid, -14430);
						if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Старият неон е премахнат! Заменен е с новия!");
						}

						PrivateVehInfo[specialIndex][vVehNeonColor] = 18648;
						SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Вие добавихте неон към вашето превозно средство! Цветът на неона е син!");
					}

				case 2:
					{
						if (PlayerInfo[playerid][pCash] < 14630)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за този неон!");
							return 1;
						}

						GivePlayerCash(playerid, -14630);
						if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Старият неон е премахнат! Заменен е с новия!");
						}

						PrivateVehInfo[specialIndex][vVehNeonColor] = 18649;
						SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Вие добавихте неон към вашето превозно средство! Цветът на неона е зелен!");
					}

				case 3:
					{
						if (PlayerInfo[playerid][pCash] < 14830)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за този неон!");
							return 1;
						}

						GivePlayerCash(playerid, -14830);
						if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Старият неон е премахнат! Заменен е с новия!");
						}

						PrivateVehInfo[specialIndex][vVehNeonColor] = 18650;
						SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Вие добавихте неон към вашето превозно средство! Цветът на неона е жълт!");
					}

				case 4:
					{
						if (PlayerInfo[playerid][pCash] < 141230)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за този неон!");
							return 1;
						}

						GivePlayerCash(playerid, -141230);
						if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Старият неон е премахнат! Заменен е с новия!");
						}

						PrivateVehInfo[specialIndex][vVehNeonColor] = 18651;
						SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Вие добавихте неон към вашето превозно средство! Цветът на неона е розов!");
					}

				case 5:
					{
						if (PlayerInfo[playerid][pCash] < 141430)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно пари за този неон!");
							return 1;
						}

						GivePlayerCash(playerid, -141430);
						if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Старият неон е премахнат! Заменен е с новия!");
						}

						PrivateVehInfo[specialIndex][vVehNeonColor] = 18652;
						SendClientMessage(playerid, COLOR_LIGHTBLUE3, "Вие добавихте неон към вашето превозно средство! Цветът на неона е бял!");
					}
			}

			LoadVehicleNeon(vehicleid);
		}
	}

	if (dialogid == DIALOG_BUYCAR_2)
	{
		if (response)
		{
			new string256[256];
			new vehID = buyVehFromStoreIndex[playerid];
			if (GetPrivateVehsNumber(playerid) >= 3)
			{
				format(string256, 256, "Вие вече имате 3 лични превозни средства и не можете да си купите ново!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Veh Store", string256, "Close", "");
				SetPlayerVirtualWorld(playerid, 0);
				inBuyVehVW[playerid] = -1;
				if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
				SetCameraBehindPlayer(playerid);
				return 1;
			}

			if (PlayerInfo[playerid][pLevel] < sellCarFromStoreInfo[vehID][sbVehLevel])
			{
				format(string256, 256, "Нямате достатъчно Level за да си позволите това превозно средство!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Veh Store", string256, "Close", "");
				SetPlayerVirtualWorld(playerid, 0);
				inBuyVehVW[playerid] = -1;
				if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
				SetCameraBehindPlayer(playerid);
				return 1;
			}

			if (PlayerInfo[playerid][pCash] < sellCarFromStoreInfo[vehID][sbVehPrice])
			{
				format(string256, 256, "Нямате достатъчно пари за да си позволите това превозно средство!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Veh Store", string256, "Close", "");
				SetPlayerVirtualWorld(playerid, 0);
				inBuyVehVW[playerid] = -1;
				if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
				SetCameraBehindPlayer(playerid);
				return 1;
			}

			new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
			new oldVehID = unusedPrivateVehID;
			BuyCarFromStore(playerid);
			new hisNewVehicle = PrivateVehInfo[oldVehID][vVeh];
			SendClientMessage(playerid, COLOR_PRIVATEVEH, "Превозното ти средство е паркирано до сградата!");
			SetVehiclePos(hisNewVehicle, 2124.2815, -1128.2109, 25.2091);
			SetPlayerVirtualWorld(playerid, 0);
			inBuyVehVW[playerid] = -1;
			if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
			SetCameraBehindPlayer(playerid);
		}
		else if (!response)
		{
			SetPlayerVirtualWorld(playerid, 0);
			inBuyVehVW[playerid] = -1;
			if (playerVehToBuy[playerid] != -1) DestroyVehicle(playerVehToBuy[playerid]);
			SetCameraBehindPlayer(playerid);
		}
	}

	if (dialogid == DIALOG_MY_CLOTHES)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						OpenGetClothes(playerid);
					}

				case 1:
					{
						OpenDropClothes(playerid);
					}
			}
		}
	}

	if (dialogid == DIALOG_MY_ITEMS)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pHats] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате пакет шапки.");
						new string256[256];
						format(string256, 256, "{FFFFFF}Вид 1\nВид 2\nВид 3\nВид 4\nВид 5");
						ShowPlayerDialog(playerid, DIALOG_CLOTHES_HATS, DIALOG_STYLE_LIST, "ITEMS", string256, "Вземи", "Излез");
					}

				case 1:
					{
						if (PlayerInfo[playerid][pWatches] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате пакет часовници.");
						new string256[256];
						format(string256, 256, "{FFFFFF}Вид 1\nВид 2\nВид 3\nВид 4\nВид 5");
						ShowPlayerDialog(playerid, DIALOG_CLOTHES_WATCHES, DIALOG_STYLE_LIST, "ITEMS", string256, "Вземи", "Излез");
					}

				case 2:
					{
						if (PlayerInfo[playerid][pMasks] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате пакет маски.");
						new string256[256];
						format(string256, 256, "{FFFFFF}Вид 1\nВид 2\nВид 3\nВид 4\nВид 5");
						ShowPlayerDialog(playerid, DIALOG_CLOTHES_MASKS, DIALOG_STYLE_LIST, "ITEMS", string256, "Вземи", "Излез");
					}

				case 3:
					{
						if (PlayerInfo[playerid][pGlasses] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате пакет очила.");
						new string256[256];
						format(string256, 256, "{FFFFFF}Вид 1\nВид 2\nВид 3\nВид 4\nВид 5");
						ShowPlayerDialog(playerid, DIALOG_CLOTHES_GLASSES, DIALOG_STYLE_LIST, "ITEMS", string256, "Вземи", "Излез");
					}

				case 4:
					{
						for (new i; i < 7; i++)
						{
							RemovePlayerAttachedObject(playerid, i);
						}
					}
			}
		}
	}

	if (dialogid == DIALOG_CLOTHES_STORE)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pHats] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате пакет шапки.");
						if (PlayerInfo[playerid][pCash] < 30) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари.");
						PlayerInfo[playerid][pHats] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте пакет шапки за $30");
						GivePlayerCash(playerid, -30);
					}

				case 1:
					{
						if (PlayerInfo[playerid][pWatches] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате пакет часовници.");
						if (PlayerInfo[playerid][pCash] < 40) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари.");
						PlayerInfo[playerid][pWatches] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте пакет часовници за $40");
						GivePlayerCash(playerid, -40);
					}

				case 2:
					{
						if (PlayerInfo[playerid][pMasks] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате пакет маски.");
						if (PlayerInfo[playerid][pCash] < 50) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари.");
						PlayerInfo[playerid][pMasks] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте пакет маски за $50");
						GivePlayerCash(playerid, -50);
					}

				case 3:
					{
						if (PlayerInfo[playerid][pGlasses] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате пакет очила.");
						if (PlayerInfo[playerid][pCash] < 70) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари.");
						PlayerInfo[playerid][pGlasses] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте пакет очила за $70");
						GivePlayerCash(playerid, -70);
					}
			}

			SendClientMessage(playerid, COLOR_LIGHTRED, "Използвайте /myitems за достъп до аксесоарите ви.");
		}
	}

	if (dialogid == DIALOG_BUYVEH)
	{
		new string256[256];
		new vehicleid = GetPlayerVehicleID(playerid);
		new vehicleidSellCar = VehicleInfo[vehicleid][vForSaleID];
		if (!response)
		{
			RemovePlayerFromVehicle(playerid);
		}

		if (response)
		{
			if (PlayerInfo[playerid][pLevel] < SellCarInfo[vehicleidSellCar][scVehLevel])
			{
				format(string256, 256, "Вие нямате достатъчно голямо ниво за това превозно средство!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Излез", "");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}

			if (PlayerInfo[playerid][pCash] < SellCarInfo[vehicleidSellCar][scVehPrice])
			{
				format(string256, 256, "Вие нямате достатъчно пари за това превозно средство!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Излез", "");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}

			if (GetPrivateVehsNumber(playerid) >= 3)
			{
				format(string256, 256, "Вие вече имате 3 лични превозни средства и не можете да си купите ново!");
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Продажба", string256, "Излез", "");
				RemovePlayerFromVehicle(playerid);
				return 1;
			}

			GivePlayerCash(playerid, -SellCarInfo[vehicleidSellCar][scVehPrice]);
			new color1 = SellCarInfo[vehicleidSellCar][scVehC1], color2 = SellCarInfo[vehicleidSellCar][scVehC2];
			new accountNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, accountNickname, 25);
			new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
			format(PrivateVehInfo[unusedPrivateVehID][vOwnerName], 256, accountNickname);
			new freeSlot = GetPlayerPrivateVehFreeSlot(playerid);
			new realFreeSlot = (freeSlot + 1);
			format(string256, 256, "Успешна поръчка! Превозното ви средство е в слот {ffffff}%d.", realFreeSlot);
			SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
			PlayerInfo[playerid][pPrivateVeh][freeSlot] = unusedPrivateVehID;
			PrivateVehInfo[unusedPrivateVehID][vOwner] = 1;
			PrivateVehInfo[unusedPrivateVehID][vVehID] = GetVehicleModel(vehicleid);	//goto
			PrivateVehInfo[unusedPrivateVehID][vVehC1] = color1;
			PrivateVehInfo[unusedPrivateVehID][vVehC2] = color2;
			PrivateVehInfo[unusedPrivateVehID][vVehPaintJob] = -1;
			PrivateVehInfo[unusedPrivateVehID][vLocked] = 1;
			DestroyVehicle(PrivateVehInfo[unusedPrivateVehID][vVeh]);
			PrivateVehInfo[unusedPrivateVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[unusedPrivateVehID][vVehID], PrivateVehInfo[unusedPrivateVehID][vVehX], PrivateVehInfo[unusedPrivateVehID][vVehY], PrivateVehInfo[unusedPrivateVehID][vVehZ], PrivateVehInfo[unusedPrivateVehID][vVehA], PrivateVehInfo[unusedPrivateVehID][vVehC1], PrivateVehInfo[unusedPrivateVehID][vVehC2], RESPAWN_VEHS_SECONDS);
			new vehicle = PrivateVehInfo[unusedPrivateVehID][vVeh];
			VehicleInfo[vehicle][vPrivateID] = unusedPrivateVehID;
			VehicleInfo[vehicle][vIsPrivate] = 1;
			SavePrivateVehicle(unusedPrivateVehID);
			RemovePlayerFromVehicle(playerid);
			//PlayerInfo[playerid][pPrivateVehs]+=1;
			Inventory_Add(playerid, "Ключове за кола", 11746, 1);
			PlayerInfo[playerid][pPrivateVehFreeSlot] += 1;
			if (PlayerInfo[playerid][pCarGetPast] == 0) PlayerInfo[playerid][pCarGetPast] = 1;
			SendClientMessage(playerid, COLOR_PRIVATEVEH, "Използвайте {ffffff}/getmycar {BFFF80}за да пуснете превозното си средство до автосалона!");
			SendClientMessage(playerid, COLOR_PRIVATEVEH, "За да видите всички команди, отворете /help >[Превозни средства]");
		}
	}

	if (dialogid == DIALOG_LOTTO)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pCash] < 15) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $15 за лотарията на момента.");
						GivePlayerCash(playerid, -15);
						new string256[256];
						format(string256, 256, "* %s изтърка билетче от лотарията!", RealName(playerid));
						SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
						new randomNum[6];new randomNumLotto[6];new randomReward[6];

						randomNum[0] = randomex(1, 32);
						randomNum[1] = randomex(1, 32);
						randomNum[2] = randomex(1, 32);
						randomNum[3] = randomex(1, 32);
						randomNum[4] = randomex(1, 32);
						randomNum[5] = randomex(1, 32);

						randomNumLotto[0] = randomex(1, 32);
						randomNumLotto[1] = randomex(1, 32);
						randomNumLotto[2] = randomex(1, 32);
						randomNumLotto[3] = randomex(1, 32);
						randomNumLotto[4] = randomex(1, 32);
						randomNumLotto[5] = randomex(1, 32);

						randomReward[0] = randomex(1, 5);
						randomReward[1] = randomex(1, 11);
						randomReward[2] = randomex(1, 11);
						randomReward[3] = randomex(1, 13);
						randomReward[4] = randomex(1, 15);
						randomReward[5] = randomex(1, 12);

						format(string256, 1200, "{00ff00}                   Лотария на мига\n{FF0000}Ако имате някои числа от тези долу,\nто печелите награда.\n{b031a5}%d, %d, %d, %d, %d, %d\n{4667e0}Вашите числа са %d, %d, %d, %d, %d, %d\n\n\n{00ff00}Награди: %d - $%d,\n%d - $%d,\n%d - $%d,\n%d - $%d,\n%d - $%d,\n%d - $%d",
							randomNumLotto[0], randomNumLotto[1], randomNumLotto[2], randomNumLotto[3], randomNumLotto[4], randomNumLotto[5],
							randomNum[0], randomNum[1], randomNum[2], randomNum[3], randomNum[4], randomNum[5],
							randomNumLotto[0], randomReward[0], randomNumLotto[1], randomReward[1], randomNumLotto[2], randomReward[2],
							randomNumLotto[3], randomReward[3], randomNumLotto[4], randomReward[4], randomNumLotto[5], randomReward[5]);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Лотария", string256, "OK", "");

						new allSum;
						for (new i; i < 6; i++)
						{
							for (new i2; i2 < 6; i2++)
							{
								if (randomNum[i] == randomNumLotto[i2])
								{
									GivePlayerCash(playerid, randomReward[i2]);
									allSum += randomReward[i2];
									break;
								}
							}
						}

						if (allSum > 0)
						{
							format(string256, 256, "~y~CONGRATS! ~g~YOU WON $%d", allSum);
							GameTextForPlayer(playerid, string256, 2000, 3);
						}
					}

				case 1:
					{
						new string256[256];
						format(string256, 256, "{FFFFFF}Моля, напишете с какво число ще играете в лотарията.\nМожете да играете с числата между {ffff00}1 и 64");
						ShowPlayerDialog(playerid, DIALOG_SELECT_LOTTO_NUM, DIALOG_STYLE_INPUT, "{FFFFFF}Лотария", string256, "Избери", "Затвори");
					}
			}
		}
	}

	if (dialogid == DIALOG_SELECT_LOTTO_NUM)
	{
		if (response)
		{
			if (PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $10 за да участвате във вечерната лотария.");
			if (lottoNumber[playerid] != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече участвате в лотарията.");
			new hisNumber = strval(inputtext);
			if (hisNumber < 1 || hisNumber > 64) return SendClientMessage(playerid, COLOR_GRAD1, "Числото трябва да бъде между 1 и 64.");
			GivePlayerCash(playerid, -10);
			new string256[256];
			format(string256, 256, "* %s регистрира билетче за лотарията!", RealName(playerid));
			SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
			format(string256, 256, "San Andreas Lottery: Вие си купихте билетче с число %d за лотарията! Не излизайте от сървъра за да не се анулира!", hisNumber);
			SendClientMessage(playerid, COLOR_LOTTO, string256);
			SendClientMessage(playerid, COLOR_LOTTO, "San Andreas Lottery: Лотарията се състои всеки час в 9-тата минута!");
			lottoNumber[playerid] = hisNumber;
		}
	}

	if (dialogid == DIALOG_GPS_2)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Police, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Los Santos Police.");
					}

				case 1:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Kmetstvo, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Кметството.");
					}

				case 2:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Army, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Армията в Los Santos.");
					}

				case 3:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Bank, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Банката.");
					}

				case 4:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, TheNews, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до San Andreas News.");
					}

				case 5:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Hospital, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Болницата.");
					}

				case 6:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, RobPoint, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Точката за обир.");
					}

				case 7:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Autosallon, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Автосалона.");
					}
			}
		}
	}

	if (dialogid == DIALOG_GPS_3)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, PizzaJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Pizzaboy Job.");
					}

				case 1:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, SweepJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Sweep Job.");
					}

				case 2:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, BusJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Bus Job.");
					}

				case 3:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, MechanicJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Mechanic Job.");
					}

				case 4:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, TaxiJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Taxi Job.");
					}

				case 5:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, DeliverJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Deliver Job.");
					}

				case 6:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, CoalmineJob, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Coalmine Job.");
					}
			}
		}
	}

	if (dialogid == DIALOG_GPS_4)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Crip, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Crip.");
					}

				case 1:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, WestCoastWheelers, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до West Coast Wheelers.");
					}

				case 2:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Vagos, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Vagos.");
					}

				case 3:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Ballas, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Ballas.");
					}

				case 4:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Mafia, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Mafia.");
					}
			}
		}
	}

	if (dialogid == DIALOG_GPS_5)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, GarageNeon, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Автосервиза за неон.");
					}

				case 1:
					{
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, Garage, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Автосервиза.");
					}
			}
		}
	}

	if (dialogid == DIALOG_GPS)
	{
		if (response)
		{
			switch (listitem)
			{
			 	//format(string456,456,"{FFFFFF}1. Важни места\n2. Места за работа\n3. Място за риболов\n4. Организации\n5. Автосервизи\n{FF0000}6. Изключи GPS-а");
				//ShowPlayerDialog(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "GPS:", string456, "Избери", "Назад");
				case 0:
					{
						new string456[456];
						format(string456, 456, "{FFFFFF}Los Santos Police\nКмеството\nАрмията в Los Santos\nБанката\nSan Andreas News\nБолницата\nТочка за обир\nАвтосалон");
						ShowPlayerDialog(playerid, DIALOG_GPS_2, DIALOG_STYLE_LIST, "GPS:", string456, "Избери", "Назад");
					}

				case 1:
					{
						new string456[456];
						format(string456, 456, "{FFFFFF}Pizzaboy Job\nSweep Job\nBus Job\nМеханик\nТаксиджия\nDeliver Job\nCoalmine Job");
						ShowPlayerDialog(playerid, DIALOG_GPS_3, DIALOG_STYLE_LIST, "GPS:", string456, "Избери", "Назад");
					}

				case 2:
					{
					 			//Fishing
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, FishingPlace, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до Мястото за риболов.");
					}

				case 3:
					{
					 			//DMV
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, DMV_LOCATION, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до DMV.");
					}

				case 4:
					{
					 			//DrugPoint
						gpsOn[playerid] = true;
						SetPlayerCheckpoint(playerid, PaintBall, 4.0);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Следвайте червения маркер за да отидете до PaintBall.");
					}

				case 5:
					{
						new string456[456];
						format(string456, 456, "{FFFFFF}Crip\nWest Coast Wheelers\nVagos\nBallas\nMafia");
						ShowPlayerDialog(playerid, DIALOG_GPS_4, DIALOG_STYLE_LIST, "GPS:", string456, "Избери", "Назад");
					}

				case 6:
					{
						new string456[456];
						format(string456, 456, "{FFFFFF}Автосервиз за {40BF00}Неон\n{FFFFFF}Обикновен автосервиз");
						ShowPlayerDialog(playerid, DIALOG_GPS_5, DIALOG_STYLE_LIST, "GPS:", string456, "Избери", "Назад");
					}

				case 7:
					{
						if (gpsOn[playerid] == false) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте включили GPS-а.");
						gpsOn[playerid] = false;
						DisablePlayerCheckpoint(playerid);
						SendClientMessage(playerid, COLOR_GPS, "[GPS] Вие си изключихте GPS-а.");
					}
			}
		}
	}

	if (dialogid == DIALOG_DRINKSSTORE)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -5);
						BizInfo[bizID][bEarnings] += 5;
						BizInfo[bizID][bStock] -= 1;
						SpecialActionWithCondition(playerid, SPECIAL_ACTION_DRINK_BEER);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте бира за $5.");
					}

				case 1:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -10);
						BizInfo[bizID][bEarnings] += 10;
						BizInfo[bizID][bStock] -= 1;
						SpecialActionWithCondition(playerid, SPECIAL_ACTION_DRINK_WINE);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте вино за $10.");
					}

				case 2:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -10);
						BizInfo[bizID][bEarnings] += 10;
						BizInfo[bizID][bStock] -= 1;
						SpecialActionWithCondition(playerid, SPECIAL_ACTION_DRINK_WINE);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте водка за $10.");
					}
			}
		}
	}

	if (dialogid == DIALOG_AMMUSTORE)
	{
		if (response)
		{
			if (PlayerInfo[playerid][pWepLic] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можем да ви предоставим оръжието, защото нямате лиценз!");
			switch (listitem)
			{
				case 0:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 5250) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно средства за да направите поръчката.");
						GivePlayerCash(playerid, -5250);
						BizInfo[bizID][bEarnings] += 5250;
						BizInfo[bizID][bStock] -= 1;
						GivePlayerWeapon(playerid, 23, 300);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си купихте пистолет със заглушител за $5250 (300 патрона)");
						if (PlayerInfo[playerid][pAchievement][ACHIEVEMENT_BUYLEGALWEAPON] == 0)
						{
							new string256[256];
							format(string256, 256, "Постижение: Купи си оръжие\n\nНаграда: 3 Exp");
							ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Achievement Unlocked", string256, "OK", "");
							PlayerInfo[playerid][pAchievement][ACHIEVEMENT_BUYLEGALWEAPON] = 1;
							GivePlayerExp(playerid, 3);
						}
					}

				case 1:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 7420) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно средства за да направите поръчката.");
						GivePlayerCash(playerid, -7420);
						BizInfo[bizID][bEarnings] += 7420;
						BizInfo[bizID][bStock] -= 1;
						GivePlayerWeapon(playerid, 29, 420);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си купихте MP5 за $5420 (500 патрона)");
						if (PlayerInfo[playerid][pAchievement][ACHIEVEMENT_BUYLEGALWEAPON] == 0)
						{
							new string256[256];
							format(string256, 256, "Постижение: Купи си легално оръжие\n\nНаграда: 3 Exp");
							ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Achievement Unlocked", string256, "OK", "");
							PlayerInfo[playerid][pAchievement][ACHIEVEMENT_BUYLEGALWEAPON] = 1;
							GivePlayerExp(playerid, 3);
						}
					}
			}
		}
	}

	if (dialogid == DIALOG_BUYTELENOR)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pPhone] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате телефон!");
						if (PlayerInfo[playerid][pCash] < 2000) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -2000);
						PlayerInfo[playerid][pPhone] = 1;
						PlayerInfo[playerid][pPhoneStatusOFF] = 0;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте телефон за $200. Използвайте /help за да видите командите за телефон");
						GivePlayerPhoneNumber(playerid);
						new string256[256];
						Inventory_Add(playerid, "Телефон", 330, 1);
						format(string256, 256, "Вашият тел. номер е %d. Винаги ще го има в /mydocs ако го забравите.", PlayerInfo[playerid][pPhoneNum]);
						SendClientMessage(playerid, COLOR_MAXLIGHTGREEN, string256);
					}

				case 1:
					{
						if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
						if (PlayerInfo[playerid][pCash] < 1000) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -1000);
						PlayerInfo[playerid][pTelenorMB] += 35;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте 35 MB Internet от Telenor!");
					}

				case 2:
					{
						if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
						if (PlayerInfo[playerid][pCash] < 2200) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -2200);
						PlayerInfo[playerid][pTelenorMB] += 135;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте 135 MB Internet от Telenor!");
					}
			}
		}
	}

	if (dialogid == DIALOG_BUYFISH)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pVudica] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате въдица.");
						if (PlayerInfo[playerid][pCash] < 50) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -50);
						BizInfo[bizID][bEarnings] += 50;
						BizInfo[bizID][bStock] -= 1;
						PlayerInfo[playerid][pVudica] = 1;
						SendClientMessage(playerid, COLOR_WHITE, "Вие си купихте въдица за риба на стойност {ff0000}$50");
					}

				case 1:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 31) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -31);
						BizInfo[bizID][bEarnings] += 31;
						BizInfo[bizID][bStock] -= 1;
						PlayerInfo[playerid][pStruv] += 10;
						SendClientMessage(playerid, COLOR_WHITE, "Вие си купихте 10 червея стръв на стойност {ff0000}$31");
					}
			}
		}
	}

	if (dialogid == DIALOG_BUYFOOD)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pCash] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $2 за да си купите хляб");
						ShowPlayerDialog(playerid, DIALOG_BUYFORHOMEORNOT, DIALOG_STYLE_LIST, "STORE", "За сега (бързо хранене)\nЗа вкъщи (инвентар)", "Напред", "Излез");
						buyFoodSelect[playerid] = 1;
					}

				case 1:
					{
						if (PlayerInfo[playerid][pCash] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $5 за да си купите сладкиш");
						ShowPlayerDialog(playerid, DIALOG_BUYFORHOMEORNOT, DIALOG_STYLE_LIST, "STORE", "За сега (бързо хранене)\nЗа вкъщи (инвентар)", "Напред", "Излез");
						buyFoodSelect[playerid] = 2;
					}

				case 2:
					{
						if (PlayerInfo[playerid][pCash] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $2 за да си купите месо");
						ShowPlayerDialog(playerid, DIALOG_BUYFORHOMEORNOT, DIALOG_STYLE_LIST, "STORE", "За сега (бързо хранене)\nЗа вкъщи (инвентар)", "Напред", "Излез");
						buyFoodSelect[playerid] = 3;
					}

				case 3:
					{
						if (PlayerInfo[playerid][pCash] < 5) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $5 за да си купите бургер");
						ShowPlayerDialog(playerid, DIALOG_BUYFORHOMEORNOT, DIALOG_STYLE_LIST, "STORE", "За сега (бързо хранене)\nЗа вкъщи (инвентар)", "Напред", "Излез");
						buyFoodSelect[playerid] = 4;
					}
			}
		}
	}

	if (dialogid == DIALOG_PHONE_CALL)
	{
		new string256[256];
		if (!IsNumeric(inputtext))
		{
			format(string256, 256, "{ffffff}Напишете само цифри.");
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Телефон", string256, "Затвори", "");
			return 1;
		}

		new phoneNum = strval(inputtext);
		CallPhone(playerid, phoneNum);
	}

	if (dialogid == DIALOG_INV_SHOW_DOCS)
	{
		new string256[256];
		if (!IsNumeric(inputtext))
		{
			format(string256, 256, "{ffffff}Напишете само цифри.");
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Документи", string256, "Затвори", "");
			return 1;
		}

		new giveplayerID = strval(inputtext);
		if (giveplayerID == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GRAD1, "Този играч, който сте въвели не в онлайн в момента!");
		if (giveplayerID == playerid) return SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да предложиш на себе си документи.");
		if (!CorDetector(5.5, playerid, giveplayerID)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте достатъчно близо до този човек.");
		DocsOffer[giveplayerID] = playerid;
		new giveplayerIDNickname[MAX_PLAYER_NAME];
		GetPlayerName(giveplayerID, giveplayerIDNickname, 25);
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, accountNickname, 25);
		format(string256, 256, "[Документи] Ти предложи на %s документите си.", giveplayerIDNickname);
		SendClientMessage(playerid, COLOR_LIGHTRED, string256);
		format(string256, 256, "[Документи] %s ти предложи да му видиш документите.", accountNickname);
		SendClientMessage(giveplayerID, COLOR_LIGHTRED, string256);
		SendClientMessage(giveplayerID, COLOR_LIGHTRED, "Използвай /acceptdocs за да приемеш");
	}

	if (dialogid == DIALOG_INVENTORY_MENU)
	{
		if (response)
		{
			new string256[256];
			new itemid = inventorySelect[playerid], string[64];
			format(string, 64, "%s", InventoryInfo[playerid] [itemid][invItem]);
			switch (listitem)
			{
				case 0:	//Използвай - open
					{
						format(string256, 256, "[Инвентар] {ffffff}Вие извадихте предмет {40BF00}%s{ffffff} и го използвахте", string);
						SendClientMessage(playerid, COLOR_LIGHTRED2, string256);
						//other
						if (strcmp(string, "Ключове за кола", true) == 0)
						{
							LockOrUnlockVehicle(playerid);
							return 1;
						}

						if (strcmp(string, "Документи", true) == 0)
						{
							new accountNickname[MAX_PLAYER_NAME];
							GetPlayerName(playerid, accountNickname, 25);
							format(string256, 256, "%s си извади документите.", accountNickname);
							SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
							ShowPlayerDialog(playerid, DIALOG_INV_SHOW_DOCS, DIALOG_STYLE_INPUT, "{FFFF00}Документи", "{FFFFFF}Напът си да си предадеш документите за проверка!\nНапиши ID на играча на който ще си предадеш документите", "Избери", "Назад");
							return 1;
						}

						if (strcmp(string, "Първа помощ", true) == 0)
						{
							new Float: health;
							GetPlayerHealth(playerid, health);
							if (health >= 100) return SendClientMessage(playerid, COLOR_GRAD2, "Вие сте в отлично здраве и нямате нужда от първа помощ.");
							SetPlayerHealth(playerid, 100);
							ApplyAnimationWithCondition(playerid, "SWAT", "gnstwall_injurd", 4.0, 1, 0, 0, 0, 0);
						}

						if (strcmp(string, "Спрей", true) == 0)
						{
							if (!AttackGraffit(playerid)) return 1;
						}

						if (strcmp(string, "Инструменти за кола", true) == 0)
						{
							if (IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD2, "Излезте от превозното средство първо.");
							if (IsPlayerInRangeOfAnyVehicle(playerid, 6.0) == -1) return SendClientMessage(playerid, COLOR_GRAD2, "Не сте близо до никое превозно средство.");
							new vehicleid = IsPlayerInRangeOfAnyVehicle(playerid, 6.0);
							new Float: health;
							GetVehicleHealth(vehicleid, health);
							if (health >= 1000) return SendClientMessage(playerid, COLOR_GRAD2, "Превозното средство е в отлично състояние");
							PlayerTimerInfo[playerid][ptWorkingVeh] = 6;
							ApplyAnimationWithCondition(playerid, "BD_FIRE", "wash_up", 4.1, 0, 0, 0, 0, 0, 1);
						}

						if (strcmp(string, "Телефон", true) == 0)
						{
							if (PhoneShow[playerid] == false)
							{
								SendClientMessage(playerid, COLOR_PHONE, "Използвай /phone или ESC за да оставиш телефона!");
								ShowPlayerPhoneMenu(playerid);
								SelectTextDraw(playerid, 0xFFD900FF);
								PhoneShow[playerid] = true;
								format(string256, 256, "%s си извади телефона.", RealName(playerid));
								SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
							}
							else if (PhoneShow[playerid] == true)
							{
								HidePlayerPhone(playerid);
								CancelSelectTextDraw(playerid);
								PhoneShow[playerid] = false;
								format(string256, 256, "%s прибра своя телефон.", RealName(playerid));
								SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
							}

							return 1;
						}

						if (strcmp(string, "GPS Устройство", true) == 0)
						{
							new accountNickname[MAX_PLAYER_NAME];
							GetPlayerName(playerid, accountNickname, 25);
							format(string256, 256, "%s си извади навигатора.", accountNickname);
							SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
							ShowPlayerGPS(playerid);
							return 1;
						}

						//drinks
						if (strcmp(string, "Fanta", true) == 0)
						{
							if (PlayerInfo[playerid][pThirsty] > 80) return SendClientMessage(playerid, COLOR_GRAD2, "Вие не сте достатъчно жаден.");
							PlayerInfo[playerid][pThirsty] += 20;
							ApplyAnimationWithCondition(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 0, 0);
						}

						if (strcmp(string, "Coca-Cola", true) == 0)
						{
							if (PlayerInfo[playerid][pThirsty] > 70) return SendClientMessage(playerid, COLOR_GRAD2, "Вие не сте достатъчно жаден.");
							PlayerInfo[playerid][pThirsty] += 30;
							ApplyAnimationWithCondition(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 0, 0);
						}

						if (strcmp(string, "Вода", true) == 0)
						{
							PlayerInfo[playerid][pThirsty] += 30;
							ApplyAnimationWithCondition(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 0, 0);
						}

						//food
						if (strcmp(string, "Хляб", true) == 0)
						{
							if (PlayerInfo[playerid][pHungry] > 80) return SendClientMessage(playerid, COLOR_GRAD2, "Вие не сте достатъчно гладен.");
							PlayerInfo[playerid][pHungry] += 20;
							ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
						}

						if (strcmp(string, "Сладкиш", true) == 0)
						{
							if (PlayerInfo[playerid][pHungry] > 70) return SendClientMessage(playerid, COLOR_GRAD2, "Вие не сте достатъчно гладен.");
							PlayerInfo[playerid][pHungry] += 30;
							ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
						}

						if (strcmp(string, "Месо", true) == 0)
						{
							if (PlayerInfo[playerid][pHungry] > 90) return SendClientMessage(playerid, COLOR_GRAD2, "Вие не сте достатъчно гладен.");
							PlayerInfo[playerid][pHungry] += 10;
							ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
						}

						if (strcmp(string, "Бургер", true) == 0)
						{
							if (PlayerInfo[playerid][pHungry] > 70) return SendClientMessage(playerid, COLOR_GRAD2, "Вие не сте достатъчно гладен.");
							PlayerInfo[playerid][pHungry] += 30;
							ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
						}

						Inventory_Remove(playerid, string);
					}	//Използвай - close
				case 1:	//Подай - open
					{
					 			//droped thins - open
						if (strcmp(string, "Ключове за кола", true) == 0)
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Не можете да свалите ключовете си");
							return 1;
						}

						if (strcmp(string, "Документи", true) == 0)
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Не можете да свалите документите си");
							return 1;
						}

						if (strcmp(string, "Телефон", true) == 0)
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Не можете да свалите телефона си");
							return 1;
						}

						if (strcmp(string, "GPS Устройство", true) == 0)
						{
							PlayerInfo[playerid][pGPS] = 0;
							format(string256, 256, "[Инвентар] {ffffff}Вие свалихте предмет {40BF00}%s{ffffff} на земята", string);
							SendClientMessage(playerid, COLOR_LIGHTRED2, string256);
							DropPlayerItem(playerid, itemid);
							return 1;
						}

						//droped things - close
						ShowPlayerDialog(playerid, DIALOG_DROP_INVENTORY, DIALOG_STYLE_INPUT, "{FFFFFF}Inventory", "{40BF00}Какво количество искате да свалите на земята?", "Напред", "Затвори");
						inventorySelect[playerid] = itemid;
					}	//Подай - close
				case 2:	//Изхвърли - open
					{
					 			//droped thins - open
						if (strcmp(string, "Ключове за кола", true) == 0)
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Не можете да изхвърлите ключовете си");
							return 1;
						}

						if (strcmp(string, "Документи", true) == 0)
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Не можете да изхвърлите документите си");
							return 1;
						}

						if (strcmp(string, "Телефон", true) == 0)
						{
							PlayerInfo[playerid][pPhone] = 0;
							PlayerInfo[playerid][pPhoneNum] = 0;
							PlayerInfo[playerid][pPhoneStatusOFF] = 1;
							format(string256, 256, "[Инвентар] {ffffff}Вие изхвърлихте предмет {40BF00}%s{ffffff} на земята", string);
							SendClientMessage(playerid, COLOR_LIGHTRED2, string256);
							Inventory_Remove(playerid, string);
							new connected = phoneConnected[playerid];
							if (connected != -1)
							{
								SendClientMessage(playerid, COLOR_LIGHTRED2, "[Телефон] {ffffff}Вашият разговор прекъсна.");
								SendClientMessage(connected, COLOR_LIGHTRED2, "[Телефон] {ffffff}Вашият разговор прекъсна.");
							}

							ClosePhone(playerid);
							return 1;
						}

						if (strcmp(string, "GPS Устройство", true) == 0)
						{
							PlayerInfo[playerid][pGPS] = 0;
							format(string256, 256, "[Инвентар] {ffffff}Вие изхвърлихте предмет {40BF00}%s{ffffff} на земята", string);
							SendClientMessage(playerid, COLOR_LIGHTRED2, string256);
							Inventory_Remove(playerid, string);
							return 1;
						}

						//droped things - close
						ShowPlayerDialog(playerid, DIALOG_THROW_INVENTORY, DIALOG_STYLE_INPUT, "{FFFFFF}Inventory", "{40BF00}Какво количество искате да изхвърлите?", "Напред", "Затвори");
						inventorySelect[playerid] = itemid;
					}	//Изхвърли - close
			}
		}
	}

	if (dialogid == DIALOG_PHONE)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						ShowPlayerDialog(playerid, DIALOG_PHONE_CALL, DIALOG_STYLE_INPUT, "{ffffff}Телефон", "{ffffff}На кой играч искате да звъннете?\nНапишете телефона на играча отдолу.", "Избери", "Назад");
					}

				case 1:
					{
						AnswerPhone(playerid);
					}

				case 2:
					{
						if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
						if (phoneConnected[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не разговаряш по телефона");
						SendClientMessage(playerid, COLOR_PHONE, "Вие затворихте на телефона с който разговаряхте.");
						SendClientMessage(phoneConnected[playerid], COLOR_PHONE, "Телефона с който разговаряхте ви затвори.");
						new connected = phoneConnected[playerid];
						phoneConnected[connected] = -1;
						phoneConnected[playerid] = -1;
					}

				case 3:
					{
						ShowPlayerDialog(playerid, DIALOG_PHONE_SERVICES, DIALOG_STYLE_LIST, "{ffffff}Телефон", "{ffffff}1. Викнете такси\n{ffffff}2. Викнете механик\n{ffffff}3. Викнете полиция", "Избери", "Назад");
					}
			}
		}
	}

	if (dialogid == DIALOG_PHONE_SERVICES)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (calledTaxiTimer[playerid] > 0) return SendClientMessage(playerid, COLOR_ERROR, "Вие вече се обадихте на таксито, изчакайте още малко, преди да се обадите пак.");
						calledTaxiTimer[playerid] = 1 * 60;
						SendClientMessage(playerid, COLOR_YELLOW, "[Taxi number] Вие се обадихте на Такси, изчакайте, преди да се свържат с вас.");
						new string256[256];
						format(string256, 256, "[Taxi Service] Фирмата има обаждане от номер {ffffff}%d{ffff00}. Наберете номера за да се свържите с клиента.", PlayerInfo[playerid][pPhoneNum]);
						SendTaxiPlayersMessage(COLOR_YELLOW, string256);
					}

				case 1:
					{
						if (calledMechanicTimer[playerid] > 0) return SendClientMessage(playerid, COLOR_ERROR, "Вие вече се обадихте на механиците, изчакайте още малко, преди да се обадите пак.");
						calledMechanicTimer[playerid] = 1 * 60;
						SendClientMessage(playerid, COLOR_YELLOW, "[Mechanic number] Вие се обадихте на Механиците, изчакайте, преди да се свържат с вас.");
						new string256[256];
						format(string256, 256, "[Mechanic Service] Фирмата има обаждане от номер {ffffff}%d{ffff00}. Наберете номера за да се свържите с клиента.", PlayerInfo[playerid][pPhoneNum]);
						SendMechanicPlayersMessage(COLOR_YELLOW, string256);
					}

				case 2:
					{
						if (calledPoliceTimer[playerid] > 0) return SendClientMessage(playerid, COLOR_ERROR, "Вие вече се обадихте на полицията, изчакайте още малко, преди да се обадите пак.");
						calledPoliceTimer[playerid] = 1 * 60;
						SendClientMessage(playerid, COLOR_YELLOW, "[Police number] Вие се обадихте на Полицията, изчакайте, преди да се свържат с вас.");
						new string256[256];
						format(string256, 256, "[Police Service] Полицията има обаждане от номер {ffffff}%d{ffff00}. Наберете номера за да се свържите с гражданина.", PlayerInfo[playerid][pPhoneNum]);
						SendPolicePlayersMessage(COLOR_YELLOW, string256);
					}
			}
		}
	}

	if (dialogid == DIALOG_THROW_INVENTORY)
	{
		if (response)
		{
			new itemid = inventorySelect[playerid], string[64];
			format(string, 64, "%s", InventoryInfo[playerid] [itemid][invItem]);
			new amount = strval(inputtext);
			if (amount < 0) return SendClientMessage(playerid, COLOR_GRAD1, "Невалидно количество.");
			if (InventoryInfo[playerid] [itemid][invQuantity] < amount)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямате такова количество от предмета.");
				return 1;
			}

			new string256[256];
			format(string256, 256, "[Инвентар] {ffffff}Вие изхвърлихте един предмет в количество {40BF00}%d", amount);
			SendClientMessage(playerid, COLOR_LIGHTRED2, string256);
			Inventory_Remove(playerid, string, amount);
		}
	}

	if (dialogid == DIALOG_DROP_INVENTORY)
	{
		if (response)
		{
			new itemid = inventorySelect[playerid], string[64];
			format(string, 64, "%s", InventoryInfo[playerid] [itemid][invItem]);
			new amount = strval(inputtext);
			if (amount < 0) return SendClientMessage(playerid, COLOR_GRAD1, "Невалидно количество.");
			if (InventoryInfo[playerid] [itemid][invQuantity] < amount)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямате такова количество от предмета.");
				return 1;
			}

			new string256[256];
			format(string256, 256, "[Инвентар] {ffffff}Вие свалихте предмет {40BF00}%s{ffffff} на земята в количество {40BF00}%d", string, amount);
			SendClientMessage(playerid, COLOR_LIGHTRED2, string256);
			DropPlayerItem(playerid, itemid, amount);
		}
	}

	if (dialogid == DIALOG_BUYDRINK)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pCash] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $2 за да си купите вода");
						ShowPlayerDialog(playerid, DIALOG_BUYFORHOMEORNOT, DIALOG_STYLE_LIST, "STORE", "За сега (бързо хранене)\nЗа вкъщи (инвентар)", "Напред", "Излез");
						buyDrinkSelect[playerid] = 1;
					}

				case 1:
					{
						if (PlayerInfo[playerid][pCash] < 3) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $3 за да си купите вода");
						ShowPlayerDialog(playerid, DIALOG_BUYFORHOMEORNOT, DIALOG_STYLE_LIST, "STORE", "За сега (бързо хранене)\nЗа вкъщи (инвентар)", "Напред", "Излез");
						buyDrinkSelect[playerid] = 2;
					}

				case 2:
					{
						if (PlayerInfo[playerid][pCash] < 2) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $2 за да си купите вода");
						buyDrinkSelect[playerid] = 3;
						ShowPlayerDialog(playerid, DIALOG_BUYFORHOMEORNOT, DIALOG_STYLE_LIST, "STORE", "За сега (бързо хранене)\nЗа вкъщи (инвентар)", "Напред", "Излез");
					}
			}
		}
	}

	if (dialogid == DIALOG_BUYFORHOMEORNOT)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						BuyFoodNotForHome(playerid);
						BuyDrinkNotForHome(playerid);
					}

				case 1:
					{
						BuyDrinkOrFoodForHome(playerid);
					}
			}
		}
	}

	if (dialogid == DIALOG_BUYFOODORDRINK)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new string256[256];
						format(string256, 256, "{FFFFFF}Хляб ($2): 20 Food точки\n{FFFFFF}Сладкиш ($5): 30 Food точки\n{FFFFFF}Месо ($2): 10 Food точки\n{FFFFFF}Бургер ($5): 30 Food точки");
						ShowPlayerDialog(playerid, DIALOG_BUYFOOD, DIALOG_STYLE_LIST, "STORE", string256, "Вземи", "Излез");
					}

				case 1:
					{
						new string256[256];
						format(string256, 256, "{FFFFFF}Вода ($2): 30 Water точки\n{FFFFFF}Fanta ($3): 20 Water точки\n{FFFFFF}Coca-Cola ($5): 30 Water точки");
						ShowPlayerDialog(playerid, DIALOG_BUYDRINK, DIALOG_STYLE_LIST, "STORE", string256, "Вземи", "Излез");
					}
			}
		}
	}

	if (dialogid == DIALOG_BLACKMARKET)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pMask] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате маска!");
						if (PlayerInfo[playerid][pCash] < 5000) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						PlayerInfo[playerid][pMask] = 1;
						GivePlayerCash(playerid, -5000);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте маска за лице на стойност $5000!");
					}

				case 1:
					{
						if (PlayerInfo[playerid][pMoneyBag] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате Money Bag!");
						if (PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						PlayerInfo[playerid][pMoneyBag] = 1;
						GivePlayerCash(playerid, -10000);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте Money Bag на стойност $10000!");
					}

				case 2:
					{
						if (PlayerInfo[playerid][pCash] < 15000) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно средства за да направите поръчката!");
						GivePlayerCash(playerid, -15000);
						GivePlayerWeapon(playerid, 30, 300);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си купихте AK-47 за $15000 (300 патрона)");
					}

				case 3:
					{
						if (PlayerInfo[playerid][pCash] < 16000) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно средства за да направите поръчката!");
						GivePlayerCash(playerid, -16000);
						GivePlayerWeapon(playerid, 27, 300);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си купихте Combat Shotgun за $16000 (300 патрона)");
					}

				case 4:
					{
						if (PlayerInfo[playerid][pCash] < 18000) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно средства за да направите поръчката!");
						GivePlayerCash(playerid, -18000);
						GivePlayerWeapon(playerid, 31, 300);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си купихте M4 за $18000 (300 патрона)");
					}
			}
		}
	}

	if (dialogid == DIALOG_GENERALSTORE)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -10);
						BizInfo[bizID][bEarnings] += 10;
						BizInfo[bizID][bStock] -= 1;
						GivePlayerWeapon(playerid, WEAPON_KNIFE, 1);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте нож за $10.");
					}

				case 1:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 15) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -15);
						BizInfo[bizID][bEarnings] += 15;
						BizInfo[bizID][bStock] -= 1;
						GivePlayerWeapon(playerid, WEAPON_BAT, 1);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте бухалка за $15.");
					}

				case 2:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 25) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -25);
						BizInfo[bizID][bEarnings] += 25;
						BizInfo[bizID][bStock] -= 1;
						GivePlayerWeapon(playerid, WEAPON_CAMERA, 55);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте камера за $25.");
					}

				case 3:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pGPS] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате GPS устройство.");
						if (PlayerInfo[playerid][pCash] < 350) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -350);
						BizInfo[bizID][bEarnings] += 350;
						BizInfo[bizID][bStock] -= 1;
						PlayerInfo[playerid][pGPS] = 1;
						Inventory_Add(playerid, "GPS Устройство", 18875, 1);
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте GPS за $35, използвайте го чрез /gps.");
					}

				case 4:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pPhone] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате телефон!");
						if (PlayerInfo[playerid][pCash] < 2000) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -2000);
						BizInfo[bizID][bEarnings] += 2000;
						BizInfo[bizID][bStock] -= 1;
						PlayerInfo[playerid][pPhone] = 1;
						PlayerInfo[playerid][pPhoneStatusOFF] = 0;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте телефон за $200. Използвайте /call, /phone за достъп до него.");
						GivePlayerPhoneNumber(playerid);
						new string256[256];
						Inventory_Add(playerid, "Телефон", 330, 1);
						format(string256, 256, "Вашият тел. номер е %d. Винаги ще го има в /mydocs ако го забравите.", PlayerInfo[playerid][pPhoneNum]);
						SendClientMessage(playerid, COLOR_MAXLIGHTGREEN, string256);
					}

				case 5:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pCash] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -6);
						BizInfo[bizID][bEarnings] += 6;
						BizInfo[bizID][bStock] -= 1;
						PlayerInfo[playerid][pCiggs] += 10;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте кутия цигари за $6. Използвайте /smoke за да пушите.");
					}

				case 6:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pTracker] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате 3 тракера.");
						if (PlayerInfo[playerid][pCash] < 900) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						GivePlayerCash(playerid, -900);
						BizInfo[bizID][bEarnings] += 900;
						BizInfo[bizID][bStock] -= 1;
						PlayerInfo[playerid][pTracker] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "Ако имате лична кола, то можете да я намерите с тракера. Използвайте /findveh.");
					}

				case 7:
					{
						ShowPlayerDialog(playerid, DIALOG_LOTTO, DIALOG_STYLE_LIST, "Лотария", "{00ff00}Лотария на момента - $15\n{00ff00}Лотария на всеки час (San Andreas Lottery) - $10", "Избери", "Затвори");
					}

				case 8:
					{
						new string256[256];
						format(string256, 256, "{FFFFFF}Храни\nНапитки");
						ShowPlayerDialog(playerid, DIALOG_BUYFOODORDRINK, DIALOG_STYLE_LIST, "STORE", string256, "Напред", "Излез");
					}

				case 9:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pInvCapacity] < InventoryItemsCount(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно място в себе си.");
						if (Inventory_Count(playerid, "Първа помощ") >= 3) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате над 3 комплекта бърза помощ");
						if (PlayerInfo[playerid][pCash] < 70) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						Inventory_Add(playerid, "Първа помощ", 1580, 1);
						GivePlayerCash(playerid, -70);
						BizInfo[bizID][bStock] -= 1;
						BizInfo[bizID][bEarnings] += 70;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте комплект бърза помощ за $70.");
					}

				case 10:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pInvCapacity] < InventoryItemsCount(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно място в себе си.");
						if (Inventory_Count(playerid, "Инструменти за кола") >= 3) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате над 3 комплекта инструменти");
						if (PlayerInfo[playerid][pCash] < 170) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						Inventory_Add(playerid, "Инструменти за кола", 920, 1);
						GivePlayerCash(playerid, -170);
						BizInfo[bizID][bStock] -= 1;
						BizInfo[bizID][bEarnings] += 170;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте комплект инструменти за поправка на кола за $170. Използвайте ги, чрез инвентара.");
					}

				case 11:
					{
						new vWorld = GetPlayerVirtualWorld(playerid);
						new bizID = vWorld - 500;
						if (BizInfo[bizID][bStock] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът няма стока в момента!");
						if (PlayerInfo[playerid][pInvCapacity] < InventoryItemsCount(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Нямате достатъчно място в себе си.");
						if (Inventory_Count(playerid, "Спрей") >= 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате спрей за графити!");
						if (PlayerInfo[playerid][pCash] < 3000) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате достатъчно пари за да направите поръчката!");
						Inventory_Add(playerid, "Спрей", 365, 1);
						GivePlayerCash(playerid, -3000);
						BizInfo[bizID][bStock] -= 1;
						BizInfo[bizID][bEarnings] += 3000;
						SendClientMessage(playerid, COLOR_YELLOW, "Вие си купихте спрей за графити, с него маркирате териториите на бандата. Използвайте го, чрез инвентара.");
					}
			}
		}
	}

	if (dialogid == DIALOG_SELECT_ANIMATION)
	{
		new string256[256];
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, accountNickname, 25);
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerTimerInfo[playerid][ptRevieveTimer] == 0)
						{
							PlayerTimerInfo[playerid][ptClearAnimation] = 1;
						}
					}

				case 1:
					{
						ApplyAnimationWithCondition(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);	// Laugh
						ApplyAnimationWithCondition(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);	// Laugh
						ApplyAnimationWithCondition(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0);	// Laugh
					}

				case 2:
					{
						ApplyAnimationWithCondition(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);	// Rob Lookout
						ApplyAnimationWithCondition(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);	// Rob Lookout
						ApplyAnimationWithCondition(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0);	// Rob Lookout
					}

				case 3:
					{
						ApplyAnimationWithCondition(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);	// Arms crossed
						ApplyAnimationWithCondition(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);	// Arms crossed
						ApplyAnimationWithCondition(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);	// Arms crossed
					}

				case 4:
					{
						ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);	// Vomit BAH!
						ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);	// Vomit BAH!
						ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);	// Vomit BAH!
					}

				case 5:
					{
						ApplyAnimationWithCondition(playerid, "PED", "fucku", 4.0, 0, 0, 0, 0, 0);
						format(string256, 256, "* %s показа среден пръст", accountNickname);
						SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
					}

				case 6:
					{
						ApplyAnimationWithCondition(playerid, "PED", "IDLE_CHAT", 4.0, 0, 0, 0, 0, 0);
						format(string256, 256, "* %s разговаря", accountNickname);
						SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
					}

				case 7:
					{
						SpecialActionWithCondition(playerid, SPECIAL_ACTION_DANCE2);
						format(string256, 256, "* %s танцува", accountNickname);
						SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
					}

				case 8:
					{
						SpecialActionWithCondition(playerid, SPECIAL_ACTION_DANCE3);
						format(string256, 256, "* %s танцува", accountNickname);
						SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
					}

				case 9:
					{
						SpecialActionWithCondition(playerid, SPECIAL_ACTION_DANCE4);
						format(string256, 256, "* %s танцува", accountNickname);
						SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
					}

				case 10:
					{
						SpecialActionWithCondition(playerid, SPECIAL_ACTION_HANDSUP);
						format(string256, 256, "* %s си вдигна ръцете", accountNickname);
						SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
					}
			}
		}
	}

	if (dialogid == DIALOG_GUNMACHINE_FBI)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (GetPlayerWeaponAmmu(playerid, 5) >= 900) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						GivePlayerWeapon(playerid, 31, 300);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте автомат M4 (300 патрона)");
					}

				case 1:
					{
						if (GetPlayerWeaponAmmu(playerid, 2) >= 200) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						GivePlayerWeapon(playerid, 24, 80);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте пистолет Deagle (80 патрона)");
					}

				case 2:
					{
						GivePlayerWeapon(playerid, 3, 1);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте бухалка от оръжията на фбр");
					}
			}
		}
	}

	if (dialogid == DIALOG_GUNMACHINE_ARMY)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (GetPlayerWeaponAmmu(playerid, 5) >= 900) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						GivePlayerWeapon(playerid, 31, 300);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте автомат M4 (300 патрона)");
					}

				case 1:
					{
						if (GetPlayerWeaponAmmu(playerid, 2) >= 200) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						GivePlayerWeapon(playerid, 24, 80);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте пистолет Deagle (80 патрона)");
					}

				case 2:
					{
						GivePlayerWeapon(playerid, 3, 1);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте бухалка от оръжията на армията");
					}
			}
		}
	}

	if (dialogid == DIALOG_GUNMACHINE_POLICE)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (GetPlayerWeaponAmmu(playerid, 5) >= 900) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						GivePlayerWeapon(playerid, 31, 300);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте автомат M4 (300 патрона)");
					}

				case 1:
					{
						if (GetPlayerWeaponAmmu(playerid, 2) >= 200) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате твърде много патрони!");
						GivePlayerWeapon(playerid, 24, 80);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте пистолет Deagle (80 патрона)");
					}

				case 2:
					{
						GivePlayerWeapon(playerid, 3, 1);
						SendClientMessage(playerid, COLOR_WEAPONS, "Вие си взехте бухалка от оръжията на полицията");
					}
			}
		}
	}

	if (dialogid == DIALOG_RENTVEH)
	{
		if (!response)
		{
			RemovePlayerFromVehicle(playerid);
		}
		else if (response)
		{
			if(rentorVeh[playerid])
			{
				RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid, COLOR_WHITE, "Ти вече си наел друг транспорт, първо трябва да го оставиш във фирмата, чрез /unrent");
				return 1;
			}
			new string256[256];
			new vehicleid = GetPlayerVehicleID(playerid);
			if (PlayerInfo[playerid][pCash] < VehicleInfo[vehicleid][vRentPrice])
			{
				RemovePlayerFromVehicle(playerid);
				format(string256, 256, "Вие нямате $%d за да наемете това превозно средство!", VehicleInfo[vehicleid][vRentPrice]);
				SendClientMessage(playerid, COLOR_WHITE, string256);
				return 1;
			}

			GivePlayerCash(playerid, -VehicleInfo[vehicleid][vRentPrice]);
			GameTextForPlayer(playerid, "~w~VEHICLE RENTED", 2500, 3);
			format(string256, 256, "Вие наехте превозното средство за $%d!", VehicleInfo[vehicleid][vRentPrice]);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			SendClientMessage(playerid, COLOR_WHITE, "За да върнете транспорта обратно на фирмата, напишете /unrent");
			SendClientMessage(playerid, COLOR_WHITE, "За да заключите/отключите транспорта, напишете /jlock");
			VehicleInfo[vehicleid][vRentedBy] = playerid;
			rentorVeh[playerid] = true;
			vehRented[playerid] = GetPlayerVehicleID(playerid);
		}
	}

	if (dialogid == DIALOG_BANK)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new string2230[512];new string2230result[2230];
						format(string2230, 512, "{FFFFFF}Account: %s\n{FFFFFF}Обща сметка: {40BF00}$%d", GetPlayerRpName(playerid), PlayerInfo[playerid][pBank]);
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
					}

				case 1:
					{
						new string2230[512];new string2230result[2230];
						format(string2230, 512, "{FFFFFF}Добре дошли!\n{FFFFFF}Каква сума искате да изтеглите?");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_WITHDRAW_MONEY, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Затвори", "");
					}

				case 2:
					{
						new string2230[512];new string2230result[2230];
						if (PlayerInfo[playerid][pLevel] < 5)
						{
							format(string2230, 512, "Трябва ви поне 5-ти Level за да дадете пари на играч!");
							strcat(string2230result, string2230);
							ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Затвори", "");
							return 1;
						}

						format(string2230, 512, "{FFFFFF}Добре дошли!\n{FFFFFF}Напишете името на което да бъдат прехвърлени пари!");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_BANK_TRANSFER, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Напред", "Затвори");
					}

				case 3:
					{
						new string2230[512];new string2230result[2230];
						format(string2230, 512, "{FFFFFF}Добре дошли!\n{FFFFFF}Напишете колко долара искате да внесете в банковата ви сметка!");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_BANK_DEPOSIT, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Напред", "Затвори");
					}

				case 4:
					{
						new string2230[512];new string2230result[2230];
						new string256[256];
						if (PlayerInfo[playerid][pFine] == 0)
						{
							format(string2230, 512, "Вие нямате глоби, които да платите!");
							strcat(string2230result, string2230);
							ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
							return 1;
						}

						new playerFine = PlayerInfo[playerid][pFine] + (PlayerInfo[playerid][pWantedLevel] *2000);
						if (PlayerInfo[playerid][pCash] < playerFine)
						{
							format(string2230, 512, "Нужни са ти $%d за да си платиш глобите!", playerFine);
							strcat(string2230result, string2230);
							ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
							return 1;
						}

						GivePlayerCash(playerid, -playerFine);
						format(string256, 256, "Вие си платихте глобите за $%d!", playerFine);
						SendClientMessage(playerid, COLOR_POLICE_2, string256);
						PlayerInfo[playerid][pFine] = 0;
						if (PlayerInfo[playerid][pWantedLevel] < 4)
						{
							GetPlayerAllWanted(playerid);
						}
					}

				case 5:
					{
						if (response)
						{
							if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не принадлежиш към никой Faction!");
							new string2230[512];
							new string2230result[2230];
							new factionName[60];
							format(factionName, 60, FactionInfo[PlayerInfo[playerid][pFaction]][fName]);
							new factionMoney = FactionInfo[PlayerInfo[playerid][pFaction]][fBankAccount];
							format(string2230, 512, "{FFFFFF}Банковата сметка на: %s\n{FFFFFF}Обща сметка: {40BF00}$%d", factionName, factionMoney);
							strcat(string2230result, string2230);
							ShowPlayerDialog(playerid, DIALOG_BANK_FACTION, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Изтегли", "Затвори");
						}
					}
			}
		}
	}

	if (dialogid == DIALOG_BANK_FACTION)
	{
		if (response)
		{
			if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не принадлежиш към никой Faction!");
			if (PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си лидер на Faction!");
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{FFFFFF}Следваща стъпка!\n{FFFFFF}Напишете каква сума искате да преведете отдолу.");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_BANK_FACTION_WITHDRAW, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Напред", "Затвори");
		}
	}

	if (dialogid == DIALOG_BANK_FACTION_WITHDRAW)
	{
		if (response)
		{
			//
			if (PlayerInfo[playerid][pFaction] == FACTION_CIVILIAN) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не принадлежиш към никой Faction!");
			if (PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си лидер на Faction!");
			new string2230[512];
			new string2230result[2230];
			if (strval(inputtext) < 1)
			{
				format(string2230, 512, "{FFFFFF}Моля, въведете сумата, която искате да изтеглите!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, DIALOG_BANK_TRANSFER_2, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Напред", "Затвори");
				return 1;
			}

			new hisFaction = PlayerInfo[playerid][pFaction];
			new factionBankAcc = FactionInfo[hisFaction][fBankAccount];
			if (factionBankAcc < strval(inputtext))
			{
				format(string2230, 512, "{FFFFFF}Вашата организация няма такава сума в банката!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
				return 1;
			}

			FactionInfo[hisFaction][fBankAccount] -= strval(inputtext);
			GivePlayerCash(playerid, strval(inputtext));
			format(string2230, 512, "{FFFFFF}Вие успешно изтеглихте {40BF00}$%d {FFFFFF}от банковата сметка на {40BF00}%s", strval(inputtext), FactionInfo[hisFaction][fName]);
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
			//
		}
	}

	if (dialogid == DIALOG_BANK_TRANSFER)
	{
		if (response)
		{
			format(bankTransferUser[playerid], 60, inputtext);
			new string2230[512];
			new string2230result[2230];
			format(string2230, 512, "{FFFFFF}Следваща стъпка!\n{FFFFFF}Напишете каква сума искате да преведете отдолу.");
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_BANK_TRANSFER_2, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Напред", "Затвори");
		}
	}

	//go here

	if (dialogid == DIALOG_BANK_TRANSFER_2)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			if (strval(inputtext) < 1)
			{
				format(string2230, 512, "{FFFFFF}Моля, въведете сумата, която искате да изтеглите!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, DIALOG_BANK_TRANSFER_2, DIALOG_STYLE_INPUT, "San Andreas Banking", string2230result, "Напред", "Затвори");
				return 1;
			}

			if (PlayerInfo[playerid][pBank] < strval(inputtext))
			{
				format(string2230, 512, "{FFFFFF}Вие нямате такава сума в банковата си карта!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
				return 1;
			}

			new transferID = FindUserByName(bankTransferUser[playerid]);
			if (transferID == playerid)
			{
				format(string2230, 512, "{FFFFFF}Вие въведохте вашето собствено име!\nИзползвайте различно от вашето име!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
				return 1;
			}

			if (transferID == INVALID_PLAYER_ID)
			{
				format(string2230, 512, "{FFFFFF}Въведеното име е невалидно!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
				return 1;
			}

			PlayerInfo[playerid][pBank] -= strval(inputtext);
			PlayerInfo[transferID][pBank] += strval(inputtext);
			format(string2230, 512, "{FFFFFF}Вие успешно прехвърлихте {40BF00}$%d {FFFFFF}на {40BF00}%s", strval(inputtext), bankTransferUser[playerid]);
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "San Andreas Banking", string2230result, "Затвори", "");
			new string256[256];
			format(string256, 256, "Вие получихте $%d по банковата сметка от %s!", strval(inputtext), GetPlayerRpName(playerid));
			SendClientMessage(transferID, COLOR_WHITE, string256);
		}
	}

	//
	if (dialogid == DIALOG_ATM)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						new string2230[512];new string2230result[2230];
						format(string2230, 512, "{FFFFFF}Account: %s\n{FFFFFF}Обща сметка: {40BF00}$%d", GetPlayerRpName(playerid), PlayerInfo[playerid][pBank]);
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "ATM Services", string2230result, "Затвори", "");
					}

				case 1:
					{
						new string2230[512];new string2230result[2230];
						format(string2230, 512, "{FFFFFF}Добре дошли!\n\n", GetPlayerRpName(playerid), PlayerInfo[playerid][pBank]);
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Account: {40BF00}%s {FFFFFF}Обща сметка: {40BF00}$%d\n", GetPlayerRpName(playerid), PlayerInfo[playerid][pBank]);
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Каква сума искате да изтеглите?");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_WITHDRAW_MONEY, DIALOG_STYLE_INPUT, "ATM Services", string2230result, "Затвори", "");
					}
			}
		}
	}

	if (dialogid == DIALOG_BANK_DEPOSIT)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			if (strval(inputtext) < 1)
			{
				format(string2230, 512, "{FFFFFF}Моля, въведете сумата, която искате да изтеглите!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, DIALOG_BANK_DEPOSIT, DIALOG_STYLE_INPUT, "Services", string2230result, "Затвори", "");
				return 1;
			}

			if (PlayerInfo[playerid][pCash] < strval(inputtext))
			{
				format(string2230, 512, "{FFFFFF}Вие нямате такава сума в брой!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Services", string2230result, "Затвори", "");
				return 1;
			}

			GivePlayerCash(playerid, -strval(inputtext));
			PlayerInfo[playerid][pBank] += strval(inputtext);
			format(string2230, 512, "{FFFFFF}Вие успешно внесохте пари!\n{FFFFFF}Внесена сума: {40BF00}$%d", strval(inputtext));
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Services", string2230result, "Затвори", "");
		}
	}

	if (dialogid == DIALOG_WITHDRAW_MONEY)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			if (strval(inputtext) < 1)
			{
				format(string2230, 512, "{FFFFFF}Моля, въведете сумата, която искате да изтеглите!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, DIALOG_WITHDRAW_MONEY, DIALOG_STYLE_INPUT, "Services", string2230result, "Затвори", "");
				return 1;
			}

			if (PlayerInfo[playerid][pBank] < strval(inputtext))
			{
				format(string2230, 512, "{FFFFFF}Вие нямате такава сума в банковата си карта!");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Services", string2230result, "Затвори", "");
				return 1;
			}

			PlayerInfo[playerid][pBank] -= strval(inputtext);
			GivePlayerCash(playerid, strval(inputtext));
			format(string2230, 512, "{FFFFFF}Вие успешно изтеглите пари!\n{FFFFFF}Изтеглена сума: {40BF00}$%d", strval(inputtext));
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Services", string2230result, "Затвори", "");
		}
	}

	if (dialogid == DIALOG_REFUEL)
	{
		if (strval(inputtext) < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можете да заредите 0 литра във вашето превозно средство!");
			return 1;
		}

		if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да сте в превозно средство!");
		new hisVeh = GetPlayerVehicleID(playerid);
		if (GetFuelStation(playerid) == -1)
		{
			new string256[256];
			format(string256, 256, "Ти не си до бензиностанция!");
			SendClientMessage(playerid, COLOR_WHITE, string256);
			return 1;
		}

		if (strval(inputtext) > 100 - vehFuel[hisVeh])
		{
			new string256[256];
			format(string256, 256, "Можете да заредите до {FFB20C}%d {ffffff}литра във вашето превозно средство!", 100 - vehFuel[hisVeh]);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			return 1;
		}

		if (PlayerInfo[playerid][pCash] < strval(inputtext))
		{
			new string256[256];
			format(string256, 256, "За да заредите толкова литра, трябва да имате поне {FF0000}$%d!", strval(inputtext));
			SendClientMessage(playerid, COLOR_WHITE, string256);
			return 1;
		}

		new getFuel = strval(inputtext);
		new priceFuel = strval(inputtext);
		new string140[140];
		format(string140, 140, "Ти добави {FFB20C}%d {FFFFFF}литра в превозното си средство за {40BF00}$%d{ffffff}!", getFuel, priceFuel);
		SendClientMessage(playerid, COLOR_WHITE, string140);
		format(string140, 140, "%s добави бензин към превоза си!", GetPlayerRpName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string140);
		vehFuel[hisVeh] += getFuel;
		GivePlayerCash(playerid, -priceFuel);
        FuelStationInfo[GetFuelStation(playerid)][fsFuel] -=getFuel;
		UpdateFuelStation3DText(GetFuelStation(playerid));
		UpdateSpeedoText(playerid);
	}

	if (dialogid == DIALOG_BUYDRUG_COCA)
	{
		if (response)
		{
			if (strlen(inputtext) < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Въведете число по-голямо от 0!");
			if (PlayerInfo[playerid][pCash] < 45* strval(inputtext)) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари за тази покупка.");
			new string256[256];
			format(string256, 256, "Dealer: Вие си купихте {ff0000}%d грама {FFFFFF}кокаин за {40BF00}$%d", strval(inputtext), 45* strval(inputtext));
			SendClientMessage(playerid, COLOR_WHITE, string256);
			SendClientMessage(playerid, COLOR_DRUGS, "Dealer: За достъп до наркотиците ви, използвайте /usedrug!");
			GivePlayerCash(playerid, -45* strval(inputtext));
			PlayerInfo[playerid][pCocaine] += strval(inputtext);
		}
	}

	if (dialogid == DIALOG_BUYDRUG_MARI)
	{
		if (response)
		{
			if (strlen(inputtext) < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Въведете число по-голямо от 0!");
			if (PlayerInfo[playerid][pCash] < 55* strval(inputtext)) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари за тази покупка.");
			new string256[256];
			format(string256, 256, "Dealer: Вие си купихте {ff0000}%d грама {FFFFFF}марихуана за {40BF00}$%d", strval(inputtext), 55* strval(inputtext));
			SendClientMessage(playerid, COLOR_WHITE, string256);
			SendClientMessage(playerid, COLOR_DRUGS, "Dealer: За достъп до наркотиците ви, използвайте /usedrug!");
			GivePlayerCash(playerid, -55* strval(inputtext));
			PlayerInfo[playerid][pMarijuana] += strval(inputtext);
		}
	}

	if (dialogid == DIALOG_BUYDRUG_HEROIN)
	{
		if (response)
		{
			if (strlen(inputtext) < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Въведете число по-голямо от 0!");
			if (PlayerInfo[playerid][pCash] < 65* strval(inputtext)) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари за тази покупка.");
			new string256[256];
			format(string256, 256, "Dealer: Вие си купихте {ff0000}%d грама {FFFFFF}хероин за {40BF00}$%d", strval(inputtext), 65* strval(inputtext));
			SendClientMessage(playerid, COLOR_WHITE, string256);
			SendClientMessage(playerid, COLOR_DRUGS, "Dealer: За достъп до наркотиците ви, използвайте /usedrug!");
			GivePlayerCash(playerid, -65* strval(inputtext));
			PlayerInfo[playerid][pHeroin] += strval(inputtext);
		}
	}

	if (dialogid == DIALOG_BUYDRUG)
	{
		if (response)
		{
			new string256[256];
			switch (listitem)
			{
				case 0:
					{
						format(string256, 256, "{FFFFFF}На път си да си купиш кокаин!\nНапиши отдолу колко грама искаш да си купиш!\n\nЦена на грам: {40BF00}$45");
						ShowPlayerDialog(playerid, DIALOG_BUYDRUG_COCA, DIALOG_STYLE_INPUT, "{FFFFFF}Дрога", string256, "Напред", "Затвори");
					}

				case 1:
					{
						format(string256, 256, "{FFFFFF}На път си да си купиш марихуана!\nНапиши отдолу колко грама искаш да си купиш!\n\nЦена на грам: {40BF00}$55");
						ShowPlayerDialog(playerid, DIALOG_BUYDRUG_MARI, DIALOG_STYLE_INPUT, "{FFFFFF}Дрога", string256, "Напред", "Затвори");
					}

				case 2:
					{
						format(string256, 256, "{FFFFFF}На път си да си купиш хероин!\nНапиши отдолу колко грама искаш да си купиш!\n\nЦена на грам: {40BF00}$65");
						ShowPlayerDialog(playerid, DIALOG_BUYDRUG_HEROIN, DIALOG_STYLE_INPUT, "{FFFFFF}Дрога", string256, "Напред", "Затвори");
					}
			}
		}
	}

	if (dialogid == DIALOG_REGISTER_RULES)
	{
		if (!response)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "SERVER: Трябва да се съгласите с правилата, преди да играете.");
			PlayerTimerInfo[playerid][ptKick] = 1;
			return 1;
		}
		else if (response)
		{
			new accountNickname[MAX_PLAYER_NAME];
			GetPlayerName(playerid, accountNickname, 25);
			new string256[256];
			format(string256, 256, "{FFFFFF}Добре дошли в LawLess Roleplay\n\n{FFFFFF}Профил: {33AA33}%s\n{FFFFFF}Статус на профила: {FF0000}Нерегистриран\n\n{FFFFFF}Въведете паролата си отдолу и натиснете 'Регистрирай'", accountNickname);
			ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Регистрация:", string256, "Регистрирай", "Излез");
		}
	}

	if (dialogid == DIALOG_REGISTER)
	{
		if (!response)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "SERVER: Вие пожелахте да напуснете сървъра.");
			PlayerTimerInfo[playerid][ptKick] = 1;
			return 1;
		}

		if (strlen(inputtext) < 4 || strlen(inputtext) > 20)
		{
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: Паролата трябва да съдържа между 4 и 20 символа");
			new string256[256];
			format(string256, 256, "{FFFFFF}Добре дошли в LawLess Roleplay\n\n{FFFFFF}Профил: {33AA33}%s\n{FFFFFF}Статус на профила: {FF0000}Нерегистриран\n\n{FFFFFF}Въведете паролата си отдолу и натиснете 'Регистрирай'", GetAccountNickname(playerid));
			ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Регистрация:", string256, "Регистрирай", "Излез");
			return 1;
		}

		AddScreenTexts(playerid);
		new string256[256];
		format(string256, 256, "Вие успешно регистрирахте {40BF00}%s{ffffff}. Добре дошли в {40BF00}LawLess Roleplay", GetPlayerRpName(playerid));
		SendClientMessage(playerid, COLOR_WHITE, string256);
		SendClientMessage(playerid, COLOR_WHITE, "");
		SavePlayerLastLogin(playerid);
		SavePlayerCurrentIP(playerid);
		AddPlayerSpecialNum(playerid);
		TogglePlayerSpectating(playerid, false);
		isLogged[playerid] = true;
		PlayerTimerInfo[playerid][ptSpawn] = 1;
		PlayerTimerInfo[playerid][ptSpawn] = 1;
		new accountFileNickname[256];
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, accountNickname, 25);
		format(accountFileNickname, 256, "%s.ini", accountNickname);
		dini_Create(accountFileNickname);
		dini_Set(accountFileNickname, "pPassword", EncryptPassword(inputtext));
		format(PlayerInfo[playerid][pPassword], 256, EncryptPassword(inputtext));
		GivePlayerCash(playerid, 5250);
		PlayerInfo[playerid][pBank] = 100;
		PlayerInfo[playerid][pLevel] = 1;
		SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
		PlayerInfo[playerid][pExp] = 1;
		PlayerInfo[playerid][pInvCapacity] = 30;
		//ShowPlayerLevelExp(playerid);
		PlayerTimerInfo[playerid][ptHungryTimer] = 3 * 60;
		PlayerTimerInfo[playerid][ptThirstyTimer] = 5 * 60;
		newProfile[playerid] = true;
		firstTryGetDocuments[playerid] = true;
		LoadPlayerBuyClothes(playerid);
	}

	if (dialogid == DIALOG_LOGIN)
	{
		if (!response)
		{
			SendClientMessage(playerid, COLOR_DARKRED, "SERVER: Вие пожелахте да напуснете сървъра.");
			PlayerTimerInfo[playerid][ptKick] = 1;
			return 1;
		}

		if (strlen(inputtext) < 4 || strlen(inputtext) > 20)
		{
			SendClientMessage(playerid, COLOR_WHITE, "SERVER: Паролите тук съдържат между 4 и 20 символа.");
			new string256[256];
			format(string256, 256, "{FFFFFF}Добре дошли в LawLess Roleplay\n\n{FFFFFF}Профил: {33AA33}%s\n{FFFFFF}Статус на профила: {5EF403}Регистриран\n\n{FFFFFF}Въведете паролата си отдолу и натиснете 'Влез'",GetAccountNickname(playerid));
			ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Вход:", string256, "Влез", "Излез");
			return 1;
		}

		new accountFileNickname[256];
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, accountNickname, 25);
		format(accountFileNickname, 256, "%s.ini", accountNickname);
		new password[25];
		format(password, 25, "%s", dini_Get(accountFileNickname, "pPassword"));
		if (strcmp(EncryptPassword(inputtext), password) == 0)
		{
			new string256[256];
			LoadAccount(playerid);
			SavePlayerCurrentIP(playerid);
			new lastMonth = PlayerInfo[playerid][pLastMonth];
			new lastDay = PlayerInfo[playerid][pLastDay];
			new lastYear = PlayerInfo[playerid][pLastYear];
			new lastHour = PlayerInfo[playerid][pLastHour];
			new lastMinute = PlayerInfo[playerid][pLastMinute];
			new lastSecond = PlayerInfo[playerid][pLastSecond];
			format(string256, 256, "Последното ти влизане в този профил е било на %d/%d/%d в %d:%d:%d.", lastMonth, lastDay, lastYear, lastHour, lastMinute, lastSecond);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			SendClientMessage(playerid, COLOR_WHITE, "");
			new hisRankName[32];
			switch (PlayerInfo[playerid][pRank])
			{
				case 0:
					format(hisRankName, 32, "N/A");
				case 1:
					format(hisRankName, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName1]);
				case 2:
					format(hisRankName, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName2]);
				case 3:
					format(hisRankName, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName3]);
				case 4:
					format(hisRankName, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName4]);
				case 5:
					format(hisRankName, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName5]);
				case 6:
					format(hisRankName, 32, "%s", FactionInfo[PlayerInfo[playerid][pFaction]][fRankName6]);
			}

			format(string256, 256, "Admin Level: %d | Player Level: %d | Exp: %d | Job: %s | Faction: %s (%s)", PlayerInfo[playerid][pAdmin], PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pExp], JobInfo[PlayerInfo[playerid][pJob]][jName], FactionInfo[PlayerInfo[playerid][pFaction]][fName], hisRankName);
			SendClientMessage(playerid, COLOR_LIGHTBLUE3, string256);
			TogglePlayerSpectating(playerid, false);
			SavePlayerLastLogin(playerid);
			isLogged[playerid] = true;
			PlayerTimerInfo[playerid][ptSpawn] = 1;
			PlayerTimerInfo[playerid][ptSpawn] = 1;
			//SetToLastPos(playerid);	//MAY BE BACK
			SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
			//ShowPlayerLevelExp(playerid);
			PlayerTimerInfo[playerid][ptHungryTimer] = 3 * 60;
			PlayerTimerInfo[playerid][ptThirstyTimer] = 3 * 60;
			LoadPlayerBuyClothes(playerid);
		}
		else
		{
			passwordChances[playerid] -= 1;
			if (passwordChances[playerid] == 0)
			{
				PlayerTimerInfo[playerid][ptKick] = 1;
				SendClientMessage(playerid, COLOR_LIGHTRED, "Вие сгрешихте паролата твърде много пъти, заради това сте KICKED.");
				return 1;
			}

			new string256[256];
			format(string256, 256, "SERVER: Въведената парола е невалидна. Имате още %d опита да влезете в профила си.", passwordChances[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string256);
			format(string256, 256, "{FFFFFF}Добре дошли в LawLess Roleplay\n\n{FFFFFF}Профил: {33AA33}%s\n{FFFFFF}Статус на профила: {5EF403}Регистриран\n\n{FFFFFF}Въведете паролата си отдолу и натиснете 'Влез'", GetAccountNickname(playerid));
			ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Вход:", string256, "Влез", "Излез");
		}
	}

	if (dialogid == DIALOG_BITCOIN_BUY)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			if (strval(inputtext) < 1 || strval(inputtext) > 1000)	//todo
			{
				format(string2230, 512, "{FF0000}Можете да купите между 1 и 1000 биткойна наведнъж\n");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Затвори", "");
				return 1;
			}

			new bitcoinPrice = strval(inputtext) *BitcoinInfo[bitPrice];
			if (PlayerInfo[playerid][pCash] < bitcoinPrice)
			{
				format(string2230, 512, "{FF0000}Нямате достатъчно средства за %d coins, нужни са ви $%d\n", strval(inputtext), bitcoinPrice);
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Затвори", "");
				return 1;
			}
			else
			{
				bitcoinGetedPrice[playerid] = bitcoinPrice;
				bitcoinGetedAmmount[playerid] = strval(inputtext);
				format(string2230, 512, "{FF0000}Наистина ли искате да купите %d coins, за $%d ?\n", strval(inputtext), bitcoinPrice);
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, DIALOG_BITCOIN_BUY_CONFIRM, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Да", "Не");
			}
		}
	}

	if (dialogid == DIALOG_BITCOIN_BUY_CONFIRM)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			if (PlayerInfo[playerid][pCash] < bitcoinGetedPrice[playerid])
			{
				format(string2230, 512, "{FF0000}Нямате достатъчно средства за %d coins, нужни са ви $%d\n", bitcoinGetedAmmount[playerid], bitcoinGetedPrice[playerid]);
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Затвори", "");
				return 1;
			}

			format(string2230, 512, "{40BF00}Честито, вие си купихте %d coins за $%d\n", bitcoinGetedAmmount[playerid], bitcoinGetedPrice[playerid]);
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Затвори", "");
			GivePlayerCash(playerid, -bitcoinGetedPrice[playerid]);
			PlayerInfo[playerid][pBitcoin] += bitcoinGetedAmmount[playerid];
			BitcoinInfo[bitBought] += bitcoinGetedAmmount[playerid];
			UpdateBitcoinPrice(1);
			SaveBitcoins();
		}
	}

	if (dialogid == DIALOG_BITCOIN_SELL)
	{
		new string2230[512];
		new string2230result[2230];
		switch (listitem)
		{
			case 0:
				{
					format(string2230, 512, "{FFFF00}Цената на биткойните: 1coin = $%d\n\n", BitcoinInfo[bitPrice]);
					strcat(string2230result, string2230);
					format(string2230, 512, "{FF0000}Напишете долу колко bitcoins искате да продадете на борсата");
					strcat(string2230result, string2230);
					ShowPlayerDialog(playerid, DIALOG_BITCOIN_SELL_MARKET, DIALOG_STYLE_INPUT, "{40BF00}Bitcoins:", string2230result, "Напред", "Затвори");
				}
		}
	}

	if (dialogid == DIALOG_BITCOIN_SELL_MARKET_CONFIRM)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			if (PlayerInfo[playerid][pBitcoin] < bitcoinSellMarketAmmount[playerid])
			{
				format(string2230, 512, "{FF0000}Вие нямате толкова bitcoins\n");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Затвори", "");
				return 1;
			}

			GivePlayerCash(playerid, bitcoinSellMarketPrice[playerid]);
			PlayerInfo[playerid][pBitcoin] -= bitcoinSellMarketAmmount[playerid];
			BitcoinInfo[bitBought] -= bitcoinSellMarketAmmount[playerid];
			UpdateBitcoinPrice(0);
			format(string2230, 512, "{40BF00}Вие продадохте своите %d bitcoins за $%d\n", bitcoinSellMarketAmmount[playerid], bitcoinSellMarketPrice[playerid]);
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Затвори", "");
		}
	}

	if (dialogid == DIALOG_BITCOIN_SELL_MARKET)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			if (strval(inputtext) < 1 || strval(inputtext) > 1000)	//todo
			{
				format(string2230, 512, "{FF0000}Можете да продадете между 1 и 1000 биткойна наведнъж\n");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Затвори", "");
				return 1;
			}

			if (PlayerInfo[playerid][pBitcoin] < strval(inputtext))
			{
				format(string2230, 512, "{FF0000}Вие нямате толкова bitcoins\n");
				strcat(string2230result, string2230);
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Затвори", "");
				return 1;
			}

			new bitcoinPrice = strval(inputtext) *BitcoinInfo[bitPrice];
			bitcoinSellMarketPrice[playerid] = bitcoinPrice;
			bitcoinSellMarketAmmount[playerid] = strval(inputtext);
			format(string2230, 512, "{FF0000}Наистина ли искате да продадете %d coins, за $%d ?\n", strval(inputtext), bitcoinPrice);
			strcat(string2230result, string2230);
			ShowPlayerDialog(playerid, DIALOG_BITCOIN_SELL_MARKET_CONFIRM, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Да", "Не");
		}
	}

	if (dialogid == DIALOG_BITCOIN_MENU)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			switch (listitem)
			{
				case 0:
					{
						new allbitPrice = PlayerInfo[playerid][pBitcoin] *BitcoinInfo[bitPrice];
						format(string2230, 512, "{FFFF00}Цената на биткойните: 1coin = $%d\n", BitcoinInfo[bitPrice]);
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFF00}Вашите биткойни: %d coins\n\n", PlayerInfo[playerid][pBitcoin]);
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}Общата стойност на вашите биткойни: $%d\n", allbitPrice);
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Затвори", "");
					}

				case 1:
					{
						format(string2230, 512, "{FFFF00}Цената на биткойните: 1coin = $%d\n\n", BitcoinInfo[bitPrice]);
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}Напишете долу колко bitcoins искате да купите");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_BITCOIN_BUY, DIALOG_STYLE_INPUT, "{40BF00}Bitcoins:", string2230result, "Напред", "Затвори");
					}

				case 2:
					{
						format(string2230, 512, "{FFFF00}• Продайте bitcoin на борсата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFF00}• Продайте bitcoin на играч\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_BITCOIN_SELL, DIALOG_STYLE_LIST, "{40BF00}Bitcoin Menu", string2230result, "Напред", "Затвори");
					}

				case 3:
					{
						if (PlayerInfo[playerid][pBitcoinCourse] == 0)
						{
							PlayerInfo[playerid][pBitcoinCourse] = 1;
							format(string2230, 512, "{40BF00}Вие включихте известията за Bitcoins");
							strcat(string2230result, string2230);
							ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Затвори", "");
						}
						else if (PlayerInfo[playerid][pBitcoinCourse] == 1)
						{
							PlayerInfo[playerid][pBitcoinCourse] = 0;
							format(string2230, 512, "{FF0000}Вие изключихте известията за Bitcoins");
							strcat(string2230result, string2230);
							ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{40BF00}Bitcoins:", string2230result, "Затвори", "");
						}
					}
			}
		}
	}
	
	if(dialogid == DIALOG_SETTINGS_CHANGE_SPAWN)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					if (PlayerInfo[playerid][pSpawn] == CIVIL_LS_SPAWN) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят spawn вече е на Civilian!");
					SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на Civilian!");
					PlayerInfo[playerid][pSpawn] = FACTION_SPAWN;
				}
				case 1:
				{
					if (PlayerInfo[playerid][pSpawn] == FACTION_SPAWN) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят spawn вече е на Faction!");
					SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на Faction!");
					PlayerInfo[playerid][pSpawn] = FACTION_SPAWN;
				}
				case 2:
				{
					if (PlayerInfo[playerid][pBizO] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш бизнес до който да се Spawn!");
					if (PlayerInfo[playerid][pSpawn] == BIZ_SPAWN) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят spawn вече е на Biz!");
					SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на Biz!");
					PlayerInfo[playerid][pSpawn] = BIZ_SPAWN;
				}
				case 3:
				{
					if (PlayerInfo[playerid][pHouseO] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща до която да се Spawn!");
					if (PlayerInfo[playerid][pSpawn] == HOUSE_SPAWN) return SendClientMessage(playerid, COLOR_GRAD1, "Твоят spawn вече е на House!");
					SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на House!");
					PlayerInfo[playerid][pSpawn] = HOUSE_SPAWN;
				}
			}
		}
	}

	if(dialogid == DIALOG_SETTINGS_CHANGE_PASS)
	{
		if(response)
		{
			if(strlen(inputtext) < 1|| strlen(inputtext) > 20)
			{
				return SendClientMessage(playerid, COLOR_GRAD1, "Дължината на новата парола, трябва да бъде от 1 до 20 символа!");
			}
			new accountFiles[28];
			format(accountFiles, 28, "%s.ini", GetAccountNickname(playerid));
			dini_Set(accountFiles, "pPassword", inputtext);
			format(PlayerInfo[playerid][pPassword], 500, "%s", EncryptPassword(inputtext));
			new string130[130];
			format(string130, 130, "Вие си сменихте паролата! Новата ви парола е {ffff00}%s", inputtext);
			SendClientMessage(playerid, 0xFFFFFFFF, string130);
		}
	}

	if(dialogid == DIALOG_SETTINGS_PROFILE)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					new string2230[512];
					new string2230result[2230];
					format(string2230, 512, "{D1D1D1}Напът си да си смениш паролата!\nАко искаш да се откажеш, натисни 'Затвори'\n\nВъведи отдолу желаната от теб парола:");
					strcat(string2230result, string2230);
					ShowPlayerDialog(playerid, DIALOG_SETTINGS_CHANGE_PASS, DIALOG_STYLE_INPUT, "{5F63F0}Настройки на пресонажа", string2230result, "Напред", "Затвори");
				}
				case 1:
				{
					new string2230[512];
					new string2230result[2230];
					format(string2230, 512, "{5F63F0}[{FFFFFF}1{5F63F0}] {FFFFFF}Устави Civilian Spawn като място за пускане\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{5F63F0}[{FFFFFF}2{5F63F0}] {FFFFFF}Устави Faction Spawn като място за пускане\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{5F63F0}[{FFFFFF}3{5F63F0}] {FFFFFF}Устави Бизнес Spawn като място за пускане\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{5F63F0}[{FFFFFF}4{5F63F0}] {FFFFFF}Устави Къща Spawn като място за пускане\n");
					strcat(string2230result, string2230);
					ShowPlayerDialog(playerid, DIALOG_SETTINGS_CHANGE_SPAWN, DIALOG_STYLE_LIST, "{5F63F0}Установяване на нов SPAWN", string2230result, "Напред", "Затвори");
				}
				case 2:
				{
					if (timeTextEnabled[playerid] == true)
					{
						SendClientMessage(playerid, COLOR_WHITE, "* Вие премахнахте вашия часовника и дата от екрана *");
						TextDrawHideForPlayer(playerid, Clock[playerid]);
						timeTextEnabled[playerid] = false;
					}
					else if (timeTextEnabled[playerid] == false)
					{
						SendClientMessage(playerid, COLOR_WHITE, "* Вие сложихте вашия часовник и дата на екрана *");
						TextDrawShowForPlayer(playerid, Clock[playerid]);
						timeTextEnabled[playerid] = true;
					}
				}
				case 3:
				{
					if (serverLogoEnabled[playerid] == true)
					{
						SendClientMessage(playerid, COLOR_WHITE, "* Вие премахнахте логото на сървъра от екрана *");
						TextDrawHideForPlayer(playerid, ServerLogo[playerid]);
						serverLogoEnabled[playerid] = false;
					}
					else if (serverLogoEnabled[playerid] == false)
					{
						SendClientMessage(playerid, COLOR_WHITE, "* Вие сложихте логото на сървъра на екрана *");
						TextDrawShowForPlayer(playerid, ServerLogo[playerid]);
						serverLogoEnabled[playerid] = true;
					}
				}
				case 4:
				{
					if (PlayerInfo[playerid][pAdmin] == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Трябва да бъдете администратор за да използвате тази опция!");
						return 1;
					}

					new string2230[512];
					new string2230result[2530];
					format(string2230, 512, "{FFFFFF}Commands of\t {5AA5E7}Admin Level: \t{5AA5E7}Moderator (1)\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}/а \t \t за да използвате ADMIN чата\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}/kick \t \t за да изхвърлите играч от сървъра\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}/spec \t \t за да наблюдавате играч от сървъра\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}/specoff \t \t за да спрете да наблюдавате даден играч\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}/аduty \t \t за да влезете на смяна, като администратор\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}/ann \t \t за да направите обява относно сървъра\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}/pm \t \t за да напишеш лично съобщение до играч\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}/answer \t \t за да отговориш на въпроса, зададен от играч\n");
					strcat(string2230result, string2230);
					ShowPlayerDialog(playerid, DIALOG_AHELP1, DIALOG_STYLE_TABLIST_HEADERS, "{5AA5E7}ADMIN HELP: COMMANDS", string2230result, "Напред", "Затвори");
				}
			}
		}
	}

	if(dialogid == DIALOG_MY_MENU)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					ShowPlayerStats(playerid, playerid);
				}
				case 1:
				{
					if (PlayerInfo[playerid][pGPS] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате GPS, който да използвате.");
					ShowPlayerGPS(playerid);
				}
				case 2:
				{
					if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
					if (PlayerInfo[playerid][pPhoneStatusOFF] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Телефонът ти е изключен в момента!");
					if (PhoneShow[playerid] == false)
					{
						SendClientMessage(playerid, COLOR_PHONE, "Използвай /phone отново или ESC за да оставиш телефона!");
						ShowPlayerPhoneMenu(playerid);
						SelectTextDraw(playerid, 0xFFD900FF);
						PhoneShow[playerid] = true;
						new string256[256];
						format(string256, 256, "%s си извади телефона.", RealName(playerid));
						SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
					}
					else if (PhoneShow[playerid] == true)
					{
						HidePlayerPhone(playerid);
						CancelSelectTextDraw(playerid);
						PhoneShow[playerid] = false;
						new string256[256];
						format(string256, 256, "%s прибра своя телефон.", RealName(playerid));
						SendLocalMessage(12.0, playerid, COLOR_LIGHTPURPLE4, string256);
					}
				}
				case 3:
				{
					OpenInventory(playerid);
				}
				case 4:
				{
					new string2230[512];
					new string2230result[2230];
					format(string2230, 512, "{FFFFFF}Всички Команди\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}Как се играе?");
					strcat(string2230result, string2230);
					ShowPlayerDialog(playerid, DIALOG_HELP, DIALOG_STYLE_LIST, "{5EF403}Помощно меню", string2230result, "Напред", "Затвори");
				}
				case 5:
				{
						new string2230[512];
						new string2230result[2230];
						format(string2230, 512, "{5EF403}1. {FFFFFF}Команди за Чата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}2. {FFFFFF}Команди за Телефон\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}3. {FFFFFF}Команди за Социалните мрежи\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}4. {FFFFFF}Команди за плащане/глоби/банкомат\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}5. {FFFFFF}Команди за Factions\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}6. {FFFFFF}Команди за Jobs\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}7. {FFFFFF}Команди за Къщи\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}8. {FFFFFF}Команди за Бизнеси\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}9. {FFFFFF}Команди за Лични превозни средства\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}10. {FFFFFF}Команди за Риболов\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}11. {FFFFFF}Команди за Други помощни менюта\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}12. {FFFFFF}Команди за Документи\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}13. {FFFFFF}Команди за GPS, Инвентар, Ваучери\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}14. {FFFFFF}Команди за Новинарското шоу и Радиото\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}15. {FFFFFF}Команди за Превозите\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}16. {FFFFFF}Команди за Текстовете на екрана\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}17. {FFFFFF}Команди за Дрогата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}18. {FFFFFF}Команди за Обир\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}19. {FFFFFF}Основните команди");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_HELP_CMDS, DIALOG_STYLE_LIST, "{5EF403}Помощно меню", string2230result, "Напред", "Затвори");
				}
				case 6:
				{
						new string2230[512];
						new string2230result[2230];
						format(string2230, 512, "{5EF403}1. {FFFFFF}Как се вдига Level и какво да правя с него?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}2. {FFFFFF}Как се събират пари и Exp?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}3. {FFFFFF}Как да намеря дадено място?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}4. {FFFFFF}Какво е инвентарът и как да го отворя?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}5. {FFFFFF}Как да започна работа?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}6. {FFFFFF}За какво да използвам парите и Level-а си?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}7. {FFFFFF}Как да ловя и след това да продам риба?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}8. {FFFFFF}Като какъв мога да работя?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}9. {FFFFFF}В какъв Faction мога да вляза?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}10. {FFFFFF}Какво е Weapon Skill и как се вдига?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}11. {FFFFFF}Как да се свържа с админите?");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_HELP_HOW_TO, DIALOG_STYLE_LIST, "{5EF403}Помощно меню", string2230result, "Напред", "Затвори");
				}
				case 7:
				{
					new string2230[512];
					new string2230result[2230];
					format(string2230, 512, "{00C3FC}1. Игра\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}1.1 Забранено е използването на всякакви помощни средства, като CLEO и хакове\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}1.2 Забранено е да се убиват играчи без причина\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}1.3 Забранено е да избягвате RP ситуация, чрез ESC или излизане от играта\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}1.4 Забранено е използването на всякакви бъгове. Ако намерите, съобщете на администратор, чрез /ask\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}1.5 Забранено е да си давате паролата в сървъра! Това е на ваша отговорност\n\n");
					strcat(string2230result, string2230);
					
					format(string2230, 512, "{00C3FC}2. Комуникация\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}2.1 Забранено е да псувате по личен адрес администратор или обикновен играч\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}2.2 Забранено е да заплашвате играчи за неща свързани с истинския живот\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}2.3 Строго забранено е рекламирането на други сървъри\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}2.4 Забранено е да спамите, тоест да съобщавате нещо много пъти\n\n");
					strcat(string2230result, string2230);
					
					format(string2230, 512, "{00C3FC}3. Администрация\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}3.1 Забранено е грубото говерене към администрацията на сървъра\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}3.2 Важно е админите да си вършат работата. Ако това не се случи, използвайте /report\n\n");
					strcat(string2230result, string2230);
					
					format(string2230, 512, "{00C3FC}4. Допълнителна информация\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}4.1 За да докладвате играч, използвайте /report\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}4.2 Също така можете да докладвате в официалния дискорд на сървъра\n");
					strcat(string2230result, string2230);
					ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Правила", string2230result, "Затвори", "");
				}
				case 8:
				{
					new string2230[512];
					new string2230result[2230];
					format(string2230, 512, "{5F63F0}[{FFFFFF}1{5F63F0}] {FFFFFF}Смени си паролата\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{5F63F0}[{FFFFFF}2{5F63F0}] {FFFFFF}Смени си мястото на SPAWN\n");
					strcat(string2230result, string2230);
					if(timeTextEnabled[playerid])
					{
						format(string2230, 512, "{5F63F0}[{FFFFFF}3{5F63F0}] {FFFFFF}Покажи/Срикй часовника		[{2ADA25}Включен{FFFFFF}]\n");
						strcat(string2230result, string2230);
					}
					else
					{
						format(string2230, 512, "{5F63F0}[{FFFFFF}3{5F63F0}] {FFFFFF}Покажи/Срикй часовника		[{FF0000}Изключен{FFFFFF}]\n");
						strcat(string2230result, string2230);
					}
					if(serverLogoEnabled[playerid])
					{
						format(string2230, 512, "{5F63F0}[{FFFFFF}4{5F63F0}] {FFFFFF}Покажи/Срикй логото на сървъра		[{2ADA25}Включен{FFFFFF}]\n");
						strcat(string2230result, string2230);
					}
					else
					{
						format(string2230, 512, "{5F63F0}[{FFFFFF}4{5F63F0}] {FFFFFF}Покажи/Срикй логото на сървъра		[{FF0000}Изключен{FFFFFF}]\n");
						strcat(string2230result, string2230);
					}
					format(string2230, 512, "{5F63F0}[{FFFFFF}5{5F63F0}] {FFFFFF}Административни команди\n");
					strcat(string2230result, string2230);
					ShowPlayerDialog(playerid, DIALOG_SETTINGS_PROFILE, DIALOG_STYLE_LIST, "{5F63F0}Настройки на персонажа", string2230result, "Напред", "Затвори");
				}
				case 9:
				{
					new string256[256];
					format(string256, 256, "Вашата сметка: Вие притежавате {0099FF}%d {FFFFFF}лева във вашата сметка!", PlayerInfo[playerid][pVoucherBGN]);
					SendClientMessage(playerid, COLOR_WHITE, string256);
					format(string256, 256, "Вашата сметка: Парите са регистрирани на профил: {0099FF}%s", GetAccountNickname(playerid));
					SendClientMessage(playerid, COLOR_WHITE, string256);
				}
				case 10:
				{
					new string2230[512];
					new string2230result[2230];
					format(string2230, 512, "{FFFFFF}Сървърът разполага със система за ваучери, чрез която можете да правите поръчки\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}Важно е да знаете, че ваучерите не могат да ви бъдат възстановени, след като направите поръчка\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FF0000}Екипът на сървъра не отговаря за загуба на ваучерите, при изтриване на акаунт или BAN/BLOCK\n\n");
					strcat(string2230result, string2230);
					format(string2230, 512, "{FFFFFF}За да видите какво можете да си поръчате, натиснете {00ff00}'Продължи'\n");
					strcat(string2230result, string2230);
					ShowPlayerDialog(playerid, DIALOG_VOUCHERS, DIALOG_STYLE_MSGBOX, "{7C94FF}VOUCHERS", string2230result, "Продължи", "Изход");
				}
			}
		}
	}

	if (dialogid == DIALOG_HELP)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			switch (listitem)
			{
				case 0:
					{
						format(string2230, 512, "{5EF403}1. {FFFFFF}Команди за Чата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}2. {FFFFFF}Команди за Телефон\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}3. {FFFFFF}Команди за Социалните мрежи\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}4. {FFFFFF}Команди за плащане/глоби/банкомат\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}5. {FFFFFF}Команди за Factions\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}6. {FFFFFF}Команди за Jobs\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}7. {FFFFFF}Команди за Къщи\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}8. {FFFFFF}Команди за Бизнеси\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}9. {FFFFFF}Команди за Лични превозни средства\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}10. {FFFFFF}Команди за Риболов\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}11. {FFFFFF}Команди за Други помощни менюта\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}12. {FFFFFF}Команди за Документи\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}13. {FFFFFF}Команди за GPS, Инвентар, Ваучери\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}14. {FFFFFF}Команди за Новинарското шоу и Радиото\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}15. {FFFFFF}Команди за Превозите\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}16. {FFFFFF}Команди за Текстовете на екрана\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}17. {FFFFFF}Команди за Дрогата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}18. {FFFFFF}Команди за Обир\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}19. {FFFFFF}Основните команди");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_HELP_CMDS, DIALOG_STYLE_LIST, "{5EF403}Помощно меню", string2230result, "Напред", "Затвори");
					}

				case 1:
					{
						format(string2230, 512, "{5EF403}1. {FFFFFF}Как се вдига Level и какво да правя с него?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}2. {FFFFFF}Как се събират пари и Exp?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}3. {FFFFFF}Как да намеря дадено място?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}4. {FFFFFF}Какво е инвентарът и как да го отворя?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}5. {FFFFFF}Как да започна работа?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}6. {FFFFFF}За какво да използвам парите и Level-а си?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}7. {FFFFFF}Как да ловя и след това да продам риба?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}8. {FFFFFF}Като какъв мога да работя?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}9. {FFFFFF}В какъв Faction мога да вляза?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}10. {FFFFFF}Какво е Weapon Skill и как се вдига?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{5EF403}11. {FFFFFF}Как да се свържа с админите?");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_HELP_HOW_TO, DIALOG_STYLE_LIST, "{5EF403}Помощно меню", string2230result, "Напред", "Затвори");
					}
			}
		}
	}

	if (dialogid == DIALOG_HELP_HOW_TO)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			switch (listitem)
			{
				case 0:
					{
						format(string2230, 512, "Нивото(Level-а) се вдига ако имате достатъчно Exp\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Exp са точки, които събирате от Payday, Jobs и награди с които купувате Ниво\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "След като вече имате определено ниво, можете да си купите лично превозно средство, къща, бизнес или друго\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 1:
					{
						format(string2230, 512, "Най-лесният начин за събиране на пари и Exp е чрез Payday, можете дори да сте Afk и да вземете наградата от Payday-а в началото на всеки час\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Също така можете да печелите пари по много начини, например чрез риболов или друг дейност работа. Същото важи и за Exp\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Можете да печелите Exp чрез работа или когато администраторът подари точки на всички в сървъра\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 2:
					{
						format(string2230, 512, "Сървърът има множество локации, като например места за работа, риболов, автосервизи и т.н.\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Ако обаче не намирате желаната от вас дестинация, напишете /gps и навигатора ще ви отведе\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 3:
					{
						format(string2230, 512, "Инвентарът е място, където вие съхранявате вашите предмети, можете да го отворите, чрез копчето Y или с /inventory\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Чрез инвентара вие можете да достъпите до предметите си и да ги използвате/подадете/хвърлите\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 4:
					{
						format(string2230, 512, "Можете да започнете работа, като напишете командата, която ви излезе, след като влезете в превоза на работата ви\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Например за разносвач на пица, след като влезете в мотора ви изписва, че трябва да напишете /pizzajob\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 5:
					{
						format(string2230, 512, "Можете да използвате парите си за\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Kъща, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Бизнес, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Личен превоз, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Телефон, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Оръжия, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Други \n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 6:
					{
						format(string2230, 512, "За да ловиш риба ти трябва въдица и стръв\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "След като хванеш рибата, можеш да напишеш /myfish и да я достъпиш\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Ако искаш да продадеш рибата си, можеш да продадеш цялата си раница или само определена риба\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 7:
					{
						format(string2230, 512, "Можете да работите без да сте във фирма, като\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Разносвач на пица, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Шофьор на автобус, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Чистач на улици, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Доставчик на стока \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Фирми в които можете да работите:\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Фирма за таксита, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Фирма за механици \n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 8:
					{
						format(string2230, 512, "Factions в които можете да влезете:\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Полиция, LS Army, LV Army, FBI, \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Crip, West Coast Wheelers, Vagos \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Ballas, Russian Mafia \n");
						strcat(string2230result, string2230);
						format(string2230, 512, "- Медици, Правителството, Новинари \n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 9:
					{
						format(string2230, 512, "Weapon Skill са нива, които ви дават опит с оръжията\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Когато стреляте често ви се вдига нивото\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 10:
					{
						format(string2230, 512, "Ако имате въпрос, използвайте /ask и ще ви бъде отговорено от админите на смяна\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "Също така можете да пишете /pm до админите\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}
			}
		}
	}

	if (dialogid == DIALOG_HELP_CMDS)
	{
		if (response)
		{
			new string2230[512];
			new string2230result[2230];
			switch (listitem)
			{
				case 0:
					{
						format(string2230, 512, "/s(hout): за да извикате\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/l(ow): за да шепнете\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/o(oc): за да пишете в глобалния OOC чат\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/b: за да пишете в локалния OOC чат\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/do: за да обясните какво действие извършихте\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/me: за да обясните какво правите\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 1:
					{
						format(string2230, 512, "/mytelenor: за да проверите сметката си в Telenor\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/call: за да се обадите по телефона\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/hangup(/h): за да приемете обаждане\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/phoneinfo(/pinfo): за да видите информация за вашия телефон\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/phoneon(/pon): за да си включиш телефона\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/phoneoff(/poff): за да си изключиш телефона\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/phoneshow: за да скриеш/покажеш телефонния си номер в Phonebook\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/closephone(/clphone): за да затвориш телефона\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/advert: за да пуснеш обява\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/number: за да провериш номера на играч\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 2:
					{
						format(string2230, 512, "/twitter: за да пишеш в Twitter\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/facebook: за да пишеш във Facebook\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/fbtag: за да тагнеш някого във Facebook и да напишеш описание\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/darkweb: за да пишеш в тъмната мрежа\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 3:
					{
						format(string2230, 512, "/pay: за да платиш пари в брой на играч до теб\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/atm: за да използваш банкомат\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/bank: за да използваш услугите на банката\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/payfine: за да си платиш глобите\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 4:
					{
						format(string2230, 512, "/fhelp: за да видиш всички команди за твоя Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/invite: за да поканиш играч в твоя Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/uninvite: за да изгониш играч от твоя Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/setrank: за да смениш ранга на играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/setrankname: за да смениш името на ранг\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/acceptfaction: за да приемеш покана за Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/cancelfaction: за да откажеш покана за Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/leavefaction: за да напуснеш Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/leaders: за да видиш онлайн лидерите на Factions\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/members: за да видиш онлайн членовете на твоя Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/f: за да пишеш във Faction чата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/d: за да пишеш в Държавния чат\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/getgun: за да вземеш оръжие от твоя Faction\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/ehelmet: за да получаваш/забраниш да получаваш щит, жилетка и каска\n");
						strcat(string2230result, string2230);

						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 5:
					{
						format(string2230, 512, "/jobhelp: за да видиш всички команди за твоя Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/jobs: за да видиш твоята Job статистика\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/acceptjob: за да приемеш покана за Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/canceljob: за да откажеш покана за Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/quitjob: за да напуснеш Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/bosses: за да видиш онлайн шефовете на Jobs\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/jobmembers: за да видиш твоите онлайн колеги\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/coalminejob: за да започнеш работа в Coalmine Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/pizzajob: за да започнеш работа в Pizza Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/sweepjob: за да започнеш работа в Sweep Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/busjob: за да започнеш работа в Bus Job\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/deliverjob: за да започнеш работа в Deliver Job\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 6:
					{
						format(string2230, 512, "/buyhouse: за да си купиш къща\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/psellhouse: за да си продадеш къщата си на играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/cancelhouse: за да откажеш продажбата на къщата си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/ahouse: за да купиш къща от играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/chouse: за да откажеш къща от играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/sellhouse: за да си продадеш къщата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/lockhouse: за да си заключиш къщата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/unlockhouse: за да си отключиш къщата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/buyfurniture: за достъп до предметите в къщата\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 7:
					{
						format(string2230, 512, "/buybiz: за да си купиш бизнес\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/sellbiz: за да си продадеш бизнеса\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/psellbiz: за да си продадеш бизнеса на играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/cancelbiz: за да откажеш продажбата на бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/abiz: за да купиш бизнес от играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/cbiz: за да откажеш бизнес от играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/earnings: за да вземеш печалбата от бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/checkstock: за да провериш стоката в бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/buystock: за да купиш стока за бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/lockbiz: за да заключиш бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/unlockbiz: за да отключиш бизнеса си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/buy: за да поръчаш нещо от магазин\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/buygun: за да купиш оръжие от магазин\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/buyclothes: за да купиш дрехи от магазин\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/buyfood: за да купиш храна/напитка от магазин\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/train: за да тренираш боен стил\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 8:
					{
						format(string2230, 512, "/destroymycar: за да премахнеш превозното си средство завинаги\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/getmycar: за да пуснеш превозното си средство\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/park: за да запаметиш позицията на превоза си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/vehlock: за да си отключиш/заключиш превозното си средство\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/findveh: за да отключиш превоза си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/listvehs: за да видиш какви превози имаш\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/sellveh: за да продадеш превоза си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/vehaccept: за да купиш превоз от играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/vehcancel: за да откажеш превоза на играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/vehsellcancel: за да откажеш да продадеш превоза си\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 9:
					{
						format(string2230, 512, "/fish: за да ловуваш риба\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/sellfish: за да продадеш риба\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/sellcrate: за да продадеш всичката си риба, която имаш\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 10:
					{
						format(string2230, 512, "/ahelp: за да отвориш админ менюто с команди\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/help: за да отвориш менюто с команди\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/viphelp: за да отвориш VIP менюто\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/fhelp: за да отвориш менюто с команди за Factions\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/jobhelp: за да отвориш менюто с команди за Jobs\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 11:
					{
						format(string2230, 512, "/mybank: за да видиш банковата си сметка\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/mydocs: за да видиш документите си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/age: за да видиш на колко години си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/givedocs: за да дадеш документите си\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 12:
					{
						format(string2230, 512, "/gps: за да отвориш GPS-а си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/mylocation: за да видиш локацията си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/inventory: за да отвориш инвентара си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/mybgn: за да видиш колко пари в лева (BGN) имаш в касата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/vouchers: за да отвориш менюто за ваучер услуги\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 13:
					{
						format(string2230, 512, "/togglenews: за да заглушиш/отглушиш новинарското шоу\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/toggleradio: за да заглушиш/отглушиш радиото в колата\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 14:
					{
						format(string2230, 512, "/alarm: за да включиш/изключиш алармата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/lights: за да включиш/изключиш лампите\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/bonnet: за да отвориш/затвориш капака\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/boot: за да отвориш/затвориш багажника\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/olock: за да заключиш/отключиш превоза си\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 15:
					{
						format(string2230, 512, "/time: за да премахнеш/добавиш текста за часа и датата\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/logo: за да премахнеш/добавиш логото на екрана\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 16:
					{
						format(string2230, 512, "/usedrug: за да използваш дрога\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/drugs: за да видиш колко дрога имаш в себе си\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 17:
					{
						format(string2230, 512, "/robbery: за да организираш обир или да поканиш/изгониш играч от него\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/rob: за да започнеш да крадеш\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/robatm: за да започнеш да крадеш от банкомат\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}

				case 18:
					{
						format(string2230, 512, "/changepass: за да смениш паролата си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/stats: за да видиш статистиката си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/mydocs: за да видиш документите си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/admins: за да видиш онлайн админите\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/leaders: за да видиш онлайн лидерите\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/bosses: за да видиш онлайн шефовете\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/afk: за да отидеш AFK\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/back: за да се върнеш от AFK\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/credits: за да видите Credits\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/id: за да провериш кое ID е търсен от теб играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/refuel: за да заредиш превоза си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/vote: за да гласуваш във вот\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/joinpaintball: за да влезеш в играта Paintball\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/barrier: за да вдигнеш бариера\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/spawn: за да промениш Spawn-а си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/mylocation: за да видиш локацията си\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/acceptdeath: за да избереш да припаднеш\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/revieve: за да спасиш играч\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/mask: за да си сложиш/махнеш маската\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/clearanimation: за да спреш анимацията\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "/searchtrash: за да търсиш в боклука\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "{FFFFFF}Помощно меню", string2230result, "Затвори", "");
					}
			}
		}
	}

	if (dialogid == DIALOG_VEHOBJECTS)
	{
		if (response)
		{
			new slotID = listitem;
			new vehicleid = GetPlayerVehicleID(playerid);
			vehOptionsSlotID[playerid] = slotID;
			new specialIndex = VehicleInfo[vehicleid][vPrivateID];
			if (PrivateVehInfo[specialIndex][vVehObject][slotID] != 0)
			{
				SendClientMessage(playerid, COLOR_ADMIN_RED, "Ти премахна избрания обект от това превозно средство!");
				if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehObjID][slotID]))
				{
					DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehObjID][slotID]);
				}

				PrivateVehInfo[specialIndex][vVehObject][slotID] = 0;
				SavePrivateVehicle(specialIndex);
			}
			else if (PrivateVehInfo[specialIndex][vVehObject][slotID] == 0)
			{
				new string2230[512];
				new string2230result[2230];
				format(string2230, 512, "{FFFFFF}Въведете Object ID, който да бъде сложен към превоза!");
				strcat(string2230result, string2230);
				vehApplyObjectID[playerid] = vehicleid;
				ShowPlayerDialog(playerid, DIALOG_VEHOBJECTS_OBJECTID, DIALOG_STYLE_INPUT, "{FFFFFF}Vehicle Object", string2230result, "Напред", "Затвори");
			}
		}
	}

	if (dialogid == DIALOG_VEHOBJECTS_OBJECTID)
	{
		if (response)
		{
			new objID = strval(inputtext);
			if (objID < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Object IDs са от 0 нагоре !");
				return 1;
			}

			new Float: X, Float: Y, Float: Z;
			GetPlayerPos(playerid, X, Y, Z);
			addVehObjectIDType[playerid] = objID;
			addVehObjectID[playerid] = CreateDynamicObject(objID, X, Y, Z, 0, 0, 0);
			isAddVehObject[addVehObjectID[playerid]] = true;
			EditDynamicObject(playerid, addVehObjectID[playerid]);
		}
	}

	if (dialogid == DIALOG_MORE_STATS)
	{
		if (response)
		{
			ShowPlayerStatsPage2(seeingStats[playerid], playerid);
		}
	}

	if (dialogid == DIALOG_VOTE_NORMAL)
	{
		didVote[playerid] = true;
		if (response)
		{
			normalVoteYES++;
			SendClientMessage(playerid, COLOR_MAXLIGHTGREEN, "Вие гласувахте с 'ДА' на зададения въпрос!");
		}
		else if (!response)
		{
			normalVoteNO++;
			SendClientMessage(playerid, COLOR_MAXLIGHTGREEN, "Вие гласувахте с 'НЕ' на зададения въпрос!");
		}
	}

	if (dialogid == DIALOG_VOTE_RESPAWN)
	{
		didVote[playerid] = true;
		if (response)
		{
			respawnVehsVoteYES++;
			SendClientMessage(playerid, COLOR_MAXLIGHTGREEN, "Вие гласувахте с 'ДА' за Respawn Vehs!");
		}
		else if (!response)
		{
			respawnVehsVoteNO++;
			SendClientMessage(playerid, COLOR_MAXLIGHTGREEN, "Вие гласувахте с 'НЕ' за Respawn Vehs!");
		}
	}

	if (dialogid == DIALOG_SELL_FISH)
	{
		if (response)
		{
			new fishID = (listitem + 1);
			new fishSlotID = PlayerInfo[playerid][pFishSlot][fishID];
			new fishWeight = PlayerInfo[playerid][pFishWeight][fishID];
			new fishPrice = GetPlayerFishPrice(playerid, fishID);
			new fishName[60];
			format(fishName, 60, GetFishName(fishSlotID));
			GivePlayerCash(playerid, fishPrice);
			PlayerInfo[playerid][pFishSlot][fishID] = 0;
			PlayerInfo[playerid][pFishWeight][fishID] = 0;
			new string556[556];
			format(string556, 556, "{FFFFFF}Вие продадохте %d Кг %s за {40BF00}$%d{FFFFFF}!\n", fishWeight, fishName, fishPrice);
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Fishing Store", string556, "Излез", "");
			RearangeFishSlots(playerid);
		}
	}

	if (dialogid == DIALOG_SELL_FISHCRATE)
	{
		if (response)
		{
			new totalFishPrice;
			for (new i = 1; i < 11; i++)
			{
				totalFishPrice += GetPlayerFishPrice(playerid, i);
				PlayerInfo[playerid][pFishSlot][i] = 0;
				PlayerInfo[playerid][pFishWeight][i] = 0;
			}

			GivePlayerCash(playerid, totalFishPrice);
			new string556[556];
			format(string556, 556, "{FFFFFF}Вие продадохте наличната си риба на цена {40BF00}$%d{FFFFFF}!\n", totalFishPrice);
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Fishing Store", string556, "Излез", "");
		}
	}

	if (dialogid == DIALOG_DROPFISH)
	{
		if (response)
		{
			new fishItem = fishToDrop[playerid];
			PlayerInfo[playerid][pFishSlot][fishItem] = 0;
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Fish:", "Вие изхвърлихте рибата", "Излез", "");
			RearangeFishSlots(playerid);
		}
	}

	if (dialogid == DIALOG_REM_BARRICADE)
	{
		if (response)
		{
			if (listitem == 20)
			{
				RemovePoliceBarricade(playerid);
				SendClientMessage(playerid, COLOR_WHITE, "Ти премахна всички твои барикади!");
			}
			else if (listitem < 20)
			{
				if (policeBarricade[playerid] [listitem] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш бариера в този слот!");
				new objectBarrID = policeBarricade[playerid] [listitem];
				DestroyDynamicObject(objectBarrID);
				isBarricadeObject[objectBarrID] = false;
				policeBarricade[playerid] [listitem] = -1;
				SendClientMessage(playerid, COLOR_WHITE, "Ти премахна своята бариера!");
			}
		}
	}

	if (dialogid == DIALOG_MYFISH)
	{
		if (response)
		{
			new fishID = (listitem + 1);
			fishToDrop[playerid] = (listitem + 1);
			if (PlayerInfo[playerid][pFishSlot][fishID] == 0)
			{
				ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Fish:", "Вие нямате риба в този слот", "Излез", "");
			}
			else if (PlayerInfo[playerid][pFishSlot][fishID] != 0)
			{
				ShowPlayerDialog(playerid, DIALOG_DROPFISH, DIALOG_STYLE_MSGBOX, "Fish:", "Искате ли да изхвърлите тази риба?", "Хвърли", "Излез");
			}
		}
	}

	if (dialogid == DIALOG_DRIVERCOURSE)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pCarLicense] == 1)
						{
							new string2230[512];
							new string2230result[2230];
							format(string2230, 512, "{FFFFFF}General Car License\n\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{40BF00}PASSED  · Курсът е завършен\n\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}Детайли за теста:\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}Fee: $3500\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}Type: Урок по шофиране\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}Vehicle: Manana\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}Pass Criteria: Без повреди, Без изход от п.с., Преминаване навреме\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}Fail Criteria: Повреди, Изход от п.с., Преминаване ненавреме\n\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{40BF00}Този лиценз ви позволява да управлявате пътно превозно средство с 1/2/4 врати\n\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}За да започнеш теста, натисни 'Започни теста' отдолу\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}За теста ще бъдеш таксуван с $3500");
							strcat(string2230result, string2230);
							ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "DMV - License Information:", string2230result, "Излез", "");
						}

						if (isStudyingDrive[playerid] == true) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си в обучение.");
						new string2230[512];new string2230result[2230];
						format(string2230, 512, "{FFFFFF}General Car License\n\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}NOT PASSED  · Все още не сте завършили този курс\n\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Детайли за теста:\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Fee: $3500\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Type: Урок по шофиране\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Vehicle: Manana\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Pass Criteria: Без повреди, Без изход от п.с., Преминаване навреме\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Fail Criteria: Повреди, Изход от п.с., Преминаване ненавреме\n\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}Този лиценз ви позволява да управлявате пътно превозно средство с 1/2/4 врати\n\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}За да започнеш теста, натисни 'Започни теста' отдолу\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}За теста ще бъдеш таксуван с $3500");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_DRIVERCOURSE_CAR, DIALOG_STYLE_MSGBOX, "DMV - License Information:", string2230result, "Започни теста", "Излез");
					}

				case 1:
					{
						if (PlayerInfo[playerid][pPlaneLicense] == 1)
						{
							new string2230[512];
							new string2230result[2230];
							format(string2230, 512, "{FFFFFF}Helicopter License\n\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{40BF00}PASSED  · Курсът е завършен\n\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}Детайли за теста:\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}Fee: $1500\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}Type: Урок по шофиране\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}Vehicle: Maverick\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}Pass Criteria: Без повреди, Без изход от п.с., Преминаване навреме\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}Fail Criteria: Повреди, Изход от п.с., Преминаване ненавреме\n\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{40BF00}Този лиценз ви позволява да управлявате всякакъв вид въздушно превозно средство\n\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}За да започнеш теста, натисни 'Започни теста' отдолу\n");
							strcat(string2230result, string2230);
							format(string2230, 512, "{FFFFFF}За теста ще бъдеш таксуван с $1500");
							strcat(string2230result, string2230);
							ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "DMV - License Information:", string2230result, "Излез", "");
						}

						if (isStudyingDrive[playerid] == true) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си в обучение.");
						new string2230[512];new string2230result[2230];
						format(string2230, 512, "{FFFFFF}Helicopter License\n\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FF0000}NOT PASSED  · Все още не сте завършили този курс\n\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Детайли за теста:\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Fee: $1500\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Type: Урок по шофиране\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Vehicle: Maverick\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Pass Criteria: Без повреди, Без изход от п.с., Преминаване навреме\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Fail Criteria: Повреди, Изход от п.с., Преминаване ненавреме\n\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{40BF00}Този лиценз ви позволява да управлявате всякакъв вид въздушно превозно средство\n\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}За да започнеш теста, натисни 'Започни теста' отдолу\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}За теста ще бъдеш таксуван с $1500");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, DIALOG_DRIVERCOURSE_HELI, DIALOG_STYLE_MSGBOX, "DMV - License Information:", string2230result, "Започни теста", "Излез");
					}
			}
		}
	}

	if (dialogid == DIALOG_DRIVERCOURSE_HELI)
	{
		if (response)
		{
			if (PlayerInfo[playerid][pCash] < 1500)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $1500 за да платите курса.");
				return 1;
			}

			isStudyingDriveType[playerid] = 2;
			SendClientMessage(playerid, COLOR_WHITE, "[DMV] Вие започнахте HELICOPTER DRIVING тест (-$1500). Моля, не напускайте превозното средство.");
			isStudyingDrive[playerid] = true;
			new randomColor = randomex(1, 40);
			new randomColor2 = randomex(1, 60);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			driverStudyVeh[playerid] = AddStaticVehicleEx(487, 1367.7745, 1231.2583, 10.9886, 358.9780, randomColor, randomColor2, RESPAWN_VEHS_SECONDS);
			PutPlayerInVehicle(playerid, driverStudyVeh[playerid], 0);
			TextDrawShowForPlayer(playerid, driverCourseText[playerid]);
			PlayerTimerInfo[playerid][ptDriverSchoolTaken] = 0;
			PlayerTimerInfo[playerid][ptDriverSchoolTimer] = 1;
			isStudyingDrive[playerid] = true;
			SetPlayerRaceCheckpoint(playerid, 3, COURSE_A1_CHECK_1, COURSE_A1_CHECK_2, 4.0);
			GivePlayerCash(playerid, -1500);
		}
	}

	if (dialogid == DIALOG_DRIVERCOURSE_CAR)
	{
		if (response)
		{
			if (PlayerInfo[playerid][pCash] < 3500)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате $3500 за да платите курса!");
				return 1;
			}

			isStudyingDriveType[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "[DMV] Вие започнахте CAR DRIVING тест (-$3500). Моля, не напускайте превозното средство.");
			isStudyingDrive[playerid] = true;
			new randomColor = randomex(1, 40);
			new randomColor2 = randomex(1, 60);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 0);
			driverStudyVeh[playerid] = AddStaticVehicleEx(410, 1099.2238, -1769.6528, 13.0737, 89.1970, randomColor, randomColor2, RESPAWN_VEHS_SECONDS);
			PutPlayerInVehicle(playerid, driverStudyVeh[playerid], 0);
			TextDrawShowForPlayer(playerid, driverCourseText[playerid]);
			PlayerTimerInfo[playerid][ptDriverSchoolTaken] = 0;
			PlayerTimerInfo[playerid][ptDriverSchoolTimer] = 1;
			isStudyingDrive[playerid] = true;
			SetPlayerRaceCheckpoint(playerid, 0, COURSE_GVL1_CHECK_1, COURSE_GVL1_CHECK_2, 4.0);
			GivePlayerCash(playerid, -3500);
		}
	}

	if (dialogid == DIALOG_SELECT_GOVERNMENT)
	{
		if (response)
		{
			if (DidPlayerVote(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече подадохте вашия вот.");
			PlayerInfo[playerid][pVotedGov] = 1;
			AddVoterInInfo(playerid);
			switch (listitem)
			{
				case 0:
					{
						new string256[256];
						format(string256, 256, "[Вот] {ffffff}Вие направихте вашия избор и избрахте {40BF00}%s {ffffff}да оглави правителството", governmentCandidate1Name);
						SendClientMessage(playerid, COLOR_GOVERNMENT, string256);
						governmentCandidate1Result += 1;
					}

				case 1:
					{
						new string256[256];
						format(string256, 256, "[Вот] {ffffff}Вие направихте вашия избор и избрахте {40BF00}%s {ffffff}да оглави правителството", governmentCandidate2Name);
						SendClientMessage(playerid, COLOR_GOVERNMENT, string256);
						governmentCandidate2Result += 1;
					}
			}
		}
	}

	if (dialogid == DIALOG_GETDOCUMENTS)
	{
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (PlayerInfo[playerid][pIdentifyCard] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Вие вече имате лична карта.");
						new string256[256];
						format(string256, 256, "{08BFF6}Мъж\n{EE1BCE}Жена");
						ShowPlayerDialog(playerid, DIALOG_DOCUMENTS_AGE, DIALOG_STYLE_LIST, "Лична карта | ПОЛ:", string256, "Вземи", "Излез");
					}

				case 1:
					{
						if (governmentVoting == false) return SendClientMessage(playerid, COLOR_GRAD1, "В момента няма гласуване за правителство.");
						new string256[256];
						format(string256, 256, "{40BF00}%s\n{40BF00}%s", governmentCandidate1Name, governmentCandidate2Name);
						ShowPlayerDialog(playerid, DIALOG_SELECT_GOVERNMENT, DIALOG_STYLE_LIST, "Кандидати за правителство:", string256, "Избери", "Излез");
					}
				case 2:
					{
						new string2230[512];
						new string2230result[2230];
						format(string2230, 512, "{FFFF00}Търсиш си работа и искаш да започнеш да работиш още сега?\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFF00}Разгледай възможностите!\n\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}1. {5EF403}Coalmine Job{FFFFFF}: Започни работа в мината\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}2. {5EF403}Deliver Job{FFFFFF}: Започни работа, като разносвач на стока\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}3. {5EF403}Sweep Job{FFFFFF}: Започни работа, като чистач на улиците\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}4. {5EF403}Pizza Job{FFFFFF}: Започни работа, като разносвач на пица\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}5. {5EF403}Bus Job{FFFFFF}: Започни работа, като шофьор на автобус\n\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}Ако вече си решил да започнеш работа още сега, можеш да използваш GPS и да намериш локацията на желаната работа\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFF00}А ако си търсиш постоянна работа, можеш да кандидатстваш при шеф за\n\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}1. {00C3FC}Механик\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}2. {00C3FC}Шофьор на такси\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}3. {00C3FC}Лекар\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}4. {00C3FC}Служител в кметството\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}5. {00C3FC}Военен\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}6. {00C3FC}Полицай\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}7. {00C3FC}ФБР служител\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}8. {00C3FC}Новинар\n");
						strcat(string2230result, string2230);
						format(string2230, 512, "{FFFFFF}9. {00C3FC}Служител във Fuel Company\n");
						strcat(string2230result, string2230);
						ShowPlayerDialog(playerid, CLOSED_DIALOG, DIALOG_STYLE_MSGBOX, "{FFFF00}Работа", string2230result, "Затвори", "");
					}
			}
		}
	}

	if (dialogid == DIALOG_DOCUMENTS_AGE)
	{
		if (response)
		{
			new string256[256];
			format(string256, 256, "{FFFFFF}Вие вече избрахте пола си, напишете долу на колко {ffff00}години {ffffff}ще ви бъде героя.\nТой може да бъде между {ffff00}18 и 50 години");
			ShowPlayerDialog(playerid, DIALOG_GENDER_AGE_READY, DIALOG_STYLE_INPUT, "{FFFFFF}Възраст", string256, "Напред", "Затвори");
			switch (listitem)
			{
				case 0:
					{
						tempGender[playerid] = 0;
					}

				case 1:
					{
						tempGender[playerid] = 1;
					}
			}
		}
	}

	if (dialogid == DIALOG_GENDER_AGE_READY)
	{
		if (response)
		{
			new age = strval(inputtext);
			if (age < 18 || age > 50)
			{
				new string256[256];
				format(string256, 256, "{FFFFFF}Героят може да бъде между {ffff00}18 и 50 години");
				ShowPlayerDialog(playerid, DIALOG_GENDER_AGE_READY, DIALOG_STYLE_INPUT, "{FFFFFF}Възраст", string256, "Напред", "Затвори");
				return 1;
			}

			if (tempGender[playerid] == 0)
			{
				PlayerInfo[playerid][pGender] = 0;
				RandomMaleSkin(playerid);
			}
			else if (tempGender[playerid] == 1)
			{
				PlayerInfo[playerid][pGender] = 1;
				RandomFemaleSkin(playerid);
			}

			PlayerInfo[playerid][pAge] = age;
			PlayerInfo[playerid][pIdentifyCard] = 1;
			GivePlayerEGN(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "");
			new string256[256];
			format(string256, 256, "Вие си взехте лична карта и можете да излезете! Вашето ЕГН е {5EF403}%d{FFFFFF}. Винаги можете да го видите от /mydocs", PlayerInfo[playerid][pEGN]);
			SendClientMessage(playerid, COLOR_WHITE, string256);
			Inventory_Add(playerid, "Документи", 1581, 1);
			Inventory_Add(playerid, "GPS Устройство", 18875, 1);
			PlayerInfo[playerid][pGPS] = 1;
			SendClientMessage(playerid, COLOR_YELLOW, "Вие имате GPS, използвайте го, чрез /gps за да достигнете до дадена локация.");
			newProfile[playerid] = false;
			//ApplyAnimation(playerid, "Attractors", "Stepsit_out", 4.1, 0, 1, 1, 0, 60000, 1);
		}
	}

	if (dialogid == DIALOG_VEHMENU)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new accountNickname[MAX_PLAYER_NAME];
		GetPlayerName(playerid, accountNickname, 25);
		if (response)
		{
			switch (listitem)
			{
				case 0:
					{
						if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
						if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
						}

						if (vehBOOTStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Багажникът беше {40BF00}Отворен");
							vehBOOTStatusON[GetPlayerVehicleID(playerid)] = true;
							ToggleBoot(vehicleid, VEHICLE_PARAMS_ON);
						}
						else
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Багажникът беше {FF0000}Затворен");
							vehBOOTStatusON[GetPlayerVehicleID(playerid)] = false;
							ToggleBoot(vehicleid, VEHICLE_PARAMS_OFF);
						}
					}

				case 1:
					{
						if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
						if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
						}

						if (vehLONStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Фаровете бяха {40BF00}Включени");
							vehLONStatusON[GetPlayerVehicleID(playerid)] = true;
							ToggleLights(vehicleid, VEHICLE_PARAMS_ON);
						}
						else
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Фаровете бяха {FF0000}Изключени");
							vehLONStatusON[GetPlayerVehicleID(playerid)] = false;
							ToggleLights(vehicleid, VEHICLE_PARAMS_OFF);
						}
					}

				case 2:
					{
						if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
						if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
						}

						if (vehAlarmStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Алармата беше {40BF00}Включена");
							vehAlarmStatusON[GetPlayerVehicleID(playerid)] = true;
							ToggleAlarm(vehicleid, VEHICLE_PARAMS_ON);
						}
						else
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Алармата беше {FF0000}Изключена");
							vehAlarmStatusON[GetPlayerVehicleID(playerid)] = false;
							ToggleAlarm(vehicleid, VEHICLE_PARAMS_OFF);
						}
					}

				case 3:
					{
						if (IsNoFuelVehicle(GetVehicleModel(vehicleid)) == 1) return SendClientMessage(playerid, COLOR_LIGHTRED, "Не можеш да използваш тази функция с този превоз!");
						if (vehEngineStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							return SendClientMessage(playerid, COLOR_LIGHTRED, "Трябва първо да запалите превозното средство, преди да го използвате.");
						}

						if (vehBONTEStatusON[GetPlayerVehicleID(playerid)] == false)
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Капакът беше {40BF00}Отворен");
							vehBONTEStatusON[GetPlayerVehicleID(playerid)] = true;
							ToggleBonnet(vehicleid, VEHICLE_PARAMS_ON);
						}
						else
						{
							SendInCarMessage(playerid, COLOR_WHITE, "> Капакът беше {FF0000}Затворен");
							vehBONTEStatusON[GetPlayerVehicleID(playerid)] = false;
							ToggleBonnet(vehicleid, VEHICLE_PARAMS_OFF);
						}
					}
			}
		}
	}

	return 1;
}

stock RandomFemaleSkin(playerid)
{
	SetPlayerSkin(playerid, 77);
	PlayerInfo[playerid][pNormalSkin] = 77;
	new normalSkin = PlayerInfo[playerid][pNormalSkin];
	PlayerInfo[playerid][pClothes][1] = normalSkin;
}

stock RandomMaleSkin(playerid)
{
	new randomSkin = randomex(0, 3);
	if (randomSkin == 0)
	{
		SetPlayerSkin(playerid, 135);
		PlayerInfo[playerid][pNormalSkin] = 135;
	}

	if (randomSkin == 1)
	{
		SetPlayerSkin(playerid, 78);
		PlayerInfo[playerid][pNormalSkin] = 78;
	}

	if (randomSkin == 2)
	{
		SetPlayerSkin(playerid, 79);
		PlayerInfo[playerid][pNormalSkin] = 79;
	}
	
	new normalSkin = PlayerInfo[playerid][pNormalSkin];
	PlayerInfo[playerid][pClothes][1] = normalSkin;
}

stock AddPlayerSpecialNum(playerid)
{
	new specialNumFile[256];
	new playerCount;
	format(specialNumFile, 256, "/Special/playerCount.ini");
	if (!dini_Exists(specialNumFile))
	{
		dini_Create(specialNumFile);
		dini_IntSet(specialNumFile, "PlayerCount", 0);
	}

	playerCount = dini_Int(specialNumFile, "PlayerCount");
	playerCount++;
	dini_IntSet(specialNumFile, "PlayerCount", playerCount);
	PlayerInfo[playerid][pPlayerNum] = playerCount;
}

stock GivePlayerEGN(playerid)
{
	if (PlayerInfo[playerid][pGender] == 0)
	{
		PlayerInfo[playerid][pEGN] = 80032300 + PlayerInfo[playerid][pPlayerNum];
	}
	else if (PlayerInfo[playerid][pGender] == 1)
	{
		PlayerInfo[playerid][pEGN] = 75032300 + PlayerInfo[playerid][pPlayerNum];
	}
}

stock GivePlayerPhoneNumber(playerid)
{
	PlayerInfo[playerid][pPhoneNum] = 82010 + PlayerInfo[playerid][pPlayerNum];
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid,
	Float: fOffsetX, Float: fOffsetY, Float: fOffsetZ,
	Float: fRotX, Float: fRotY, Float: fRotZ,
	Float: fScaleX, Float: fScaleY, Float: fScaleZ)
{
	SetPlayerAttachedObject(playerid, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);

	return 1;
}

public OnPlayerEditObject(playerid, playerobject, objectid, response, Float: fX, Float: fY, Float: fZ, Float: fRotX, Float: fRotY, Float: fRotZ)
{
	if (response == EDIT_RESPONSE_FINAL || response == EDIT_RESPONSE_CANCEL)
	{
		if (isGraffitiObject[objectid] == true)
		{
			new specialIndex = graffitiSpecialIndex[objectid];
			SendClientMessage(playerid, COLOR_LIGHTRED, "[Графити] {ffffff}Вие наместихте графита.");
			GraffitiInfo[specialIndex][gX] = fX;
			GraffitiInfo[specialIndex][gY] = fY;
			GraffitiInfo[specialIndex][gZ] = fZ;
			GraffitiInfo[specialIndex][gXY] = fRotX;
			GraffitiInfo[specialIndex][gYY] = fRotY;
			GraffitiInfo[specialIndex][gZY] = fRotZ;
			CreateDynamicMapIconEx(fX, fY, fZ, 53, 0, MAPICON_LOCAL, 145.0);
			SaveGraffiti(specialIndex);
		}
	}
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float: x, Float: y, Float: z, Float: rx, Float: ry, Float: rz)	// calling fix, don't remove.
{
	new string256[256];
	if (response == EDIT_RESPONSE_FINAL || response == EDIT_RESPONSE_CANCEL)
	{
		//barricades - open
		if (isBarricadeObject[objectid] == true)
		{
			SendClientMessage(playerid, COLOR_POLICE_2, "Ти намести барикадата!");
		}

		//barricades - close
		//add veh objects - open
		if (isAddVehObject[objectid] == true)
		{
			if (vehApplyObjectID[playerid] != -1)
			{
				new hisVeh = vehApplyObjectID[playerid];
				new specialIndex = VehicleInfo[hisVeh][vPrivateID];
				SendClientMessage(playerid, COLOR_WHITE, "> Обектът е {40BF00}Наместен");
				new Float: ofx, Float: ofy, Float: ofz, Float: ofaz;
				new Float: finalx, Float: finaly;
				new Float: px, Float: py, Float: pz, Float: roz;
				GetVehiclePos(hisVeh, px, py, pz);
				GetVehicleZAngle(hisVeh, roz);
				ofx = x - px;
				ofy = y - py;
				ofz = z - pz;
				ofaz = rz - roz;
				finalx = ofx* floatcos(roz, degrees) + ofy* floatsin(roz, degrees);
				finaly = -ofx* floatsin(roz, degrees) + ofy* floatcos(roz, degrees);

				/*
    if(response)
	{
	new slotID = listitem;
	new vehicleid = GetPlayerVehicleID(playerid);
	vehOptionsSlotID[playerid] = slotID;
	new specialIndex=VehicleInfo[vehicleid][vPrivateID];
	if(PrivateVehInfo[specialIndex][vVehObject][slotID] != 0)
	{
	SendClientMessage(playerid, COLOR_ADMIN_RED, "Ти премахна избрания обект от това превозно средство!");
	if(IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehObject][slotID]))
	{
	DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehObject][slotID]);
	}

	PrivateVehInfo[specialIndex][vVehObject][slotID] = 0;
	SavePrivateVehicle(specialIndex);
	}

    */
				new slotID = vehOptionsSlotID[playerid];
				PrivateVehInfo[specialIndex][vVehObject][slotID] = addVehObjectIDType[playerid];
				PrivateVehInfo[specialIndex][vVehObjectX][slotID] = finalx;
				PrivateVehInfo[specialIndex][vVehObjectY][slotID] = finaly;
				PrivateVehInfo[specialIndex][vVehObjectZ][slotID] = ofz;
				PrivateVehInfo[specialIndex][vVehObjectRX][slotID] = rx;
				PrivateVehInfo[specialIndex][vVehObjectRY][slotID] = ry;
				PrivateVehInfo[specialIndex][vVehObjectRZ][slotID] = ofaz;
				SavePrivateVehicle(specialIndex);
				DestroyDynamicObject(objectid);
				SetPrivateVehicleTune(hisVeh);
			}
		}

		//add veh objects - close
		//sirens - open
		if (isSirenObject[objectid] == true)
		{
			if (IsPlayerInAnyVehicle(playerid))
			{
				SendClientMessage(playerid, COLOR_WHITE, "> Сирената е {40BF00}Наместена");
				new Float: ofx, Float: ofy, Float: ofz, Float: ofaz;
				new Float: finalx, Float: finaly;
				new Float: px, Float: py, Float: pz, Float: roz;
				new hisVeh = GetPlayerVehicleID(playerid);
				GetVehiclePos(hisVeh, px, py, pz);
				GetVehicleZAngle(hisVeh, roz);
				ofx = x - px;
				ofy = y - py;
				ofz = z - pz;
				ofaz = rz - roz;
				finalx = ofx* floatcos(roz, degrees) + ofy* floatsin(roz, degrees);
				finaly = -ofx* floatsin(roz, degrees) + ofy* floatcos(roz, degrees);
				AttachDynamicObjectToVehicle(objectid, hisVeh, finalx, finaly,
					ofz, ofx, ofy, ofaz);
			}
		}

		//sirens - close
		new hisHouse = PlayerInfo[playerid][pHouseO];
		if (hisHouse != -1)
		{
			new houseObject = HouseInfo[hisHouse][hTempFurObj];
			if (objectid == houseObject)
			{
				tempHouseFurX[playerid] = x;
				tempHouseFurY[playerid] = y;
				tempHouseFurZ[playerid] = z;
				tempHouseFurRX[playerid] = rx;
				tempHouseFurRY[playerid] = ry;
				tempHouseFurRZ[playerid] = rz;
				format(string256, 256, "{00FF00}Искате ли този обект да остане в къщата ви?");
				ShowPlayerDialog(playerid, DIALOG_HOUSE_FURNITURES_FINAL, DIALOG_STYLE_MSGBOX, "{FFFFFF}Furnitures", string256, "Да", "Не");
			}
		}
	}
}

public OnPlayerClickTextDraw(playerid, Text: clickedid)
{
	if (clickedid == Text: INVALID_TEXT_DRAW)	// ESC
	{
		if (PhoneShow[playerid] == true)
		{
			HidePlayerPhone(playerid);
			PhoneShow[playerid] = false;
			CancelSelectTextDraw(playerid);
		}
	}

	return 0;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText: playertextid)
{
	if (playertextid == PhoneGUI[playerid] [37])	//Open Menu
	{
		ShowPlayerDialog(playerid, DIALOG_PHONE, DIALOG_STYLE_LIST, "Телефон", "{ffffff}Позвъни на някого\n{ffffff}Приеми обаждане\n{ff0000}Затвори телефона\n{ffff00}Сервизи", "Избери", "Назад");
	}

	if (playertextid == PhoneGUI[playerid] [36])	//Call
	{
		ShowPlayerDialog(playerid, DIALOG_PHONE_CALL, DIALOG_STYLE_INPUT, "{ffffff}Телефон", "{ffffff}На кой играч искате да звъннете?\nНапишете телефона на играча отдолу.", "Избери", "Назад");
	}

	if (playertextid == PhoneGUI[playerid] [38])	//Answer
	{
		AnswerPhone(playerid);
	}

	if (playertextid == PhoneGUI[playerid] [39])	//Close
	{
		if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
		if (phoneConnected[playerid] == -1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента не разговаряш по телефона");
		SendClientMessage(playerid, COLOR_PHONE, "Вие затворихте на телефона с който разговаряхте!");
		SendClientMessage(phoneConnected[playerid], COLOR_PHONE, "Телефона с който разговаряхте ви затвори!");
		new connected = phoneConnected[playerid];
		phoneConnected[connected] = -1;
		phoneConnected[playerid] = -1;
	}

	if (playertextid == PhoneGUI[playerid] [40])	//Services
	{
		ShowPlayerDialog(playerid, DIALOG_PHONE_SERVICES, DIALOG_STYLE_LIST, "{ffffff}Телефон", "{ffffff}1. Викнете такси\n{ffffff}2. Викнете механик\n{ffffff}3. Викнете полиция", "Избери", "Назад");
	}

	return 0;
}

stock StartFlashing(Turf)
{
	if (Turf != -1)
	{
		new turfAttackerGang = TurfInfo[Turf][TurfWarGang];
		for (new i; i < MAX_PLAYERS; i++)
		{
			GangZoneFlashForPlayer(i, Turf, FactionInfo[turfAttackerGang][fColor]);
		}
	}
}

stock LeaveTurfAttacker(playerid)
{
	turfAttacker[playerid] = false;
	turfMembers--;
	if (turfMembers <= 0)
	{
		FailTurf(PlayerInfo[playerid][pFaction]);
	}
}

stock FailTurf(Faction)
{
	new string256[256];
	format(string256, 256, "[Територии] %s не успяха да превземат територията за която се бореха", FactionInfo[Faction][fName]);
	SendClientMessageToAll(COLOR_TURF, string256);
	GangZoneStopFlashForAll(turfAttacked);
	TurfInfo[turfAttacked][TurfWarGang] = 0;
	startedTurf = false;
	turfAttacked = -1;
	turfGangAttacker = 0;
	turfStartTimer = 20 * 60;
	turfFinishTimer = 0;
	for (new i; i < MAX_PLAYERS; i++)
	{
		turfAttacker[i] = false;
	}
}

stock FinishTurfSuccess()
{
	new string256[256];
	format(string256, 256, "[Територии] %s успя да превземе територията за която се бори.", FactionInfo[turfGangAttacker][fName]);
	SendClientMessageToAll(COLOR_TURF, string256);
	FactionInfo[turfGangAttacker][fTurfs]++;
	new oldTurfOwner = TurfInfo[turfAttacked][TurfOwner];
	FactionInfo[turfGangAttacker][fTurfs]++;
	FactionInfo[oldTurfOwner][fTurfs]--;
	SaveFaction(oldTurfOwner);
	SaveFaction(turfGangAttacker);
	TurfInfo[turfAttacked][TurfOwner] = turfGangAttacker;
	GangZoneStopFlashForAll(turfAttacked);
	TurfInfo[turfAttacked][TurfWarGang] = 0;
	SaveTurf(turfAttacked);
	startedTurf = false;
	turfAttacked = -1;
	turfGangAttacker = 0;
	turfStartTimer = 20 * 60;
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (turfAttacker[i] == true)
		{
			SendClientMessage(i, COLOR_TURF, "[TURF BONUS] Вие получихте бонус 3 Exp, защото спечелихте територия и останахте на нея.");
			GivePlayerExp(i, 3);
			turfAttacker[i] = false;
		}

		LoadPlayerTurfs(i);
	}
}

stock AttackGraffit(playerid)
{
	if (PlayerInfo[playerid][pFaction] == FACTION_CRIP || PlayerInfo[playerid][pFaction] == FACTION_BALLAS ||
		PlayerInfo[playerid][pFaction] == FACTION_VAGOS || PlayerInfo[playerid][pFaction] == FACTION_AZTECAS ||
		PlayerInfo[playerid][pFaction] == FACTION_TRIADS || PlayerInfo[playerid][pFaction] == FACTION_GROVE)
	{
		if (PlayerInfo[playerid][pRank] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте лидер!");
		if (startedGraffit == true) return SendClientMessage(playerid, COLOR_GRAD1, "В момента има друга атака на графит!");
		if (graffitStartTimer > 0) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакате още преди да започнете атака!");
		new isInGraffit = -1;
		new bool: sameGang = false;
		for (new g = 0; g < maxGraffiti; g++)
		{
			if (IsPlayerInRangeOfGraffit(playerid, g) == 1)
			{
				isInGraffit = g;
				if (GraffitiInfo[g][GraffitiOwner] == PlayerInfo[playerid][pFaction])
				{
					sameGang = true;
				}
			}
		}

		if (sameGang == true)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Този графит е на вашата банда!");
			return false;
		}

		if (isInGraffit == -1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте на 5 метра от графит.");
			return false;
		}

		StartGraffitAttack(PlayerInfo[playerid][pFaction], isInGraffit, playerid);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте член на банда!");
		return false;
	}

	return true;
}

stock StartGraffitAttack(Faction, Graffit, playerid)
{
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	new string256[256];
	new graffitOwner = GraffitiInfo[Graffit][GraffitiOwner];
	format(string256, 256, "[Графит] %s се опитва да превземе графит на %s ", accountNickname, GetPlayerZone(playerid));
	SendClientMessageToAll(COLOR_GRAFFITS, string256);
	SendFactionMessage(Faction, COLOR_GRAFFITS, "[FACTION GRAFFITI] Защитавайте нападателя, докато той завърши графита.");
	startedGraffit = true;
	graffitAttacked = Graffit;
	graffitAttacker = playerid;
	graffitFinishTimer = 3 * 60;
}

stock StartTurfWar(Faction, Turf, TurfPlayers)
{
	new string256[256];
	new turfOwner = TurfInfo[Turf][TurfOwner];
	format(string256, 256, "[Територии] %s се опитва да превземе територия на %s ", FactionInfo[Faction][fName], FactionInfo[turfOwner][fName]);
	SendClientMessageToAll(COLOR_TURF, string256);
	SendFactionMessage(Faction, COLOR_TURF, "[FACTION TURF] Никой от присъстващите на територията не трябва да я напуска до 4 минути.");
	startedTurf = true;
	turfAttacked = Turf;
	turfGangAttacker = Faction;
	turfFinishTimer = 4 * 60;
	TurfInfo[Turf][TurfWarGang] = Faction;
	StartFlashing(Turf);
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			if (IsPlayerInTurf(i, TurfInfo[Turf][zMinX], TurfInfo[Turf][zMinY], TurfInfo[Turf][zMaxX], TurfInfo[Turf][zMaxY]))
			{
				if (PlayerInfo[i][pFaction] == Faction)
				{
					turfAttacker[i] = true;
					turfMembers++;
				}
			}
		}
	}
}

SavePlayerCurrentIP(playerid)
{
	new playerAccountFile[115];
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);

	format(playerAccountFile, 115, "%s.ini", accountNickname);
	new playerIP[35];
	GetPlayerIp(playerid, playerIP, 35);
	dini_Set(playerAccountFile, "pIP", playerIP);
}

stock BuyDrinkOrFoodForHome(playerid)
{
	if (PlayerInfo[playerid][pInvCapacity] < InventoryItemsCount(playerid))
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате място в инвентара си.");
		return 1;
	}

	switch (buyFoodSelect[playerid])
	{
		case 1:
			{
				Inventory_Add(playerid, "Хляб", 19579, 1);
			}

		case 2:
			{
				Inventory_Add(playerid, "Сладкиш", 2663, 1);
			}

		case 3:
			{
				Inventory_Add(playerid, "Месо", 19847, 1);
			}

		case 4:
			{
				Inventory_Add(playerid, "Бургер", 11740, 1);
			}
	}

	switch (buyDrinkSelect[playerid])
	{
		case 1:
			{
				Inventory_Add(playerid, "Вода", 2702, 1);
			}

		case 2:
			{
				Inventory_Add(playerid, "Fanta", 19835, 1);
			}

		case 3:
			{
				Inventory_Add(playerid, "Coca-Cola", 19835, 1);
			}
	}

	buyFoodSelect[playerid] = 0;
	buyDrinkSelect[playerid] = 0;
	SendClientMessage(playerid, COLOR_LIGHTRED2, "Предметът беше добавен в инвентара ви.");
	return 1;
}

stock BuyDrinkNotForHome(playerid)
{
	switch (buyDrinkSelect[playerid])
	{
		case 1:
			{
				if (PlayerInfo[playerid][pThirsty] > 70)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED2, "Вие не сте достатъчно жаден.");
					if (PlayerInfo[playerid][pInvCapacity] > InventoryItemsCount(playerid))
					{
						SendClientMessage(playerid, COLOR_LIGHTRED2, "Предметът беше добавен в инвентара ви.");
						GivePlayerCash(playerid, -2);
						Inventory_Add(playerid, "Вода", 1543, 1);
					}

					return 1;
				}

				PlayerInfo[playerid][pThirsty] += 30;
				ApplyAnimationWithCondition(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 0, 0);
				GivePlayerCash(playerid, -2);
				buyDrinkSelect[playerid] = 0;
			}

		case 2:
			{
				if (PlayerInfo[playerid][pThirsty] > 80)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED2, "Вие не сте достатъчно жаден.");
					if (PlayerInfo[playerid][pInvCapacity] > InventoryItemsCount(playerid))
					{
						SendClientMessage(playerid, COLOR_LIGHTRED2, "Предметът беше добавен в инвентара ви.");
						GivePlayerCash(playerid, -3);
						Inventory_Add(playerid, "Fanta", 1543, 1);
					}

					return 1;
				}

				PlayerInfo[playerid][pThirsty] += 20;
				ApplyAnimationWithCondition(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 0, 0);
				GivePlayerCash(playerid, -3);
				buyDrinkSelect[playerid] = 0;
			}

		case 3:
			{
				if (PlayerInfo[playerid][pThirsty] > 70)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED2, "Вие не сте достатъчно жаден.");
					if (PlayerInfo[playerid][pInvCapacity] > InventoryItemsCount(playerid))
					{
						SendClientMessage(playerid, COLOR_LIGHTRED2, "Предметът беше добавен в инвентара ви.");
						GivePlayerCash(playerid, -2);
						Inventory_Add(playerid, "Coca-Cola", 1543, 1);
					}

					return 1;
				}

				PlayerInfo[playerid][pThirsty] += 30;
				ApplyAnimationWithCondition(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 0, 0);
				GivePlayerCash(playerid, -2);
				buyDrinkSelect[playerid] = 0;
			}
	}

	return 1;
}

stock BuyFoodNotForHome(playerid)
{
	switch (buyFoodSelect[playerid])
	{
		case 1:
			{
				if (PlayerInfo[playerid][pHungry] > 80)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED2, "Вие не сте достатъчно гладен.");
					if (PlayerInfo[playerid][pInvCapacity] > InventoryItemsCount(playerid))
					{
						SendClientMessage(playerid, COLOR_LIGHTRED2, "Предметът беше добавен в инвентара ви.");
						GivePlayerCash(playerid, -2);
						Inventory_Add(playerid, "Хляб", 2702, 1);
					}

					return 1;
				}

				PlayerInfo[playerid][pHungry] += 20;
				ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
				GivePlayerCash(playerid, -2);
				buyFoodSelect[playerid] = 0;
			}

		case 2:
			{
				if (PlayerInfo[playerid][pHungry] > 70)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED2, "Вие не сте достатъчно гладен.");
					if (PlayerInfo[playerid][pInvCapacity] > InventoryItemsCount(playerid))
					{
						SendClientMessage(playerid, COLOR_LIGHTRED2, "Предметът беше добавен в инвентара ви.");
						GivePlayerCash(playerid, -5);
						Inventory_Add(playerid, "Сладкиш", 2702, 1);
					}

					return 1;
				}

				PlayerInfo[playerid][pHungry] += 30;
				ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
				GivePlayerCash(playerid, -5);
				buyFoodSelect[playerid] = 0;
			}

		case 3:
			{
				if (PlayerInfo[playerid][pHungry] > 90)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED2, "Вие не сте достатъчно гладен.");
					if (PlayerInfo[playerid][pInvCapacity] > InventoryItemsCount(playerid))
					{
						SendClientMessage(playerid, COLOR_LIGHTRED2, "Предметът беше добавен в инвентара ви.");
						GivePlayerCash(playerid, -2);
						Inventory_Add(playerid, "Месо", 2702, 1);
					}

					return 1;
				}

				PlayerInfo[playerid][pHungry] += 10;
				ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
				GivePlayerCash(playerid, -2);
				buyFoodSelect[playerid] = 0;
			}

		case 4:
			{
				if (PlayerInfo[playerid][pHungry] > 70)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED2, "Вие не сте достатъчно гладен.");
					if (PlayerInfo[playerid][pInvCapacity] > InventoryItemsCount(playerid))
					{
						SendClientMessage(playerid, COLOR_LIGHTRED2, "Предметът беше добавен в инвентара ви.");
						GivePlayerCash(playerid, -5);
						Inventory_Add(playerid, "Бургер", 2702, 1);
					}

					return 1;
				}

				PlayerInfo[playerid][pHungry] += 30;
				ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0);
				GivePlayerCash(playerid, -5);
				buyFoodSelect[playerid] = 0;
			}
	}

	return 1;
}

stock AnswerPhone(playerid)
{
	if (PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате телефон!");
	if (phoneConnected[playerid] > -1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си свързан с друг номер!");
	if (PlayerInfo[playerid][pPhoneStatusOFF] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Телефонът ти е изключен в момента!");
	new connectorPhone = -1;
	for (new i; i < MAX_PLAYERS; i++)
	{
		//todo
		if (ringing[i] != -1)
		{
			if (IsPlayerConnected(i))
			{
				if (ringing[i] == playerid)
				{
					connectorPhone = i;
					break;
				}
			}
		}
	}

	if (connectorPhone == -1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Никой не ти звъни по телефона");
		return 1;
	}
	else if (connectorPhone > -1)
	{
		if (PlayerInfo[connectorPhone][pPhone] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Играчът е изпуснал телефона си някъде!");
		if (PlayerInfo[connectorPhone][pPhoneStatusOFF] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Телефонът който ви звъня вече е изключен!");
		new string256[256];
		format(string256, 256, "* %s взе телефона от джоба си и отговори на обаждането!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
		format(string256, 256, "Вие вдигнахте на телефон %d!", PlayerInfo[connectorPhone][pPhoneNum]);
		SendClientMessage(playerid, COLOR_PHONE, string256);
		format(string256, 256, "Телефона %d на който звъняхте ви вдигна!", PlayerInfo[playerid][pPhoneNum]);
		SendClientMessage(connectorPhone, COLOR_PHONE, string256);
		PlayerTimerInfo[connectorPhone][ptRinging] = 0;
		ringing[connectorPhone] = -1;
		phoneConnected[connectorPhone] = playerid;
		phoneConnected[playerid] = connectorPhone;
	}

	return 1;
}

stock ClosePhone(playerid)
{
	new connected = phoneConnected[playerid];
	if (connected != -1)
	{
		phoneConnected[connected] = -1;
		phoneConnected[playerid] = -1;
	}
}

stock CallPhone(playerid, phoneNum)
{
	if (phoneConnected[playerid] > -1) return SendClientMessage(playerid, COLOR_GRAD1, "В момента си свързан с друг номер!");
	if (phoneNum < 10) return SendClientMessage(playerid, COLOR_GRAD1, "Телефонните номера съдържат поне 2 цифри!");
	if (ringing[playerid] != -1) return SendClientMessage(playerid, COLOR_GRAD1, "Изчакай още, преди да се обадиш пак!");
	new bool: existNumber;
	new string256[256];
	//phoneConnected
	for (new i; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pPhoneNum] == phoneNum)
		{
			existNumber = true;
			if (i == playerid)
			{
				SendClientMessage(playerid, COLOR_PHONE, "Не можете да се свържите със своя номер.");
				return 1;
			}

			if (PlayerInfo[i][pPhoneStatusOFF] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Телефонът с който се опитвате да се свържете е изключен!");
				return 1;
			}

			if (phoneConnected[i] != -1)
			{
				SendClientMessage(playerid, COLOR_PHONE, "Този играч в момента разговаря с друг");
				return 1;
			}
			else if (phoneConnected[i] == -1)
			{
				SendClientMessage(playerid, COLOR_PHONE, "Вие звъннахте на дадения номер, моля изчакайте до 20 секунди!");
				format(string256, 256, "Имате обаждане от номер %d, използвайте /aphone за да отговорите или изчакайте 20 секунди!", PlayerInfo[playerid][pPhoneNum]);
				SendClientMessage(i, COLOR_PHONE, string256);
				ringing[playerid] = i;
				PlayerTimerInfo[i][ptRinging] = 20;
				PlayerTimerInfo[playerid][ptRinging] = 20;	//Not Sure TODO?
			}

			break;
		}
	}

	if (existNumber == false)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Няма играч с този номер онлайн в момента.");
	}

	return 1;
}

stock LockOrUnlockVehicle(playerid)
{
	if (GetPrivateVehsNumber(playerid) == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Вие нямате лично превозно средство.");
		return 1;
	}

	if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте в превозно средство.");
	if (GetPlayerVirtualWorld(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да запаметите превозното си средство в този Virtual World.");
	if (GetPlayerInterior(playerid) != 0) return SendClientMessage(playerid, COLOR_GRAD1, "Не можете да запаметите превозното си средство в този Interior.");
	if (IsPlayerInHisPrivateVeh(playerid) == 0)
	{
		return SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте във вашето превозно средство!");
	}

	new hisVehID = PlayerInfo[playerid][pPrivateVeh][GetPlayerPrivateVehID(playerid)];
	if (PrivateVehInfo[hisVehID][vLocked] == 0)
	{
		PrivateVehInfo[hisVehID][vLocked] = 1;
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Вие заключихте превозното си средство за останалите.");
		new stringVeh[256];
		format(stringVeh, 256, "%s заключи личния си транспорт!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringVeh);
	}
	else if (PrivateVehInfo[hisVehID][vLocked] == 1)
	{
		PrivateVehInfo[hisVehID][vLocked] = 0;
		SendClientMessage(playerid, COLOR_PRIVATEVEH, "Вие отключихте превозното си средство за останалите.");
		new stringVeh[256];
		format(stringVeh, 256, "%s отключи личния си транспорт!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, stringVeh);
	}

	SavePrivateVehicle(hisVehID);
	return 1;
}

stock SetJobVehLocked(vehID)
{
	if (isCoalmineVeh[vehID] == true)
	{
		ToggleEngine(vehID, VEHICLE_PARAMS_OFF);
		vehEngineStatusON[vehID] = false;
	}

	if (isDeliverVeh[vehID] == true)
	{
		ToggleEngine(vehID, VEHICLE_PARAMS_OFF);
		vehEngineStatusON[vehID] = false;
	}

	if (isSweepVeh[vehID] == true)
	{
		ToggleEngine(vehID, VEHICLE_PARAMS_OFF);
		vehEngineStatusON[vehID] = false;
	}

	if (isPizzaVeh[vehID] == true)
	{
		ToggleEngine(vehID, VEHICLE_PARAMS_OFF);
		vehEngineStatusON[vehID] = false;
	}

	if (isBusVeh[vehID] == true)
	{
		ToggleEngine(vehID, VEHICLE_PARAMS_OFF);
		vehEngineStatusON[vehID] = false;
	}
}

stock isVehicleToggleEngineForb(vehID)
{
	if (isDeliverVeh[vehID] == true) return true;
	if (isPizzaVeh[vehID] == true) return true;
	if (isSweepVeh[vehID] == true) return true;
	if (isBusVeh[vehID] == true) return true;
	if (isCoalmineVeh[vehID] == true) return true;
	return false;
}

stock ShowPlayerGPS(playerid)
{
	new string456[456];
	format(string456, 456, "{FFFFFF}1. Важни места\n2. Места за работа\n{40BF00}3. Място за риболов\n{40BF00}4. Място за изкарване на книжки\n{40BF00}5. PaintBall\n{FFFFFF}6. Организации\n7. Автосервизи\n{FF0000}8. Изключи GPS-а");
	ShowPlayerDialog(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "GPS:", string456, "Избери", "Назад");
}

public OnModelSelectionResponse(playerid, extraid, index, modelid, response)
{
	if ((extraid == MODEL_SELECTION_INVENTORY && response) && InventoryInfo[playerid] [index][invExists])
	{
		new name[48], id = -1;
		inventorySelect[playerid] = index;
		format(name, 48, "%s", InventoryInfo[playerid] [index][invItem]);
		new inventoryHeader[256];
		format(inventoryHeader, 256, "{FF5733}%s", InventoryInfo[playerid] [index][invItem]);
		ShowPlayerDialog(playerid, DIALOG_INVENTORY_MENU, DIALOG_STYLE_LIST, inventoryHeader, "{ffffff}Използвай\n{ffffff}Подай на земята\n{ffffff}Изхвърли в кофа", "Напред", "Назад");
	}

	if ((extraid == MODEL_SELECTION_BUYCLOTHES && response))
	{
		new name[48], id = -1;
		buyClothesSelect[playerid] = index;
		format(name, 48, "%s", BuyClothesInfo[playerid] [buycItem]);
		new inventoryHeader[256];
		format(inventoryHeader, 256, "{FF5733}%s", BuyClothesInfo[playerid] [index][buycItem]);
		new itsPrice = BuyClothesInfo[playerid] [index][buycPrice];
		new stringBuy[256];
		format(stringBuy, 256, "{ffffff}Искате ли да купите това облекло и да го облечете?\nЦена: {40BF00}$%d", itsPrice);
		ShowPlayerDialog(playerid, DIALOG_BUYCLOTHES_MENU, DIALOG_STYLE_MSGBOX, inventoryHeader, stringBuy, "Купи", "Излез");
	}

	if ((extraid == MODEL_SELECTION_DROPCLOTHES && response))
	{
		new skinSelect = index;
		if (skinSelect == 1)
		{
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Clothes", "{ffffff}Не можете да изхвърлите тези дрехи!", "OK", "");
		}
		else if (skinSelect != 1)
		{
			PlayerInfo[playerid][pClothes][skinSelect] = 0;
			new skinIDNew = PlayerInfo[playerid][pClothes][1];
			SetPlayerSkin(playerid, skinIDNew);
			PlayerInfo[playerid][pNormalSkin] = skinIDNew;
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Clothes", "{ffffff}Вие си изхвърлихте дрехите!", "OK", "");
		}
	}

	if ((extraid == MODEL_SELECTION_GETCLOTHES && response))
	{
		new skinSelect = index;
		new skinID = PlayerInfo[playerid][pClothes][skinSelect];
		if (PlayerInfo[playerid][pNormalSkin] == skinID)
		{
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Clothes", "{ffffff}В момента си с тези дрехи!", "OK", "");
			return 1;
		}

		SetPlayerSkin(playerid, skinID);
		PlayerInfo[playerid][pNormalSkin] = skinID;
		ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Clothes", "{ffffff}Вие си сменихте дрехите!", "OK", "");
	}

	if ((extraid == MODEL_SELECTION_BUYITEMS && response))
	{
		new name[48], id = -1;
		buyItemsSelect[playerid] = index;
		format(name, 48, "%s", BuyItemsInfo[index][buyiItem]);
		new inventoryHeader[256];
		new itsPrice = BuyClothesInfo[playerid] [index][buycPrice];
		new stringBuy[256];
		format(stringBuy, 256, "{ffffff}Искате ли да купите този аксесоар?\nЦена: {40BF00}$%d", itsPrice);
		ShowPlayerDialog(playerid, DIALOG_BUYITEMS_MENU, DIALOG_STYLE_MSGBOX, inventoryHeader, stringBuy, "Купи", "Излез");
	}	//items aksesoari
	if ((extraid == MODEL_SELECTION_BARITEMS && response))
	{
		if (GetPlayerVirtualWorld(playerid) != 0)
		{
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Barricades", "Трябва да си извън Virutal World!", "OK", "");
			return 1;
		}

		if (GetPlayerInterior(playerid) != 0)
		{
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Barricades", "Трябва да си извън Interior!", "OK", "");
			return 1;
		}

		barrItemsSelect[playerid] = index;
		new hisFreeSlot = GetPlayerFreeBarricadeSlot(playerid);
		if (hisFreeSlot == -1)
		{
			ShowPlayerDialog(playerid, closeddialog, DIALOG_STYLE_MSGBOX, "Barricades", "Нямаш свободен слот! Използвай /rbarricade за да махнеш барикада!", "OK", "");
			return 1;
		}

		new Float: X, Float: Y, Float: Z;
		GetPlayerPos(playerid, X, Y, Z);
		new objModelID = BarricadeItemsInfo[index][barrModel];
		policeBarricade[playerid] [hisFreeSlot] = CreateDynamicObject(objModelID, X + 1, Y + 1, Z, 0, 0, 0);
		new objID = policeBarricade[playerid] [hisFreeSlot];
		isBarricadeObject[objID] = true;
		EditDynamicObject(playerid, objID);
		new string256[256];
		SendClientMessage(playerid, COLOR_POLICE_2, "Ти постави барикада на улицата! Не забравяй да я махнеш по-късно!");
		format(string256, 256, "%s постави барикада на улицата!", RealName(playerid));
		SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
	}

	return 1;	//gohere3
}

public IsPlayerInTurf(playerid, Float: min_x, Float: min_y, Float: max_x, Float: max_y)
{
	new Float: X3, Float: Y3, Float: Z3;
	GetPlayerPos(playerid, X3, Y3, Z3);
	if ((X3 <= max_x && X3 >= min_x) && (Y3 <= max_y && Y3 >= min_y)) return 1;
	return 0;
}

stock GetPlayerClothesFreeSlot(playerid)
{
	for (new i = 1; i < MAX_PLAYER_CLOTHES; i++)
	{
		if (PlayerInfo[playerid][pClothes][i] == 0) return i;
	}

	return -1;
}

stock GetPlayerItemsFreeSlot(playerid)
{
	for (new i = 1; i < MAX_BUYITEMS; i++)
	{
		if (PlayerInfo[playerid][pItems][i] == 0) return i;
	}

	return -1;
}

stock GiveTrashItem(playerid, trashTypeID)
{
	switch (trashTypeID)
	{
		case 1:
			{
				GivePlayerCash(playerid, 340);
			}

		case 2:
			{
				GivePlayerCash(playerid, 540);
			}

		case 3:
			{
				if (PlayerInfo[playerid][pGPS] == 0)
				{
					Inventory_Add(playerid, "GPS Устройство", 18875, 1);
					PlayerInfo[playerid][pGPS] = 1;
				}
			}

		case 4:
			{
				PlayerInfo[playerid][pStruv] += 10;
			}
	}
}

stock GetTrashItemName(trashTypeID)
{
	new trashName[60];
	switch (trashTypeID)
	{
		case 0:
			{
				format(trashName, 60, "Empty");
			}

		case 1:
			{
				format(trashName, 60, "$340");
			}

		case 2:
			{
				format(trashName, 60, "$540");
			}

		case 3:
			{
				format(trashName, 60, "GPS");
			}

		case 4:
			{
				format(trashName, 60, "Стръв 10x");
			}
	}

	return trashName;
}

stock GetFishName(fishSlotID)
{
	new fishName[60];
	switch (fishSlotID)
	{
		case 0:
			{
				format(fishName, 60, "Empty");
			}

		case 1:
			{
				format(fishName, 60, "Шаран");
			}

		case 2:
			{
				format(fishName, 60, "Скумрия");
			}

		case 3:
			{
				format(fishName, 60, "Цаца");
			}

		case 4:
			{
				format(fishName, 60, "Скат");
			}

		case 5:
			{
				format(fishName, 60, "Омар");
			}
	}

	return fishName;
}

stock GetPlayerFishPrice(playerid, fishID)
{
	new fishSellPrice;
	new fishType = PlayerInfo[playerid][pFishSlot][fishID];
	new fishWeight = PlayerInfo[playerid][pFishWeight][fishID];
	switch (fishType)
	{
		case 1:
			{
				fishSellPrice = fishWeight * 2;
			}

		case 2:
			{
				fishSellPrice = fishWeight * 2;
			}

		case 3:
			{
				fishSellPrice = fishWeight * 2;
				fishSellPrice += 12;
			}

		case 4:
			{
				fishSellPrice = fishWeight * 3;
			}

		case 5:
			{
				fishSellPrice = fishWeight * 3;
				fishSellPrice += 15;
			}
	}

	return fishSellPrice;
}

//Barricade - open
stock GetPlayerFreeBarricadeSlot(playerid)
{
	for (new i = 0; i < 20; i++)
	{
		if (policeBarricade[playerid] [i] == -1) return i;
	}

	return -1;
}

//Barricade - close
stock GetPlayerFreeFishSlot(playerid)
{
	for (new i = 1; i < 11; i++)
	{
		if (PlayerInfo[playerid][pFishSlot][i] == 0) return i;
	}

	return -1;
}

stock FindUserByName(name[])
{
	new playerID;
	playerID = ReturnUser(name);
	return playerID;
}

stock RearangeFishSlots(playerid)
{
	new newFishSlot = 1;
	for (new i = 1; i < 11; i++)
	{
		if (PlayerInfo[playerid][pFishSlot][i] != 0)
		{
			new tmpFish = PlayerInfo[playerid][pFishSlot][i];
			new tmpWeight = PlayerInfo[playerid][pFishWeight][i];
			PlayerInfo[playerid][pFishSlot][i] = 0;
			PlayerInfo[playerid][pFishWeight][i] = 0;
			PlayerInfo[playerid][pFishSlot][newFishSlot] = tmpFish;
			PlayerInfo[playerid][pFishWeight][newFishSlot] = tmpWeight;
			newFishSlot += 1;
		}
	}
}

stock DoesPlayerHaveSkin(playerid, skinid)
{
	for (new i; i < MAX_PLAYER_CLOTHES; i++)
	{
		if (PlayerInfo[playerid][pClothes][i] == skinid)
		{
			return true;
		}
	}

	return false;
}

stock DoesPlayerHaveItem(playerid, itemid)
{
	for (new i; i < MAX_BUYITEMS; i++)
	{
		if (PlayerInfo[playerid][pItems][i] == itemid)
		{
			return true;
		}
	}

	return false;
}

stock CreateVehicleForBuying(playerid, vehID)
{
	if (playerVehToBuy[playerid] != -1)
	{
		DestroyVehicle(playerVehToBuy[playerid]);
	}

	if (buyingVehStoreIndex[playerid] == 0)
	{
		playerVehToBuy[playerid] = AddStaticVehicleEx(vehID, 697.3192, -514.7677, -5.6300, 0.0010, 1, 1, RESPAWN_VEHS_SECONDS);
	}
	else if (buyingVehStoreIndex[playerid] == 1)
	{
		playerVehToBuy[playerid] = AddStaticVehicleEx(vehID, 2124.2815, -1128.2109, 25.2091, 253.8429, 1, 1, RESPAWN_VEHS_SECONDS);
	}

	new veh = playerVehToBuy[playerid];
	LinkVehicleToInterior(veh, GetPlayerInterior(playerid));
	SetVehicleVirtualWorld(veh, GetPlayerVirtualWorld(playerid));
}

stock BuyCarFromStore(playerid)
{
	new vehID = buyVehFromStoreIndex[playerid];
	new vehPrice = sellCarFromStoreInfo[vehID][sbVehPrice];
	new vehModel = sellCarFromStoreInfo[vehID][sbVehModel];
	GivePlayerCash(playerid, -vehPrice);
	new color1 = 1, color2 = 1;
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
	format(PrivateVehInfo[unusedPrivateVehID][vOwnerName], 256, accountNickname);
	new freeSlot = GetPlayerPrivateVehFreeSlot(playerid);
	new realFreeSlot = (freeSlot + 1);
	PlayerInfo[playerid][pPrivateVeh][freeSlot] = unusedPrivateVehID;
	PrivateVehInfo[unusedPrivateVehID][vOwner] = 1;
	PrivateVehInfo[unusedPrivateVehID][vVehID] = vehModel;	//goto
	PrivateVehInfo[unusedPrivateVehID][vVehC1] = color1;
	PrivateVehInfo[unusedPrivateVehID][vVehC2] = color2;
	PrivateVehInfo[unusedPrivateVehID][vVehPaintJob] = -1;
	PrivateVehInfo[unusedPrivateVehID][vLocked] = 1;
	DestroyVehicle(PrivateVehInfo[unusedPrivateVehID][vVeh]);
	PrivateVehInfo[unusedPrivateVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[unusedPrivateVehID][vVehID], PrivateVehInfo[unusedPrivateVehID][vVehX], PrivateVehInfo[unusedPrivateVehID][vVehY], PrivateVehInfo[unusedPrivateVehID][vVehZ], 253.8429, PrivateVehInfo[unusedPrivateVehID][vVehC1], PrivateVehInfo[unusedPrivateVehID][vVehC2], RESPAWN_VEHS_SECONDS);
	new vehicle = PrivateVehInfo[unusedPrivateVehID][vVeh];
	VehicleInfo[vehicle][vPrivateID] = unusedPrivateVehID;
	VehicleInfo[vehicle][vIsPrivate] = 1;
	SavePrivateVehicle(unusedPrivateVehID);
	//PlayerInfo[playerid][pPrivateVehs]+=1;
	Inventory_Add(playerid, "Ключове за кола", 11746, 1);
	PlayerInfo[playerid][pPrivateVehFreeSlot] += 1;
	if (PlayerInfo[playerid][pCarGetPast] == 0) PlayerInfo[playerid][pCarGetPast] = 1;
	new string256[256];
	new vehName[70];
	format(vehName, 70, sellCarFromStoreInfo[vehID][sbVehName]);
	format(string256, 256, "Успешна поръчка! Вие си купихте %s за $%d.", vehName, vehPrice);
	SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
	SendClientMessage(playerid, COLOR_PRIVATEVEH, "Използвайте /help >[Превозни средства] за достъп до командите!");
}

stock BuyBikeFromStore(playerid)
{
	new vehID = buyVehFromStoreIndex[playerid];
	new vehPrice = sellBikeFromStoreInfo[vehID][sbVehPrice];
	new vehModel = sellBikeFromStoreInfo[vehID][sbVehModel];
	GivePlayerCash(playerid, -vehPrice);
	new color1 = 1, color2 = 1;
	new accountNickname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, accountNickname, 25);
	new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
	format(PrivateVehInfo[unusedPrivateVehID][vOwnerName], 256, accountNickname);
	new freeSlot = GetPlayerPrivateVehFreeSlot(playerid);
	new realFreeSlot = (freeSlot + 1);
	PlayerInfo[playerid][pPrivateVeh][freeSlot] = unusedPrivateVehID;
	PrivateVehInfo[unusedPrivateVehID][vOwner] = 1;
	PrivateVehInfo[unusedPrivateVehID][vVehID] = vehModel;	//goto
	PrivateVehInfo[unusedPrivateVehID][vVehC1] = color1;
	PrivateVehInfo[unusedPrivateVehID][vVehC2] = color2;
	PrivateVehInfo[unusedPrivateVehID][vVehPaintJob] = -1;
	PrivateVehInfo[unusedPrivateVehID][vLocked] = 1;
	DestroyVehicle(PrivateVehInfo[unusedPrivateVehID][vVeh]);
	PrivateVehInfo[unusedPrivateVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[unusedPrivateVehID][vVehID], PrivateVehInfo[unusedPrivateVehID][vVehX], PrivateVehInfo[unusedPrivateVehID][vVehY], PrivateVehInfo[unusedPrivateVehID][vVehZ], 268.2377, PrivateVehInfo[unusedPrivateVehID][vVehC1], PrivateVehInfo[unusedPrivateVehID][vVehC2], RESPAWN_VEHS_SECONDS);
	new vehicle = PrivateVehInfo[unusedPrivateVehID][vVeh];
	VehicleInfo[vehicle][vPrivateID] = unusedPrivateVehID;
	VehicleInfo[vehicle][vIsPrivate] = 1;
	SavePrivateVehicle(unusedPrivateVehID);
	//PlayerInfo[playerid][pPrivateVehs]+=1;
	Inventory_Add(playerid, "Ключове за кола", 11746, 1);
	PlayerInfo[playerid][pPrivateVehFreeSlot] += 1;
	if (PlayerInfo[playerid][pCarGetPast] == 0) PlayerInfo[playerid][pCarGetPast] = 1;
	new string256[256];
	new vehName[70];
	format(vehName, 70, sellBikeFromStoreInfo[vehID][sbVehName]);
	format(string256, 256, "Успешна поръчка! Вие си купихте %s за $%d.", vehName, vehPrice);
	SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
	SendClientMessage(playerid, COLOR_PRIVATEVEH, "Използвайте /help >[Превозни средства] за достъп до командите!");
}

stock isPlayerInHisHouse(playerid)
{
	if (PlayerInfo[playerid][pHouseO] != -1)
	{
		if (GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pHouseO] + 50)
		{
			return 1;
		}
	}

	return 0;
}

stock LoadVehicleStickers(vehicleid)
{
	new specialIndex = VehicleInfo[vehicleid][vPrivateID];
	for (new i = 0; i < 2; i++)
	{
		if (strcmp(GetVehicleStickerName(specialIndex, i), "", true) != 0)
		{
			if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehSticker][i]))
			{
				DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehSticker][i]);
			}

			new vehStickerText[256];
			format(vehStickerText, 256, "%s", GetVehicleStickerName(specialIndex, i));
			new vehSticker = PrivateVehInfo[specialIndex][vVehSticker][i];
			new Float: vehStickerX = PrivateVehInfo[specialIndex][vVehStickerX][i];
			new Float: vehStickerY = PrivateVehInfo[specialIndex][vVehStickerY][i];
			new Float: vehStickerZ = PrivateVehInfo[specialIndex][vVehStickerZ][i];
			new Float: vehStickerXY = PrivateVehInfo[specialIndex][vVehStickerXY][i];
			new Float: vehStickerYY = PrivateVehInfo[specialIndex][vVehStickerYY][i];
			new Float: vehStickerZY = PrivateVehInfo[specialIndex][vVehStickerZY][i];
			vehSticker = CreateDynamicObject(19482, vehStickerX, vehStickerY, vehStickerZ, vehStickerXY, vehStickerYY, vehStickerZY, -1, 0, -1, 200);
			SetDynamicObjectMaterialText(vehSticker, 0, vehStickerText, OBJECT_MATERIAL_SIZE_512x512, "Diploma", 100, 0, 0xFFFFFFFF, 0, 1);
			AttachDynamicObjectToVehicle(vehSticker, vehicleid, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
		}
	}
}

/*
stock LoadPrivateVehObjects(vehicleid)	//GOTO TODO
{
   	//Veh Objects - open
    new specialIndex=VehicleInfo[vehicleid][vPrivateID];
	for(new i=0; i < 20; i++)
	{
	if(PrivateVehInfo[specialIndex][vVehObject][i] != 0)
	{
	if(IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehObject][i]))
	{
	DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehObject][i]);
	}

	//Apply Objects - open
	new vehObjID = PrivateVehInfo[specialIndex][vVehObject][i];
	new Float: vehObjX = PrivateVehInfo[specialIndex][vVehObjectX][i];
	new Float: vehObjY = PrivateVehInfo[specialIndex][vVehObjectY][i];
	new Float: vehObjZ = PrivateVehInfo[specialIndex][vVehObjectZ][i];
	new Float: vehObjRX = PrivateVehInfo[specialIndex][vVehObjectRX][i];
	new Float: vehObjRY = PrivateVehInfo[specialIndex][vVehObjectRY][i];
	new Float: vehObjRZ = PrivateVehInfo[specialIndex][vVehObjectRZ][i];
	AttachDynamicObjectToVehicle(vehObjID, vehicleid, vehObjX, vehObjY, vehObjZ, vehObjRX, vehObjRY, vehObjRZ);
	//Apply Objects - close
	}
	}

	//Veh Objects - close
}

*/
stock LoadVehicleNeon(vehicleid)
{
	new specialIndex = VehicleInfo[vehicleid][vPrivateID];
	if (PrivateVehInfo[specialIndex][vVehNeonColor] != 0)
	{
		new neonObjectID = PrivateVehInfo[specialIndex][vVehNeonColor];
		if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][0]))
		{
			DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][0]);
		}

		if (IsValidDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][1]))
		{
			DestroyDynamicObject(PrivateVehInfo[specialIndex][vVehNeon][1]);
		}

		PrivateVehInfo[specialIndex][vVehNeon][0] = CreateDynamicObject(neonObjectID, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
		AttachDynamicObjectToVehicle(PrivateVehInfo[specialIndex][vVehNeon][0], vehicleid, -1.040, 0.000, -0.610, 0.000, 0.000, 0.000);
		PrivateVehInfo[specialIndex][vVehNeon][1] = CreateDynamicObject(neonObjectID, 0.0, 0.0, -1000.0, 0.0, 0.0, 0.0, -1, -1, -1, 300.0, 300.0);
		AttachDynamicObjectToVehicle(PrivateVehInfo[specialIndex][vVehNeon][1], vehicleid, 1.020, 0.000, -0.610, 0.000, 0.000, 0.000);
	}
}

stock GetVehicleStickerName(specialIndex, index)
{
	new stickerName[256];
	if (index == 0)
	{
		format(stickerName, 256, "%s", PrivateVehInfo[specialIndex][vVehStickerName1]);
	}
	else if (index == 1)
	{
		format(stickerName, 256, "%s", PrivateVehInfo[specialIndex][vVehStickerName2]);
	}

	return stickerName;
}

stock GetPlayerWeaponAmmu(playerid, slot)
{
	new weapons[13][2];
	GetPlayerWeaponData(playerid, slot, weapons[slot][0], weapons[slot][1]);
	new ammu = weapons[slot][1];
	return ammu;
}

stock LeavePlayerWork(playerid)
{
	if (isWorkingSweep[playerid] == true) isWorkingSweep[playerid] = false;
	if (isWorkingBus[playerid] == true) isWorkingBus[playerid] = false;
	if (isWorkingPizza[playerid] == true) isWorkingPizza[playerid] = false;
	if (isWorkingKingRing[playerid] == true) isWorkingKingRing[playerid] = false;
	if (isWorkingDeliver[playerid] == true) isWorkingDeliver[playerid] = false;
	if (isWorkingCoalmine[playerid] == true) isWorkingCoalmine[playerid] = false;
}

stock isPlayerWorkingNow(playerid)
{
	if (isWorkingSweep[playerid] == true) return 1;
	if (isWorkingBus[playerid] == true) return 1;
	if (isWorkingPizza[playerid] == true) return 1;
	if (isWorkingKingRing[playerid] == true) return 1;
	if (isWorkingDeliver[playerid] == true) return 1;
	if (isWorkingCoalmine[playerid] == true) return 1;
	return 0;
}

public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid, bodypart)
{
	/*
		if(PlayerInfo[playerid][pFaction]== FACTION_LSPD)
		{
		if(PlayerTimerInfo[damagedid][ptPoliceStunned] == 0)
		{
		PlayerTimerInfo[damagedid][ptPoliceStunned]=12;
		}
	 	}

	*/
	AntiDm(playerid,weaponid);
	return 0;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float: fX, Float: fY, Float: fZ)
{
	if (weaponid == 22)
	{
		if (PlayerInfo[playerid][pWeaponSkill][0] < 10)
		{
			new currentGun = 0;
			PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
			new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
			if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
			{
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
				PlayerInfo[playerid][pWeaponSkill][currentGun]++;
				SetPlayerWeaponSkillByLevel(playerid);
				new string256[256];
				format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Пистолет! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
				SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
			}
		}
	}

	if (weaponid == 23)
	{
		if (PlayerInfo[playerid][pWeaponSkill][1] < 10)
		{
			new currentGun = 1;
			PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
			new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
			if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
			{
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
				PlayerInfo[playerid][pWeaponSkill][currentGun]++;
				SetPlayerWeaponSkillByLevel(playerid);
				new string256[256];
				format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Пистолет със заглушител! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
				SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
			}
		}
	}

	if (weaponid == 24)
	{
		if (PlayerInfo[playerid][pWeaponSkill][2] < 10)
		{
			new currentGun = 2;
			PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
			new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
			if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
			{
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
				PlayerInfo[playerid][pWeaponSkill][currentGun]++;
				SetPlayerWeaponSkillByLevel(playerid);
				new string256[256];
				format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Deagle! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
				SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
			}
		}
	}

	if (weaponid == 25)
	{
		if (PlayerInfo[playerid][pWeaponSkill][3] < 10)
		{
			new currentGun = 3;
			PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
			new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
			if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
			{
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
				PlayerInfo[playerid][pWeaponSkill][currentGun]++;
				SetPlayerWeaponSkillByLevel(playerid);
				new string256[256];
				format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Shotgun! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
				SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
			}
		}
	}

	if (weaponid == 26)
	{
		if (PlayerInfo[playerid][pWeaponSkill][4] < 10)
		{
			new currentGun = 4;
			PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
			new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
			if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
			{
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
				PlayerInfo[playerid][pWeaponSkill][currentGun]++;
				SetPlayerWeaponSkillByLevel(playerid);
				new string256[256];
				format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Sawn-off! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
				SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
			}
		}
	}

	if (weaponid == 27)
	{
		if (PlayerInfo[playerid][pWeaponSkill][5] < 10)
		{
			new currentGun = 5;
			PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
			new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
			if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
			{
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
				PlayerInfo[playerid][pWeaponSkill][currentGun]++;
				SetPlayerWeaponSkillByLevel(playerid);
				new string256[256];
				format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Spas-12! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
				SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
			}
		}
	}

	if (weaponid == 28)
	{
		if (PlayerInfo[playerid][pWeaponSkill][6] < 10)
		{
			new currentGun = 6;
			PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
			new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
			if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
			{
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
				PlayerInfo[playerid][pWeaponSkill][currentGun]++;
				SetPlayerWeaponSkillByLevel(playerid);
				new string256[256];
				format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Micro Uzi! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
				SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
			}
		}
	}

	if (weaponid == 29)
	{
		if (PlayerInfo[playerid][pWeaponSkill][7] < 10)
		{
			new currentGun = 7;
			PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
			new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
			if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
			{
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
				PlayerInfo[playerid][pWeaponSkill][currentGun]++;
				SetPlayerWeaponSkillByLevel(playerid);
				new string256[256];
				format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Mp5! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
				SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
			}
		}
	}

	if (weaponid == 30)
	{
		if (PlayerInfo[playerid][pWeaponSkill][8] < 10)
		{
			new currentGun = 8;
			PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
			new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
			if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
			{
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
				PlayerInfo[playerid][pWeaponSkill][currentGun]++;
				SetPlayerWeaponSkillByLevel(playerid);
				new string256[256];
				format(string256, 256, "Weapon Skill: Вие качихте вашите умения с AK47! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
				SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
			}
		}
	}

	if (weaponid == 31)
	{
		if (PlayerInfo[playerid][pWeaponSkill][9] < 10)
		{
			new currentGun = 9;
			PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
			new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
			if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
			{
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
				PlayerInfo[playerid][pWeaponSkill][currentGun]++;
				SetPlayerWeaponSkillByLevel(playerid);
				new string256[256];
				format(string256, 256, "Weapon Skill: Вие качихте вашите умения с M4! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
				SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
			}
		}
	}

	if (weaponid == 34)
	{
		if (PlayerInfo[playerid][pWeaponSkill][10] < 10)
		{
			new currentGun = 10;
			PlayerInfo[playerid][pWeaponSkillPoints][currentGun]++;
			new hisWeaponSkill = PlayerInfo[playerid][pWeaponSkill][currentGun];
			if (PlayerInfo[playerid][pWeaponSkillPoints][currentGun] == hisWeaponSkill *25)
			{
				PlayerInfo[playerid][pWeaponSkillPoints][currentGun] = 0;
				PlayerInfo[playerid][pWeaponSkill][currentGun]++;
				SetPlayerWeaponSkillByLevel(playerid);
				new string256[256];
				format(string256, 256, "Weapon Skill: Вие качихте вашите умения с Sniper! Новото ви ниво е %d от 10!", PlayerInfo[playerid][pWeaponSkill][currentGun]);
				SendClientMessage(playerid, COLOR_WEAPONSKILL, string256);
			}
		}
	}

	return 1;
}

stock FreezeAntiDropOnSpawn(playerid)
{
	PlayerTimerInfo[playerid][ptUnfreeze] = 2;
	TogglePlayerControllable(playerid, 0);
	SetCameraBehindPlayer(playerid);
}

stock SetToSpawn(playerid)
{
	noHospital[playerid] = true;
	setToSpawn[playerid] = true;
	SavePlayerAllGuns(playerid);
	SpawnPlayer(playerid);
	PlayerTimerInfo[playerid][ptSetToSpawnVar] = 2;
}

stock JailTimeByWanted(wantedLevel)
{
	new jailTime;
	switch (wantedLevel)
	{
		case 1:
			jailTime = 3 * 60;
		case 2:
			jailTime = 8 * 60;
		case 3:
			jailTime = 12 * 60;
		case 4:
			jailTime = 15 * 60;
		case 5:
			jailTime = 15 * 60;
		case 6:
			jailTime = 16 * 60;
	}

	return jailTime;
}

stock GetTrashCan(playerid)
{
	if (IsPlayerInRangeOfPoint(playerid, 5, LOC_TRASHCAN_1)) return 0;
	if (IsPlayerInRangeOfPoint(playerid, 5, LOC_TRASHCAN_2)) return 1;
	if (IsPlayerInRangeOfPoint(playerid, 5, LOC_TRASHCAN_3)) return 2;
	return -1;
}

stock GetFuelStation(playerid)
{
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_1)) return 0;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_2)) return 1;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_3)) return 2;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_4)) return 3;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_5)) return 4;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_6)) return 5;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_7)) return 6;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_8)) return 7;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_9)) return 8;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_10)) return 9;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_11)) return 10;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_12)) return 11;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_13)) return 12;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_14)) return 13;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_15)) return 14;
	if (IsPlayerInRangeOfPoint(playerid, 10, LOC_FUELSTATION_16)) return 15;
	return -1;
}

stock UpdateFuelStation3DText(fuelStationID)
{
	new refuelString[500];
	format(refuelString, 500, "{5F63F0}Бензиностанция\n\n{FFFFFF}Напишете {5F63F0}/refuel {FFFFFF}за да заредите транспорта си с бензин\nЦена за {5F63F0}1 литър: $1\n{FFFFFF}Общо гориво в бензиностанцията: {5F63F0}%d", FuelStationInfo[fuelStationID][fsFuel]);
	Update3DTextLabelText(fuelStationText[fuelStationID], COLOR_LIGHTBLUE3, refuelString);
}

stock RemovePoliceBarricade(playerid)
{
	for (new i = 0; i < 20; i++)
	{
		if (policeBarricade[playerid] [i] != -1)
		{
			new objectBarrID = policeBarricade[playerid] [i];
			DestroyDynamicObject(objectBarrID);
			isBarricadeObject[objectBarrID] = false;
			policeBarricade[playerid] [i] = -1;
		}
	}
}

stock RemovePlayerSiren(playerid)
{
	if (policeSiren[playerid] != -1)
	{
		DestroyDynamicObject(policeSiren[playerid]);
		isSirenObject[policeSiren[playerid]] = false;
		policeSiren[playerid] = -1;
	}
}

stock SetArmourObjectToPlayer(playerid)
{
	if (PlayerInfo[playerid][pFaction] == FACTION_LSPD ||
		PlayerInfo[playerid][pFaction] == FACTION_LVPD ||
		PlayerInfo[playerid][pFaction] == FACTION_LS_ARMY ||
		PlayerInfo[playerid][pFaction] == FACTION_LV_ARMY ||
		PlayerInfo[playerid][pFaction] == FACTION_FBI)
	{
		if (PlayerInfo[playerid][pHelmetObject] == 0)
		{
			new Float: armourPoints;
			GetPlayerArmour(playerid, armourPoints);
			if (armourPoints > 0)
			{
				SetPlayerAttachedObject(playerid, 7, 19142, 1, 0.08, 0.04, 0.00, 0.0, 0.0, -7.4);
			}
		}
	}
}

stock RemoveParrot(playerid)
{
	RemovePlayerAttachedObject(playerid, 10);
}

stock RemoveArmourObject(playerid)
{
	RemovePlayerAttachedObject(playerid, 7);
	RemovePlayerAttachedObject(playerid, 8);
	RemovePlayerAttachedObject(playerid, 9);
}

stock RemoveArmourObjectIfNotLaw(playerid)
{
	if (PlayerInfo[playerid][pFaction] != FACTION_LSPD &&
		PlayerInfo[playerid][pFaction] != FACTION_LV_ARMY &&
		PlayerInfo[playerid][pFaction] != FACTION_LS_ARMY &&
		PlayerInfo[playerid][pFaction] != FACTION_FBI)
	{
		RemovePlayerAttachedObject(playerid, 7);
		RemovePlayerAttachedObject(playerid, 8);
		RemovePlayerAttachedObject(playerid, 9);
	}
}

stock IsNoFuelVehicle(vehicleid)
{
	if (vehicleid == 481 ||
		vehicleid == 509 ||
		vehicleid == 510 ||
		vehicleid == 481)
	{
		return 1;
	}

	return 0;
}

stock GivePlayerPaintBallGuns(playerid)
{
	GivePlayerWeapon(playerid, 31, 3000);
	GivePlayerWeapon(playerid, 34, 3000);
	GivePlayerWeapon(playerid, 24, 3000);
}

stock SetPlayerPosToPaintBall(playerid)
{
	SetPlayerInterior(playerid, 10);
	SetPlayerVirtualWorld(playerid, 1);
	new spawnPos = randomex(0, 2);
	switch (spawnPos)
	{
		case 0:
			{
				SetPlayerPos(playerid, -977.6664, 1061.4066, 1345.6719);
			}

		case 1:
			{
				SetPlayerPos(playerid, -993.7939, 1059.7830, 1342.9510);
			}

		case 2:
			{
				SetPlayerPos(playerid, -1024.2544, 1068.3567, 1343.8243);
			}

		case 3:
			{
				SetPlayerPos(playerid, -1055.9219, 1078.4906, 1343.0696);
			}

		case 4:
			{
				SetPlayerPos(playerid, -1073.3352, 1069.1577, 1342.5333);
			}
	}
}

stock LeaveFromPaintBall(playerid)
{
	inPaintBall[playerid] = false;
	paintBallKills[playerid] = 0;
	GetPlayerAllGuns(playerid);
	SetPlayerPos(playerid, PaintBall);
	GivePlayerAllGuns(playerid);
	SetPlayerHealth(playerid, beforePaintBallHealth[playerid]);
	SetPlayerArmour(playerid, beforePaintBallArmour[playerid]);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	TextDrawHideForPlayer(playerid, PaintBallTimerText);
}

stock ClosePaintBall()
{
	paintBallOpen = false;
	paintBallEndTimer = 0;
	new winnerID = -1;
	new winnerKills = 0;
	//paintBallKills
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (inPaintBall[i] == true)
		{
			if (paintBallKills[i] > winnerKills)
			{
				winnerID = i;
				winnerKills = paintBallKills[i];
			}

			LeaveFromPaintBall(i);
		}
	}

	if (winnerID == -1)
	{
		SendClientMessageToAll(COLOR_PAINTBALL, "PaintBall: Няма победител в играта!");
	}
	else if (winnerID != -1)
	{
		new string256[256];
		format(string256, 256, "PaintBall: %s спечели в арената! Неговата награда е 25 Exp и $9100!", GetPlayerRpName(winnerID));
		SendClientMessageToAll(COLOR_PAINTBALL, string256);
		GivePlayerCash(winnerID, 9100);
		GivePlayerExp(winnerID, 25);
	}
}

stock UnlockOLockedVeh(playerid)
{
	if (vehLocker[playerid] != -1)
	{
		for (new i = 0; i < MAX_PLAYERS; i++)
		{
			if (i != playerid)
			{
				SetVehicleParamsForPlayer(vehLocker[playerid], i, 0, 0);
			}
		}

		vehLocker[playerid] = -1;
	}
}

stock RemovePlayerLaser(playerid)
{
	SetPVarInt(playerid, "color", 0);
	PlayerInfo[playerid][pLaser] = 0;
}

stock GivePlayerLaser(playerid)
{
	if (PlayerInfo[playerid][pLaser] == 1)
	{
		SetPVarInt(playerid, "color", 19084);
	}
	else if (PlayerInfo[playerid][pLaser] == 2)
	{
		SetPVarInt(playerid, "color", 19080);
	}
	else if (PlayerInfo[playerid][pLaser] == 3)
	{
		SetPVarInt(playerid, "color", 18643);
	}
	else if (PlayerInfo[playerid][pLaser] == 4)
	{
		SetPVarInt(playerid, "color", 19083);
	}
}

stock IsPlayerAiming(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
	if (((anim >= 1160) && (anim <= 1163)) || (anim == 1167) || (anim == 1365) ||
		(anim == 1643) || (anim == 1453) || (anim == 220)) return 1;
	return 0;
}

stock IsPlayerInWater(playerid)
{
	new anim = GetPlayerAnimationIndex(playerid);
	if (((anim >= 1538) && (anim <= 1542)) || (anim == 1544) || (anim == 1250) || (anim == 1062)) return 1;
	return 0;
}

stock isMotorVehicle(vehicleid)
{
	if (vehicleid == 461 || vehicleid == 448 || vehicleid == 463 || vehicleid == 468 ||
		vehicleid == 522) return 1;
	return 0;
}

stock isHelicopterVehicle(vehicleid)
{
	if (vehicleid == 417 || vehicleid == 425 || vehicleid == 447 || vehicleid == 460 ||
		vehicleid == 469 || vehicleid == 487 || vehicleid == 488 ||
		vehicleid == 497 || vehicleid == 548 || vehicleid == 563) return 1;
	return 0;
}

stock isCarVehicle(vehicleid)
{
	if (vehicleid != 417 && vehicleid != 425 && vehicleid != 430 && vehicleid != 441 &&
		vehicleid != 446 && vehicleid != 447 && vehicleid != 449 && vehicleid != 452 &&
		vehicleid != 453 && vehicleid != 454 && vehicleid != 460 && vehicleid != 461 &&
		vehicleid != 462 && vehicleid != 463 && vehicleid != 464 && vehicleid != 465 &&
		vehicleid != 469 && vehicleid != 471 && vehicleid != 472 && vehicleid != 473 &&
		vehicleid != 476 && vehicleid != 481 && vehicleid != 484 && vehicleid != 487 &&
		vehicleid != 488 && vehicleid != 493 && vehicleid != 497 && vehicleid != 501 &&
		vehicleid != 509 && vehicleid != 510 && vehicleid != 511 && vehicleid != 512 &&
		vehicleid != 513 && vehicleid != 521 && vehicleid != 519 && vehicleid != 520 &&
		vehicleid != 523 && vehicleid != 530 && vehicleid != 537 && vehicleid != 538 &&
		vehicleid != 539 && vehicleid != 447 && vehicleid != 548 && vehicleid != 553 &&
		vehicleid != 447 && vehicleid != 563 && vehicleid != 564 && vehicleid != 570 &&
		vehicleid != 571 && vehicleid != 577 && vehicleid != 447 && vehicleid != 581 &&
		vehicleid != 586 && vehicleid != 592 && vehicleid != 593 && vehicleid != 595 &&
		vehicleid != 522) return 1;
	return 0;
}

stock GetPlayersCountFromFaction(Faction)
{
	new players = 0;
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pFaction] == Faction)
		{
			players++;
		}
	}

	return players;
}

stock GetAdmins()
{
	new admins = 0;
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (PlayerInfo[i][pAdmin] >= 1)
		{
			admins++;
		}
	}

	return admins;
}

stock SetVehicloEngineOff(vehicleid)
{
	ToggleEngine(vehicleid, VEHICLE_PARAMS_OFF);
	vehEngineStatusON[vehicleid] = false;
}

stock GetItemPriceWithBGN(itemID)
{
	new price;
	switch (itemID)
	{
		case 0:
			price = 2;
		case 1:
			price = 4;
		case 2:
			price = 6;
		case 3:
			price = 2;
		case 4:
			price = 2;
		case 5:
			price = 2;
		case 6:
			price = 2;
		case 7:
			price = 4;
	}

	return price;
}

stock GetItemNameWithBGN(itemID)
{
	new string256[256];
	switch (itemID)
	{
		case 0:
			format(string256, 256, "Пари в играта: $22300");
		case 1:
			format(string256, 256, "Пари в играта: $35300");
		case 2:
			format(string256, 256, "Пари в играта: $48300");
		case 3:
			format(string256, 256, "Следващо ниво VIP");
		case 4:
			format(string256, 256, "20 Exp");
		case 5:
			format(string256, 256, "5 Level");
		case 6:
			format(string256, 256, "Sultan");
		case 7:
			format(string256, 256, "Infernus");
	}

	return string256;
}

stock GivePlayerItemWithBGN(playerid, itemID)
{
	switch (itemID)
	{
		case 0:
			{
				GivePlayerCash(playerid, 22300);
				SendClientMessage(playerid, COLOR_VIP_ORANGE, "Ти използва парите си от касата за $22300!");
			}

		case 1:
			{
				GivePlayerCash(playerid, 35300);
				SendClientMessage(playerid, COLOR_VIP_ORANGE, "Ти използва парите си от касата за $35300!");
			}

		case 2:
			{
				GivePlayerCash(playerid, 48300);
				SendClientMessage(playerid, COLOR_VIP_ORANGE, "Ти използва парите си от касата за $48300!");
			}

		case 3:
			{
				PlayerInfo[playerid][pVip] += 1;
				new string256[256];
				format(string256, 256, "Ти използва парите си от касата за Vip! Вече си Vip Level %d Честито", PlayerInfo[playerid][pVip]);
				SendClientMessage(playerid, COLOR_VIP_ORANGE, string256);
			}

		case 4:
			{
				GivePlayerExp(playerid, 20);
				SendClientMessage(playerid, COLOR_VIP_ORANGE, "Ти използва парите си от касата за 20 Exp!");
			}

		case 5:
			{
				GivePlayerLevel(playerid, 5);
				SendClientMessage(playerid, COLOR_VIP_ORANGE, "Ти използва парите си от касата за 5 Level!");
			}

		case 6:
			{
				new string256[256];
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
				format(PrivateVehInfo[unusedPrivateVehID][vOwnerName], 256, playeridNickname);
				new freeSlot = GetPlayerPrivateVehFreeSlot(playerid);
				new realFreeSlot = (freeSlot + 1);
				format(string256, 256, "Превозното ви средство е в слот {ffffff}%d.", realFreeSlot);
				SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
				PlayerInfo[playerid][pPrivateVeh][freeSlot] = unusedPrivateVehID;
				PrivateVehInfo[unusedPrivateVehID][vOwner] = 1;
				PrivateVehInfo[unusedPrivateVehID][vVehID] = 560;	//goto
				PrivateVehInfo[unusedPrivateVehID][vVehC1] = 1;
				PrivateVehInfo[unusedPrivateVehID][vVehC2] = 1;
				PrivateVehInfo[unusedPrivateVehID][vLocked] = 1;
				PrivateVehInfo[unusedPrivateVehID][vVehPaintJob] = -1;
				DestroyVehicle(PrivateVehInfo[unusedPrivateVehID][vVeh]);
				PrivateVehInfo[unusedPrivateVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[unusedPrivateVehID][vVehID], PrivateVehInfo[unusedPrivateVehID][vVehX], PrivateVehInfo[unusedPrivateVehID][vVehY], PrivateVehInfo[unusedPrivateVehID][vVehZ], PrivateVehInfo[unusedPrivateVehID][vVehA], PrivateVehInfo[unusedPrivateVehID][vVehC1], PrivateVehInfo[unusedPrivateVehID][vVehC2], RESPAWN_VEHS_SECONDS);
				new vehicle = PrivateVehInfo[unusedPrivateVehID][vVeh];
				VehicleInfo[vehicle][vPrivateID] = unusedPrivateVehID;
				VehicleInfo[vehicle][vIsPrivate] = 1;
				SavePrivateVehicle(unusedPrivateVehID);
				//PlayerInfo[playerid][pPrivateVehs]+=1;
				Inventory_Add(playerid, "Ключове за кола", 11746, 1);
				PlayerInfo[playerid][pPrivateVehFreeSlot] += 1;
				if (PlayerInfo[playerid][pCarGetPast] == 0) PlayerInfo[playerid][pCarGetPast] = 1;
				SendClientMessage(playerid, COLOR_PRIVATEVEH, "Използвайте {ffffff}/getmycar {BFFF80}за да пуснете превозното си средство до автосалона!");
				SendClientMessage(playerid, COLOR_PRIVATEVEH, "За да видите всички команди, отворете /help >[Превозни средства]");
			}

		case 7:
			{
				new string256[256];
				new playeridNickname[MAX_PLAYER_NAME];
				GetPlayerName(playerid, playeridNickname, 25);
				new unusedPrivateVehID = ReturnNextUnusedPrivateVehID();
				format(PrivateVehInfo[unusedPrivateVehID][vOwnerName], 256, playeridNickname);
				new freeSlot = GetPlayerPrivateVehFreeSlot(playerid);
				new realFreeSlot = (freeSlot + 1);
				format(string256, 256, "Превозното ви средство е в слот {ffffff}%d.", realFreeSlot);
				SendClientMessage(playerid, COLOR_PRIVATEVEH, string256);
				PlayerInfo[playerid][pPrivateVeh][freeSlot] = unusedPrivateVehID;
				PrivateVehInfo[unusedPrivateVehID][vOwner] = 1;
				PrivateVehInfo[unusedPrivateVehID][vVehID] = 411;	//goto
				PrivateVehInfo[unusedPrivateVehID][vVehC1] = 1;
				PrivateVehInfo[unusedPrivateVehID][vVehC2] = 1;
				PrivateVehInfo[unusedPrivateVehID][vLocked] = 1;
				PrivateVehInfo[unusedPrivateVehID][vVehPaintJob] = -1;
				DestroyVehicle(PrivateVehInfo[unusedPrivateVehID][vVeh]);
				PrivateVehInfo[unusedPrivateVehID][vVeh] = AddStaticVehicleEx(PrivateVehInfo[unusedPrivateVehID][vVehID], PrivateVehInfo[unusedPrivateVehID][vVehX], PrivateVehInfo[unusedPrivateVehID][vVehY], PrivateVehInfo[unusedPrivateVehID][vVehZ], PrivateVehInfo[unusedPrivateVehID][vVehA], PrivateVehInfo[unusedPrivateVehID][vVehC1], PrivateVehInfo[unusedPrivateVehID][vVehC2], RESPAWN_VEHS_SECONDS);
				new vehicle = PrivateVehInfo[unusedPrivateVehID][vVeh];
				VehicleInfo[vehicle][vPrivateID] = unusedPrivateVehID;
				VehicleInfo[vehicle][vIsPrivate] = 1;
				SavePrivateVehicle(unusedPrivateVehID);
				//PlayerInfo[playerid][pPrivateVehs]+=1;
				Inventory_Add(playerid, "Ключове за кола", 11746, 1);
				PlayerInfo[playerid][pPrivateVehFreeSlot] += 1;
				if (PlayerInfo[playerid][pCarGetPast] == 0) PlayerInfo[playerid][pCarGetPast] = 1;
				SendClientMessage(playerid, COLOR_PRIVATEVEH, "Използвайте {ffffff}/getmycar {BFFF80}за да пуснете превозното си средство до автосалона!");
				SendClientMessage(playerid, COLOR_PRIVATEVEH, "За да видите всички команди, отворете /help >[Превозни средства]");
			}
	}
}

stock SetToFactionSpawnWithText(playerid)
{
	SendClientMessage(playerid, 0xFFFFFFFF, "SERVER: Ти промени твоя Spawn на Faction!");
	PlayerInfo[playerid][pSpawn] = FACTION_SPAWN;
}

stock PhoneModeInit(playerid)
{
	PhoneGUI[playerid] [0] = CreatePlayerTextDraw(playerid, 543.000000, 300.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [0], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [0], 1);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [0], 0.500000, 13.300001);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [0], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [0], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [0], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [0], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [0], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [0], 255);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [0], 621.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [0], 0);

	PhoneGUI[playerid] [1] = CreatePlayerTextDraw(playerid, 534.000000, 238.000000, "LD_BEAT:chit");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [1], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [1], 4);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [1], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [1], 255);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [1], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [1], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [1], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [1], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [1], 255);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [1], 19.000000, 21.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [1], 0);

	PhoneGUI[playerid] [2] = CreatePlayerTextDraw(playerid, 611.000000, 238.000000, "LD_BEAT:chit");	//todo rp

	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [2], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [2], 4);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [2], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [2], 255);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [2], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [2], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [2], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [2], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [2], 255);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [2], 19.000000, 21.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [2], 0);

	PhoneGUI[playerid] [3] = CreatePlayerTextDraw(playerid, 611.000000, 404.000000, "LD_BEAT:chit");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [3], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [3], 4);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [3], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [3], 255);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [3], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [3], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [3], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [3], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [3], 255);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [3], 19.000000, 21.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [3], 0);

	PhoneGUI[playerid] [4] = CreatePlayerTextDraw(playerid, 534.000000, 404.000000, "LD_BEAT:chit");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [4], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [4], 4);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [4], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [4], 255);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [4], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [4], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [4], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [4], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [4], 255);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [4], 19.000000, 21.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [4], 0);

	PhoneGUI[playerid] [5] = CreatePlayerTextDraw(playerid, 539.000000, 248.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [5], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [5], 1);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [5], 0.500000, 18.400001);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [5], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [5], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [5], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [5], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [5], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [5], 255);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [5], 625.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [5], 0);

	PhoneGUI[playerid] [6] = CreatePlayerTextDraw(playerid, 545.000000, 243.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [6], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [6], 1);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [6], 0.500000, 18.100000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [6], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [6], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [6], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [6], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [6], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [6], 255);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [6], 619.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [6], 0);

	PhoneGUI[playerid] [7] = CreatePlayerTextDraw(playerid, 542.000000, 246.000000, "ld_spac:backgnd");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [7], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [7], 4);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [7], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [7], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [7], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [7], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [7], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [7], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [7], 255);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [7], 80.000000, 148.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [7], 0);

	PhoneGUI[playerid] [27] = CreatePlayerTextDraw(playerid, 550.000000, 349.000000, "Press ~h~~g~Y ~w~to unlock.");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [27], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [27], 1);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [27], 0.200000, 1.000000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [27], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [27], 1);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [27], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [27], 0);

	PhoneGUI[playerid] [28] = CreatePlayerTextDraw(playerid, 624.000000, 350.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [28], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [28], 1);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [28], 0.500000, 0.799998);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [28], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [28], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [28], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [28], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [28], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [28], 102);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [28], 540.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [28], 0);

	PhoneGUI[playerid] [30] = CreatePlayerTextDraw(playerid, 622.000000, 249.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [30], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [30], 1);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [30], 0.500000, 0.199998);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [30], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [30], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [30], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [30], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [30], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [30], -1);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [30], 617.000000, -1.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [30], 0);

	PhoneGUI[playerid] [31] = CreatePlayerTextDraw(playerid, 547.000000, 276.000000, "Error:404 ~n~Page not found!");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [31], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [31], 2);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [31], 0.189998, 1.100000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [31], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [31], 1);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [31], 1);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [31], 0);

	PhoneGUI[playerid] [32] = CreatePlayerTextDraw(playerid, 616.000000, 250.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [32], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [32], 1);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [32], 0.500000, 0.099998);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [32], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [32], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [32], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [32], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [32], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [32], -1);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [32], 616.000000, -1.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [32], 0);

	PhoneGUI[playerid] [33] = CreatePlayerTextDraw(playerid, 545.000000, 249.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [33], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [33], 1);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [33], 0.500000, 0.199998);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [33], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [33], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [33], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [33], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [33], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [33], 102);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [33], 554.000000, -1.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [33], 0);

	PhoneGUI[playerid] [34] = CreatePlayerTextDraw(playerid, 545.000000, 249.000000, "_");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [34], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [34], 1);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [34], 0.500000, 0.199998);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [34], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [34], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [34], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [34], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [34], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [34], -1);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [34], 548.000000, -1.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [34], 0);

	/*
	    PhoneGUI[playerid] [26] = CreatePlayerTextDraw(playerid,542.000000, 246.000000, "LD_BEAT:square");
	    PlayerTextDrawBackgroundColor(playerid,PhoneGUI[playerid] [36], 255);
	    PlayerTextDrawFont(playerid,PhoneGUI[playerid] [36], 1);
	    PlayerTextDrawLetterSize(playerid,PhoneGUI[playerid] [36], 0.200000, 1.000000);
	    PlayerTextDrawColor(playerid,PhoneGUI[playerid] [36], -1);
	    PlayerTextDrawSetOutline(playerid,PhoneGUI[playerid] [36], 1);
	    PlayerTextDrawSetProportional(playerid,PhoneGUI[playerid] [36], 1);
	    PlayerTextDrawUseBox(playerid,PhoneGUI[playerid] [36], 1);
	    PlayerTextDrawBoxColor(playerid,PhoneGUI[playerid] [36], 0);
	    PlayerTextDrawTextSize(playerid,PhoneGUI[playerid] [36], 8, 8.000000);
	    PlayerTextDrawSetSelectable(playerid,PhoneGUI[playerid] [36], 1);
	*/
	PhoneGUI[playerid] [35] = CreatePlayerTextDraw(playerid, 580.000000, 456.000000, "ld_beat:square");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [35], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [35], 4);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [35], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [35], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [35], 0);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [35], 1);
	PlayerTextDrawSetShadow(playerid, PhoneGUI[playerid] [35], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [35], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [35], 255);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [35], 32.000000, 30.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [35], 0);

	PhoneGUI[playerid] [37] = CreatePlayerTextDraw(playerid, 549.000000, 261.000000, "Open Menu");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [37], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [37], 2);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [37], 0.209999, 1.100000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [37], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [37], 1);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [37], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [37], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [37], 0);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [37], 571.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [37], 1);

	PhoneGUI[playerid] [36] = CreatePlayerTextDraw(playerid, 549.000000, 284.000000, "Call");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [36], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [36], 2);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [36], 0.209999, 1.100000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [36], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [36], 1);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [36], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [36], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [36], 0);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [36], 571.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [36], 1);

	PhoneGUI[playerid] [38] = CreatePlayerTextDraw(playerid, 549.000000, 298.000000, "Answer");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [38], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [38], 2);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [38], 0.209999, 1.100000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [38], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [38], 1);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [38], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [38], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [38], 0);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [38], 571.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [38], 1);

	PhoneGUI[playerid] [39] = CreatePlayerTextDraw(playerid, 549.000000, 320.000000, "Close");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [39], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [39], 2);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [39], 0.209999, 1.100000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [39], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [39], 1);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [39], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [39], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [39], 0);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [39], 571.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [39], 1);

	PhoneGUI[playerid] [40] = CreatePlayerTextDraw(playerid, 549.000000, 340.000000, "Services");
	PlayerTextDrawBackgroundColor(playerid, PhoneGUI[playerid] [40], 255);
	PlayerTextDrawFont(playerid, PhoneGUI[playerid] [40], 2);
	PlayerTextDrawLetterSize(playerid, PhoneGUI[playerid] [40], 0.209999, 1.100000);
	PlayerTextDrawColor(playerid, PhoneGUI[playerid] [40], -1);
	PlayerTextDrawSetOutline(playerid, PhoneGUI[playerid] [40], 1);
	PlayerTextDrawSetProportional(playerid, PhoneGUI[playerid] [40], 1);
	PlayerTextDrawUseBox(playerid, PhoneGUI[playerid] [40], 1);
	PlayerTextDrawBoxColor(playerid, PhoneGUI[playerid] [40], 0);
	PlayerTextDrawTextSize(playerid, PhoneGUI[playerid] [40], 571.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid, PhoneGUI[playerid] [40], 1);

	return 1;
}

stock HidePlayerPhone(playerid)
{
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [0]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [1]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [2]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [3]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [4]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [5]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [6]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [7]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [8]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [28]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [30]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [32]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [33]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [34]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [35]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [36]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [37]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [38]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [39]);
	PlayerTextDrawHide(playerid, PhoneGUI[playerid] [40]);
	return 1;
}

stock ShowPlayerPhoneMenu(playerid)
{
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [0]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [1]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [2]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [3]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [4]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [5]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [6]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [7]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [8]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [28]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [30]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [32]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [33]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [34]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [35]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [36]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [37]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [38]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [39]);
	PlayerTextDrawShow(playerid, PhoneGUI[playerid] [40]);
	return 1;
}

stock GetPlayerNearATM(playerid)
{
	if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_1)) return 0;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_2)) return 1;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_3)) return 2;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_4)) return 3;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_5)) return 4;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_6)) return 5;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_7)) return 6;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_8)) return 7;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_9)) return 8;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_10)) return 9;
	else if (IsPlayerInRangeOfPoint(playerid, 3, LOC_ATM_11)) return 10;
	return -1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
	new Float: health;
	GetPlayerHealth(playerid, health);
	new Float: healthMinusAmount = health - amount;
	if (inPaintBall[playerid] == false && PlayerInfo[playerid][pJailed] == 0 && PlayerInfo[playerid][pPoliceJail] == 0 &&
		PlayerInfo[playerid][pAFK] == 0)
	{
		if (healthMinusAmount < 30 && healthMinusAmount >= 5 && health >= 5)
		{
			if (PlayerTimerInfo[playerid][ptRevieveTimer] == 0 && alreadyFallen[playerid] == false)
			{
				new string256[256];
				SendClientMessage(playerid, COLOR_WHITE, "Ти беше {e60000}свален на земята{ffffff}! Можеш да избереш да припаднеш, чрез {40BF00}/acceptdeath {ffffff}или да изчакаш да те съживят!");
				TextDrawShowForPlayer(playerid, DeathTimerText[playerid]);
				format(string256, 256, "* %s е пред припадък!", RealName(playerid));
				SendLocalMessage(16.0, playerid, COLOR_LIGHTPURPLE4, string256);
				UpdateDynamic3DTextLabelText(DeathPlayerLabel[playerid], COLOR_DARKRED2, "Използвай /revieve за да спасиш играча!");
				PlayerTimerInfo[playerid][ptRevieveTimer] = 60;
				ApplyAnimation(playerid, "CRACK", "crckidle2", 4.1, 1, 1, 1, 1, 1, 1);
				PlayerTimerInfo[playerid][ptApplyFallenAnim] = 2;
				alreadyFallen[playerid] = true;
				PlayerTimerInfo[playerid][ptFreeze] = 1;
				//LoopingAnim(playerid, "BEACH", "SitnWait_loop_W", 4.1, 0, 1, 1, 1, 1);
				//MEDIC_CPR - revieve
			}
		}
	}

	return 0;
}

stock ApplyAnimationWithCondition(playerid, animlib[], animname[], Float: fDelta = 4.1, loop = 1, lockx = 1, locky = 1, freeze = 1, time = 1, forcesync = 1)
{
	if (PlayerTimerInfo[playerid][ptRevieveTimer] == 0)
	{
		//ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 1, 1, 1);
		ApplyAnimation(playerid, animlib, animname, Float: fDelta, loop, lockx, locky, freeze, time, forcesync);
	}
}

stock SpecialActionWithCondition(playerid, actionid)
{
	if (PlayerTimerInfo[playerid][ptRevieveTimer] == 0)
	{
		SetPlayerSpecialAction(playerid, actionid);
	}
}

stock RemovePlayerDeathTimer(playerid)
{
	PlayerTimerInfo[playerid][ptRevieveTimer] = 0;
	PlayerTimerInfo[playerid][ptApplyFallenAnim] = 0;
	TextDrawHideForPlayer(playerid, DeathTimerText[playerid]);
	ClearAnimations(playerid);
	UpdateDynamic3DTextLabelText(DeathPlayerLabel[playerid], COLOR_DARKRED2, "");
	alreadyFallen[playerid] = false;
}

stock SendMessageScreenText(playerid, messageText[])
{
	TextDrawSetString(MessageInfo[playerid], messageText);
	TextDrawShowForPlayer(playerid, MessageInfo[playerid]);
	PlayerTimerInfo[playerid][ptHideMessageInfo] = 4;
}

stock LegalFaction(factionID)
{
	if (factionID == FACTION_LSPD || factionID == FACTION_LS_ARMY || factionID == FACTION_LV_ARMY ||
		factionID == FACTION_NEWS || factionID == FACTION_GOVERNMENT)
	{
		return 1;
	}

	return 0;
}

stock QuitJobProcess(playerid)
{
	if (PlayerInfo[playerid][pTaxiDuty] == 1)
	{
		SetTaxiOffDuty(playerid);
	}

	if (PlayerInfo[playerid][pFuelCoDuty] == 1)
	{
		SetFuelCoOffDuty(playerid);
	}
}

stock StopTaxiFare(playerid)
{
	new vehicleid = GetPlayerVehicleID(playerid);
	if (isTaxiVehWorking[vehicleid] == true && IsPlayerDriver(playerid))
	{
		new string256[256];
		SendClientMessage(playerid, COLOR_WHITE, "Вие вече не сте на смяна, като Taxi Driver и сметката спря!");
		TextDrawHideForPlayer(playerid, FareStatus[playerid]);
		for (new i; i < MAX_PLAYERS; i++)
		{
			if (GetPlayerVehicleID(i) == vehicleid && !IsPlayerDriver(i))
			{
				SendClientMessage(i, COLOR_WHITE, "Шофьорът на таксито вече не е на смяна и спря начисляването на сметката!");
				TextDrawHideForPlayer(i, FareStatus[i]);
			}
		}

		VehicleInfo[vehicleid][vTaxiFare] = 0;
		VehicleTimerInfo[vehicleid][vtTaxiFareTimer] = 0;
		isTaxiVehWorking[vehicleid] = false;
	}
}

stock HideSpeedoStatusForPlayer(playerid)
{
	for (new i = 0; i < 4; i++)
	{
		TextDrawHideForPlayer(playerid, VehicleSpeedo[i]);
	}

	TextDrawHideForPlayer(playerid, SpeedStatus[playerid]);
	TextDrawHideForPlayer(playerid, FuelStatus[playerid]);
	TextDrawHideForPlayer(playerid, VehicleNameSpeedo[playerid]);
}

stock ShowSpeedoStatusForPlayer(playerid)
{
	for (new i = 0; i < 4; i++)
	{
		if (i != 1)
		{
			TextDrawShowForPlayer(playerid, VehicleSpeedo[i]);
		}
	}

	TextDrawSetString(VehicleNameSpeedo[playerid], GetVehicleName(GetPlayerVehicleID(playerid)));
	TextDrawShowForPlayer(playerid, SpeedStatus[playerid]);
	TextDrawShowForPlayer(playerid, VehicleNameSpeedo[playerid]);
	new vehModel;
	vehModel = GetVehicleModel(GetPlayerVehicleID(playerid));
	if (IsNoFuelVehicle(vehModel) == 0)
	{
		TextDrawShowForPlayer(playerid, FuelStatus[playerid]);
		TextDrawShowForPlayer(playerid, VehicleSpeedo[1]);
	}
}

stock GivePlayerAfkTimerSecond(playerid)
{
	if (isLogged[playerid] == true)
	{
		playerAfkSeconds[playerid] += 1;
		if (playerAfkSeconds[playerid] == 60)
		{
			playerAfkMinutes[playerid] += 1;
			playerAfkSeconds[playerid] = 0;
		}
	}
}

stock RemoveTmpVehApplyObject(playerid)
{
	if (addVehObjectID[playerid] != -1)
	{
		DestroyDynamicObject(addVehObjectID[playerid]);
		isAddVehObject[addVehObjectID[playerid]] = false;
		addVehObjectID[playerid] = -1;
	}
}

stock GetPrivateVehsNumber(playerid)
{
	new number = 0;
	for (new i = 0; i < 3; i++)
	{
		if (PlayerInfo[playerid][pPrivateVeh][i] != -1)
		{
			number += 1;
		}
	}

	return number;
}

stock RemovePlayerPrivateVehInfo(playerid, slot)
{
	PlayerInfo[playerid][pPrivateVeh][slot] = -1;
}

stock RestartPrivateTuneInfo(vehID)
{
	PrivateVehInfo[vehID][vVehSpoiler] = 0;
	PrivateVehInfo[vehID][vVehPaintJob] = 0;
	PrivateVehInfo[vehID][vVehHood] = 0;
	PrivateVehInfo[vehID][vVehRoof] = 0;
	PrivateVehInfo[vehID][vVehVentsR] = 0;
	PrivateVehInfo[vehID][vVehVentsL] = 0;
	PrivateVehInfo[vehID][vVehExhaust] = 0;
	PrivateVehInfo[vehID][vVehWheels] = 0;
	PrivateVehInfo[vehID][vVehStereo] = 0;
	PrivateVehInfo[vehID][vVehHyd] = 0;
	PrivateVehInfo[vehID][vVehBumperF] = 0;
	PrivateVehInfo[vehID][vVehBumperR] = 0;
	PrivateVehInfo[vehID][vVehNitro] = 0;
	PrivateVehInfo[vehID][vVehSideskirt] = 0;
	PrivateVehInfo[vehID][vVehLights] = 0;
	PrivateVehInfo[vehID][vVehNeonColor] = 0;
	format(PrivateVehInfo[vehID][vVehStickerName1], 256, "");
	format(PrivateVehInfo[vehID][vVehStickerName2], 256, "");
	for (new i = 0; i < 2; i++)
	{
		PrivateVehInfo[vehID][vVehNeon][i] = 0;
		PrivateVehInfo[vehID][vVehStickerX][i] = 0;
		PrivateVehInfo[vehID][vVehStickerY][i] = 0;
		PrivateVehInfo[vehID][vVehStickerZ][i] = 0;
		PrivateVehInfo[vehID][vVehStickerXY][i] = 0;
		PrivateVehInfo[vehID][vVehStickerYY][i] = 0;
		PrivateVehInfo[vehID][vVehStickerZY][i] = 0;
		PrivateVehInfo[vehID][vVehSticker][i] = 0;
	}

	for (new i = 0; i < 20; i++)
	{
		PrivateVehInfo[vehID][vVehObjectRY][i] = 0;
		PrivateVehInfo[vehID][vVehObjID][i] = 0;
		PrivateVehInfo[vehID][vVehObject][i] = 0;
		PrivateVehInfo[vehID][vVehObjectX][i] = 0;
		PrivateVehInfo[vehID][vVehObjectY][i] = 0;
		PrivateVehInfo[vehID][vVehObjectZ][i] = 0;
		PrivateVehInfo[vehID][vVehObjectRX][i] = 0;
		PrivateVehInfo[vehID][vVehObjectRZ][i] = 0;
	}
}

stock PlayerPassedJob(playerid, job)
{
	new string256[256];
	switch (job)
	{
		case SIDEJOB_PIZZA:
			{
				PlayerInfo[playerid][pPizzaPassed] += 1;
				new passedJob = PlayerInfo[playerid][pPizzaPassed];
				if (passedJob >= PlayerInfo[playerid][pPizzaLevel] *25)
				{
					PlayerInfo[playerid][pPizzaLevel] += 1;
					format(string256, 256, "Job: Вие качихте нивото си на Pizza Job на %d Level и полуихте 8 Exp!", PlayerInfo[playerid][pPizzaLevel]);
					SendClientMessage(playerid, COLOR_JOB, string256);
				}
			}

		case SIDEJOB_SWEEP:
			{
				PlayerInfo[playerid][pSweeperPassed] += 1;
				new passedJob = PlayerInfo[playerid][pSweeperPassed];
				if (passedJob == PlayerInfo[playerid][pSweeperLevel] *25)
				{
					PlayerInfo[playerid][pSweeperLevel] += 1;
					format(string256, 256, "Job: Вие качихте нивото си на Sweeper Job на %d Level и полуихте 8 Exp!", PlayerInfo[playerid][pSweeperLevel]);
					SendClientMessage(playerid, COLOR_JOB, string256);
				}
			}

		case SIDEJOB_BUS:
			{
				PlayerInfo[playerid][pBusPassed] += 1;
				new passedJob = PlayerInfo[playerid][pBusPassed];
				if (passedJob >= PlayerInfo[playerid][pBusLevel] *25)
				{
					PlayerInfo[playerid][pBusLevel] += 1;
					format(string256, 256, "Job: Вие качихте нивото си на Bus Job на %d Level и полуихте 8 Exp!", PlayerInfo[playerid][pBusLevel]);
					SendClientMessage(playerid, COLOR_JOB, string256);
				}
			}

		case SIDEJOB_DELIVER:
			{
				PlayerInfo[playerid][pDeliverPassed] += 1;
				new passedJob = PlayerInfo[playerid][pDeliverPassed];
				if (passedJob >= PlayerInfo[playerid][pDeliverLevel] *25)
				{
					PlayerInfo[playerid][pDeliverLevel] += 1;
					format(string256, 256, "Job: Вие качихте нивото си на Deliver Job на %d Level и полуихте 8 Exp!", PlayerInfo[playerid][pDeliverLevel]);
					SendClientMessage(playerid, COLOR_JOB, string256);
				}
			}

		case SIDEJOB_COALMINE:
			{
				PlayerInfo[playerid][pCoalminePassed] += 1;
				new passedJob = PlayerInfo[playerid][pCoalminePassed];
				if (passedJob >= PlayerInfo[playerid][pCoalmineLevel] *25)
				{
					PlayerInfo[playerid][pCoalmineLevel] += 1;
					format(string256, 256, "Job: Вие качихте нивото си на Coalmine Job на %d Level и полуихте 8 Exp!", PlayerInfo[playerid][pCoalmineLevel]);
					SendClientMessage(playerid, COLOR_JOB, string256);
				}
			}
	}
}

stock GetPlayerJobCash(playerid, job)
{
	new cash = 1;
	switch (job)
	{
		case SIDEJOB_PIZZA:
			{
				cash = PlayerInfo[playerid][pPizzaLevel] *1600;
			}

		case SIDEJOB_SWEEP:
			{
				cash = PlayerInfo[playerid][pSweeperLevel] *1500;
			}

		case SIDEJOB_BUS:
			{
				cash = PlayerInfo[playerid][pBusLevel] *1450;
			}

		case SIDEJOB_DELIVER:
			{
				cash = PlayerInfo[playerid][pDeliverLevel] *1400;
			}

		case SIDEJOB_COALMINE:
			{
				cash = PlayerInfo[playerid][pCoalmineLevel] *1200;
			}
	}

	return cash;
}

stock FixPlayerInfoNullValues(playerid)
{
	if (PlayerInfo[playerid][pSweeperLevel] == 0)
	{
		PlayerInfo[playerid][pSweeperLevel] = 1;
	}

	if (PlayerInfo[playerid][pCoalmineLevel] == 0)
	{
		PlayerInfo[playerid][pCoalmineLevel] = 1;
	}

	if (PlayerInfo[playerid][pBusLevel] == 0)
	{
		PlayerInfo[playerid][pBusLevel] = 1;
	}

	if (PlayerInfo[playerid][pPizzaLevel] == 0)
	{
		PlayerInfo[playerid][pPizzaLevel] = 1;
	}

	if (PlayerInfo[playerid][pDeliverLevel] == 0)
	{
		PlayerInfo[playerid][pDeliverLevel] = 1;
	}
}

stock IsGangFaction(faction)
{
	if (faction == FACTION_CRIP || faction == FACTION_BALLAS || faction == FACTION_GROVE ||
		faction == FACTION_VAGOS || faction == FACTION_AZTECAS || faction == FACTION_TRIADS) return 1;
	return 0;
}

stock IsPlayerDriver(playerid)
{
	if(GetPlayerVehicleSeat(playerid) == 0)
		return true;
	return false;
}

stock IsDriverInVehicle(vehicleid)
{
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			if (GetPlayerVehicleID(i) == vehicleid && GetPlayerVehicleSeat(i) == 0)
			{
				return true;
			}
		}
	}

	return false;
}

stock UpdateTankFuelText(playerid)
{
    new stringvehicle[256];
    new vehicleid = GetPlayerVehicleID(playerid);
    new trailerid = GetVehicleTrailer(vehicleid);
    format(stringvehicle, 256, "~y~Tank: %d L", VehicleInfo[trailerid][vTankFuel]);
    TextDrawSetString(TankFuel[playerid], stringvehicle);
}

stock ExitFromBiz(playerid, alb)
{
	if (BizInfo[alb][bLocked] == 1)
	{
		return SendClientMessage(playerid, COLOR_WHITE, "Бизнесът е заключен и не можеш да излезеш !");
	}
	SetPlayerPos(playerid, BizInfo[alb][bX], BizInfo[alb][bY], BizInfo[alb][bZ]);
	SetPlayerInterior(playerid, 0);
	SetCameraBehindPlayer(playerid);
	SetPlayerVirtualWorld(playerid, 0);
	return 0;
}


stock EnterInHouse(playerid, alh)
{
				if (HouseInfo[alh][hLocked] == 1)
				{
					return SendClientMessage(playerid, COLOR_HOUSE, "Къщата е заключена и не можеш да влезеш!");
				}
				inHouse[playerid]=alh;
				SetPlayerVirtualWorld(playerid, alh + 50);
				if (HouseInfo[alh][hInterior] == 1)
				{
					SetPlayerPos(playerid, 2283.04, -1140.28, 1050.90);
					SetPlayerFacingAngle(playerid, 267.0980);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 11);
				}

				if (HouseInfo[alh][hInterior] == 2)
				{
					SetPlayerPos(playerid, 243.72, 304.91, 999.15);
					SetPlayerFacingAngle(playerid, 267.3974);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
				}

				if (HouseInfo[alh][hInterior] == 3)
				{
					SetPlayerPos(playerid, 2308.77, -1212.94, 1049.02);
					SetPlayerFacingAngle(playerid, 359.8550);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
				}

				if (HouseInfo[alh][hInterior] == 4)
				{
					SetPlayerPos(playerid, 377.15, 1417.41, 1081.33);
					SetPlayerFacingAngle(playerid, 1.6415);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 15);
				}

				if (HouseInfo[alh][hInterior] == 5)
				{
					SetPlayerPos(playerid, 446.99, 1397.07, 1084.30);
					SetPlayerFacingAngle(playerid, 359.1347);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 2);
				}

				if (HouseInfo[alh][hInterior] == 6)
				{
					SetPlayerPos(playerid, 2237.59, -1081.64, 1049.02);
					SetPlayerFacingAngle(playerid, 89.1791);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 2);
				}

				if (HouseInfo[alh][hInterior] == 7)
				{
					SetPlayerPos(playerid, 260.85, 1237.24, 1084.26);
					SetPlayerFacingAngle(playerid, 359.8550);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 9);
				}

				if (HouseInfo[alh][hInterior] == 8)
				{
					SetPlayerPos(playerid, 2807.48, -1174.76, 1025.57);
					SetPlayerFacingAngle(playerid, 89.4224);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 8);
				}

				if (HouseInfo[alh][hInterior] == 9)
				{
					SetPlayerPos(playerid, 83.03, 1322.28, 1083.87);
					SetPlayerFacingAngle(playerid, 0.7248);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 9);
				}

				if (HouseInfo[alh][hInterior] == 10)
				{
					SetPlayerPos(playerid, 2495.98, -1692.08, 1014.74);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 3);
				}

				if (HouseInfo[alh][hInterior] == 11)
				{
					SetPlayerPos(playerid, -42.5628, 1405.5011, 1084.4297);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 8);
				}

				if (HouseInfo[alh][hInterior] == 12)
				{
					SetPlayerPos(playerid, -68.7704, 1352.9250, 1080.2109);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
				}

				if (HouseInfo[alh][hInterior] == 13)
				{
					SetPlayerPos(playerid, 83.0758, 1322.2808, 1083.8662);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 9);
				}

				if (HouseInfo[alh][hInterior] == 14)
				{
					SetPlayerPos(playerid, 140.2254, 1365.9796, 1083.8594);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
				}

				if (HouseInfo[alh][hInterior] == 15)
				{
					SetPlayerPos(playerid, 223.1015, 1287.0764, 1082.1406);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
				}

				if (HouseInfo[alh][hInterior] == 16)
				{
					SetPlayerPos(playerid, 225.8726, 1021.4523, 1084.0177);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 7);
				}

				if (HouseInfo[alh][hInterior] == 17)
				{
					SetPlayerPos(playerid, 226.2984, 1114.3319, 1080.9929);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
				}

				if (HouseInfo[alh][hInterior] == 18)
				{
					SetPlayerPos(playerid, 261.0904, 1284.2944, 1080.2578);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
				}

				if (HouseInfo[alh][hInterior] == 19)
				{
					SetPlayerPos(playerid, 309.0916, 313.6412, 1003.3047);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
				}

				if (HouseInfo[alh][hInterior] == 20)
				{
					SetPlayerPos(playerid, 318.5932, 1114.4792, 1083.8828);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
				}

				if (HouseInfo[alh][hInterior] == 21)
				{
					SetPlayerPos(playerid, 327.9635, 1477.7430, 1084.4375);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 15);
				}

				if (HouseInfo[alh][hInterior] == 22)
				{
					SetPlayerPos(playerid, 1260.6464, -785.4418, 1091.9063);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 5);
				}

				if (HouseInfo[alh][hInterior] == 23)
				{
					SetPlayerPos(playerid, 2468.8413, -1698.4177, 1013.5078);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 2);
				}

				if (HouseInfo[alh][hInterior] == 24)
				{
					SetPlayerPos(playerid, 2196.8506, -1204.2477, 1049.0234);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
				}

				if (HouseInfo[alh][hInterior] == 25)
				{
					SetPlayerPos(playerid, 2270.3855, -1210.4730, 1047.5625);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 10);
				}

				if (HouseInfo[alh][hInterior] == 26)
				{
					SetPlayerPos(playerid, 2324.5479, -1149.5146, 1050.7101);
					SetPlayerFacingAngle(playerid, 359.5183);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 12);
				}
				return 0;
}

stock EnterInBiz(playerid, alb)
{
				if (BizInfo[alb][bLocked] == 1)
				{
					return SendClientMessage(playerid, COLOR_GRAD1, "Бизнесът е заключен и не можете да влезете !");
				}
				inBiz[playerid]=alb;
				new string256[256];
				if (BizInfo[alb][bType] == 1)	// 24/7 Business
				{
					SetPlayerPos(playerid, -27.3025, -57.6649, 1003.5469);
					SetPlayerFacingAngle(playerid, 357.5915);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 2)	// Bar Business
				{
					SetPlayerPos(playerid, 501.980987, -69.150199, 998.757812);
					SetPlayerFacingAngle(playerid, 179.826400);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 11);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 3)	// Ammunation Business
				{
					SetPlayerPos(playerid, 296.8089, -112.0065, 1001.5156);
					SetPlayerFacingAngle(playerid, 76.7251);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 4)	// Advertisement Agency
				{
					SetPlayerPos(playerid, -27.3512, -31.7518, 1003.5573);
					SetPlayerFacingAngle(playerid, 86.7239);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 5)	// Fast Food
				{
					SetPlayerPos(playerid, 207.054992, -138.804992, 1003.507812);
					SetPlayerFacingAngle(playerid, 182.1137);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 3);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 6)	// Casino
				{
					SetPlayerPos(playerid, 362.8670, -75.1642, 1001.5078);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 10);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 7)	// 24/7
				{
					SetPlayerPos(playerid, -25.9455, -141.5480, 1003.5469);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 16);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 8)	// 24/7
				{
					SetPlayerPos(playerid, 203.7447, -50.6649, 1001.8047);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 9)	// 24/7
				{
					SetPlayerPos(playerid, 285.9084, -86.7750, 1001.5229);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 10)	// ammo
				{
					SetPlayerPos(playerid, 315.7523, -143.6341, 999.6016);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 7);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 11)	// ammo
				{
					SetPlayerPos(playerid, 493.4793, -24.9576, 1000.6719);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 17);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 12)	// ammo
				{
					SetPlayerPos(playerid, 744.6210, 1436.3411, 1102.7031);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 13)	// ammo
				{
					SetPlayerPos(playerid, 773.9693, -78.8193, 1000.6628);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 7);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 14)	// ammo
				{
					SetPlayerPos(playerid, 774.1560, -50.4766, 1000.5859);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 6);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 15)	// ammo
				{
					SetPlayerPos(playerid, 1133.2222, -15.8171, 1000.6797);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 12);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 16)	// ammo
				{
					SetPlayerPos(playerid, 1204.7975, -13.8216, 1000.9219);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 2);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 17)	// ammo
				{
					SetPlayerPos(playerid, 2018.6144, 1017.7792, 996.8750);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 10);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 18)	// ammo
				{
					SetPlayerPos(playerid, 2234.1011, 1714.4489, 1012.3828);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 1);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 19)	// ammo
				{
					SetPlayerPos(playerid, -229.1534, 1401.3180, 27.7656);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 18);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 20)	// ammo
				{
					SetPlayerPos(playerid, 364.9964, -11.8438, 1001.8516);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 9);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 21)	// ammo
				{
					SetPlayerPos(playerid, 460.5563, -88.6419, 999.5547);
					SetPlayerFacingAngle(playerid, 0.4216);
					SetCameraBehindPlayer(playerid);
					SetPlayerInterior(playerid, 4);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}

				if (BizInfo[alb][bType] == 22)	// ammo
				{
					PlayerTimerInfo[playerid][ptUnfreeze] = 2;
					TogglePlayerControllable(playerid, 0);
					SetPlayerInterior(playerid, 1);
					SetPlayerPos(playerid, 1781.7737, 1650.2898, -12.8729);
					SetCameraBehindPlayer(playerid);
					SetPlayerVirtualWorld(playerid, alb + 500);
				}
				return 0;
}

stock SetSpawnRandomAnim(playerid)
{
	new randomAnim = randomex(0, 5); //CASE 4: WONT MAKE ANIMATION
	switch(randomAnim)
	{
		case 0:
		{
			ApplyAnimationWithCondition(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 0, 0); //WORKS
		}
		case 1:
		{
			ApplyAnimationWithCondition(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 0, 0); //WORKS
		}
		case 2:
		{
			ApplyAnimationWithCondition(playerid, "MISC", "Scratchballs_01", 4.1, 0, 1, 1, 0, 0); //WORKS
		}
		case 3:
		{
			ApplyAnimationWithCondition(playerid, "MISC", "Scratchballs_01", 4.1, 0, 1, 1, 0, 0); //WORKS
		}
	}
}

stock UnRentPlayerVeh(playerid)
{
	rentorVeh[playerid] = false;
	new rented = vehRented[playerid];
	VehicleInfo[rented][vRentedBy] = -1;
	if (GetPlayerVehicleID(playerid) == rented && IsPlayerDriver(playerid))
	{
		RemovePlayerFromVehicle(playerid);
	}
	vehRented[playerid] = -1;
}

stock GetAdminLevelName(adminLevel)
{
    new adminLevelName[25];
    switch (adminLevel)
	{
		case 1:
		{
			format(adminLevelName, 25, "Moderator");
		}

		case 2:
		{
			format(adminLevelName, 25, "Global Moderator");
		}

		case 3:
		{
			format(adminLevelName, 25, "Administrator");
		}

		case 4:
		{
			format(adminLevelName, 25, "Senior Administrator");
		}

		case 5:
		{
			format(adminLevelName, 25, "Server Owner");
		}
	}
    return adminLevelName;
}

stock IsPlayerInRangeOfDynamicActor(playerid, actor)
{
	new Float: aX, Float: aY, Float: aZ;
	GetDynamicActorPos(actor, aX, aY, aZ);
	if(IsPlayerInRangeOfPoint(playerid, 4.0, aX, aY, aZ))
	{
		return true;
	}
	return false;
}

stock HideInteractiveActorTexts(playerid)
{
	for(new i=0; i<MAX_INTERACT_ACTORS; i++)
	{
		if(IsValidDynamic3DTextLabel(InteractText3D[playerid][i]))
		{
			DestroyDynamic3DTextLabel(InteractText3D[playerid][i]);
		}
	}
}

stock GetPlayerNearInteractiveActor(playerid)
{
	for(new i=0; i<MAX_INTERACT_ACTORS; i++)
	{
		if(IsPlayerInRangeOfDynamicActor(playerid, InteractiveActor[i]))
		{
			return i;
		}
	}
	return -1;
}

stock IsPlayerInClothingShop(playerid)
{
	if (IsPlayerInRangeOfPoint(playerid, 4, 203.9277, -43.2615, 1001.8047) || IsPlayerInRangeOfPoint(playerid, 4, 207.1997, -129.1777, 1003.5078))
	{
		return true;
	}
	return false;
}

/*
   · SA-MP Gamemode: LawLess Roleplay | Bulgaria
   · Copyright © 2021-2022, Daniel Miroslavov Andreev
   · Всички права са запазени.
*/